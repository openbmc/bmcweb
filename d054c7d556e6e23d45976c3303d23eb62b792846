{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "33163525_54c967d3",
        "filename": "http/http_response.hpp",
        "patchSetId": 29
      },
      "lineNbr": 218,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2023-10-03T16:46:45Z",
      "side": 1,
      "message": "This seems to have compilation error. size function in filebody and stringbody returns different types. I think we should change this function as follows\nreturn boost::variant2::visit(\n            [](auto\u0026\u0026 res)-\u003euint64_t { return res.body().size(); }, response);",
      "revId": "d054c7d556e6e23d45976c3303d23eb62b792846",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6eb79c73_7a558c62",
        "filename": "http/http_response.hpp",
        "patchSetId": 29
      },
      "lineNbr": 218,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-10-03T17:05:43Z",
      "side": 1,
      "message": "\u003e This seems to have compilation error.\n\nWhat do you mean, CI built it just fine?\n\n\n\u003e size function in filebody and stringbody returns different types.\n\nNot according to the docs:\nhttps://www.boost.org/doc/libs/1_82_0/libs/beast/doc/html/beast/ref/boost__beast__http__basic_file_body/size.html\nhttps://www.boost.org/doc/libs/1_82_0/libs/beast/doc/html/beast/ref/boost__beast__http__basic_string_body/size.html\n\nBoth should return uint64_t.  Are you running a different environment?  Or am I missing something?\n\n\u003e I think we should change this function as follows\n\u003e return boost::variant2::visit(\n\u003e             [](auto\u0026\u0026 res)-\u003euint64_t { return res.body().size(); }, response);\n\n\n\nThe difference is the -\u003euint64_t ?  Sure, we can do that.",
      "parentUuid": "33163525_54c967d3",
      "revId": "d054c7d556e6e23d45976c3303d23eb62b792846",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd80bda8_5edf1de9",
        "filename": "http/http_response.hpp",
        "patchSetId": 29
      },
      "lineNbr": 218,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2023-10-03T18:17:10Z",
      "side": 1,
      "message": "yes,I was trying to build and got this error.\nno matching function for call to ‘visit(crow::Response::size()::\u003clambda(auto:70\u0026\u0026)\u003e, boost::variant2::variant\u003cboost::beast::http::message\u003cfalse, boost::beast::http::basic_string_body\u003cchar, std::char_traits\u003cchar\u003e, std::allocator\u003cchar\u003e \u003e, boost::beast::http::basic_fields\u003cstd::allocator\u003cchar\u003e \u003e \u003e, boost::beast::http::message\u003cfalse, boost::beast::http::basic_file_body\u003cboost::beast::file_posix\u003e, boost::beast::http::basic_fields\u003cstd::allocator\u003cchar\u003e \u003e \u003e \u003e\u0026)’\n\nsize_t  need not be uint64 always. that is what string size returns. But filebody always returns uint64. I got it fixed in my environment with above changes.",
      "parentUuid": "6eb79c73_7a558c62",
      "revId": "d054c7d556e6e23d45976c3303d23eb62b792846",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}