{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "de672d95_0ab88321",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 58
      },
      "lineNbr": 283,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-04-30T11:03:01Z",
      "side": 1,
      "message": "This set and get function are very similar. You can create third one with callback as parameter, in this one can handle assigning value to asyncResp, in set you will pass callback which sets property. If in the future you will add also call to ObjectMapper you will only have to change one place instead of two.",
      "range": {
        "startLine": 283,
        "startChar": 12,
        "endLine": 283,
        "endChar": 38
      },
      "revId": "c852c9bed859ad7b8cbb4df72b7c6cf2f44fd9a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb579a69_25ed9fcf",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 58
      },
      "lineNbr": 283,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-05-01T07:50:04Z",
      "side": 1,
      "message": "Yes, I know what your mean.\nBut according to the context, and this patch has been a long time, I donâ€™t want to change this logic again.\nThanks ðŸ˜Š",
      "parentUuid": "de672d95_0ab88321",
      "range": {
        "startLine": 283,
        "startChar": 12,
        "endLine": 283,
        "endChar": 38
      },
      "revId": "c852c9bed859ad7b8cbb4df72b7c6cf2f44fd9a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0f94289_a606d8f8",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 58
      },
      "lineNbr": 283,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-05-05T06:48:34Z",
      "side": 1,
      "message": "I think it is worth to remove this code duplication, but we can wait and see what bmcweb maintainers think about it.\n\nAlso if fixed related to setProperty/getProperty are applied this code duplication become a bit smaller.",
      "parentUuid": "cb579a69_25ed9fcf",
      "range": {
        "startLine": 283,
        "startChar": 12,
        "endLine": 283,
        "endChar": 38
      },
      "revId": "c852c9bed859ad7b8cbb4df72b7c6cf2f44fd9a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5de3fa8_366643ea",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 58
      },
      "lineNbr": 283,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-05-06T00:59:42Z",
      "side": 1,
      "message": "Yes, You are right.\nLet us wait and see what bmcweb maintainers think.\nI will push a new patch if maintainer agree with this idea.\nThanks a lot.",
      "parentUuid": "f0f94289_a606d8f8",
      "range": {
        "startLine": 283,
        "startChar": 12,
        "endLine": 283,
        "endChar": 38
      },
      "revId": "c852c9bed859ad7b8cbb4df72b7c6cf2f44fd9a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27dec57d_ca494db9",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 58
      },
      "lineNbr": 283,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2022-08-01T08:06:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b5de3fa8_366643ea",
      "range": {
        "startLine": 283,
        "startChar": 12,
        "endLine": 283,
        "endChar": 38
      },
      "revId": "c852c9bed859ad7b8cbb4df72b7c6cf2f44fd9a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3716a7c_94b84e48",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 58
      },
      "lineNbr": 283,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2025-05-08T18:18:42Z",
      "side": 1,
      "message": "These functions are no longer part of this commit.",
      "parentUuid": "27dec57d_ca494db9",
      "range": {
        "startLine": 283,
        "startChar": 12,
        "endLine": 283,
        "endChar": 38
      },
      "revId": "c852c9bed859ad7b8cbb4df72b7c6cf2f44fd9a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59ea76d2_eb944c02",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 58
      },
      "lineNbr": 309,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-04-30T11:03:01Z",
      "side": 1,
      "message": "You can use sdbusplus::asio::getProperty\u003cT\u003e instead this part will be covered there.\n\nAlso this condition will be always false because variant have always type set.\n\nIf you use getProperty\u003cT\u003e and pass incorrect T then ec will be passed to callback. Here you will silently get valid std::vector with size 0.",
      "range": {
        "startLine": 301,
        "startChar": 12,
        "endLine": 309,
        "endChar": 13
      },
      "revId": "c852c9bed859ad7b8cbb4df72b7c6cf2f44fd9a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f537e820_452bb298",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 58
      },
      "lineNbr": 309,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-05-01T07:50:04Z",
      "side": 1,
      "message": "Yes.\nBut we have never used `sdbusplus::asio:connection` this way, this should be a logical change.\nI think this part can be optimized in the future",
      "parentUuid": "59ea76d2_eb944c02",
      "range": {
        "startLine": 301,
        "startChar": 12,
        "endLine": 309,
        "endChar": 13
      },
      "revId": "c852c9bed859ad7b8cbb4df72b7c6cf2f44fd9a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7666be0f_f09d43c6",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 58
      },
      "lineNbr": 309,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-05-05T06:31:01Z",
      "side": 1,
      "message": "crow::connections::systemBus is an sdbusplus::asio::connection object",
      "parentUuid": "f537e820_452bb298",
      "range": {
        "startLine": 301,
        "startChar": 12,
        "endLine": 309,
        "endChar": 13
      },
      "revId": "c852c9bed859ad7b8cbb4df72b7c6cf2f44fd9a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d87d576_a0ba6dcb",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 58
      },
      "lineNbr": 309,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-05-06T00:59:42Z",
      "side": 1,
      "message": "Could we use `sdbusplus::asio::connection` in the next commit?\nBecause we need to update many places and we do not want to change this logic in this commit.\nThanks",
      "parentUuid": "7666be0f_f09d43c6",
      "range": {
        "startLine": 301,
        "startChar": 12,
        "endLine": 309,
        "endChar": 13
      },
      "revId": "c852c9bed859ad7b8cbb4df72b7c6cf2f44fd9a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e6d1cca_898e4977",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 58
      },
      "lineNbr": 309,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-06T16:37:21Z",
      "side": 1,
      "message": "getProperty isn\u0027t used in bmcweb at this time.  Unless someone wants to take the effort to go port us forward for at least a majority of the old use cases, I\u0027m not going to require people do it in new code.\n\nSaid another way, we should use old endpoints to prove the utility of things like getPropery, before we start enforcing them in new code.",
      "parentUuid": "8d87d576_a0ba6dcb",
      "range": {
        "startLine": 301,
        "startChar": 12,
        "endLine": 309,
        "endChar": 13
      },
      "revId": "c852c9bed859ad7b8cbb4df72b7c6cf2f44fd9a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa38046a_4375de8a",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 58
      },
      "lineNbr": 309,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-05-07T06:52:34Z",
      "side": 1,
      "message": "In my opinion introducing this new utility function in review could be helpful, it will save some coding and potential errors. If we decide to either always async_method_call or getPropert\u003cT\u003e we might never move forward. Anyway I\u0027m not the one who decides this.\n\nI just want to clarify one think, is it forbidden to use getProperty\u003cT\u003e in bmcweb?\n\nAlso if you are going to stay with async_method_call you need to change every variant to include std::monostate as first argument otherwise if your type on dbus is different you will end up with value which might be hard to debug. So you need to change std::variant\u003cbool\u003e to std::variant\u003cstd::monostate, bool\u003e.\n\nChange will be visible in case of. property on dbus is type uint64_t with value 42.\n- You are attempting to async_method_call(\"Properties\", \"Get\", std::variant\u003cint64_t\u003e) result will be variant with int64_t with value 0.\n- You are attempting to async_method_call(\"Properties\", \"Get\", std::variant\u003cstd::monostate, int64_t\u003e) result will be variant with std::monostate.\nCaches where type matches type in variant will be not affected.",
      "parentUuid": "9e6d1cca_898e4977",
      "range": {
        "startLine": 301,
        "startChar": 12,
        "endLine": 309,
        "endChar": 13
      },
      "revId": "c852c9bed859ad7b8cbb4df72b7c6cf2f44fd9a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "988f4834_772af320",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 58
      },
      "lineNbr": 309,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-05-07T06:54:14Z",
      "side": 1,
      "message": "Typo: *Cases where type on dbus matches type in variant will be not affected.",
      "parentUuid": "fa38046a_4375de8a",
      "range": {
        "startLine": 301,
        "startChar": 12,
        "endLine": 309,
        "endChar": 13
      },
      "revId": "c852c9bed859ad7b8cbb4df72b7c6cf2f44fd9a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ce48001_3eb8908f",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 58
      },
      "lineNbr": 309,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-24T17:06:38Z",
      "side": 1,
      "message": "\u003e In my opinion introducing this new utility function in review could be helpful,\n\nFeel free to push your own patchsets to this effect so we can evaluate this statement, but I\u0027m not going to start requiring people use a pattern that is new to bmcweb, when we have code to handle these cases already that\u0027s pretty common.\n\n\u003e I just want to clarify one think, is it forbidden to use getProperty\u003cT\u003e in bmcweb?\n\nDoes it make the code cleaner and more consistent without sacrificing performance?  Today it isn\u0027t used and increases the likelihood we inject new errors, but that\u0027s not to say it\u0027s \"forbidden\" it\u0027s just that nobody has proven the utility inside bmcweb.\n\n\n\u003e Also if you are going to stay with async_method_call you need to change every variant to include std::monostate as first argument otherwise if your type on dbus is different you will end up with value which might be hard to debug. \n\nThis isn\u0027t needed.  Somehow we\u0027ve managed just fine without it thusfar and to my understanding (so long as you handle your error codes) there is no functional impact to default constructed values.\n\n\n\u003e You are attempting to async_method_call(\"Properties\", \"Get\", std::variant\u003cint64_t\u003e) result will be variant with int64_t with value 0.\n\nIn your example you\u0027ve completely omitted that there is a separate error code, which we have well defined handling of today.  With that said, if you can point to a place where this is actually an issue in practice, I\u0027m happy to discuss further, but we can\u0027t be coding against these \"might be hard to debug\" conditions that so far as I\u0027m aware, nobody has seen and we have paths to handle.\n\n\nWith all of the above said, I\u0027d support changes to make std::monostate required on all variants, but I\u0027m not going to require it on new code until we\u0027re at least somewhat consistent.",
      "parentUuid": "988f4834_772af320",
      "range": {
        "startLine": 301,
        "startChar": 12,
        "endLine": 309,
        "endChar": 13
      },
      "revId": "c852c9bed859ad7b8cbb4df72b7c6cf2f44fd9a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e35897b_482d4158",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 58
      },
      "lineNbr": 309,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-05-25T07:59:32Z",
      "side": 1,
      "message": "Just to clarify if we are on same page.\n\nDbus: Property name X with type uint64_t with value 13.\n\nCode: async_method_call(\u0027Get\u0027, variant\u003cuint32_t\u003e), result: ec \u003d success, variant with type uint32_t and value 0.\n\nCode: async_method_call(\u0027Get\u0027, variant\u003cstd::monostate, uint32_t\u003e), result: ec \u003d success, variant with type std::monostate.\n\nCode: async_method_call(\u0027Get\u0027, variant\u003cuint64_t\u003e), result: ec \u003d success, variant with type uint64_t and value 13.\n\nCode: async_method_call(\u0027Get\u0027, variant\u003cstd::monostate, uint64_t\u003e), result: ec \u003d success, variant with type uint64_t and value 13.\n\n\nThanks for answers I understand the situation now. In future review I will not mention getProperty\u003cT\u003e to avoid inconsistency in code and I will just let people know as a nit comment about the std::monostate and what issue it might solve.",
      "parentUuid": "9ce48001_3eb8908f",
      "range": {
        "startLine": 301,
        "startChar": 12,
        "endLine": 309,
        "endChar": 13
      },
      "revId": "c852c9bed859ad7b8cbb4df72b7c6cf2f44fd9a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c8eee7e_7ca08b59",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 58
      },
      "lineNbr": 309,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2022-08-01T08:06:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5e35897b_482d4158",
      "range": {
        "startLine": 301,
        "startChar": 12,
        "endLine": 309,
        "endChar": 13
      },
      "revId": "c852c9bed859ad7b8cbb4df72b7c6cf2f44fd9a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d812b03_dda769f2",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 58
      },
      "lineNbr": 331,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-04-30T11:03:01Z",
      "side": 1,
      "message": "Same as above.",
      "range": {
        "startLine": 324,
        "startChar": 0,
        "endLine": 331,
        "endChar": 25
      },
      "revId": "c852c9bed859ad7b8cbb4df72b7c6cf2f44fd9a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e22e41b2_abd7fe83",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 58
      },
      "lineNbr": 331,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-05-01T07:50:04Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5d812b03_dda769f2",
      "range": {
        "startLine": 324,
        "startChar": 0,
        "endLine": 331,
        "endChar": 25
      },
      "revId": "c852c9bed859ad7b8cbb4df72b7c6cf2f44fd9a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5de319e_d57beadd",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 58
      },
      "lineNbr": 382,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-04-30T11:03:01Z",
      "side": 1,
      "message": "Same as above",
      "range": {
        "startLine": 373,
        "startChar": 0,
        "endLine": 382,
        "endChar": 0
      },
      "revId": "c852c9bed859ad7b8cbb4df72b7c6cf2f44fd9a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d01620f0_abbb6e44",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 58
      },
      "lineNbr": 382,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-05-01T07:50:04Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a5de319e_d57beadd",
      "range": {
        "startLine": 373,
        "startChar": 0,
        "endLine": 382,
        "endChar": 0
      },
      "revId": "c852c9bed859ad7b8cbb4df72b7c6cf2f44fd9a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "daca3120_293b3e06",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 58
      },
      "lineNbr": 400,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-04-30T11:03:01Z",
      "side": 1,
      "message": "You can use sdbusplus::asio::setProperty instead",
      "range": {
        "startLine": 385,
        "startChar": 16,
        "endLine": 400,
        "endChar": 22
      },
      "revId": "c852c9bed859ad7b8cbb4df72b7c6cf2f44fd9a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3fcd0c04_4c46bd09",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 58
      },
      "lineNbr": 400,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-05-01T07:50:04Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "daca3120_293b3e06",
      "range": {
        "startLine": 385,
        "startChar": 16,
        "endLine": 400,
        "endChar": 22
      },
      "revId": "c852c9bed859ad7b8cbb4df72b7c6cf2f44fd9a0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}