{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2cd5945a_f6f0783d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-25T23:18:07Z",
      "side": 1,
      "message": "Posted a question. Otherwise LGTM",
      "revId": "949c49536bc721243ff3308d8bce85816457bd75",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62b44892_b95234e2",
        "filename": "http/http_response.hpp",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-25T19:40:30Z",
      "side": 1,
      "message": "What does this branch mean in reality? If the source Response is already completed, the result Response object from the move constructor will just do nothing?",
      "range": {
        "startLine": 87,
        "startChar": 12,
        "endLine": 87,
        "endChar": 45
      },
      "revId": "949c49536bc721243ff3308d8bce85816457bd75",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24541f4c_b328e8cc",
        "filename": "http/http_response.hpp",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-25T21:07:28Z",
      "side": 1,
      "message": "The underlying theory is that a given completion handler is only called once.  If we hit this branch, it means that the completion handler has already been called, so there\u0027s no reason to preserve it",
      "parentUuid": "62b44892_b95234e2",
      "range": {
        "startLine": 87,
        "startChar": 12,
        "endLine": 87,
        "endChar": 45
      },
      "revId": "949c49536bc721243ff3308d8bce85816457bd75",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f51681d_f24e114f",
        "filename": "http/http_response.hpp",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-25T23:18:07Z",
      "side": 1,
      "message": "Just trying to understand when this could happen. Is this suppose to happen? My understanding is if we ever want to move construct a response (to hijack a handler via   |setCompleteRequestHandler|), the source response should be still active, right?",
      "parentUuid": "24541f4c_b328e8cc",
      "range": {
        "startLine": 87,
        "startChar": 12,
        "endLine": 87,
        "endChar": 45
      },
      "revId": "949c49536bc721243ff3308d8bce85816457bd75",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00e8802b_94bf13d8",
        "filename": "http/http_response.hpp",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-29T02:59:10Z",
      "side": 1,
      "message": "\u003e Just trying to understand when this could happen. Is this suppose to happen?\n\nYes.  If you move out of a response object while calling the function, you don\u0027t want to destroy your function context (that leads to issues).\n\n\u003e My understanding is if we ever want to move construct a response (to hijack a handler via   |setCompleteRequestHandler|), the source response should be still active, right?\n\nNot if we\u0027re currently in the handler, which is what this case is for.  The source response is being executed, but in our rules of \"don\u0027t execute completion handlers twice\" we don\u0027t want to move out of it.",
      "parentUuid": "5f51681d_f24e114f",
      "range": {
        "startLine": 87,
        "startChar": 12,
        "endLine": 87,
        "endChar": 45
      },
      "revId": "949c49536bc721243ff3308d8bce85816457bd75",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dce287aa_207d4ec8",
        "filename": "http/http_response.hpp",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-03T22:52:19Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "00e8802b_94bf13d8",
      "range": {
        "startLine": 87,
        "startChar": 12,
        "endLine": 87,
        "endChar": 45
      },
      "revId": "949c49536bc721243ff3308d8bce85816457bd75",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7852aeb_f46bdc3c",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 8
      },
      "lineNbr": 320,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-25T19:35:48Z",
      "side": 1,
      "message": "What about here? shall we move the current AsyncResp in?",
      "range": {
        "startLine": 320,
        "startChar": 46,
        "endLine": 320,
        "endChar": 55
      },
      "revId": "949c49536bc721243ff3308d8bce85816457bd75",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b772581f_a3b6881c",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 8
      },
      "lineNbr": 320,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-25T21:05:51Z",
      "side": 1,
      "message": "Yes we should, but in a different patch (due to the difference in testing).\n\nI can put that patch together and test tomorrow",
      "parentUuid": "d7852aeb_f46bdc3c",
      "range": {
        "startLine": 320,
        "startChar": 46,
        "endLine": 320,
        "endChar": 55
      },
      "revId": "949c49536bc721243ff3308d8bce85816457bd75",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2081406b_d3a6862d",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 8
      },
      "lineNbr": 320,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-25T21:27:34Z",
      "side": 1,
      "message": "Actually, now that I think about it, no, we should not copy headers in this case.  In the case of $only, we actually want the headers from the second request, and we actually do want to drop the headers from the first request, because they would conflict for things like Allow, which by my reading, should be returning the Allow for the resource we just got, not the collection.",
      "parentUuid": "b772581f_a3b6881c",
      "range": {
        "startLine": 320,
        "startChar": 46,
        "endLine": 320,
        "endChar": 55
      },
      "revId": "949c49536bc721243ff3308d8bce85816457bd75",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15e492df_74bdf7e9",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 8
      },
      "lineNbr": 521,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-25T22:21:57Z",
      "side": 1,
      "message": "I believe this is WAI, right? we don\u0027t reuse headers in these responses.",
      "range": {
        "startLine": 521,
        "startChar": 29,
        "endLine": 521,
        "endChar": 67
      },
      "revId": "949c49536bc721243ff3308d8bce85816457bd75",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "353d9d7c_5f4eb7d8",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 8
      },
      "lineNbr": 521,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-25T22:56:50Z",
      "side": 1,
      "message": "what is WAI?\n\nI do think this is correct, we don\u0027t want to populate headers from the sub-expand objects on the root object.  We should always get the headers from the root object.",
      "parentUuid": "15e492df_74bdf7e9",
      "range": {
        "startLine": 521,
        "startChar": 29,
        "endLine": 521,
        "endChar": 67
      },
      "revId": "949c49536bc721243ff3308d8bce85816457bd75",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8319c83_35c06c60",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 8
      },
      "lineNbr": 521,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-25T23:00:22Z",
      "side": 1,
      "message": "https://www.allacronyms.com/WAI/Working_as_Intended#:~:text\u003dWAI%20means%20Working%20as%20Intended",
      "parentUuid": "353d9d7c_5f4eb7d8",
      "range": {
        "startLine": 521,
        "startChar": 29,
        "endLine": 521,
        "endChar": 67
      },
      "revId": "949c49536bc721243ff3308d8bce85816457bd75",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97502af9_4bc2c888",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 8
      },
      "lineNbr": 521,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-25T23:01:25Z",
      "side": 1,
      "message": "Gotcha.... Yes, I think this is working as intended.",
      "parentUuid": "b8319c83_35c06c60",
      "range": {
        "startLine": 521,
        "startChar": 29,
        "endLine": 521,
        "endChar": 67
      },
      "revId": "949c49536bc721243ff3308d8bce85816457bd75",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}