{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "62b44892_b95234e2",
        "filename": "http/http_response.hpp",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-25T19:40:30Z",
      "side": 1,
      "message": "What does this branch mean in reality? If the source Response is already completed, the result Response object from the move constructor will just do nothing?",
      "range": {
        "startLine": 87,
        "startChar": 12,
        "endLine": 87,
        "endChar": 45
      },
      "revId": "949c49536bc721243ff3308d8bce85816457bd75",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24541f4c_b328e8cc",
        "filename": "http/http_response.hpp",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-25T21:07:28Z",
      "side": 1,
      "message": "The underlying theory is that a given completion handler is only called once.  If we hit this branch, it means that the completion handler has already been called, so there\u0027s no reason to preserve it",
      "parentUuid": "62b44892_b95234e2",
      "range": {
        "startLine": 87,
        "startChar": 12,
        "endLine": 87,
        "endChar": 45
      },
      "revId": "949c49536bc721243ff3308d8bce85816457bd75",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7852aeb_f46bdc3c",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 8
      },
      "lineNbr": 320,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-25T19:35:48Z",
      "side": 1,
      "message": "What about here? shall we move the current AsyncResp in?",
      "range": {
        "startLine": 320,
        "startChar": 46,
        "endLine": 320,
        "endChar": 55
      },
      "revId": "949c49536bc721243ff3308d8bce85816457bd75",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b772581f_a3b6881c",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 8
      },
      "lineNbr": 320,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-25T21:05:51Z",
      "side": 1,
      "message": "Yes we should, but in a different patch (due to the difference in testing).\n\nI can put that patch together and test tomorrow",
      "parentUuid": "d7852aeb_f46bdc3c",
      "range": {
        "startLine": 320,
        "startChar": 46,
        "endLine": 320,
        "endChar": 55
      },
      "revId": "949c49536bc721243ff3308d8bce85816457bd75",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2081406b_d3a6862d",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 8
      },
      "lineNbr": 320,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-25T21:27:34Z",
      "side": 1,
      "message": "Actually, now that I think about it, no, we should not copy headers in this case.  In the case of $only, we actually want the headers from the second request, and we actually do want to drop the headers from the first request, because they would conflict for things like Allow, which by my reading, should be returning the Allow for the resource we just got, not the collection.",
      "parentUuid": "b772581f_a3b6881c",
      "range": {
        "startLine": 320,
        "startChar": 46,
        "endLine": 320,
        "endChar": 55
      },
      "revId": "949c49536bc721243ff3308d8bce85816457bd75",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}