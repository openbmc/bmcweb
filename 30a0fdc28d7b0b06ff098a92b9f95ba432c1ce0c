{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ac6825ed_0bbaede3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-03-28T07:47:59Z",
      "side": 1,
      "message": "LGTM",
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "845dd408_bb0511a6",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 11
      },
      "lineNbr": 10,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-03-28T07:47:59Z",
      "side": 1,
      "message": "It looks like it always returns true.",
      "range": {
        "startLine": 10,
        "startChar": 7,
        "endLine": 10,
        "endChar": 12
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e83c57b4_24a9a192",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 11
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-28T16:09:40Z",
      "side": 1,
      "message": "There are patchsets later in the series where this can fail.  Also, Nans comment on line 32 will cause it to return early with a false, so I don\u0027t think this prototype needs to change.  Please reopen this comment if you feel differently.",
      "parentUuid": "845dd408_bb0511a6",
      "range": {
        "startLine": 10,
        "startChar": 7,
        "endLine": 10,
        "endChar": 12
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c36b2dd_7137f931",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 11
      },
      "lineNbr": 10,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-03-30T08:00:50Z",
      "side": 1,
      "message": "Ack.\n\nnit: Can we add [[nodiscard]] just in case someone forgets to check result?",
      "range": {
        "startLine": 10,
        "startChar": 7,
        "endLine": 10,
        "endChar": 12
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59123610_751991c0",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 11
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-30T20:44:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8c36b2dd_7137f931",
      "range": {
        "startLine": 10,
        "startChar": 7,
        "endLine": 10,
        "endChar": 12
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72cae614_f7a9d84a",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 11
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-30T20:46:45Z",
      "side": 1,
      "message": "FWIW, I think this is also bmcwebs first use of nodiscard, which I would like to see us use more, but haven\u0027t had time to play around with to see what functions need annotated with that and in what cases we wouldn\u0027t use it.",
      "parentUuid": "59123610_751991c0",
      "range": {
        "startLine": 10,
        "startChar": 7,
        "endLine": 10,
        "endChar": 12
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cf67b41_54dd0b0f",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 11
      },
      "lineNbr": 10,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-03-30T23:30:02Z",
      "side": 1,
      "message": "Is there way to enforce it by default without adding [[nodiscard]]?",
      "parentUuid": "72cae614_f7a9d84a",
      "range": {
        "startLine": 10,
        "startChar": 7,
        "endLine": 10,
        "endChar": 12
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f758a58f_73e55a11",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 11
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-30T23:50:56Z",
      "side": 1,
      "message": "Code review is the only other way I\u0027m aware of, but nodiscard is the only way I\u0027m aware of that\u0027s automated.  Open to other options if there are some.",
      "parentUuid": "3cf67b41_54dd0b0f",
      "range": {
        "startLine": 10,
        "startChar": 7,
        "endLine": 10,
        "endChar": 12
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4b3bb7d_3e9c2ba1",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 11
      },
      "lineNbr": 32,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-03-25T21:52:10Z",
      "side": 1,
      "message": "if query is std::nullopt, we don\u0027t need to set a new request handler, right? There\u0027s no query to process. This can save some time, given that all resources are using this \"setUpRedfishRoute\" now, it makes sense to me to move the check inside processAllParams to this function.\n\n```\nif (!completionHandler)\n    {\n        BMCWEB_LOG_DEBUG \u003c\u003c \"Function was invalid?\";\n        return;\n    }\n\n    BMCWEB_LOG_DEBUG \u003c\u003c \"Processing query params\";\n    if (!query)\n    {\n        BMCWEB_LOG_DEBUG \u003c\u003c \"No query params to process\";\n        // Query params weren\u0027t valid, no need to continue;\n        completionHandler(intermediateResponse);\n        return;\n    }\n\n    // If the request failed, there\u0027s no reason to even try to run query\n    // params.\n    if (intermediateResponse.resultInt() \u003c 200 ||\n        intermediateResponse.resultInt() \u003e\u003d 400)\n    {\n        completionHandler(intermediateResponse);\n        return;\n    }\n```",
      "range": {
        "startLine": 32,
        "startChar": 30,
        "endLine": 32,
        "endChar": 35
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cc1cd06_4c8b86eb",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 11
      },
      "lineNbr": 32,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-25T21:58:45Z",
      "side": 1,
      "message": "I kind of understand the first part (if it doesn\u0027t parse we could return early) I don\u0027t understand moving the check inside processAllParams.  Wouldn\u0027t the check go on line 22, and even in that case, we\u0027d have to then duplicate the error code, or are you thinking processAllParams would take by query\u0026 instead of optional?",
      "parentUuid": "b4b3bb7d_3e9c2ba1",
      "range": {
        "startLine": 32,
        "startChar": 30,
        "endLine": 32,
        "endChar": 35
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "700810ab_6495b13d",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 11
      },
      "lineNbr": 32,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-03-25T22:30:29Z",
      "side": 1,
      "message": "Yes, processAllParams would take `query\u0026` directly.\n\nAlso before parsing params, if intermediateResponse failed, we just return, right?",
      "parentUuid": "9cc1cd06_4c8b86eb",
      "range": {
        "startLine": 32,
        "startChar": 30,
        "endLine": 32,
        "endChar": 35
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "681cf7ca_9316d673",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 11
      },
      "lineNbr": 32,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-28T03:27:24Z",
      "side": 1,
      "message": "\u003e Yes, processAllParams would take `query\u0026` directly.\n\u003e \n\nSure, that seems reasonable.\n\n\u003e Also before parsing params, if intermediateResponse failed, we just return, right?\n\n\nI\u0027m not following how that could happen in the current code paths.  Arguably, calling this function with an error already in the res object at this scope (intermediateResponse isn\u0027t in this scope at all) is a user error, and given it doesn\u0027t really have a use case, I\u0027m not sure that\u0027s something we should explicitly define at this point.  Even if you called it with an error, this function would still have code paths to handle things, so I\u0027m not quite understanding the concern.",
      "parentUuid": "700810ab_6495b13d",
      "range": {
        "startLine": 32,
        "startChar": 30,
        "endLine": 32,
        "endChar": 35
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67d387e8_ff74bcf4",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 11
      },
      "lineNbr": 32,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-28T16:52:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "681cf7ca_9316d673",
      "range": {
        "startLine": 32,
        "startChar": 30,
        "endLine": 32,
        "endChar": 35
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5065cbd0_7e0d337e",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 11
      },
      "lineNbr": 8,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-03-25T21:52:10Z",
      "side": 1,
      "message": "std::string is missing",
      "range": {
        "startLine": 8,
        "startChar": 10,
        "endLine": 8,
        "endChar": 21
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a86b62f6_d40b4bb3",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 11
      },
      "lineNbr": 8,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-25T21:58:45Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5065cbd0_7e0d337e",
      "range": {
        "startLine": 8,
        "startChar": 10,
        "endLine": 8,
        "endChar": 21
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9072518a_9c00e047",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 11
      },
      "lineNbr": 8,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-28T16:52:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a86b62f6_d40b4bb3",
      "range": {
        "startLine": 8,
        "startChar": 10,
        "endLine": 8,
        "endChar": 21
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3211f0ef_1b7aca01",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 11
      },
      "lineNbr": 25,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-03-25T21:52:10Z",
      "side": 1,
      "message": "any reason \"Query ret;\" not enough?",
      "range": {
        "startLine": 25,
        "startChar": 13,
        "endLine": 25,
        "endChar": 15
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0cacd0b2_739dcbfd",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 11
      },
      "lineNbr": 25,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-25T21:58:45Z",
      "side": 1,
      "message": "Because it\u0027s a POD, so at this point if you did that, the data structure wouldn\u0027t be initialized.  At least, that\u0027s what I thought?",
      "parentUuid": "3211f0ef_1b7aca01",
      "range": {
        "startLine": 25,
        "startChar": 13,
        "endLine": 25,
        "endChar": 15
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96932c84_b8d0716f",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 11
      },
      "lineNbr": 25,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-03-25T22:30:29Z",
      "side": 1,
      "message": "https://godbolt.org/z/jd9Wznb5G\n\n```\nbool isOnly \u003d false;\n```\nThis style will always get the data initialized IIUC",
      "parentUuid": "0cacd0b2_739dcbfd",
      "range": {
        "startLine": 25,
        "startChar": 13,
        "endLine": 25,
        "endChar": 15
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9466a546_2927fa65",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 11
      },
      "lineNbr": 25,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-28T03:27:24Z",
      "side": 1,
      "message": "Ah, good point.  Will fix.",
      "parentUuid": "96932c84_b8d0716f",
      "range": {
        "startLine": 25,
        "startChar": 13,
        "endLine": 25,
        "endChar": 15
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3eca37f_a837682a",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 11
      },
      "lineNbr": 25,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-30T15:57:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9466a546_2927fa65",
      "range": {
        "startLine": 25,
        "startChar": 13,
        "endLine": 25,
        "endChar": 15
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e314e3c1_27af6487",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 11
      },
      "lineNbr": 29,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-03-27T06:08:26Z",
      "side": 1,
      "message": "is this not the same as just\n\n```\nstd::string_view key(it.key);\nstd::string_view value(it.value);\n```\n\nparams_view::value_type::key is just string, right?",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 29,
        "endChar": 65
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0dc6f8c2_f4dca035",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 11
      },
      "lineNbr": 29,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-28T03:27:24Z",
      "side": 1,
      "message": "\u003e is this not the same as just\n\u003e \n\u003e ```\n\u003e std::string_view key(it.key);\n\u003e std::string_view value(it.value);\n\u003e ```\n\u003e \n\u003e params_view::value_type::key is just string, right?\n\nWouldn\u0027t that be nice.  No, it\u0027s not.  In theory in the next version fo boost we get boost::core::string_view, which is implicitly convertible to std::string_view, but that\u0027s not there yet, so we have to do this mess.",
      "parentUuid": "e314e3c1_27af6487",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 29,
        "endChar": 65
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "081068df_505f83a6",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 11
      },
      "lineNbr": 29,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-03-28T06:40:10Z",
      "side": 1,
      "message": "dang. 😞. sounds good.",
      "parentUuid": "0dc6f8c2_f4dca035",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 29,
        "endChar": 65
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a451a7a_eb448638",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 11
      },
      "lineNbr": 54,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-03-27T06:08:26Z",
      "side": 1,
      "message": "Do we need to check `itMemBegin \u003d\u003d itMembers-\u003eend()`?\n\nshouldn\u0027t `itMembers-\u003esize() !\u003d 1` already cover that case?\n\nIf not, we can move `auto itMemBegin \u003d itMembers-\u003ebegin();` to line 62 since it is not really used until there.",
      "range": {
        "startLine": 54,
        "startChar": 4,
        "endLine": 54,
        "endChar": 41
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5495b37_788d7167",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 11
      },
      "lineNbr": 54,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-28T03:27:24Z",
      "side": 1,
      "message": "\u003e Do we need to check `itMemBegin \u003d\u003d itMembers-\u003eend()`?\n\u003e \n\u003e shouldn\u0027t `itMembers-\u003esize() !\u003d 1` already cover that case?\n\nIn theory, yes, that\u0027s an equivalent check, but in general, we require that all pointers be checked, because static analysis tools can be pretty naive sometimes, and checking all pointers before dereferencing helps keep the security scans clean.\n\n\u003e \n\u003e If not, we can move `auto itMemBegin \u003d itMembers-\u003ebegin();` to line 62 since it is not really used until there.\n\nSee above.  I don\u0027t think it can move.",
      "parentUuid": "3a451a7a_eb448638",
      "range": {
        "startLine": 54,
        "startChar": 4,
        "endLine": 54,
        "endChar": 41
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de5059e8_e7c974ff",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 11
      },
      "lineNbr": 54,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-03-28T06:40:10Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b5495b37_788d7167",
      "range": {
        "startLine": 54,
        "startChar": 4,
        "endLine": 54,
        "endChar": 41
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3caf25f6_8a78bb35",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 11
      },
      "lineNbr": 82,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-03-27T06:08:26Z",
      "side": 1,
      "message": "I am guessing this means something important?",
      "range": {
        "startLine": 82,
        "startChar": 63,
        "endLine": 82,
        "endChar": 65
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "531f0716_e776a712",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 11
      },
      "lineNbr": 82,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-28T03:27:24Z",
      "side": 1,
      "message": "The version of http that we\u0027re constructing, ie HTTP1.1.",
      "parentUuid": "3caf25f6_8a78bb35",
      "range": {
        "startLine": 82,
        "startChar": 63,
        "endLine": 82,
        "endChar": 65
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f5aa6f0_1a1b0fbb",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 11
      },
      "lineNbr": 82,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-03-28T06:40:10Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "531f0716_e776a712",
      "range": {
        "startLine": 82,
        "startChar": 63,
        "endLine": 82,
        "endChar": 65
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb3b8ff7_e6fc5185",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 11
      },
      "lineNbr": 84,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-03-27T06:08:26Z",
      "side": 1,
      "message": "Log the error code?",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 84,
        "endChar": 5
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5a44f69_2a8d162f",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 11
      },
      "lineNbr": 84,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-28T03:27:24Z",
      "side": 1,
      "message": "internalError logs the call site where it was added automatically.  Adding another log would be somewhat redundant.",
      "parentUuid": "fb3b8ff7_e6fc5185",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 84,
        "endChar": 5
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b584451a_76cd91dc",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 11
      },
      "lineNbr": 84,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-03-28T06:40:10Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b5a44f69_2a8d162f",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 84,
        "endChar": 5
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fdd0a3c_17eefb02",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 11
      },
      "lineNbr": 2658,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-03-28T07:49:10Z",
      "side": 1,
      "message": "Function returns bool, but result is not checked.",
      "range": {
        "startLine": 2658,
        "startChar": 16,
        "endLine": 2658,
        "endChar": 69
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "788afeda_d0f0a8a5",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 11
      },
      "lineNbr": 2658,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-28T16:52:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1fdd0a3c_17eefb02",
      "range": {
        "startLine": 2658,
        "startChar": 16,
        "endLine": 2658,
        "endChar": 69
      },
      "revId": "30a0fdc28d7b0b06ff098a92b9f95ba432c1ce0c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}