{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1ce61fa4_018b3f20",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2021-12-14T22:18:35Z",
      "side": 1,
      "message": "I mean I like this solution more than \n\n#ifndef BMCWEB_INSECURE_DISABLE_AUTHENTICATION\n            if (req.session-\u003eusername !\u003d accountName)\n            {\n                // At this point we\u0027ve determined that the user is trying to\n                // modify a user that isn\u0027t them.  We need to verify that they\n                // have permissions to modify other users, so re-run the auth\n                // check with the same permissions, minus ConfigureSelf.\n                Privileges effectiveUserPrivileges \u003d\n                    redfish::getUserPrivileges(req.userRole);\n                Privileges requiredPermissionsToChangeNonSelf \u003d {\n                    \"ConfigureUsers\", \"ConfigureManager\"};\n                if (!effectiveUserPrivileges.isSupersetOf(\n                        requiredPermissionsToChangeNonSelf))\n                {\n                    BMCWEB_LOG_DEBUG \u003c\u003c \"GET Account denied access\";\n                    messages::insufficientPrivilege(asyncResp-\u003eres);\n                    return;\n                }\n            }\n\n#endif // BMCWEB_INSECURE_DISABLE_AUTHENTICATION\n\nbut that is because we aren\u0027t using BMCWEB_INSECURE_DISABLE_AUTHENTICATION\n\nas long as you are okay with InsufficientPrivilege for the accounts",
      "revId": "ab07ccf58ad501ab9d8b89ccc81fd2c8cdd30e0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86e9f644_4c57b518",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1001003
      },
      "writtenOn": "2021-12-16T01:24:40Z",
      "side": 1,
      "message": "\u003e #ifndef BMCWEB_INSECURE_DISABLE_AUTHENTICATION\n\u003e             if (req.session-\u003eusername !\u003d accountName)\n\u003e             {\n\u003e                 // At this point we\u0027ve determined that the user is trying to\n\u003e                 // modify a user that isn\u0027t them.  We need to verify that they\n\u003e                 // have permissions to modify other users, so re-run the auth\n\u003e                 // check with the same permissions, minus ConfigureSelf.\n\u003e                 Privileges effectiveUserPrivileges \u003d\n\u003e                     redfish::getUserPrivileges(req.userRole);\n\u003e                 Privileges requiredPermissionsToChangeNonSelf \u003d {\n\u003e                     \"ConfigureUsers\", \"ConfigureManager\"};\n\u003e                 if (!effectiveUserPrivileges.isSupersetOf(\n\u003e                         requiredPermissionsToChangeNonSelf))\n\u003e                 {\n\u003e                     BMCWEB_LOG_DEBUG \u003c\u003c \"GET Account denied access\";\n\u003e                     messages::insufficientPrivilege(asyncResp-\u003eres);\n\u003e                     return;\n\u003e                 }\n\u003e             }\n\u003e \n\u003e #endif // BMCWEB_INSECURE_DISABLE_AUTHENTICATION\n\nIf used this change, it cause req [-Werror\u003dunused-parameter],\nUnless `req` is added [[maybe_unused]], such like:\n...\nget)([]([[maybe_unused]]const crow::Request\u0026 req,\n        const std::shared_ptr\u003cbmcweb::AsyncResp\u003e\u0026 asyncResp,\n...",
      "parentUuid": "1ce61fa4_018b3f20",
      "revId": "ab07ccf58ad501ab9d8b89ccc81fd2c8cdd30e0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "022e5fc1_e2780fe8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1001003
      },
      "writtenOn": "2022-01-04T07:45:52Z",
      "side": 1,
      "message": "Someone can suggest me which is better?\n*  #ifndef BMCWEB_INSECURE_DISABLE_AUTHENTICATION and\n[maybe_unused]]const crow::Request\u0026 req\n*  if (req.session \u0026\u0026 username !\u003d req.session-\u003eusername)",
      "parentUuid": "86e9f644_4c57b518",
      "revId": "ab07ccf58ad501ab9d8b89ccc81fd2c8cdd30e0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68315836_4223814e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-01-04T19:57:27Z",
      "side": 1,
      "message": "[[maybe_unused]] is better between the two.",
      "parentUuid": "022e5fc1_e2780fe8",
      "revId": "ab07ccf58ad501ab9d8b89ccc81fd2c8cdd30e0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c7209ba_65079305",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-04-29T22:13:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "68315836_4223814e",
      "revId": "ab07ccf58ad501ab9d8b89ccc81fd2c8cdd30e0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "762ba4db_45991b85",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1871,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2021-12-15T20:00:00Z",
      "side": 1,
      "message": "this is redundant, right?\n\nIf req.session is nullptr, the check at line 1688 stops us right away.",
      "range": {
        "startLine": 1871,
        "startChar": 28,
        "endLine": 1871,
        "endChar": 35
      },
      "revId": "ab07ccf58ad501ab9d8b89ccc81fd2c8cdd30e0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5846141_d3f88f9c",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1871,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-15T21:31:28Z",
      "side": 1,
      "message": "The check on 1688 is in a totally different scope than this code.  This check looks right to me.",
      "parentUuid": "762ba4db_45991b85",
      "range": {
        "startLine": 1871,
        "startChar": 28,
        "endLine": 1871,
        "endChar": 35
      },
      "revId": "ab07ccf58ad501ab9d8b89ccc81fd2c8cdd30e0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3d6c985_d2195e43",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1871,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2021-12-15T21:41:33Z",
      "side": 1,
      "message": "yeah, you are correct. NVM, totally missed that there are many lines collapsed.",
      "parentUuid": "f5846141_d3f88f9c",
      "range": {
        "startLine": 1871,
        "startChar": 28,
        "endLine": 1871,
        "endChar": 35
      },
      "revId": "ab07ccf58ad501ab9d8b89ccc81fd2c8cdd30e0f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}