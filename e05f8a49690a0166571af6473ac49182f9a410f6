{
  "comments": [
    {
      "key": {
        "uuid": "043d72a5_9ea52e1c",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 26
      },
      "lineNbr": 1313,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-07-15T07:01:25Z",
      "side": 1,
      "message": "If you extract it to a function you could replace break with\n```\nreturn true\n```\nand use it in if condition below\n```if (!findSw(...))```\n\nThat would also make comment\n```\n// Ensure we find our input swId, otherwise return an\n                        // error\n```\nnot needed, because it would be obvious that when we fail to findSw we return error",
      "range": {
        "startLine": 1272,
        "startChar": 24,
        "endLine": 1313,
        "endChar": 25
      },
      "revId": "e05f8a49690a0166571af6473ac49182f9a410f6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0870e43_faf6d639",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 26
      },
      "lineNbr": 1313,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-08-18T16:24:55Z",
      "side": 1,
      "message": "Done. thanks.\n\nI have just replaced the break here with return and removed findSw since it is not needed anymore.\n\nThis one is simple enough so I don\u0027t need a method for it.",
      "parentUuid": "043d72a5_9ea52e1c",
      "range": {
        "startLine": 1272,
        "startChar": 24,
        "endLine": 1313,
        "endChar": 25
      },
      "revId": "e05f8a49690a0166571af6473ac49182f9a410f6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea79df96_b2603170",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 26
      },
      "lineNbr": 1313,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-11-09T09:54:48Z",
      "side": 1,
      "message": "bool foundSw \u003d false;\n\nfor (const std::pair\u003c\n         std::string,\n         std::vector\u003cstd::pair\u003c\n             std::string, std::vector\u003cstd::string\u003e\u003e\u003e\u003e\u0026\n         obj : subtree)\n{\n    const sdbusplus::message::object_path path(\n        obj.first);\n    if (path.filename() !\u003d swId)\n    {\n        continue;\n    }\n\n    if (obj.second.size() \u003c 1)\n    {\n        continue;\n    }\n    \n    foundSw  \u003d true;\n    break;\n} // this for loop could be optionaly moved to function\n\nif (!foundSw) {\n  messages::resourceNotFound(\n    asyncResp-\u003eres,\n    \"#SoftwareInventory.v1_3_0.SoftwareInventory\",\n    swId);\n  return;\n}\n\n// Set the requested image apply time value\ncrow::connections::systemBus-\u003easync_method_call(\n    [asyncResp, writeProtected](\n        const boost::system::error_code ec) {\n        if (ec)\n        {\n            BMCWEB_LOG_ERROR\n                \u003c\u003c \"D-Bus responses error: \" \u003c\u003c ec;\n            messages::internalError(asyncResp-\u003eres);\n            return;\n        }\n        messages::success(asyncResp-\u003eres);\n    },\n    obj.second[0].first, obj.first,\n    \"org.freedesktop.DBus.Properties\", \"Set\",\n    \"xyz.openbmc_project.Software.Settings\",\n    \"WriteProtected\",\n    std::variant\u003cbool\u003e{writeProtected.value()});",
      "parentUuid": "e0870e43_faf6d639",
      "range": {
        "startLine": 1272,
        "startChar": 24,
        "endLine": 1313,
        "endChar": 25
      },
      "revId": "e05f8a49690a0166571af6473ac49182f9a410f6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}