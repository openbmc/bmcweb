{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "21f9a323_0d0ab3f9",
        "filename": "src/ssl_key_handler.cpp",
        "patchSetId": 3
      },
      "lineNbr": 554,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-10-15T03:40:41Z",
      "side": 1,
      "message": "Earlier there was a flexibility in using MTLS. If client certificate is provided then use it for authentication or continue with usual basic auths. Now I guess the flexibility is gone.If we want MTLS we should use strict tls. \n\nThis flexibility was useful when aggregation is enabled. External clients can use basic auth methods for authentication and internal BMC-BMC can use MTLS. \n\nCan\u0027t we keep this flexibility?",
      "revId": "cbe28af5cc601af704a0daadf6d8cbc84ee199da",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a5a486e_80d60c06",
        "filename": "src/ssl_key_handler.cpp",
        "patchSetId": 3
      },
      "lineNbr": 554,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-10-15T03:46:49Z",
      "side": 1,
      "message": "can you elaborate what you mean in terms of “flexibility” ideally in terms of behavior and commands that would work before and don’t now.",
      "parentUuid": "21f9a323_0d0ab3f9",
      "revId": "cbe28af5cc601af704a0daadf6d8cbc84ee199da",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37842394_632d9046",
        "filename": "src/ssl_key_handler.cpp",
        "patchSetId": 3
      },
      "lineNbr": 554,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-10-15T03:56:07Z",
      "side": 1,
      "message": "Now we are disabling the invocation of tlsVarifyCallback(by setting verify none). That in turn will disable the session creation using MTLS certificate.\nIf we wanted MTLS session we should set tlsStrict. That makes external client mandatorily provide client certificates, otherwise handshake will fail.",
      "parentUuid": "9a5a486e_80d60c06",
      "revId": "cbe28af5cc601af704a0daadf6d8cbc84ee199da",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38c28a9d_068ca728",
        "filename": "src/ssl_key_handler.cpp",
        "patchSetId": 3
      },
      "lineNbr": 554,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-10-18T19:53:03Z",
      "side": 1,
      "message": "\u003e Now we are disabling the invocation of tlsVarifyCallback(by setting verify none). That in turn will disable the session creation using MTLS certificate.\n\nThis is what I can\u0027t explain.  Previously we had no call to set verify mode:\n\nhttps://github.com/openbmc/bmcweb/commit/3281bcf157d2a5a7e12eea199e280fc21db3b3fb#diff-e1afbba62ce215eb68c2ea3b2256d616b26c5c5ea00f77c31f41567400aa5aa6L608\n\n\u003e If we wanted MTLS session we should set tlsStrict. That makes external client mandatorily provide client certificates, otherwise handshake will fail.\n\nRight.",
      "parentUuid": "37842394_632d9046",
      "revId": "cbe28af5cc601af704a0daadf6d8cbc84ee199da",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf969868_19cddeea",
        "filename": "src/ssl_key_handler.cpp",
        "patchSetId": 3
      },
      "lineNbr": 554,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-10-18T19:55:23Z",
      "side": 1,
      "message": "ohhh, maybe that\u0027s the problem, that we\u0027re calling set_verify_mode at all?",
      "parentUuid": "38c28a9d_068ca728",
      "revId": "cbe28af5cc601af704a0daadf6d8cbc84ee199da",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fce93e8_09c34372",
        "filename": "src/ssl_key_handler.cpp",
        "patchSetId": 3
      },
      "lineNbr": 554,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-10-18T19:58:17Z",
      "side": 1,
      "message": "I pushed a new patch that might help, PTAL",
      "parentUuid": "cf969868_19cddeea",
      "revId": "cbe28af5cc601af704a0daadf6d8cbc84ee199da",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84e60b1c_62714806",
        "filename": "src/ssl_key_handler.cpp",
        "patchSetId": 3
      },
      "lineNbr": 554,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-10-21T02:38:11Z",
      "side": 1,
      "message": "This is the neater way to do what you did in previous patch set. But What I was asking is different. Just see comment below where I have problem.",
      "parentUuid": "2fce93e8_09c34372",
      "revId": "cbe28af5cc601af704a0daadf6d8cbc84ee199da",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}