{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "014a1ec1_898cea68",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-10-25T21:27:02Z",
      "side": 1,
      "message": "Are we sure we want to do that?  If it\u0027s just a char* pointer, isn\u0027t a char*\u0026 more expensive than just a char*?  These are templates, so I\u0027d expect them to be a reference in the compiler if it decides that\u0027s more important.\n\nWas there a functional impact you saw in doing this?",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 44
      },
      "revId": "db941a74d1f7c95bd9e17926a8bd2d231bd854f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "289b023c_72bb337f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-10-25T21:37:24Z",
      "side": 1,
      "message": "I am not sure if this is worth having since it doesn\u0027t even build unless we do some other cleaning up.\n\nNan and I were just thinking that we usually always do const reference.\n\nI am fine with not using this.",
      "parentUuid": "014a1ec1_898cea68",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 44
      },
      "revId": "db941a74d1f7c95bd9e17926a8bd2d231bd854f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "faf17d8c_22a932b6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-10-27T16:48:09Z",
      "side": 1,
      "message": "If urlFromPieces takes a string object, we have a copy, right?",
      "parentUuid": "289b023c_72bb337f",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 44
      },
      "revId": "db941a74d1f7c95bd9e17926a8bd2d231bd854f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbad3f57_c2455a1d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-08T04:24:03Z",
      "side": 1,
      "message": "urlFromPieces doesn\u0027t take a string object;  It\u0027s a variadic template.  I\u0027m not certain it\u0027s a copy.",
      "parentUuid": "faf17d8c_22a932b6",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 44
      },
      "revId": "db941a74d1f7c95bd9e17926a8bd2d231bd854f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edbaf0d0_0e763783",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-10-13T21:53:48Z",
      "side": 1,
      "message": "Could you also try a few resources that have used this function?",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 18
      },
      "revId": "db941a74d1f7c95bd9e17926a8bd2d231bd854f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d68cb3b_3a0fda23",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-10-13T22:20:44Z",
      "side": 1,
      "message": "```\nclang-tidy-15 -export-fixes /tmp/tmp67870xbd/tmpnjov3h98.yaml -p\u003d./buildnffvbi7h /data0/jenkins/workspace/ci-repository/openbmc/bmcweb/test/http/utility_test.cpp\n../http/utility.hpp:590:42: error: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,-warnings-as-errors]\n    return details::urlFromPiecesDetail({args...});\n                                         ^\n../http/utility.hpp:596:36: error: do not implicitly decay an array into a pointer; consider using gsl::array_view or an explicit cast instead [cppcoreguidelines-pro-bounds-array-to-pointer-decay,-warnings-as-errors]\n    details::appendUrlPieces(url, {args...});\n                                   ^\n```\n\noh, interesting. Let me try to see if this is an issue.",
      "parentUuid": "edbaf0d0_0e763783",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 18
      },
      "revId": "db941a74d1f7c95bd9e17926a8bd2d231bd854f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}