{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b2d1ae57_0eef475a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-07-05T16:53:25Z",
      "side": 1,
      "message": "Looks like https://github.com/openbmc/bmcweb/commit/543f9a75a0819ca9e3541b2c48fe8b4d5cf6c4f7 broke this?",
      "revId": "27911250694cf5df72a29634390f7475df02eb8f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2390eca1_8a716b20",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-07-05T21:46:11Z",
      "side": 1,
      "message": "I am not sure whether the commit mentioned above broke the code. It is working fine in our environment and redfish validator is passing\n\nbusctl get-property -j xyz.openbmc_project.Inventory.Manager /xyz/openbmc_project/inventory/system/chassis/motherboard/pcieslot8/pcie_card8 xyz.openbmc_project.Inventory.Item.PCIeDevice  \nLanesInUse\n{\n\t\"type\" : \"x\",\n\t\"data\" : -1\n}\nRedfish validator passes.\n\nPCIeInterface.LanesInUse\t-1\tnumber\tYes\tPASS\n\nI will run with the new change and see what happens.",
      "parentUuid": "b2d1ae57_0eef475a",
      "revId": "27911250694cf5df72a29634390f7475df02eb8f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c47115ac_1d220fcc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-07-05T22:36:05Z",
      "side": 1,
      "message": "I changes the code to use size_t instead of int64_t, it is failing in our environment\n\ncurl -k https://${bmc}/redfish/v1/Systems/system/PCIeDevices/dp0_drive0\n{\n  \"@odata.id\": \"/redfish/v1/Systems/system/PCIeDevices/dp0_drive0\",\n  \"@odata.type\": \"#PCIeDevice.v1_9_0.PCIeDevice\",\n  \"Id\": \"dp0_drive0\",\n  \"Name\": \"PCIe Device\",\n  \"Slot\": {\n    \"Lanes\": 0,\n    \"SlotType\": \"U2\"\n  },\n  \"Status\": {\n    \"Health\": \"OK\",\n    \"State\": \"Absent\"\n  },\n  \"error\": {\n    \"@Message.ExtendedInfo\": [\n      {\n        \"@odata.type\": \"#Message.v1_1_1.Message\",\n        \"Message\": \"The request failed due to an internal service error.  The service is still operational.\",\n        \"MessageArgs\": [],\n        \"MessageId\": \"Base.1.13.0.InternalError\",\n        \"MessageSeverity\": \"Critical\",\n        \"Resolution\": \"Resubmit the request.  If the problem persists, consider resetting the service.\"\n      }\n    ],\n    \"code\": \"Base.1.13.0.InternalError\",\n    \"message\": \"The request failed due to an internal service error.  The service is still operational.\"\n  }\n}",
      "parentUuid": "2390eca1_8a716b20",
      "revId": "27911250694cf5df72a29634390f7475df02eb8f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52f0b586_11fdfbe1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-07-05T22:43:43Z",
      "side": 1,
      "message": "need more details on your environment.  Which daemon is backing this, and is it producing a size_t, as required by PDI?",
      "parentUuid": "c47115ac_1d220fcc",
      "revId": "27911250694cf5df72a29634390f7475df02eb8f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18ae7776_58e9b73c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000926
      },
      "writtenOn": "2023-07-06T07:54:03Z",
      "side": 1,
      "message": "BTW, I don\u0027t have PCIeSlot information in my case, but its code uses `size_t` both in bmcweb and PDI\n\nhttps://github.com/openbmc/bmcweb/blob/e002dbc0f8319bca613c38a683a856bde91dfdaf/redfish-core/lib/pcie_slots.hpp#L50C1-L58C23\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/88902e67bcd86b2122b4c1f3b1eaa550b329b08a/yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml#L12",
      "parentUuid": "52f0b586_11fdfbe1",
      "revId": "27911250694cf5df72a29634390f7475df02eb8f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17aedf25_04637d36",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000926
      },
      "writtenOn": "2023-07-06T08:30:21Z",
      "side": 1,
      "message": "I\u0027ve noticed that you have `Lanes\u003d0` in your Redfish output:\n```\n\"Slot\": {\n  \"Lanes\": 0,\n  ...\n}\n```\nIs it correct?\n\nOr do we need to add a check (https://github.com/openbmc/bmcweb/blob/e002dbc0f8319bca613c38a683a856bde91dfdaf/redfish-core/lib/pcie.hpp#L193)\n```\nif (lanes !\u003d 0)\n{\n  res.jsonValue[\"Slot\"][\"Lanes\"] \u003d lanes;\n}\n```\nSimilar like we do for `lanesInUse`/`maxLanes` and so on.",
      "parentUuid": "18ae7776_58e9b73c",
      "revId": "27911250694cf5df72a29634390f7475df02eb8f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "644e5ef9_5b588ccd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-07-06T12:35:10Z",
      "side": 1,
      "message": "If the interface exists, then all properties should have a value. For Lanes, we return the values published by the D-Bus service. We don\u0027t need to add additional check. Refer:\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/62737/26/redfish-core/lib/pcie.hpp#164",
      "parentUuid": "17aedf25_04637d36",
      "revId": "27911250694cf5df72a29634390f7475df02eb8f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcce676d_243e3524",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-07-06T12:45:37Z",
      "side": 1,
      "message": "In our downstream code, the \"LanesInUse\" property is defined as type int64. It appears that a signed integer type is required, especially when representing a value of unknown (-1). Attempting to change the code to use size_t instead of int64_t is resulting in failures. I am still investigating.\nhttps://github.com/ibm-openbmc/phosphor-dbus-interfaces/blob/1020/yaml/xyz/openbmc_project/Inventory/Item/PCIeDevice.interface.yaml#L292C1-L292C1",
      "parentUuid": "644e5ef9_5b588ccd",
      "revId": "27911250694cf5df72a29634390f7475df02eb8f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "305331f8_8696cbd1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-07-06T14:02:04Z",
      "side": 1,
      "message": "We attempted to change the type to int64 in the PDI, but it was rejected. We will evaluate and determine the appropriate course of action for the downstream code. This commit looks good.",
      "parentUuid": "dcce676d_243e3524",
      "revId": "27911250694cf5df72a29634390f7475df02eb8f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c9125a4_0ef9b30d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-07-06T16:47:54Z",
      "side": 1,
      "message": "\u003e We don\u0027t need to add additional check. Refer:\n\nPlease refer to DBUS_USAGE.md.  A check is required here, per the Redfish-\u003eDBus handling.",
      "parentUuid": "305331f8_8696cbd1",
      "revId": "27911250694cf5df72a29634390f7475df02eb8f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34d39564_4fadff49",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-07-06T16:49:16Z",
      "side": 1,
      "message": "\u003e but its code uses size_t both in bmcweb and PDI\n\nThere\u0027s 3 pieces here: bmcweb, PDI, and the daemon implementing PDI.  What is the daemon implementing PDI in your test?",
      "parentUuid": "1c9125a4_0ef9b30d",
      "revId": "27911250694cf5df72a29634390f7475df02eb8f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d9f60bf_bf948e4e",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 1
      },
      "lineNbr": 418,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-07-05T13:27:19Z",
      "side": 1,
      "message": "Should we make similar changes to what we have in PCIeSlot?\nhttps://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/pcie.hpp#L163",
      "revId": "27911250694cf5df72a29634390f7475df02eb8f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41b008f8_10ec5f3e",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 1
      },
      "lineNbr": 418,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-07-05T13:44:29Z",
      "side": 1,
      "message": "std::string deviceType;\nstd::string generationInUse;\nsize_t lanesInUse \u003d 0;",
      "parentUuid": "7d9f60bf_bf948e4e",
      "revId": "27911250694cf5df72a29634390f7475df02eb8f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bcb0cf4_26ab9d55",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 1
      },
      "lineNbr": 418,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-07-05T14:31:05Z",
      "side": 1,
      "message": "DMTF spec says the type is int64.\nhttps://redfish.dmtf.org/schemas/v1/PCIeDevice_v1.xml\n\n```\n\u003cProperty Name\u003d\"LanesInUse\" Type\u003d\"Edm.Int64\"\u003e\n\u003cAnnotation Term\u003d\"OData.Permissions\" EnumMember\u003d\"OData.Permission/Read\"/\u003e\n\u003cAnnotation Term\u003d\"OData.Description\" String\u003d\"The number of PCIe lanes in use by this device.\"/\u003e\n\u003cAnnotation Term\u003d\"OData.LongDescription\" String\u003d\"This property shall contain the number of PCIe lanes in use by this device, which shall be equal to or less than the MaxLanes property value.\"/\u003e\n\u003cAnnotation Term\u003d\"Validation.Maximum\" Int\u003d\"32\"/\u003e\n\u003c/Property\u003e\n```",
      "range": {
        "startLine": 418,
        "startChar": 4,
        "endLine": 418,
        "endChar": 39
      },
      "revId": "27911250694cf5df72a29634390f7475df02eb8f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "064972ba_a4cad1ab",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 1
      },
      "lineNbr": 418,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-07-05T14:36:13Z",
      "side": 1,
      "message": "PDI says the type size\nhttps://grok.openbmc.org/xref/openbmc/phosphor-dbus-interfaces/yaml/xyz/openbmc_project/Inventory/Item/PCIeDevice.interface.yaml?r\u003dca6a4837#292",
      "parentUuid": "7bcb0cf4_26ab9d55",
      "range": {
        "startLine": 418,
        "startChar": 4,
        "endLine": 418,
        "endChar": 39
      },
      "revId": "27911250694cf5df72a29634390f7475df02eb8f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e925b1e5_92540e19",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 1
      },
      "lineNbr": 418,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-07-05T18:01:53Z",
      "side": 1,
      "message": "It looks like - `phosphor-dbus-interfaces` implementation chooses to prefer `size` (which will map to `size_t`) for countable entities, while the non-countable integer values prefers as `uint64` or `int64`.\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/master/requirements.md#prefer-size-and-uint64int64-over-explicit-sizes\n\nThis would mean that bmcweb would prefer to use `size_t` for these cases - e.g. number of lanes etc?",
      "parentUuid": "064972ba_a4cad1ab",
      "range": {
        "startLine": 418,
        "startChar": 4,
        "endLine": 418,
        "endChar": 39
      },
      "revId": "27911250694cf5df72a29634390f7475df02eb8f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4b829ee_436f5cd6",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 1
      },
      "lineNbr": 418,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-07-05T22:42:44Z",
      "side": 1,
      "message": "bmcweb will use whatever types PDI and Redfish dictate, and this patchset isn\u0027t the place to debate if we got the types lined up right, only to make sure that we\u0027re following the types specified.",
      "parentUuid": "e925b1e5_92540e19",
      "range": {
        "startLine": 418,
        "startChar": 4,
        "endLine": 418,
        "endChar": 39
      },
      "revId": "27911250694cf5df72a29634390f7475df02eb8f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ce6c1ae_ccce4abb",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 1
      },
      "lineNbr": 418,
      "author": {
        "id": 1000926
      },
      "writtenOn": "2023-07-06T07:54:03Z",
      "side": 1,
      "message": "Could you please explain why it would be preferred?\n\nAnyway, I think code refactoring is better to do in a separate commit",
      "parentUuid": "41b008f8_10ec5f3e",
      "revId": "27911250694cf5df72a29634390f7475df02eb8f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}