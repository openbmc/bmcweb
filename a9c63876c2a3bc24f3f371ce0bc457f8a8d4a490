{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "225ab2f3_c39985ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-19T19:55:07Z",
      "side": 1,
      "message": "This patch looks fine.  Is there a way we can abstract this out into all setProperty calls?  Basically every time we call SetProperty in redfish, we want to do this same operation (check for InvalidArgument, and translate to Redfish equivalent).\n\nHow difficult would that be to abstract in the future?",
      "revId": "a9c63876c2a3bc24f3f371ce0bc457f8a8d4a490",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "912dd355_4b2c4214",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-01-22T18:35:18Z",
      "side": 1,
      "message": "Nothing further than Ed\u0027s comment and question.",
      "revId": "a9c63876c2a3bc24f3f371ce0bc457f8a8d4a490",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e87b9ca_fdbaa6c8",
        "filename": "redfish-core/lib/ethernet.hpp",
        "patchSetId": 11
      },
      "lineNbr": 907,
      "author": {
        "id": 1000401
      },
      "writtenOn": "2024-01-19T08:06:22Z",
      "side": 1,
      "message": "handleHostnamePatchCallback",
      "range": {
        "startLine": 907,
        "startChar": 9,
        "endLine": 907,
        "endChar": 31
      },
      "revId": "a9c63876c2a3bc24f3f371ce0bc457f8a8d4a490",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a55b4fa_d44f4e3d",
        "filename": "redfish-core/lib/ethernet.hpp",
        "patchSetId": 11
      },
      "lineNbr": 925,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-19T19:55:07Z",
      "side": 1,
      "message": "This is a non trivial lambda, which is noted in the developing guide as disallowed.  Please make this a normal function, and pass the parameters with std::bind_front",
      "range": {
        "startLine": 907,
        "startChar": 0,
        "endLine": 925,
        "endChar": 6
      },
      "revId": "a9c63876c2a3bc24f3f371ce0bc457f8a8d4a490",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}