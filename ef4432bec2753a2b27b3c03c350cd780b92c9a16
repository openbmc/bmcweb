{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f93d644d_105b3f0b",
        "filename": "meson.build",
        "patchSetId": 21
      },
      "lineNbr": 360,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-02-01T19:42:19Z",
      "side": 1,
      "message": "you could put this in the first commit? Oh well",
      "range": {
        "startLine": 360,
        "startChar": 42,
        "endLine": 360,
        "endChar": 59
      },
      "revId": "ef4432bec2753a2b27b3c03c350cd780b92c9a16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27b8cb0a_87f2c5ee",
        "filename": "meson.build",
        "patchSetId": 21
      },
      "lineNbr": 360,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-01T19:47:06Z",
      "side": 1,
      "message": "it\u0027s intentionally put in this commit because this is the first unit tests that REQUIRES 1.14.0",
      "parentUuid": "f93d644d_105b3f0b",
      "range": {
        "startLine": 360,
        "startChar": 42,
        "endLine": 360,
        "endChar": 59
      },
      "revId": "ef4432bec2753a2b27b3c03c350cd780b92c9a16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb822920_b7c75266",
        "filename": "test/http/http_file_body_test.cpp",
        "patchSetId": 21
      },
      "lineNbr": 62,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-02-01T19:42:19Z",
      "side": 1,
      "message": "```#include \u003cstring\u003e```",
      "revId": "ef4432bec2753a2b27b3c03c350cd780b92c9a16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b16f7e55_d33eafce",
        "filename": "test/http/http_file_body_test.cpp",
        "patchSetId": 21
      },
      "lineNbr": 62,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-01T19:47:06Z",
      "side": 1,
      "message": "üëç",
      "parentUuid": "cb822920_b7c75266",
      "revId": "ef4432bec2753a2b27b3c03c350cd780b92c9a16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a11bd4a5_498f3a42",
        "filename": "test/http/http_file_body_test.cpp",
        "patchSetId": 21
      },
      "lineNbr": 63,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-02-01T19:42:19Z",
      "side": 1,
      "message": "```#include \u003cboost/system/error_code.hpp\u003e```",
      "revId": "ef4432bec2753a2b27b3c03c350cd780b92c9a16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b69ea9c0_ad24dab4",
        "filename": "test/http/http_file_body_test.cpp",
        "patchSetId": 21
      },
      "lineNbr": 63,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-01T19:47:06Z",
      "side": 1,
      "message": "üëç",
      "parentUuid": "a11bd4a5_498f3a42",
      "revId": "ef4432bec2753a2b27b3c03c350cd780b92c9a16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd2e5053_2a1421d4",
        "filename": "test/http/http_file_body_test.cpp",
        "patchSetId": 21
      },
      "lineNbr": 68,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-02-01T19:42:19Z",
      "side": 1,
      "message": "```#include \u003carray\u003e```",
      "revId": "ef4432bec2753a2b27b3c03c350cd780b92c9a16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "202650cb_44add044",
        "filename": "test/http/http_file_body_test.cpp",
        "patchSetId": 21
      },
      "lineNbr": 68,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-01T19:47:06Z",
      "side": 1,
      "message": "üëç",
      "parentUuid": "bd2e5053_2a1421d4",
      "revId": "ef4432bec2753a2b27b3c03c350cd780b92c9a16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d618343_3bdfd2e3",
        "filename": "test/http/http_file_body_test.cpp",
        "patchSetId": 21
      },
      "lineNbr": 121,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-02-01T19:42:19Z",
      "side": 1,
      "message": "Why do we have to use pipe? \nWhy can\u0027t we use std::ofstream ?",
      "revId": "ef4432bec2753a2b27b3c03c350cd780b92c9a16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4943ea3e_12644869",
        "filename": "test/http/http_file_body_test.cpp",
        "patchSetId": 21
      },
      "lineNbr": 121,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-01T19:47:06Z",
      "side": 1,
      "message": "Because the intent of this test is to test that pipes work.\n\nofstream would test that files work, which is fine (we already have tests that cover those cases) files support getting the size, so it wouldn\u0027t be a representative test of something that is being built on the fly.",
      "parentUuid": "3d618343_3bdfd2e3",
      "revId": "ef4432bec2753a2b27b3c03c350cd780b92c9a16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}