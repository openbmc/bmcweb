{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d90f0024_5bd3451c",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 16
      },
      "lineNbr": 494,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-06T22:31:37Z",
      "side": 1,
      "message": "Presumably these whitespace changes aren\u0027t something you intended?",
      "range": {
        "startLine": 493,
        "startChar": 2,
        "endLine": 494,
        "endChar": 21
      },
      "revId": "c70d474ab428f9ec522b3a42d86785222ccd0118",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d6c6f4e_e5abc801",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 16
      },
      "lineNbr": 494,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-05-09T03:01:29Z",
      "side": 1,
      "message": "$ clang-format-13 -i $(git ls-files | grep \"\\.[hc]\\(pp\\)\\?$\")^C\nautomatically makes this change.\n\nI suppose you are on clang-format-12?",
      "parentUuid": "d90f0024_5bd3451c",
      "range": {
        "startLine": 493,
        "startChar": 2,
        "endLine": 494,
        "endChar": 21
      },
      "revId": "c70d474ab428f9ec522b3a42d86785222ccd0118",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61ed3162_3a8c5a71",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 16
      },
      "lineNbr": 638,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-06T22:31:37Z",
      "side": 1,
      "message": "same here.",
      "revId": "c70d474ab428f9ec522b3a42d86785222ccd0118",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "04440946_0f9e05f6",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 16
      },
      "lineNbr": 638,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-05-09T03:01:29Z",
      "side": 1,
      "message": "done",
      "parentUuid": "61ed3162_3a8c5a71",
      "revId": "c70d474ab428f9ec522b3a42d86785222ccd0118",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e50f0e1a_33ce7bef",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 16
      },
      "lineNbr": 771,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-05-06T20:25:26Z",
      "side": 1,
      "message": "nit, for the sake of consistency does it matter that the argument to this lambda uses a type alias from include/dbus_utility.hpp but then in the body the type is written out instead of using the equivalent aliases from the file?",
      "range": {
        "startLine": 770,
        "startChar": 16,
        "endLine": 771,
        "endChar": 70
      },
      "revId": "c70d474ab428f9ec522b3a42d86785222ccd0118",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d67197f_09d39de1",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 16
      },
      "lineNbr": 771,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-05-06T22:14:43Z",
      "side": 1,
      "message": "I hear you, and I changed it to dbus::utility::MapperGetObject type.\n\nBut the old form was very common, it was used several times in this very file.\n\nsee: \nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/53325/16..18/redfish-core/lib/chassis.hpp#240\n\nI am fine with the change. I will keep it dbus::utility::MapperGetObject.",
      "parentUuid": "e50f0e1a_33ce7bef",
      "range": {
        "startLine": 770,
        "startChar": 16,
        "endLine": 771,
        "endChar": 70
      },
      "revId": "c70d474ab428f9ec522b3a42d86785222ccd0118",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7c20b92_41155d69",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 16
      },
      "lineNbr": 771,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-06T22:31:37Z",
      "side": 1,
      "message": "Yeah, we\u0027re not consistent on all counts;  At this level the consistency matters less.  It matters a lot more in the async_method call, because the difference between a const, const reference, or vector vs map ends up generating a lot more template code.",
      "parentUuid": "8d67197f_09d39de1",
      "range": {
        "startLine": 770,
        "startChar": 16,
        "endLine": 771,
        "endChar": 70
      },
      "revId": "c70d474ab428f9ec522b3a42d86785222ccd0118",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f6c2c65_443249c2",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 16
      },
      "lineNbr": 814,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-06T22:31:37Z",
      "side": 1,
      "message": "Please sort this list using the AlphaNum class (examples elsewhere) just to be consistent.  Ideally, if we can find a way to use getCollectionMembers, it will handle that for you.",
      "revId": "c70d474ab428f9ec522b3a42d86785222ccd0118",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7533998e_b2d33af3",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 16
      },
      "lineNbr": 814,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-05-09T03:01:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f6c2c65_443249c2",
      "revId": "c70d474ab428f9ec522b3a42d86785222ccd0118",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3264cc85_1b54fed3",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 16
      },
      "lineNbr": 814,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-05-09T03:01:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f6c2c65_443249c2",
      "revId": "c70d474ab428f9ec522b3a42d86785222ccd0118",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b31766b_9dee6677",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 16
      },
      "lineNbr": 816,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-06T22:31:37Z",
      "side": 1,
      "message": "odata.count is not described as a string, it\u0027s a number.  Service validator should\u0027ve caught this.",
      "range": {
        "startLine": 816,
        "startChar": 33,
        "endLine": 816,
        "endChar": 42
      },
      "revId": "c70d474ab428f9ec522b3a42d86785222ccd0118",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ae7d488_c4aa669a",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 16
      },
      "lineNbr": 816,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-05-09T03:01:29Z",
      "side": 1,
      "message": "I ran the redfish validator, and I did not see any warning related to this. \n\nI took a look at the validator, and did not feel close to finding this. So I created an issue to track this upstream.\nhttps://github.com/DMTF/Redfish-Service-Validator/issues/491",
      "parentUuid": "9b31766b_9dee6677",
      "range": {
        "startLine": 816,
        "startChar": 33,
        "endLine": 816,
        "endChar": 42
      },
      "revId": "c70d474ab428f9ec522b3a42d86785222ccd0118",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "352e2058_329fd79d",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 16
      },
      "lineNbr": 823,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-06T22:31:37Z",
      "side": 1,
      "message": "This is basically the same code as getCollectionMembers (minus a couple bugs).  It\u0027s a slightly weird case because this is autoexpand, so the existing function doesn\u0027t work perfectly, but is it something we could use?",
      "range": {
        "startLine": 819,
        "startChar": 0,
        "endLine": 823,
        "endChar": 57
      },
      "revId": "c70d474ab428f9ec522b3a42d86785222ccd0118",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a2c2f23_14636e66",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 16
      },
      "lineNbr": 823,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-05-09T03:01:29Z",
      "side": 1,
      "message": "I see the similarities, in the code. \nThe main difference is getCollectionMembers hard codes the  ObjectMapper interface, and calls GetSubTreePaths.\n\nAnd my design uses the DBus.Properties interface and calls Get (via sdbusplus getProperty). \n\nIt is possible to modify getCollectionMembers with default argument, or extract and share the iterative section of \"getCollectionMembers\" \n\nI have preference for getting this isolated change in, and minimizing the footprint of this change. Thoughts?",
      "parentUuid": "352e2058_329fd79d",
      "range": {
        "startLine": 819,
        "startChar": 0,
        "endLine": 823,
        "endChar": 57
      },
      "revId": "c70d474ab428f9ec522b3a42d86785222ccd0118",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3702e7b_0a39a4bb",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 16
      },
      "lineNbr": 823,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-05-09T21:00:39Z",
      "side": 1,
      "message": "In conversation with Ed, he would like to see an effort made to using getCollectionMembers",
      "parentUuid": "3a2c2f23_14636e66",
      "range": {
        "startLine": 819,
        "startChar": 0,
        "endLine": 823,
        "endChar": 57
      },
      "revId": "c70d474ab428f9ec522b3a42d86785222ccd0118",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b53648b1_3c2967e5",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 16
      },
      "lineNbr": 823,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-05-09T23:21:42Z",
      "side": 1,
      "message": "Split getCollectionMembers, and use the iterative section. This is the clearest way to leverage getCollectionMemebers logic, in chassis.\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/53592",
      "parentUuid": "a3702e7b_0a39a4bb",
      "range": {
        "startLine": 819,
        "startChar": 0,
        "endLine": 823,
        "endChar": 57
      },
      "revId": "c70d474ab428f9ec522b3a42d86785222ccd0118",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}