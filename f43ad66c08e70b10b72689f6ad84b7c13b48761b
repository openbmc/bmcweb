{
  "comments": [
    {
      "key": {
        "uuid": "e772052c_e6807441",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2020-09-30T08:59:41Z",
      "side": 1,
      "message": "Currently in this code state check is being done randomly by any function.Can we enhance the connectionstateCheck function and let it call other sub functions, and theses sub function will do the required functionality and set the connection state and call the connectionStateCheck function again.\neg:\n\n  void connStateCheck()\n    {\n        switch (state)\n        {\n            case ConnState::connectInProgress:\n\n            case ConnState::sslHandshakeInProgress:\n            case ConnState::sendInProgress:\n            case ConnState::suspended:\n            {\n                  call function which starts the timer and once the timer expires then set the connection state\n                 break;\n            }\n            case ConnState::terminated:\n                // do nothing\n                break;\n            case ConnState::initialized:\n                 doResolve(); Sets the connection state to resolved \n                 break;\n\n            case ConnState::Resolved:\n                 retryCount \u003d 0;\n                 doConnect() :Set the connection state to eithe connected or connect failed and call this function again..\n                 break;\n\n            case ConnState::closed:\n                break\n            case ConnState::connectFailed:\n            {\n                  retryCount++;\n                  checkRetryPolicy();\n                  doConnect();\n            }\n            case ConnState::sendFailed:\n            {\n                   rettryCount++;\n                   checkRetryPolicy();\n                   doSend();\n            }\n            case ConnState::recvFailed:\n            {\n                Start timer before retrying \n                retryCount ++;\n                checkRetryPolicy()  \n                doRecv()\n            }\n            case ConnState::connected:\n            case ConnState::idle:\n            {\n                if (sslConn)\n                {\t\n\t\t\tperformHandshake();\n\t\t\t\n\t\t}\n                else\n                {\n\t\t\tretryCount \u003d 0;\n                        sendMessage();\n                }\n                break;\n            }\n            case HandShakeCompleted:\n            {\n                doSend();\n            }\n            case ConnSate:close\n            {\n                   doClose();\n            }\n            default:\n                break;\n        }",
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60ad06e4_4db20ca4",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 165,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-07T23:56:51Z",
      "side": 1,
      "message": "?  Pretty sure this is wrong?  Also, you might want to put it on line 159 so the user can override it if they want.",
      "range": {
        "startLine": 165,
        "startChar": 58,
        "endLine": 165,
        "endChar": 68
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b63e5d6_80e0e946",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 165,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2020-09-21T08:09:47Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "60ad06e4_4db20ca4",
      "range": {
        "startLine": 165,
        "startChar": 58,
        "endLine": 165,
        "endChar": 68
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9dd22252_73636fa8",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 165,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2020-09-23T11:59:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b63e5d6_80e0e946",
      "range": {
        "startLine": 165,
        "startChar": 58,
        "endLine": 165,
        "endChar": 68
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8659e05b_1181a94c",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 209,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2020-09-25T13:54:45Z",
      "side": 1,
      "message": "This partial_message check is removed with latest. But actually this error comes, even client receives the events.  So no need to re attempt send. We need to pop the request queue and cleanup the connection and processed with next queue checking.\n\nAlso did you checked the http connection by making \"BMCWEB_INSECURE_ENABLE_HTTP_PUSH_STYLE_EVENTING\" to ON? If not please do.",
      "range": {
        "startLine": 209,
        "startChar": 22,
        "endLine": 209,
        "endChar": 70
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e99425de_62a4b6a7",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 209,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2020-09-29T11:22:23Z",
      "side": 1,
      "message": "Yes I used that flag for building my test patch.\nI agree with you. The events are received and then the subscriber sends this partial message. So i will re-add the code to ignore the partial_message error.",
      "parentUuid": "8659e05b_1181a94c",
      "range": {
        "startLine": 209,
        "startChar": 22,
        "endLine": 209,
        "endChar": 70
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f6b2a28_0c880887",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 220,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-07T23:56:51Z",
      "side": 1,
      "message": "TODO needs implemented before merge.",
      "range": {
        "startLine": 220,
        "startChar": 15,
        "endLine": 220,
        "endChar": 19
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "094ff7e7_90e614a6",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 220,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2020-09-21T08:09:47Z",
      "side": 1,
      "message": "The checkQueue method (invoked from doCloseAndCheckQueue) is checking for the retry count and that should take care of resending the request in case of failures. Why this is a TODO here?",
      "parentUuid": "2f6b2a28_0c880887",
      "range": {
        "startLine": 220,
        "startChar": 15,
        "endLine": 220,
        "endChar": 19
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23698d36_51b946ed",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 220,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2020-09-22T06:44:36Z",
      "side": 1,
      "message": "line number 213 will ultimately invoke the retry policies",
      "parentUuid": "094ff7e7_90e614a6",
      "range": {
        "startLine": 220,
        "startChar": 15,
        "endLine": 220,
        "endChar": 19
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d14df66e_1fb71e0d",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 220,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-22T15:19:20Z",
      "side": 1,
      "message": "The return code of the server cannot be ignored.",
      "parentUuid": "23698d36_51b946ed",
      "range": {
        "startLine": 220,
        "startChar": 15,
        "endLine": 220,
        "endChar": 19
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82853aae_448186aa",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 232,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-07T23:56:51Z",
      "side": 1,
      "message": "Is this needed?  Shouldnt\u0027 you just reset the parser?\n\nself-\u003eparser.reset()",
      "range": {
        "startLine": 232,
        "startChar": 12,
        "endLine": 232,
        "endChar": 36
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "170e54ea_14812e26",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 232,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2020-09-21T08:09:47Z",
      "side": 1,
      "message": "i did not find a reset method on the boost::beast::http::response_parser",
      "parentUuid": "82853aae_448186aa",
      "range": {
        "startLine": 232,
        "startChar": 12,
        "endLine": 232,
        "endChar": 36
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d1c435e_6c7e360d",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 232,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-22T04:52:59Z",
      "side": 1,
      "message": "Ignore my comment about reset, that was on an older version of BEAST, but the point still remains, is this needed at all?  There should be no need to reset if you\u0027re destroying the connection.",
      "parentUuid": "170e54ea_14812e26",
      "range": {
        "startLine": 232,
        "startChar": 12,
        "endLine": 232,
        "endChar": 36
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27a4727b_53becb50",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 232,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2020-09-22T06:44:36Z",
      "side": 1,
      "message": "We will not destroy the connection",
      "parentUuid": "7d1c435e_6c7e360d",
      "range": {
        "startLine": 232,
        "startChar": 12,
        "endLine": 232,
        "endChar": 36
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "854c37b1_44be8111",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 232,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-22T15:19:20Z",
      "side": 1,
      "message": "Can you clarify?  I don\u0027t see any ownership of httpClient in the parser.",
      "parentUuid": "27a4727b_53becb50",
      "range": {
        "startLine": 232,
        "startChar": 12,
        "endLine": 232,
        "endChar": 36
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1f5c734_27e8cb28",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 232,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2020-09-23T11:59:55Z",
      "side": 1,
      "message": "Removed the parser in the latest patch set. Please let me know if this approach is good.",
      "parentUuid": "854c37b1_44be8111",
      "range": {
        "startLine": 232,
        "startChar": 12,
        "endLine": 232,
        "endChar": 36
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "507d73b0_2af93a30",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 234,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-07T23:56:51Z",
      "side": 1,
      "message": "Still needed.",
      "range": {
        "startLine": 234,
        "startChar": 0,
        "endLine": 234,
        "endChar": 58
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39874876_87efe6b1",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 234,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2020-09-21T08:09:47Z",
      "side": 1,
      "message": "Ed, Please correct me if i am wrong. I think, after we send an event and receive a response, we can close the connection (as per HTTP1.1)\nThe connection can be re-opened/re-established when there is a next event to be sent. There is no need to keep this connection alive.",
      "parentUuid": "507d73b0_2af93a30",
      "range": {
        "startLine": 234,
        "startChar": 0,
        "endLine": 234,
        "endChar": 58
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "636a85bc_385f6f5f",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 234,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-21T16:04:48Z",
      "side": 1,
      "message": "For non-SSL, you\u0027re right, and you\u0027re right, per HTTP1.1, we could do connection per event, but that would cause the server on the other end to get DOS attacked if too many events come at once.",
      "parentUuid": "39874876_87efe6b1",
      "range": {
        "startLine": 234,
        "startChar": 0,
        "endLine": 234,
        "endChar": 58
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "096911ba_9a4be648",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 234,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2020-09-22T03:27:44Z",
      "side": 1,
      "message": "We don\u0027t need to implement the keep alive for 2 reasons\n\n1) I was unable to find in the redfish spec that connection need to be keep alive for the push style eventing. however in the case of server sent events, connection need to be keep alive.\nThis code path is for the push style eventing.\n\n2) in redfish there is a concept of events in the event schema itself which is a aggregation of events at certain moment of time..\ninstead of sending multiple events, we can append the event in the events array and then send the event only once if there are too many events come at once.\n\nWe can avoid the DOS at the server end if we start the timer and aggregating the events and send the event once timer expires.",
      "parentUuid": "636a85bc_385f6f5f",
      "range": {
        "startLine": 234,
        "startChar": 0,
        "endLine": 234,
        "endChar": 58
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3bbddca_db25053e",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 234,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-22T04:52:59Z",
      "side": 1,
      "message": "1. You\u0027re right, it\u0027s not in the specification.  If you want to find a way to avoid DOS attacks and overloading the BMC/other server through another mechanism, feel free, but I don\u0027t see it implemented in this patchset.\n2. That would certainly help, but I don\u0027t think solves the problem.  SSL negotiation is very...very expensive on the BMC.  We should strive to do it as few times as possible.\n\n\"We can avoid the DOS at the server end if we start the timer and aggregating the events and send the event once timer expires.\"\nI think that would be a good thing to do as well, but I don\u0027t think solves the problem.  An aggregation timer means that the BMC has to store the events in memory, which causes the same problem, just that the BMC will run out of memory, not out of CPU cycles.\n\nAlso, it delays the receipt of the event.\n\n\nI\u0027m surprised at the pushback here.  Keepalive is a relatively easy feature to implement here, and we already have examples of how to do it.  Am I missing something?",
      "parentUuid": "096911ba_9a4be648",
      "range": {
        "startLine": 234,
        "startChar": 0,
        "endLine": 234,
        "endChar": 58
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e89cf9c5_4f009bbd",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 234,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2020-09-22T06:44:36Z",
      "side": 1,
      "message": "There is no pushback :)\nAgree with the reasoning where the SSL connection establishment can possibly take up lot of CPU cycles. We can implement the keep_alive",
      "parentUuid": "a3bbddca_db25053e",
      "range": {
        "startLine": 234,
        "startChar": 0,
        "endLine": 234,
        "endChar": 58
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd8d6ee4_2bd3e699",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 234,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2020-09-22T10:54:18Z",
      "side": 1,
      "message": "\u003e I think that would be a good thing to do as well, but I don\u0027t think solves the problem.  An aggregation timer means that the BMC has to store the events in memory, which causes the same problem, just that the BMC will run out of memory, not out of CPU cycles.\n\nI thought,keeping events in memory is anyways requirement as per the redfish spec for SSE and now it fits here also.We can implement later.\n\nEd, I was mentioning because of in spec was not clear and we have other way to solve the problem which you listed above..\n\nI agree with you that making tcp connection and doing ssl handshake is expensive operation..",
      "parentUuid": "e89cf9c5_4f009bbd",
      "range": {
        "startLine": 234,
        "startChar": 0,
        "endLine": 234,
        "endChar": 58
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6af4c25_378d32e8",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 234,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-22T15:19:20Z",
      "side": 1,
      "message": "In my mind, keepalive should just be a matter of setting the correct flag on the message, and writing a connection handler that can reset at the end.  It would be much easier than queuing, although I think we should do both.",
      "parentUuid": "dd8d6ee4_2bd3e699",
      "range": {
        "startLine": 234,
        "startChar": 0,
        "endLine": 234,
        "endChar": 58
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "812d6012_161465c1",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 234,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2020-09-23T11:59:55Z",
      "side": 1,
      "message": "Done. The ssl handshake \u0026 connection establishment is not happening now for each event",
      "parentUuid": "b6af4c25_378d32e8",
      "range": {
        "startLine": 234,
        "startChar": 0,
        "endLine": 234,
        "endChar": 58
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "685dcd0c_622407da",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 239,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-07T23:56:51Z",
      "side": 1,
      "message": "For SSL and eventservice, this is unacceptable.  Not only can it DOS the BMC, and can DOS the server on the other end.",
      "range": {
        "startLine": 238,
        "startChar": 23,
        "endLine": 239,
        "endChar": 29
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b467eb27_a05a85f0",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 239,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2020-09-21T08:09:47Z",
      "side": 1,
      "message": "Ed, do we need to worry about the DOS at the server side here ?",
      "parentUuid": "685dcd0c_622407da",
      "range": {
        "startLine": 238,
        "startChar": 23,
        "endLine": 239,
        "endChar": 29
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e765135_0ac5bd59",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 239,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-21T16:04:48Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "b467eb27_a05a85f0",
      "range": {
        "startLine": 238,
        "startChar": 23,
        "endLine": 239,
        "endChar": 29
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e53cd0ea_34a19ab9",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 239,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2020-09-22T03:27:44Z",
      "side": 1,
      "message": "Ed, How it is DOS for BMC?",
      "parentUuid": "5e765135_0ac5bd59",
      "range": {
        "startLine": 238,
        "startChar": 23,
        "endLine": 239,
        "endChar": 29
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db87bc53_66b4366b",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 239,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-22T04:52:59Z",
      "side": 1,
      "message": "The easiest way I can explain would be to tell you to try it by subscribing to all sensors, and check the CPU usage on the BMC.   It will be spinning up 100 SSL connections per second, each of them expensive to build.",
      "parentUuid": "e53cd0ea_34a19ab9",
      "range": {
        "startLine": 238,
        "startChar": 23,
        "endLine": 239,
        "endChar": 29
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "878cfb2c_12a0fd2b",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 239,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2020-09-22T06:44:36Z",
      "side": 1,
      "message": "Makes sense.",
      "parentUuid": "db87bc53_66b4366b",
      "range": {
        "startLine": 238,
        "startChar": 23,
        "endLine": 239,
        "endChar": 29
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f953e863_9c8753b0",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 344,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2020-09-30T08:59:41Z",
      "side": 1,
      "message": "What is the difference here? In both the cases we are not doing anything.\n\n1) Suspend case: Once the connection reached into this state, from Send message() the control will return.\n   Hence no use, we can delete the subscription or start a timer so that we can retry later.\n\n2) Terminated case: Once the connection reached into this state,caller will keep pushing the data in the      queue and and checkqueue will keep poping up the data.We need to delete the subscription.",
      "range": {
        "startLine": 333,
        "startChar": 1,
        "endLine": 344,
        "endChar": 13
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad9fb9a8_7d76d7fb",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 344,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2020-09-30T14:37:16Z",
      "side": 1,
      "message": "1) When the subscriber sets SuspendRetries on his subscription, that means that he does not want to receive the events - but the connection needs to be retained. So we will return from the sendData() method without doing anything.\n\n2) Yes When the retry policy is \"TerminateAfterRetries\" ; we need to delete the subscription. This is already marked as TODO here! But when i analyzed the changes needed to do this, i saw that there is no infrastructure here to get the subscription id associated with the sslConn/conn. This needs more changes - which can go as a separate commit.",
      "parentUuid": "f953e863_9c8753b0",
      "range": {
        "startLine": 333,
        "startChar": 1,
        "endLine": 344,
        "endChar": 13
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b01d6571_9af1388e",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 382,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2020-09-30T08:59:41Z",
      "side": 1,
      "message": "This also should go in connectionState check function..",
      "range": {
        "startLine": 352,
        "startChar": 1,
        "endLine": 382,
        "endChar": 9
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "baffe6b6_835cbc83",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 388,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2020-09-30T08:59:41Z",
      "side": 1,
      "message": "Don\u0027t we need to do this at connectionStateCheck function?\nCase:case ConnState::idle:\n     retryCount \u003d 0;",
      "range": {
        "startLine": 384,
        "startChar": 0,
        "endLine": 388,
        "endChar": 9
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "305c4dfc_31ffb19c",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 440,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-07T23:56:51Z",
      "side": 1,
      "message": "Adding todos doesn\u0027t get it done.",
      "range": {
        "startLine": 440,
        "startChar": 11,
        "endLine": 440,
        "endChar": 15
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07dec840_672ad920",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 440,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2020-09-23T11:59:55Z",
      "side": 1,
      "message": "I checked implementing the async_resolve. It crashed with below error.\n\n terminate called after throwing an instance of \u0027boost::wrapexcept\u003cboost::system::system_error\u003e\u0027\n   what():  thread: Operation not supported\n\nThe issue looked similar to https://github.com/boostorg/beast/issues/1599\n\nThe resolution for this issue was to upgrade the boost version. So i think we can keep this TODO for now in this commit.",
      "parentUuid": "305c4dfc_31ffb19c",
      "range": {
        "startLine": 440,
        "startChar": 11,
        "endLine": 440,
        "endChar": 15
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81826471_afba34e6",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 440,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-24T01:38:42Z",
      "side": 1,
      "message": "You shouldn\u0027t be using the version that throws.\n\nThat bug is unrelated.  Please continue debugging.  Operation not supported usually means that you setthe resolver Protocol incorrectly\n\nNo, we cannot keep this as a TODO.  It needs done before merge.",
      "parentUuid": "07dec840_672ad920",
      "range": {
        "startLine": 440,
        "startChar": 11,
        "endLine": 440,
        "endChar": 15
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0f6bffb_d1b16740",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 472,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2020-09-21T08:09:47Z",
      "side": 1,
      "message": "These headers are populated from the subscription data. What kind of validation are expected here ?",
      "range": {
        "startLine": 472,
        "startChar": 15,
        "endLine": 472,
        "endChar": 62
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c80cd8c_310a4df1",
        "filename": "http/http_client.hpp",
        "patchSetId": 10
      },
      "lineNbr": 472,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2020-09-23T11:59:55Z",
      "side": 1,
      "message": "I removed this TODO , since i think its not needed",
      "parentUuid": "f0f6bffb_d1b16740",
      "range": {
        "startLine": 472,
        "startChar": 15,
        "endLine": 472,
        "endChar": 62
      },
      "revId": "f43ad66c08e70b10b72689f6ad84b7c13b48761b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}