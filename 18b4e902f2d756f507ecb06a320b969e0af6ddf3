{
  "comments": [
    {
      "key": {
        "uuid": "c90ea9fa_bab78d5a",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 41
      },
      "lineNbr": 26,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-01T15:22:50Z",
      "side": 1,
      "message": "vector as well?",
      "range": {
        "startLine": 26,
        "startChar": 10,
        "endLine": 26,
        "endChar": 16
      },
      "revId": "18b4e902f2d756f507ecb06a320b969e0af6ddf3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dda0c844_0ceba02f",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 41
      },
      "lineNbr": 26,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-03T15:26:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c90ea9fa_bab78d5a",
      "range": {
        "startLine": 26,
        "startChar": 10,
        "endLine": 26,
        "endChar": 16
      },
      "revId": "18b4e902f2d756f507ecb06a320b969e0af6ddf3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "241825e5_b9085a8d",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 41
      },
      "lineNbr": 464,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-01T15:22:50Z",
      "side": 1,
      "message": "These should both set internal errors.",
      "range": {
        "startLine": 454,
        "startChar": 0,
        "endLine": 464,
        "endChar": 9
      },
      "revId": "18b4e902f2d756f507ecb06a320b969e0af6ddf3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2147ae6e_dde2e6ea",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 41
      },
      "lineNbr": 464,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-03T15:26:47Z",
      "side": 1,
      "message": "Internal error will be ignored in actual implementation.",
      "parentUuid": "241825e5_b9085a8d",
      "range": {
        "startLine": 454,
        "startChar": 0,
        "endLine": 464,
        "endChar": 9
      },
      "revId": "18b4e902f2d756f507ecb06a320b969e0af6ddf3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c3f7b78_f39ca247",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 41
      },
      "lineNbr": 464,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-03T16:17:41Z",
      "side": 1,
      "message": "Internal error needs to be propagated to the user, as the bmcweb coding style requires.",
      "parentUuid": "2147ae6e_dde2e6ea",
      "range": {
        "startLine": 454,
        "startChar": 0,
        "endLine": 464,
        "endChar": 9
      },
      "revId": "18b4e902f2d756f507ecb06a320b969e0af6ddf3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ad5e8e4_2a429767",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 41
      },
      "lineNbr": 464,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-04T12:56:39Z",
      "side": 1,
      "message": "Maybe I am not aware of proper bmcweb coding style. Can you point it in bmcweb documents?\nAnyway, chassis handles this case similar\nhttps://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/chassis.hpp (line 206)\nError is not propagated to user.",
      "parentUuid": "4c3f7b78_f39ca247",
      "range": {
        "startLine": 454,
        "startChar": 0,
        "endLine": 464,
        "endChar": 9
      },
      "revId": "18b4e902f2d756f507ecb06a320b969e0af6ddf3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b187dbe3_79add872",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 41
      },
      "lineNbr": 464,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-04T15:08:59Z",
      "side": 1,
      "message": "Check out heading #4 in DEVELOPING.md.  I\u0027m assuming you\u0027ve read that doc?\n\nYep that line is that\u0027s incorrect.  Would you mind putting up a patch to fix it?  It should be as easy as adding a messages::internalError(res); on line 207.  If you figured out a good way to find these, you might consider fixing it for more of them.\n\nThere are a couple exceptions, like when we have an interface that\u0027s optional, and it returns not_found, obviously we won\u0027t propagate that to the user, but this isn\u0027t one of the exceptions.",
      "parentUuid": "2ad5e8e4_2a429767",
      "range": {
        "startLine": 454,
        "startChar": 0,
        "endLine": 464,
        "endChar": 9
      },
      "revId": "18b4e902f2d756f507ecb06a320b969e0af6ddf3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92d2ba7c_2f1bdcd3",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 41
      },
      "lineNbr": 464,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-07T09:42:49Z",
      "side": 1,
      "message": "Yes, I read it. It focus on mapping error to valid HTTP response. So it allows to omit internal error and continue building response with success (especially that there are examples of it in code). I understand what you mean, I will follow suggested way.\nYes, I can add a patch for chassis.",
      "parentUuid": "b187dbe3_79add872",
      "range": {
        "startLine": 454,
        "startChar": 0,
        "endLine": 464,
        "endChar": 9
      },
      "revId": "18b4e902f2d756f507ecb06a320b969e0af6ddf3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "519e4b6a_342a5091",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 41
      },
      "lineNbr": 464,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-08T06:28:42Z",
      "side": 1,
      "message": "The first line of what I mentioned is \"Error handling should be constructed in such a way that all possible errors return valid HTTP responses.\".\n\n\"So it allows to omit internal error and continue building response with success (especially that there are examples of it in code).\"\nIt doesn\u0027t allow for blanket ignoring of error returns.  There are some examples of ignoring errors where we expect there to be errors, for things like optional interfaces, or objects that doesn\u0027t exist, and their non-existence is expected.  I don\u0027t think this is one of those cases.  The example you found is incorrect, and should be fixed.  If you find anymore, let me know, and we can get them fixed as well.\n\n\"I understand what you mean, I will follow suggested way.\nYes, I can add a patch for chassis.\"\n\nMuch appreciated.",
      "parentUuid": "92d2ba7c_2f1bdcd3",
      "range": {
        "startLine": 454,
        "startChar": 0,
        "endLine": 464,
        "endChar": 9
      },
      "revId": "18b4e902f2d756f507ecb06a320b969e0af6ddf3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}