{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c6e43857_eb541fd4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 17
      },
      "lineNbr": 13,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-04-24T16:51:26Z",
      "side": 1,
      "message": "Can you add how it is determined the Ports belong to the Fabric Adapters? It looks like we look at the path.. I don\u0027t think that matches with how we have been doing inventory to inventory links (instead using an associations in other designs (e.g. chassis to powersupply))",
      "revId": "3124a7e005e8787fedaa6fe6d09701ed9b2298b4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "963459fa_a58706a1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 17
      },
      "lineNbr": 13,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-04-24T21:10:24Z",
      "side": 1,
      "message": "The logic is doing\n\n1) check the valid FabricAdater path.\n```\n    handlePortCollectionGet(App\u0026 app, const crow::Request\u0026 req,\n                            const std::shared_ptr\u003cbmcweb::AsyncResp\u003e\u0026 aResp,\n                            const std::string\u0026 systemName,\n                            const std::string\u0026 adapterId)\n{\n...\n    getValidFabricAdapterPath(\n        adapterId, systemName, aResp,\n        [aResp{std::move(aResp)}, systemName,\n         adapterId](const std::string\u0026 fabricAdapterPath, const std::string\u0026) {\n        doPortCollectionGet(aResp, systemName, fabricAdapterPath, adapterId);\n        });\n}\n\n```\n\n2) With the valid fabricAdapterPath, get the connector item under the fabric adapter path.\n\n```\n    constexpr std::array\u003cstd::string_view, 1\u003e interfaces \u003d {\n        \"xyz.openbmc_project.Inventory.Item.Connector\"};\n        \n    dbus::utility::getSubTreePaths(\n        fabricAdapterPath, 0, interfaces,\n        [aResp{std::move(aResp)}, systemName,\n         adapterId](const boost::system::error_code\u0026 ec,\n                    const dbus::utility::MapperGetSubTreePathsResponse\u0026 paths) {\n         ...\n        for (const auto\u0026 path : paths)\n        {\n            std::string adapterPath \u003d\n                sdbusplus::message::object_path(path).parent_path();\n            if (!checkFabricAdapterId(adapterPath, adapterId))\n            {\n                continue;\n            }\n\n            std::string portId \u003d\n                sdbusplus::message::object_path(path).filename();\n....\n        }\n                   \n\n```\n\nI think this way is to ensure that the related ports (connectors) are with the give fabric adapter.",
      "parentUuid": "c6e43857_eb541fd4",
      "revId": "3124a7e005e8787fedaa6fe6d09701ed9b2298b4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d88eb3c8_9a45c723",
        "filename": "/COMMIT_MSG",
        "patchSetId": 17
      },
      "lineNbr": 13,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-05-16T21:15:15Z",
      "side": 1,
      "message": "Updated code is based on the association between FabricAdapter and Ports.\nIt is defined by https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/62881\n\n```\n\n    dbus::utility::getAssociationEndPoints(\n        fabricAdapterPath + \"/connecting\",\n        [aResp, systemName,\n         adapterId](const boost::system::error_code\u0026 ec,\n                    const dbus::utility::MapperEndPoints\u0026 endpoints) {\n        if (ec)\n        ...\n```",
      "parentUuid": "963459fa_a58706a1",
      "revId": "3124a7e005e8787fedaa6fe6d09701ed9b2298b4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "378e682e_b28ba355",
        "filename": "/COMMIT_MSG",
        "patchSetId": 17
      },
      "lineNbr": 19,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-04-24T16:55:20Z",
      "side": 1,
      "message": "How does the validator pass if we put the Port out as a link without a implementation \n\n        item[\"@odata.id\"] \u003d crow::utility::urlFromPieces(\n            \"redfish\", \"v1\", \"Systems\", systemName, \"FabricAdapters\", adapterId,\n            \"Ports\", connectorId);\n\nThis code puts out the link, but the commit above has the ROUTE\n\n    BMCWEB_ROUTE(app,\n                 \"/redfish/v1/Systems/\u003cstr\u003e/FabricAdapters/\u003cstr\u003e/Ports/\u003cstr\u003e/\")\n        .privileges(redfish::privileges::getPort)\n\nThese have to merge together I assume? Can you state that ?",
      "revId": "3124a7e005e8787fedaa6fe6d09701ed9b2298b4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3d847fa_9866af9b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 17
      },
      "lineNbr": 19,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-04-24T17:32:59Z",
      "side": 1,
      "message": "Right, I\u0027ve tested with combined ones - https://gerrit.openbmc.org/c/openbmc/bmcweb/+/61374\n\nI\u0027ll restate the commit message.",
      "parentUuid": "378e682e_b28ba355",
      "revId": "3124a7e005e8787fedaa6fe6d09701ed9b2298b4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9079f2b3_0b7898e9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 17
      },
      "lineNbr": 19,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-04-24T21:10:24Z",
      "side": 1,
      "message": "I\u0027ve modified the commit msg stating the excluded/failed validator errors.",
      "parentUuid": "f3d847fa_9866af9b",
      "revId": "3124a7e005e8787fedaa6fe6d09701ed9b2298b4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b516594d_cca66c8f",
        "filename": "Redfish.md",
        "patchSetId": 17
      },
      "lineNbr": 734,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-04-24T16:48:17Z",
      "side": 1,
      "message": "- Members\n- Members@odata.count \n\nLike other collections?",
      "revId": "3124a7e005e8787fedaa6fe6d09701ed9b2298b4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ebededc_b3f693da",
        "filename": "Redfish.md",
        "patchSetId": 17
      },
      "lineNbr": 734,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-04-24T21:10:24Z",
      "side": 1,
      "message": "Yes, the output is essentially the same like getCollectionMembers() but the output needs to insert \"/Ports/.",
      "parentUuid": "b516594d_cca66c8f",
      "revId": "3124a7e005e8787fedaa6fe6d09701ed9b2298b4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "255d9a1c_15732fea",
        "filename": "redfish-core/lib/port.hpp",
        "patchSetId": 17
      },
      "lineNbr": 39,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-04-24T16:55:20Z",
      "side": 1,
      "message": "why not portId?",
      "range": {
        "startLine": 39,
        "startChar": 20,
        "endLine": 39,
        "endChar": 32
      },
      "revId": "3124a7e005e8787fedaa6fe6d09701ed9b2298b4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5294876d_b99be750",
        "filename": "redfish-core/lib/port.hpp",
        "patchSetId": 17
      },
      "lineNbr": 39,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-04-24T21:10:24Z",
      "side": 1,
      "message": "Changed in the latest patchset.",
      "parentUuid": "255d9a1c_15732fea",
      "range": {
        "startLine": 39,
        "startChar": 20,
        "endLine": 39,
        "endChar": 32
      },
      "revId": "3124a7e005e8787fedaa6fe6d09701ed9b2298b4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}