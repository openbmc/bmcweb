{
  "comments": [
    {
      "key": {
        "uuid": "d646b15a_72e35e3e",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 14
      },
      "lineNbr": 197,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-04T15:55:50Z",
      "side": 1,
      "message": "As a general rule, objects that call callbacks should ALWAYS call the callback, forwarding a return code when needed.",
      "range": {
        "startLine": 197,
        "startChar": 0,
        "endLine": 197,
        "endChar": 56
      },
      "revId": "7a9b2ac8e54786d782c02f79c78828d5adf585e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "844a5c85_36fb7562",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 14
      },
      "lineNbr": 197,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-08-04T18:44:56Z",
      "side": 1,
      "message": "something like this?\n\n```\nstd::get_if\u003cstd::string\u003e(\u0026property);\n```\n\nshould fail and call the default callback(\"\") instead of passing a valid argument into it.",
      "parentUuid": "d646b15a_72e35e3e",
      "range": {
        "startLine": 197,
        "startChar": 0,
        "endLine": 197,
        "endChar": 56
      },
      "revId": "7a9b2ac8e54786d782c02f79c78828d5adf585e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c80bf298_9d9964a1",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 14
      },
      "lineNbr": 197,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-09T23:24:27Z",
      "side": 1,
      "message": "yep.  although generally callback would accept an error code type, so you\u0027d forward on the ec in case there was more specific handling needed\n\nsomething like callback(ec, \"\")",
      "parentUuid": "844a5c85_36fb7562",
      "range": {
        "startLine": 197,
        "startChar": 0,
        "endLine": 197,
        "endChar": 56
      },
      "revId": "7a9b2ac8e54786d782c02f79c78828d5adf585e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "699f06ff_3d46217b",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 14
      },
      "lineNbr": 197,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-10-13T03:48:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c80bf298_9d9964a1",
      "range": {
        "startLine": 197,
        "startChar": 0,
        "endLine": 197,
        "endChar": 56
      },
      "revId": "7a9b2ac8e54786d782c02f79c78828d5adf585e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "946ed96d_29a406b3",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 14
      },
      "lineNbr": 203,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-04T15:55:50Z",
      "side": 1,
      "message": "This isn\u0027t something we generally check.  value !\u003d \"xyz...\" effectively is already checking for not empty.",
      "range": {
        "startLine": 203,
        "startChar": 36,
        "endLine": 203,
        "endChar": 51
      },
      "revId": "7a9b2ac8e54786d782c02f79c78828d5adf585e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88ae7718_ea89eadf",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 14
      },
      "lineNbr": 203,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-08-04T18:44:56Z",
      "side": 1,
      "message": "Checking value !\u003d \"xyz...\" does not guarantee that it is not empty.\n\nIn this case, I wanted to make sure that use the default value if it is empty or it is equal to Unknown.\n\nBut since it should never be empty. I guess its fine not to check it.",
      "parentUuid": "946ed96d_29a406b3",
      "range": {
        "startLine": 203,
        "startChar": 36,
        "endLine": 203,
        "endChar": 51
      },
      "revId": "7a9b2ac8e54786d782c02f79c78828d5adf585e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f3c8b16_d750f210",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 14
      },
      "lineNbr": 203,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-09T23:24:27Z",
      "side": 1,
      "message": "generally if it\u0027s empty, that case gets covered when you convert to a Redfish enum, because empty string won\u0027t match any redfish type.",
      "parentUuid": "88ae7718_ea89eadf",
      "range": {
        "startLine": 203,
        "startChar": 36,
        "endLine": 203,
        "endChar": 51
      },
      "revId": "7a9b2ac8e54786d782c02f79c78828d5adf585e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f5e75d9_2b85f56c",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 14
      },
      "lineNbr": 205,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-04T15:55:50Z",
      "side": 1,
      "message": "if unknown is a legal value, we shouldn\u0027t be filtering it here, we should be filtering it when we do the conversion to Redfish Enum.",
      "range": {
        "startLine": 204,
        "startChar": 26,
        "endLine": 205,
        "endChar": 40
      },
      "revId": "7a9b2ac8e54786d782c02f79c78828d5adf585e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6e9456b_1bf6fb0d",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 14
      },
      "lineNbr": 205,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-08-04T18:44:56Z",
      "side": 1,
      "message": "Done. I have handled it in the callback",
      "parentUuid": "4f5e75d9_2b85f56c",
      "range": {
        "startLine": 204,
        "startChar": 26,
        "endLine": 205,
        "endChar": 40
      },
      "revId": "7a9b2ac8e54786d782c02f79c78828d5adf585e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b01d998e_fb7cdcb8",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 14
      },
      "lineNbr": 207,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2021-08-03T20:39:17Z",
      "side": 1,
      "message": "`size_t`?",
      "range": {
        "startLine": 207,
        "startChar": 16,
        "endLine": 207,
        "endChar": 20
      },
      "revId": "7a9b2ac8e54786d782c02f79c78828d5adf585e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e605a499_e8906c72",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 14
      },
      "lineNbr": 207,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-08-03T22:02:24Z",
      "side": 1,
      "message": "I think I like auto a bit too much ðŸ˜Š.\n\nthanks.",
      "parentUuid": "b01d998e_fb7cdcb8",
      "range": {
        "startLine": 207,
        "startChar": 16,
        "endLine": 207,
        "endChar": 20
      },
      "revId": "7a9b2ac8e54786d782c02f79c78828d5adf585e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7fac6a1_a0912244",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 14
      },
      "lineNbr": 207,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-04T15:55:50Z",
      "side": 1,
      "message": "Auto is great..... for code writers.  We optimize for readers in this codebase.",
      "parentUuid": "e605a499_e8906c72",
      "range": {
        "startLine": 207,
        "startChar": 16,
        "endLine": 207,
        "endChar": 20
      },
      "revId": "7a9b2ac8e54786d782c02f79c78828d5adf585e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "973d8cb9_c5935fb5",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 14
      },
      "lineNbr": 207,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-08-04T18:44:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d7fac6a1_a0912244",
      "range": {
        "startLine": 207,
        "startChar": 16,
        "endLine": 207,
        "endChar": 20
      },
      "revId": "7a9b2ac8e54786d782c02f79c78828d5adf585e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f02ef8e2_485eb8b4",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 14
      },
      "lineNbr": 208,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2021-08-03T20:39:17Z",
      "side": 1,
      "message": "consider `index + 1 !\u003d size()`? size_t is unsigned integer so it might underflow (though the previous condition seems to have avoided it)",
      "range": {
        "startLine": 208,
        "startChar": 59,
        "endLine": 208,
        "endChar": 64
      },
      "revId": "7a9b2ac8e54786d782c02f79c78828d5adf585e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ad91635_b48983e3",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 14
      },
      "lineNbr": 208,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-08-03T22:02:24Z",
      "side": 1,
      "message": "I am fine either way, I will just change it.\n\nThanks.",
      "parentUuid": "f02ef8e2_485eb8b4",
      "range": {
        "startLine": 208,
        "startChar": 59,
        "endLine": 208,
        "endChar": 64
      },
      "revId": "7a9b2ac8e54786d782c02f79c78828d5adf585e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2ef6556_3154b4b7",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 14
      },
      "lineNbr": 210,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-04T15:55:50Z",
      "side": 1,
      "message": "first off, you should just call the callback and return here, no need to process further if you\u0027ve found the entry.  Also, this should be returning the openbmc value.",
      "range": {
        "startLine": 210,
        "startChar": 20,
        "endLine": 210,
        "endChar": 59
      },
      "revId": "7a9b2ac8e54786d782c02f79c78828d5adf585e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da09e2ab_4a98c215",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 14
      },
      "lineNbr": 210,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-08-04T18:44:56Z",
      "side": 1,
      "message": "I have cleaned it up a bit.\n\n-----\n\nnot sure what you meant by the openbmc value?",
      "parentUuid": "e2ef6556_3154b4b7",
      "range": {
        "startLine": 210,
        "startChar": 20,
        "endLine": 210,
        "endChar": 59
      },
      "revId": "7a9b2ac8e54786d782c02f79c78828d5adf585e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93cb1fc3_3610b704",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 14
      },
      "lineNbr": 210,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-09T23:24:27Z",
      "side": 1,
      "message": "doing rfind(\".\") then substr just gives you everything past the .\n\ntechnically dbus could reply with xyz.openbmc_project.Item.Foobar, and you would then forward Foobar to Redfish, which is illegal.  One could argue that the dbus contract got broken there, but in practice, people break the dbus apis a lot, and new enums get added.  Not doing substr lets us gracefully handle new enums.",
      "parentUuid": "da09e2ab_4a98c215",
      "range": {
        "startLine": 210,
        "startChar": 20,
        "endLine": 210,
        "endChar": 59
      },
      "revId": "7a9b2ac8e54786d782c02f79c78828d5adf585e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03fa4100_a44617f8",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 14
      },
      "lineNbr": 210,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-10-13T03:48:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "93cb1fc3_3610b704",
      "range": {
        "startLine": 210,
        "startChar": 20,
        "endLine": 210,
        "endChar": 59
      },
      "revId": "7a9b2ac8e54786d782c02f79c78828d5adf585e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69052d2c_4954c7ab",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 14
      },
      "lineNbr": 227,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2021-08-03T20:39:17Z",
      "side": 1,
      "message": "seems redundant?",
      "range": {
        "startLine": 227,
        "startChar": 30,
        "endLine": 227,
        "endChar": 41
      },
      "revId": "7a9b2ac8e54786d782c02f79c78828d5adf585e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c2ea0b2_89e08f7b",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 14
      },
      "lineNbr": 227,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-08-03T22:02:24Z",
      "side": 1,
      "message": "this was there before. I didn\u0027t want to change anything on those codes. Just factoring it there.",
      "parentUuid": "69052d2c_4954c7ab",
      "range": {
        "startLine": 227,
        "startChar": 30,
        "endLine": 227,
        "endChar": 41
      },
      "revId": "7a9b2ac8e54786d782c02f79c78828d5adf585e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed73ef0a_848134db",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 14
      },
      "lineNbr": 227,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-04T15:55:50Z",
      "side": 1,
      "message": "Yeah, this is an old pattern we used to have because we didn\u0027t understand the reference to value promotion rules on lambdas.  Because we\u0027re changing this code around, lets just fix it while we\u0027re here.",
      "parentUuid": "8c2ea0b2_89e08f7b",
      "range": {
        "startLine": 227,
        "startChar": 30,
        "endLine": 227,
        "endChar": 41
      },
      "revId": "7a9b2ac8e54786d782c02f79c78828d5adf585e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31ddc9ad_fa72484d",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 14
      },
      "lineNbr": 227,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-08-04T18:44:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ed73ef0a_848134db",
      "range": {
        "startLine": 227,
        "startChar": 30,
        "endLine": 227,
        "endChar": 41
      },
      "revId": "7a9b2ac8e54786d782c02f79c78828d5adf585e6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}