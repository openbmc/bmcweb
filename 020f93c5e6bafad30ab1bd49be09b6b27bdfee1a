{
  "comments": [
    {
      "key": {
        "uuid": "4830d5b7_f27e6dc9",
        "filename": "redfish-core/include/gzfile.hpp",
        "patchSetId": 9
      },
      "lineNbr": 33,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2021-08-12T17:55:00Z",
      "side": 1,
      "message": "Why do we have a file size limit? I understand we need to set a limit to the length of the buffer we read at each iteration, but we can read as many characters as the file contains, right (assume memory is not the bottleneck)?",
      "range": {
        "startLine": 33,
        "startChar": 11,
        "endLine": 33,
        "endChar": 78
      },
      "revId": "020f93c5e6bafad30ab1bd49be09b6b27bdfee1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92a076aa_157ca028",
        "filename": "redfish-core/include/gzfile.hpp",
        "patchSetId": 9
      },
      "lineNbr": 33,
      "author": {
        "id": 1000404
      },
      "writtenOn": "2021-08-13T00:38:01Z",
      "side": 1,
      "message": "Yes, i think buffer limit size is what i actually want to mention here. Here I just want to tell if file size larger than buffer size, it will occur some error or message not complete issue. It will happen when file rotate is not quick enough. Now the rotate script will detect file size every 15 seconds, if file size increase and larger than 16k(default setting) in the 15 seconds, then the previous issue will happen. I can modify the detect interval shorter to fix the issue, or define buffer limit size more larger to fix the issue. Or other method I doesn\u0027t notice?",
      "parentUuid": "4830d5b7_f27e6dc9",
      "range": {
        "startLine": 33,
        "startChar": 11,
        "endLine": 33,
        "endChar": 78
      },
      "revId": "020f93c5e6bafad30ab1bd49be09b6b27bdfee1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fca27a2_44f6f7fe",
        "filename": "redfish-core/include/gzfile.hpp",
        "patchSetId": 9
      },
      "lineNbr": 33,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2021-08-13T01:48:11Z",
      "side": 1,
      "message": "We should be able to handle arbitrary file size (we read some size of buffer at each time). \n\nThe buffer limit is not related to 16k limit in the log rotation configuration. We don\u0027t need to read the whole file in one read.\n\nPlease remove the comments related to file size limit in log rotation configuration.",
      "parentUuid": "92a076aa_157ca028",
      "range": {
        "startLine": 33,
        "startChar": 11,
        "endLine": 33,
        "endChar": 78
      },
      "revId": "020f93c5e6bafad30ab1bd49be09b6b27bdfee1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3897413_0cf97dc4",
        "filename": "redfish-core/include/gzfile.hpp",
        "patchSetId": 9
      },
      "lineNbr": 34,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2021-08-12T17:55:00Z",
      "side": 1,
      "message": "See above, I prefer to say bufferLimitSize.",
      "range": {
        "startLine": 34,
        "startChar": 22,
        "endLine": 34,
        "endChar": 35
      },
      "revId": "020f93c5e6bafad30ab1bd49be09b6b27bdfee1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6f3e0d7_76d371d1",
        "filename": "redfish-core/include/gzfile.hpp",
        "patchSetId": 9
      },
      "lineNbr": 34,
      "author": {
        "id": 1000404
      },
      "writtenOn": "2021-08-13T00:38:01Z",
      "side": 1,
      "message": "Yes, i will change the name.",
      "parentUuid": "f3897413_0cf97dc4",
      "range": {
        "startLine": 34,
        "startChar": 22,
        "endLine": 34,
        "endChar": 35
      },
      "revId": "020f93c5e6bafad30ab1bd49be09b6b27bdfee1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb2e44c6_a37ad4d0",
        "filename": "redfish-core/include/gzfile.hpp",
        "patchSetId": 9
      },
      "lineNbr": 47,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2021-08-12T17:55:00Z",
      "side": 1,
      "message": "I don\u0027t understand the logic here. \n\ngzread should read at most fileLimitSize characters, right? So bytesRead \u003c\u003d fileLimitSize should always hold?",
      "range": {
        "startLine": 47,
        "startChar": 28,
        "endLine": 47,
        "endChar": 41
      },
      "revId": "020f93c5e6bafad30ab1bd49be09b6b27bdfee1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0be50744_48e4e3e5",
        "filename": "redfish-core/include/gzfile.hpp",
        "patchSetId": 9
      },
      "lineNbr": 47,
      "author": {
        "id": 1000404
      },
      "writtenOn": "2021-08-13T00:38:01Z",
      "side": 1,
      "message": "If fileLimitSize is big enough, bytesRead \u003c\u003d fileLimitSize should always hold. Please refer to the previous comment.",
      "parentUuid": "cb2e44c6_a37ad4d0",
      "range": {
        "startLine": 47,
        "startChar": 28,
        "endLine": 47,
        "endChar": 41
      },
      "revId": "020f93c5e6bafad30ab1bd49be09b6b27bdfee1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "761dd249_22147c49",
        "filename": "redfish-core/include/gzfile.hpp",
        "patchSetId": 9
      },
      "lineNbr": 47,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2021-08-13T01:48:11Z",
      "side": 1,
      "message": "OK. So please add a comment like\n\n\"bytesRead is supposed to be equal to bufferLimitSize in normal cases; it can be smaller if we reach the end of the file; otherwise, we must have a failure.\"",
      "parentUuid": "0be50744_48e4e3e5",
      "range": {
        "startLine": 47,
        "startChar": 28,
        "endLine": 47,
        "endChar": 41
      },
      "revId": "020f93c5e6bafad30ab1bd49be09b6b27bdfee1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70210ffd_c1cbcaff",
        "filename": "redfish-core/include/gzfile.hpp",
        "patchSetId": 9
      },
      "lineNbr": 58,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2021-08-12T17:55:00Z",
      "side": 1,
      "message": "Why do we declare an array then convert it to string? It doesn\u0027t solve the \u0027\\0\u0027 problem we had before. See https://en.cppreference.com/w/cpp/string/basic_string/basic_string\n\n```\n  {\n    std::cout \u003c\u003c \"6) string::string(charT const* s): \";\n    std::string s(\"C-style\\0string\");\n    std::cout \u003c\u003c quoted(s) \u003c\u003c \u0027\\n\u0027; // \"C-style\"\n  }\n```\n\nI suggest at line 41, declare a string of size fileLimitSize directly and pass its mutable data into gzread.\n\n```\nstd::string buffer(fileLimitSize);\n...\nbuffer.resize(bytesRead);\n```",
      "range": {
        "startLine": 58,
        "startChar": 24,
        "endLine": 58,
        "endChar": 33
      },
      "revId": "020f93c5e6bafad30ab1bd49be09b6b27bdfee1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e18561f5_99a4c765",
        "filename": "redfish-core/include/gzfile.hpp",
        "patchSetId": 9
      },
      "lineNbr": 58,
      "author": {
        "id": 1000404
      },
      "writtenOn": "2021-08-13T00:38:01Z",
      "side": 1,
      "message": "Sorry i miss the problem, will fix in next patch",
      "parentUuid": "70210ffd_c1cbcaff",
      "range": {
        "startLine": 58,
        "startChar": 24,
        "endLine": 58,
        "endChar": 33
      },
      "revId": "020f93c5e6bafad30ab1bd49be09b6b27bdfee1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca052ab0_bbf49594",
        "filename": "redfish-core/include/gzfile.hpp",
        "patchSetId": 9
      },
      "lineNbr": 60,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2021-08-12T17:55:00Z",
      "side": 1,
      "message": "nit: should it be one file?",
      "range": {
        "startLine": 60,
        "startChar": 55,
        "endLine": 60,
        "endChar": 59
      },
      "revId": "020f93c5e6bafad30ab1bd49be09b6b27bdfee1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29a9f28c_c37e17f5",
        "filename": "redfish-core/include/gzfile.hpp",
        "patchSetId": 9
      },
      "lineNbr": 60,
      "author": {
        "id": 1000404
      },
      "writtenOn": "2021-08-13T00:38:01Z",
      "side": 1,
      "message": "I just want to mention if Message1\\rMessage2\\rMessage3\\r\\n in one line, it include 3 log entries.",
      "parentUuid": "ca052ab0_bbf49594",
      "range": {
        "startLine": 60,
        "startChar": 55,
        "endLine": 60,
        "endChar": 59
      },
      "revId": "020f93c5e6bafad30ab1bd49be09b6b27bdfee1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bef0e06b_a97207b8",
        "filename": "redfish-core/include/gzfile.hpp",
        "patchSetId": 9
      },
      "lineNbr": 79,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2021-08-12T17:55:00Z",
      "side": 1,
      "message": "why do check !empty() here? We should just append to the back, right?",
      "revId": "020f93c5e6bafad30ab1bd49be09b6b27bdfee1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "193ffe3c_ef75cb78",
        "filename": "redfish-core/include/gzfile.hpp",
        "patchSetId": 9
      },
      "lineNbr": 79,
      "author": {
        "id": 1000404
      },
      "writtenOn": "2021-08-13T00:38:01Z",
      "side": 1,
      "message": "Assume the log entry is like \"Message\\r\\n\", than the string will split to \"Message\" and \"\". So need this checker to remove the \"\".",
      "parentUuid": "bef0e06b_a97207b8",
      "revId": "020f93c5e6bafad30ab1bd49be09b6b27bdfee1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "438f02db_c3fdd758",
        "filename": "redfish-core/include/gzfile.hpp",
        "patchSetId": 9
      },
      "lineNbr": 79,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2021-08-13T01:48:11Z",
      "side": 1,
      "message": "LGTM.",
      "parentUuid": "193ffe3c_ef75cb78",
      "revId": "020f93c5e6bafad30ab1bd49be09b6b27bdfee1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7334ee8_73f43ed9",
        "filename": "redfish-core/include/gzfile.hpp",
        "patchSetId": 9
      },
      "lineNbr": 90,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2021-08-12T17:55:00Z",
      "side": 1,
      "message": "With above comments, I believe here the condition should be if (initialPos \u003c buffer.size()).",
      "revId": "020f93c5e6bafad30ab1bd49be09b6b27bdfee1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c4a3461_f24b4823",
        "filename": "redfish-core/include/gzfile.hpp",
        "patchSetId": 9
      },
      "lineNbr": 90,
      "author": {
        "id": 1000404
      },
      "writtenOn": "2021-08-13T00:38:01Z",
      "side": 1,
      "message": "The if statement here is try to handle if file size larger than buffer size, than the last message will separate. So store the message and prepend to first message in next reading. If buffer size is enough then the issue should not happen.",
      "parentUuid": "c7334ee8_73f43ed9",
      "revId": "020f93c5e6bafad30ab1bd49be09b6b27bdfee1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b72b41b0_1ee3ad01",
        "filename": "redfish-core/include/gzfile.hpp",
        "patchSetId": 9
      },
      "lineNbr": 90,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2021-08-13T01:48:11Z",
      "side": 1,
      "message": "I believe this branch can be simplified to\n```\nif (initialPos \u003c buffer.size()) {\n  lastMessage \u003d logBuffer.substr(initialPos);\n  messageNotComplete \u003d true;\n} \n```",
      "parentUuid": "0c4a3461_f24b4823",
      "revId": "020f93c5e6bafad30ab1bd49be09b6b27bdfee1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}