{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "84d0f9ad_70dff72b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T17:53:15Z",
      "side": 1,
      "message": "Partial review.",
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39c617ad_cb1c0bea",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T17:53:15Z",
      "side": 1,
      "message": "Why did this need to move?",
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a77cc882_f2b8042e",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-08-02T20:23:28Z",
      "side": 1,
      "message": "Ultimately I was trying to limit the amount of code that I needed to account for due to #ifdef\u0027s.\n\nIt did not seem like it mattered in what order we perform this check and the \"OData-Version\" check.  I moved this one first because I only wanted to write the \"OData-Version\" to the header if we\u0027re not supposed to forward a request to a satellite BMC.",
      "parentUuid": "39c617ad_cb1c0bea",
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "123ea00e_494cd91d",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-08-03T00:19:36Z",
      "side": 1,
      "message": "I reverted this in patchset 4.",
      "parentUuid": "a77cc882_f2b8042e",
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00076ef6_778b3c7f",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-03T15:46:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "123ea00e_494cd91d",
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cad1567_1e7e1c0f",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T17:53:15Z",
      "side": 1,
      "message": "What am I looking at here?  Doesn\u0027t anything within the redfish tree require the OData-Version headers?  Presumably because we\u0027re eventually going to rewrite them, it doesn\u0027t really hurt to have our parameters here?",
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34b2a26a_1b2aaa53",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-08-02T20:23:28Z",
      "side": 1,
      "message": "I thought we wanted completely to avoid writing anything to the response if it was later going to be overwritten by the response from the satellite BMC?  If that\u0027s not the case then I can restore this to its previous behavior.",
      "parentUuid": "8cad1567_1e7e1c0f",
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00407b81_e03d1b54",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-08-03T00:19:36Z",
      "side": 1,
      "message": "I\u0027ve preemptively restored this in patchset 4",
      "parentUuid": "34b2a26a_1b2aaa53",
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "889f2d6d_1559994d",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-03T15:46:15Z",
      "side": 1,
      "message": "\u003e I thought we wanted completely to avoid writing anything to the response\n\nGenerally this rule applies to things where we expect differences between handlers;  Everything within the Redfish tree should be setting Odata.Version, so I have a minor preference for simpler code here, but it\u0027s not strong.\n\nThe main places we tend to get bugs are when people overwrite status codes, and overwrite json objects.",
      "parentUuid": "00407b81_e03d1b54",
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f3c030e_1e3a2a2e",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T17:53:15Z",
      "side": 1,
      "message": "Having this variable inside the ifdef makes this code really hard to read.  Is it required?  Couldn\u0027t we just return on line 48 and get the same result?",
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b0fbf0e_f24b5e57",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-08-02T20:23:28Z",
      "side": 1,
      "message": "I don\u0027t think we can return early at line 48 because we need to process the query params at the end of this function.\n\nIt is awkward with the variable inside of the #ifdef.  I can clean this up a lot by introducing the variable outside of the #ifdef.  It\u0027ll also get cleaner if you confirm in the above thread that it is alright to write to the response when we are going to later overwrite it with the response from the satellite BMC.",
      "parentUuid": "9f3c030e_1e3a2a2e",
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9eabfe1_d33c9cc5",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 247,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T17:53:15Z",
      "side": 1,
      "message": "Unintentional copy.",
      "range": {
        "startLine": 247,
        "startChar": 25,
        "endLine": 247,
        "endChar": 32
      },
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fa9dfe1_513e1873",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 252,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T17:53:15Z",
      "side": 1,
      "message": "Can we normalize these two options first?  something like\n// change checks\nif (thisUrl.segments.back() \u003d\u003d \"/\"){\n   // I think this API exists?\n   thisUrl.segments().pop_back();\n}",
      "range": {
        "startLine": 252,
        "startChar": 11,
        "endLine": 252,
        "endChar": 33
      },
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d2fa443_784d387e",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 252,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-08-03T00:19:36Z",
      "side": 1,
      "message": "Yeah that general idea is supported by the API and normalizing would make things waaaay easier to deal with.  I assumed there was a reason the URI had had not been previously normalized so I was trying to preserve it as is.  If that\u0027s not a concern then I\u0027ll add normalization to make this easier to follow.",
      "parentUuid": "6fa9dfe1_513e1873",
      "range": {
        "startLine": 252,
        "startChar": 11,
        "endLine": 252,
        "endChar": 33
      },
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03049502_885605a5",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 252,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-03T15:46:15Z",
      "side": 1,
      "message": "it’s not normalized because there’s literally one use case where ending with a / has to return different behavior than without a /.  otherwise we would’ve fixed this in the core long ago.",
      "parentUuid": "1d2fa443_784d387e",
      "range": {
        "startLine": 252,
        "startChar": 11,
        "endLine": 252,
        "endChar": 33
      },
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "837a73a8_71e2b554",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 253,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T17:53:15Z",
      "side": 1,
      "message": "Possible nullptr dereference.  Range check your requests please.",
      "range": {
        "startLine": 253,
        "startChar": 40,
        "endLine": 253,
        "endChar": 48
      },
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85b74ea5_af449e28",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 253,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-08-03T00:19:36Z",
      "side": 1,
      "message": "I do check it.  The \"segments.size() \u003d\u003d 4\" gets checked before \"segments[3].empty()\"",
      "parentUuid": "837a73a8_71e2b554",
      "range": {
        "startLine": 253,
        "startChar": 40,
        "endLine": 253,
        "endChar": 48
      },
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48df6bfa_9880b7b6",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 253,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-03T15:46:15Z",
      "side": 1,
      "message": "Yes you do....  ignore.  I was reviewing quickly and missed it.",
      "parentUuid": "85b74ea5_af449e28",
      "range": {
        "startLine": 253,
        "startChar": 40,
        "endLine": 253,
        "endChar": 48
      },
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45246507_503286c8",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 258,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T17:53:15Z",
      "side": 1,
      "message": "Aren\u0027t there several things in the ServiceRoot definition that aren\u0027t Collections?  Hardcoding update service here seems error prone.",
      "range": {
        "startLine": 258,
        "startChar": 25,
        "endLine": 258,
        "endChar": 38
      },
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9af98a96_2b5923b9",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 258,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-08-03T00:19:36Z",
      "side": 1,
      "message": "There definitely are, however the later patch that implements aggregating collections will ignore responses that do not contain a \"Members\" array so that\u0027s enough to catch false positives.  UpdateService is hardcoded in because it contains collections and we want to make sure we handle those correctly.\n\nThis is ultimately the right way to handle determining what is and isn\u0027t a collection https://gerrit.openbmc.org/c/openbmc/bmcweb/+/55215.  When that\u0027s finished then it will provide a more reliable method of determining what is and isn\u0027t a collection.  The hard coding can go away.",
      "parentUuid": "45246507_503286c8",
      "range": {
        "startLine": 258,
        "startChar": 25,
        "endLine": 258,
        "endChar": 38
      },
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f966148_fa30b9db",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 258,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-03T15:46:15Z",
      "side": 1,
      "message": "\u003e There definitely are, however the later patch that implements aggregating collections will ignore responses that do not contain a \"Members\" array so that\u0027s enough to catch false positives. \n\nACK.\n\n\u003e UpdateService is hardcoded in because it contains collections and we want to make sure we handle those correctly.\n\nI\u0027m not following this.  Aren\u0027t there other collections that might exist 2 levels deep?\n\n\u003e \n\u003e This is ultimately the right way to handle determining what is and isn\u0027t a collection https://gerrit.openbmc.org/c/openbmc/bmcweb/+/55215.  When that\u0027s finished then it will provide a more reliable method of determining what is and isn\u0027t a collection.  The hard coding can go away.\n\nACK.",
      "parentUuid": "9af98a96_2b5923b9",
      "range": {
        "startLine": 258,
        "startChar": 25,
        "endLine": 258,
        "endChar": 38
      },
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed9d16c9_529bcdaf",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 266,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T17:53:15Z",
      "side": 1,
      "message": "Maybe an enum would be better here?  false and true aren\u0027t very descriptive, and having a tristate seems a lot more readable\n\nSomething like\n\nenum class Result {\n    AggregationStarted,\n    AggregationStartedBmcStillNeeded,\n    AggregationNotRequired,\n}\n\n?  \n\n\nThose names are kinda lame, but you get the idea.",
      "range": {
        "startLine": 266,
        "startChar": 23,
        "endLine": 266,
        "endChar": 28
      },
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9261f2b_a2553b76",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 266,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-08-03T00:19:36Z",
      "side": 1,
      "message": "An enum would be more descriptive, but it\u0027s not really a tristate.  There are three paths like you mention, but really there are only two end results: do or don\u0027t handle request locally.  \"AggregationStartedBmcStillNeeded\" and \"AggregationNotRequired\" would still be handled the same way by whatever calls beginAggregation().\n\nIn future patches we will call the forward request or forward collection request methods before we actually hit these return statements.\n\nIf still prefer an enum then I think it should just be something like \"LocalHandle\", \"NoLocalHandle\".  Either way, for an enum are you suggesting I would just have this function return the enum itself instead of the bool?",
      "parentUuid": "ed9d16c9_529bcdaf",
      "range": {
        "startLine": 266,
        "startChar": 23,
        "endLine": 266,
        "endChar": 28
      },
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41497563_f23ee144",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 266,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-03T15:46:15Z",
      "side": 1,
      "message": "\u003e An enum would be more descriptive, but it\u0027s not really a tristate.  There are three paths like you mention, but really there are only two end results: do or don\u0027t handle request locally.  \"AggregationStartedBmcStillNeeded\" and \"AggregationNotRequired\" would still be handled the same way by whatever calls beginAggregation().\n\u003e \n\u003e In future patches we will call the forward request or forward collection request methods before we actually hit these return statements.\n\u003e \n\u003e If still prefer an enum then I think it should just be something like \"LocalHandle\", \"NoLocalHandle\".  Either way, for an enum are you suggesting I would just have this function return the enum itself instead of the bool?\n\nI still would like the enum, even if it\u0027s two state, as it makes this code more readable.  bool is error prone for things that aren\u0027t \"this is an error\"",
      "parentUuid": "f9261f2b_a2553b76",
      "range": {
        "startLine": 266,
        "startChar": 23,
        "endLine": 266,
        "endChar": 28
      },
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d0ec192_52bde85c",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 273,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T17:53:15Z",
      "side": 1,
      "message": "how can we avoid all this special casing?  It seems fairly brittle in that it\u0027s not coming from the standard.  As a perfect example, FirmwareInventory wasn\u0027t added to the standard until later.",
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cefcfb0_ff97629f",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 273,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-08-03T00:19:36Z",
      "side": 1,
      "message": "The way will be when this patch is completed https://gerrit.openbmc.org/c/openbmc/bmcweb/+/55215.  At that point we\u0027ll always be able to know what the collections are without having to implement all of this special hard coding.",
      "parentUuid": "4d0ec192_52bde85c",
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a973f158_2266a230",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 273,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-03T15:46:15Z",
      "side": 1,
      "message": "👍",
      "parentUuid": "4cefcfb0_ff97629f",
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c2708c0_de26a503",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 331,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T17:53:15Z",
      "side": 1,
      "message": "common error #12.",
      "range": {
        "startLine": 331,
        "startChar": 30,
        "endLine": 331,
        "endChar": 34
      },
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9e5f981_2fbb2c5d",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 331,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-08-03T00:19:36Z",
      "side": 1,
      "message": "I didn\u0027t think I was violating that error because I\u0027m making sure the segment begins with \"aggregated\" rather than checking if find() returns true like in that example.  I\u0027ll just switch to std::string::starts_with().",
      "parentUuid": "9c2708c0_de26a503",
      "range": {
        "startLine": 331,
        "startChar": 30,
        "endLine": 331,
        "endChar": 34
      },
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "892d1f36_0a756960",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 331,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-03T15:46:15Z",
      "side": 1,
      "message": "what is the device is fooaggregated_node ? Won\u0027t this code fail?\n\nI suspect you want boost::starts_with, then to set pos by hand.",
      "parentUuid": "b9e5f981_2fbb2c5d",
      "range": {
        "startLine": 331,
        "startChar": 30,
        "endLine": 331,
        "endChar": 34
      },
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}