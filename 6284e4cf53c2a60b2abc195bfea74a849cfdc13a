{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "84d0f9ad_70dff72b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T17:53:15Z",
      "side": 1,
      "message": "Partial review.",
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39c617ad_cb1c0bea",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T17:53:15Z",
      "side": 1,
      "message": "Why did this need to move?",
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cad1567_1e7e1c0f",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T17:53:15Z",
      "side": 1,
      "message": "What am I looking at here?  Doesn\u0027t anything within the redfish tree require the OData-Version headers?  Presumably because we\u0027re eventually going to rewrite them, it doesn\u0027t really hurt to have our parameters here?",
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f3c030e_1e3a2a2e",
        "filename": "redfish-core/include/query.hpp",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T17:53:15Z",
      "side": 1,
      "message": "Having this variable inside the ifdef makes this code really hard to read.  Is it required?  Couldn\u0027t we just return on line 48 and get the same result?",
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9eabfe1_d33c9cc5",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 247,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T17:53:15Z",
      "side": 1,
      "message": "Unintentional copy.",
      "range": {
        "startLine": 247,
        "startChar": 25,
        "endLine": 247,
        "endChar": 32
      },
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fa9dfe1_513e1873",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 252,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T17:53:15Z",
      "side": 1,
      "message": "Can we normalize these two options first?  something like\n// change checks\nif (thisUrl.segments.back() \u003d\u003d \"/\"){\n   // I think this API exists?\n   thisUrl.segments().pop_back();\n}",
      "range": {
        "startLine": 252,
        "startChar": 11,
        "endLine": 252,
        "endChar": 33
      },
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "837a73a8_71e2b554",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 253,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T17:53:15Z",
      "side": 1,
      "message": "Possible nullptr dereference.  Range check your requests please.",
      "range": {
        "startLine": 253,
        "startChar": 40,
        "endLine": 253,
        "endChar": 48
      },
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45246507_503286c8",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 258,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T17:53:15Z",
      "side": 1,
      "message": "Aren\u0027t there several things in the ServiceRoot definition that aren\u0027t Collections?  Hardcoding update service here seems error prone.",
      "range": {
        "startLine": 258,
        "startChar": 25,
        "endLine": 258,
        "endChar": 38
      },
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed9d16c9_529bcdaf",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 266,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T17:53:15Z",
      "side": 1,
      "message": "Maybe an enum would be better here?  false and true aren\u0027t very descriptive, and having a tristate seems a lot more readable\n\nSomething like\n\nenum class Result {\n    AggregationStarted,\n    AggregationStartedBmcStillNeeded,\n    AggregationNotRequired,\n}\n\n?  \n\n\nThose names are kinda lame, but you get the idea.",
      "range": {
        "startLine": 266,
        "startChar": 23,
        "endLine": 266,
        "endChar": 28
      },
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d0ec192_52bde85c",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 273,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T17:53:15Z",
      "side": 1,
      "message": "how can we avoid all this special casing?  It seems fairly brittle in that it\u0027s not coming from the standard.  As a perfect example, FirmwareInventory wasn\u0027t added to the standard until later.",
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c2708c0_de26a503",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 331,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-02T17:53:15Z",
      "side": 1,
      "message": "common error #12.",
      "range": {
        "startLine": 331,
        "startChar": 30,
        "endLine": 331,
        "endChar": 34
      },
      "revId": "6284e4cf53c2a60b2abc195bfea74a849cfdc13a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}