{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "480f11d6_447ba82c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 11,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-07-11T15:12:03Z",
      "side": 1,
      "message": "How does someone get a SIGNED certificate for a user that doesn\u0027t exist on the host?  That sounds like a bug in the intermediate authority if it\u0027s issuing credentials for invalid users?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 9
      },
      "revId": "498728d976c0aa5a2ac54a5b23bae31ed8db8112",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14b1f47a_9e8bc9a3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 11,
      "author": {
        "id": 1002382
      },
      "writtenOn": "2025-08-14T20:50:40Z",
      "side": 1,
      "message": "Hi Ed, sorry just got time to get back to this\n\nso in our case, this can happen because we reuse our certificate. basically everyone at the company has correct format certificate, but not everyone has access to the BMC\n- to be more specific: we issue x509 cert where we put SAN UPN for everyone with the same correct format. but we only store few accounts to the phosphor user manager\n\nhere we leverage the accounts/users from phosphor user manager service. if the user doesn\u0027t exist in the user manager service, the request will fail\n\nhowever, currently it would be marked as 500 as it fails during GetUserInfo. previously I intended to try to validate whether the username from the cert exist in the user manager service, but it seems like it\u0027s quite hard to do (callback refactoring) + will be double fetching\n\nhere I propose to differentiate the http code response from the error code that we get when we try to contact user manager\n\n- if the error code is io error -\u003e return unauthorized\n- if the error code is no route to host (user manager service) -\u003e return 5xx code\n\nlet me know what do you think, thanks!",
      "parentUuid": "480f11d6_447ba82c",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 9
      },
      "revId": "498728d976c0aa5a2ac54a5b23bae31ed8db8112",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d94c3bb_46ba7c9c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 21,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-07-11T15:12:03Z",
      "side": 1,
      "message": "Can you point to which line you\u0027re getting a 500 from prior to this patch?  It should be printed in the logs.",
      "revId": "498728d976c0aa5a2ac54a5b23bae31ed8db8112",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5e1960e_d9e4cbab",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 21,
      "author": {
        "id": 1002382
      },
      "writtenOn": "2025-08-14T20:50:40Z",
      "side": 1,
      "message": "we got the 500 from `requestUserInfo` function below",
      "parentUuid": "3d94c3bb_46ba7c9c",
      "revId": "498728d976c0aa5a2ac54a5b23bae31ed8db8112",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb08b777_17206a57",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-07-24T19:26:57Z",
      "side": 1,
      "message": "It\u0027s been a couple weeks, is this something you\u0027re working on or can we move it to work in progress?",
      "revId": "498728d976c0aa5a2ac54a5b23bae31ed8db8112",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6040d849_55954e44",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1002382
      },
      "writtenOn": "2025-07-25T14:31:18Z",
      "side": 1,
      "message": "Ahhh yes, it seems like I missed previous emails review notification. Will mark this as WIP, thank you so much for reminding me Ed!",
      "parentUuid": "cb08b777_17206a57",
      "revId": "498728d976c0aa5a2ac54a5b23bae31ed8db8112",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f01c209a_c91ea8f7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-07-25T16:21:09Z",
      "side": 1,
      "message": "Sounds good.",
      "parentUuid": "6040d849_55954e44",
      "revId": "498728d976c0aa5a2ac54a5b23bae31ed8db8112",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f278971_cc0b8175",
        "filename": "http/mutual_tls.cpp",
        "patchSetId": 10
      },
      "lineNbr": 258,
      "author": {
        "id": 1002382
      },
      "writtenOn": "2025-07-10T21:01:23Z",
      "side": 1,
      "message": "NOTE: this doesn\u0027t work yet, somehow the `userExist` variable value is not overridden. I tried to use reference and shared_ptr\u003cbool\u003e still doesn\u0027t work",
      "revId": "498728d976c0aa5a2ac54a5b23bae31ed8db8112",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50f8afc7_a98fe2cf",
        "filename": "http/mutual_tls.cpp",
        "patchSetId": 10
      },
      "lineNbr": 258,
      "author": {
        "id": 1002382
      },
      "writtenOn": "2025-07-10T21:01:52Z",
      "side": 1,
      "message": "any tips on this?",
      "parentUuid": "4f278971_cc0b8175",
      "revId": "498728d976c0aa5a2ac54a5b23bae31ed8db8112",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db6d09b7_e92c0960",
        "filename": "http/mutual_tls.cpp",
        "patchSetId": 10
      },
      "lineNbr": 258,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-07-11T15:12:03Z",
      "side": 1,
      "message": "You\u0027re attempting to do an async call in a call that returns, so you will never see the result of userExist getting set in this function.",
      "parentUuid": "50f8afc7_a98fe2cf",
      "revId": "498728d976c0aa5a2ac54a5b23bae31ed8db8112",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fcb050e_297f2aa4",
        "filename": "http/mutual_tls.cpp",
        "patchSetId": 10
      },
      "lineNbr": 263,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-07-11T15:12:03Z",
      "side": 1,
      "message": "Surely not all errors aren\u0027t \"this user doesn\u0027t exist\".  Some errors should still return 500 (if the user manager is down for example).",
      "range": {
        "startLine": 263,
        "startChar": 16,
        "endLine": 263,
        "endChar": 18
      },
      "revId": "498728d976c0aa5a2ac54a5b23bae31ed8db8112",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}