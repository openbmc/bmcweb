{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8ab05ff5_35c08adf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1000331
      },
      "writtenOn": "2022-08-11T17:18:04Z",
      "side": 1,
      "message": "I think several sensor-providing applications already add a type suffix to the D-Bus sensor name.  It is used to differentiate the various sensors from a single device.\n\nFor example, the D-Bus sensor names from the phosphor-regulators app for voltage regulator \u0027vdd1\u0027 are:\n* vdd1_iout\n* vdd1_iout_peak\n* vdd1_iout_valley\n* vdd1_pout\n* vdd1_temperature\n* vdd1_temperature_peak\n* vdd1_vout\n* vdd1_vout_peak\n* vdd1_vout_valley\n\nI see similar D-Bus sensor names from other sensor-providing apps, such as:\n* ps0_temp0\n* Ambient_2_Temp\n\nSensor names had to be unique in the Redfish Sensors output and in the GUI.  There can also be several sensors that fall into the same D-Bus sensor category, such as 3 regulator sensors dealing with voltage.\n\nWith this change, the type will be in the Redfish sensor name/URI twice:\n* current_vdd1_iout\n* temperature_vdd1_temperature\n* voltage_vdd1_vout\n* temperature_Ambient_2_Temp\n\nThis seems like confusing change for end users.",
      "revId": "848a4346187f043a96e223902d41341214966541",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a16fd8b_58c54f44",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-10T17:26:58Z",
      "side": 1,
      "message": "I thought you said we should use the same code path for $expand and per item get.",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 47,
        "endChar": 7
      },
      "revId": "848a4346187f043a96e223902d41341214966541",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79ed71f1_7a00fc16",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-10T22:12:52Z",
      "side": 1,
      "message": "I’m not sure I understand the question.  yes, in theory we could use the generic GetAll handler for the expand queries, but given your recent optimizations, I think they will result in more dbus calls, so I left the existing code.  In theory we could test if those performance increases are still needed, but I think it’d be better to push that to a later patch, given that this patch works fine and is an improvement for the non expand case.",
      "parentUuid": "8a16fd8b_58c54f44",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 47,
        "endChar": 7
      },
      "revId": "848a4346187f043a96e223902d41341214966541",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96d14793_c77e2116",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-10T22:19:47Z",
      "side": 1,
      "message": "The question is that, during the code review of memory expand codes, I went with GetAll for single item, GetManagedObjects for expand, you made a comment saying we should use the same code. So later I used GetManagedObjects for both case.\n\nNow in this patch, you are changing sensor to the previous option.\n\nThis is inconsistent. So I was asking for an explanation: what\u0027s the right direction and why is that?",
      "parentUuid": "79ed71f1_7a00fc16",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 47,
        "endChar": 7
      },
      "revId": "848a4346187f043a96e223902d41341214966541",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f195bed6_99db2585",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-11T04:26:23Z",
      "side": 1,
      "message": "I don\u0027t recall that specific conversation, but it\u0027s possible that I misspoke, intended a difference or was plain wrong.  With that said, there\u0027s a few things that differentiate sensors from inventory.\n\n1. There\u0027s realistically only 2 sensor producers, so it\u0027s a lot easier to make assumptions about what each implements compared to inventory, which has 10s of daemons implementing, not all upstream.  ObjectManager is a requirement in the sensor schema, it is not in the inventory schemas (well, until recently).\n2. This patchset does use the same code for all the parsing routines.  There is almost no duplication in the construction of the json object for sensor versus not.  The only primary additive difference is the code to actually do the GetAll call.\n3. This common code is used to construct 3 different schemas (Sensors, Power, Thermal), so in comparison to inventory, which has lots of code with very little reuse between daemons, as well as many more redfish routes to service in the long run (maybe 12 different inventory schemas?), duplication in sensor code doesn\u0027t lead to a large difference in binary size.",
      "parentUuid": "96d14793_c77e2116",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 47,
        "endChar": 7
      },
      "revId": "848a4346187f043a96e223902d41341214966541",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b52659c_f629e1cd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-11T04:31:42Z",
      "side": 1,
      "message": "Once we\u0027ve made the prerequisite patches required for your Memory efficiency patch, lets take a look at it again and like I said before, it\u0027s quite possible I made a mistake about the amount of duplication between the inventory schemas.",
      "parentUuid": "f195bed6_99db2585",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 47,
        "endChar": 7
      },
      "revId": "848a4346187f043a96e223902d41341214966541",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2787e972_de9512a4",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 5
      },
      "lineNbr": 3020,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-10T02:47:36Z",
      "side": 1,
      "message": "Note to the reviewers, we can\u0027t use sdbusplus::message::object_path here, because sensors have different escaping rules.",
      "revId": "848a4346187f043a96e223902d41341214966541",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}