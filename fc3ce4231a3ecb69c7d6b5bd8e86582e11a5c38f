{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "aff75bf9_5aba07ca",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 20,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2024-03-12T06:41:07Z",
      "side": 1,
      "message": "Actually I do not think it\u0027s a race problem. It\u0027s really related to the behavior in systemd:\nhttps://github.com/systemd/systemd/pull/11424\n\n“Reject Set time until the NTP is fully disabled”.",
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7f3dd72_26d974aa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 20,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-12T15:23:20Z",
      "side": 1,
      "message": "that’s a good find, will add it to the commit message.",
      "parentUuid": "aff75bf9_5aba07ca",
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7dc016d4_7203301d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2024-03-12T02:25:08Z",
      "side": 1,
      "message": "By this change, it looks like we lost the \"sync\" of the NTP setings in systemd and phosphor-settings.\nHow to resolve this?",
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db82882c_625dd305",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-12T02:59:37Z",
      "side": 1,
      "message": "what does “sync” mean?  functionally does it change anything for the user?",
      "parentUuid": "7dc016d4_7203301d",
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d756756_50cc4870",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2024-03-12T03:51:34Z",
      "side": 1,
      "message": "The property in phosphor-settings provides the \"NTP setting\" on the DBus.\nBy \"sync\" I mean the bmcweb should make sure the \"NTP setting\" in phosphor-settings and systemd-timedated the same.\nOtherwise, when bmcweb changes the NTP settings in systemd-timedated, the setting in phosphor-settingsd is not updated.",
      "parentUuid": "db82882c_625dd305",
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcc5e916_0dd33b4c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-12T04:06:29Z",
      "side": 1,
      "message": "why is that bmcweb job to keep them in sync?  isn’t that the job of settings/timesyncd?\n\nhow does this work for defaults if it’s not already reading from timesyncd?",
      "parentUuid": "5d756756_50cc4870",
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c31eddd5_b36be760",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2024-03-12T06:36:26Z",
      "side": 1,
      "message": "\u003e why is that bmcweb job to keep them in sync? isn’t that the job of settings/timesyncd?\n\nBefore this change, bmcweb get/set the \"NTP settings\" on phosphor-settings.\nphosphor-time-manager and phosphor-settings are responsible to sync the settings with systemd-timedated.\nSo the services like bmcweb and ipmid will only have to get/set the property on phosphor-settings, that\u0027s all.\n\nNow with this patch, bmcweb changes the behavior and directly set the \"NTP setting\" to systemd-timedated, that\u0027s why I raise the comment.",
      "parentUuid": "bcc5e916_0dd33b4c",
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba3deb6b_20b699c9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-12T15:23:20Z",
      "side": 1,
      "message": "\u003e \u003e why is that bmcweb job to keep them in sync? isn’t that the job of settings/timesyncd?\n\u003e \n\u003e Before this change, bmcweb get/set the \"NTP settings\" on phosphor-settings.\n\u003e phosphor-time-manager and phosphor-settings are responsible to sync the settings with systemd-timedated.\n\u003e So the services like bmcweb and ipmid will only have to get/set the property on phosphor-settings, that\u0027s all.\n\u003e \n\u003e Now with this patch, bmcweb changes the behavior and directly set the \"NTP setting\" to systemd-timedated, that\u0027s why I raise the comment.\n\nright, but I’m not understanding why this is an issue with bmcweb?  shouldn’t phosphor time be watching for changes to timesyncd?\n\nAlso, to reask the question previously, is this problem visible to the user at all?  if not, I’m not sure it matters?",
      "parentUuid": "c31eddd5_b36be760",
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cd068d6_e8cb98f8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2024-03-13T02:52:19Z",
      "side": 1,
      "message": "\u003e right, but I’m not understanding why this is an issue with bmcweb? shouldn’t phosphor time be watching for changes to timesyncd?\n\nBecause in previous implementation:\n* All services (ipmi/bmcweb) gets/sets the \"NTP setting\" on phosphor-settings service. That\u0027s all. They do not care about timedated/timesyncd.\n* phosphor-settings serves the property on DBus, make sure it\u0027s serialized/de-serialized.\n* phosphor-time-manager is responsible to watch the above property, and update the systemd-timedated to enable/disable NTP.\n\n\nWith this patch (which I think is not appropriate), bmcweb directly sets the NTP settings to systemd-timedated and skips the phosphor-settings. This causes the problem.\n\n\u003e Also, to reask the question previously, is this problem visible to the user at all? if not, I’m not sure it matters?\n\nIf users sets the time quickly after disabling the NTP setting, it will have an exception internally and bmcweb will return an error, which is visible to the user.\nBut I think this is expected behavior because it does fail to set the time at the moment.\nIt\u0027s the application (e.g. WebUI) who is responsible to handle the error.",
      "parentUuid": "ba3deb6b_20b699c9",
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12f42816_8d4fca92",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-13T03:07:03Z",
      "side": 1,
      "message": "\u003e \u003e right, but I’m not understanding why this is an issue with bmcweb? shouldn’t phosphor time be watching for changes to timesyncd?\n\u003e \n\u003e Because in previous implementation:\n\u003e * All services (ipmi/bmcweb) gets/sets the \"NTP setting\" on phosphor-settings service. That\u0027s all. They do not care about timedated/timesyncd.\n\u003e * phosphor-settings serves the property on DBus, make sure it\u0027s serialized/de-serialized.\n\u003e * phosphor-time-manager is responsible to watch the above property, and update the systemd-timedated to enable/disable NTP.\n\nRight, and having a consolidated settings daemon shows this problem where there\u0027s no way to verify something happened, or return error codes from an operation.  I\u0027m open to other options on how to fix this, but I can\u0027t think of any that use settingsd.\n\n\u003e \n\u003e \n\u003e With this patch (which I think is not appropriate), bmcweb directly sets the NTP settings to systemd-timedated and skips the phosphor-settings. This causes the problem.\n\nWhat do you think we should do instead?  Calling settings doesn\u0027t have a method to block until NTP is actually enabled, which is the behavior Redfish clients are supposed to see.  Is there a better way to fix this?\n\n\u003e \n\u003e \u003e Also, to reask the question previously, is this problem visible to the user at all? if not, I’m not sure it matters?\n\u003e \n\u003e If users sets the time quickly after disabling the NTP setting, it will have an exception internally and bmcweb will return an error, which is visible to the user.\n\nI tested that, and this patch doesn\u0027t show that behavior.  Can you tell me commands you\u0027re running that\u0027s showing that behavior?\n\n\u003e But I think this is expected behavior because it does fail to set the time at the moment.\n\nRight, but that\u0027s the problem, this is a Rest API.  The call should block until the setting has been accepted, so the user knows they can now set the dateTime.\n\n\u003e It\u0027s the application (e.g. WebUI) who is responsible to handle the error.",
      "parentUuid": "8cd068d6_e8cb98f8",
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a07f6d1_b5318c2d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2024-03-13T04:05:25Z",
      "side": 1,
      "message": "\u003e What do you think we should do instead? Calling settings doesn\u0027t have a method to block until NTP is actually enabled, which is the behavior Redfish clients are supposed to see. Is there a better way to fix this?\n\nI think we should accept the behavior, deep in the issue, it\u0027s systemd that returns the error. And the application, eighter WebUI or the caller of the REST/Redfish APIs should handle the error.\n\n\u003e I tested that, and this patch doesn\u0027t show that behavior. Can you tell me commands you\u0027re running that\u0027s showing that behavior?\n\nMy test is described in https://github.com/systemd/systemd/pull/11424, it\u0027s directly calling systemd-timedated:\n```\ntimedatectl set-ntp 1\nsleep 10\ntimedatectl set-ntp 0\ntimedatectl set-time \"2019-01-12\"\necho $?\ntimedatectl set-ntp 1\ntimedatectl set-time \"2019-01-12\"\necho $?\n```\n\nBe noted that the Redfish API to enable/disable NTP eventually has the same effect of \"set-ntp 1/0\", and the same for \"set-time\".\n\nI just tested with a recent systemd, and it loos like the systemd-timedated fixes the issue by blocking until NTP is set.\n\n\n\u003e Right, but that\u0027s the problem, this is a Rest API. The call should block until the setting has been accepted, so the user knows they can now set the dateTime.\n\nWith the above finding (systemd-timedated blocks the call to set NTP), I get your point.\nIndeed we could not make it block to set NTP to phosphor-settings... We do need a solution.\n\nPossibly phosphor-time-manager should handle it to sync the settings in phosphor-settings and systemd-timedated in both ways.",
      "parentUuid": "12f42816_8d4fca92",
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5800789_0743a16a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-13T04:19:24Z",
      "side": 1,
      "message": "\u003e \n\u003e \n\u003e \u003e Right, but that\u0027s the problem, this is a Rest API. The call should block until the setting has been accepted, so the user knows they can now set the dateTime.\n\u003e \n\u003e With the above finding (systemd-timedated blocks the call to set NTP), I get your point.\n\u003e Indeed we could not make it block to set NTP to phosphor-settings... We do need a solution.\n\u003e \n\u003e Possibly phosphor-time-manager should handle it to sync the settings in phosphor-settings and systemd-timedated in both ways.\n\nI\u0027m not sure I understand what you\u0027re suggesting.  Is it a patch you could propose?",
      "parentUuid": "3a07f6d1_b5318c2d",
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "881fc94a_3aaaaf1f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-20T18:27:42Z",
      "side": 1,
      "message": "@Lei?",
      "parentUuid": "c5800789_0743a16a",
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83e4b4f8_8a8a6cf3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2024-03-21T01:51:26Z",
      "side": 1,
      "message": "Yup, although I think we could accept the current behavior (that it returns error), it could be better to fix the issue by calling systemd-timedated directly.\n\n@Ed could you kindly help to add some code in phosphor-time-manager to add a match to org.freedesktop.timedate1, watching the `NTP` property, and make sure it is synced with phosphor-settings?",
      "parentUuid": "881fc94a_3aaaaf1f",
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a92e9b4e_a4a49a67",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-21T15:57:42Z",
      "side": 1,
      "message": "\u003e Yup, although I think we could accept the current behavior (that it returns error), it could be better to fix the issue by calling systemd-timedated directly.\n\u003e \n\u003e @Ed could you kindly help to add some code in phosphor-time-manager to add a match to org.freedesktop.timedate1, watching the `NTP` property, and make sure it is synced with phosphor-settings?\n\nIt doesn\u0027t do that already?",
      "parentUuid": "83e4b4f8_8a8a6cf3",
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79d07123_dfa8985b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2024-03-22T02:15:19Z",
      "side": 1,
      "message": "No, currently the time-manager only watch phosphor-settings, and call systemd-timedated to update the NTP setting.",
      "parentUuid": "a92e9b4e_a4a49a67",
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd1d3b6b_054746c7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 28,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2024-03-29T07:23:54Z",
      "side": 1,
      "message": "We are already working on \"time-manager\" to sync the settings. Will submit the patch later.",
      "parentUuid": "79d07123_dfa8985b",
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b54fe85b_d3f75d8c",
        "filename": "redfish-core/lib/network_protocol.hpp",
        "patchSetId": 15
      },
      "lineNbr": 247,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2024-03-11T16:01:03Z",
      "side": 1,
      "message": "Should this be using ec.value?",
      "range": {
        "startLine": 247,
        "startChar": 24,
        "endLine": 247,
        "endChar": 29
      },
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "844198bb_8d5ca102",
        "filename": "redfish-core/lib/network_protocol.hpp",
        "patchSetId": 15
      },
      "lineNbr": 247,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-11T16:11:02Z",
      "side": 1,
      "message": "I think it\u0027s functionally the same?  Why would ec.value() be better here?",
      "parentUuid": "b54fe85b_d3f75d8c",
      "range": {
        "startLine": 247,
        "startChar": 24,
        "endLine": 247,
        "endChar": 29
      },
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d0f1bd2_9a90f708",
        "filename": "redfish-core/lib/network_protocol.hpp",
        "patchSetId": 15
      },
      "lineNbr": 247,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2024-03-11T16:27:34Z",
      "side": 1,
      "message": "It wasn\u0027t clear to me they are the same. I\u0027ve mostly been seeing the use of ec.value in other places in the bmcweb code I\u0027ve looked at recently.",
      "parentUuid": "844198bb_8d5ca102",
      "range": {
        "startLine": 247,
        "startChar": 24,
        "endLine": 247,
        "endChar": 29
      },
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e042a156_dbc7b85c",
        "filename": "redfish-core/lib/network_protocol.hpp",
        "patchSetId": 15
      },
      "lineNbr": 247,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-11T16:46:42Z",
      "side": 1,
      "message": "For operator \u003d\u003d, they\u0027re not the same (as I\u0027ve found recently).  Ideally we need a deeper dive into this stuff similar to:\n\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/69477\n\nBut if you look at our std::formatter overload for this, we print out ec.what() which should be more descriptive.  Even if it\u0027s not exactly what we want, we need to fix it here:\nhttps://github.com/openbmc/bmcweb/blob/6f4bd2904fd231c90ee86040f067018088097715/http/logging.hpp#L31C51-L31C55\n\nrather than in this code.",
      "parentUuid": "7d0f1bd2_9a90f708",
      "range": {
        "startLine": 247,
        "startChar": 24,
        "endLine": 247,
        "endChar": 29
      },
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33409b62_c8df73e6",
        "filename": "redfish-core/lib/network_protocol.hpp",
        "patchSetId": 15
      },
      "lineNbr": 247,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2024-03-11T18:42:39Z",
      "side": 1,
      "message": "Ahh, I see. Thank you for the link and explanation. Always better to understand \u0027why\u0027 something is coded a particular way.",
      "parentUuid": "e042a156_dbc7b85c",
      "range": {
        "startLine": 247,
        "startChar": 24,
        "endLine": 247,
        "endChar": 29
      },
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c43c3685_48f00311",
        "filename": "redfish-core/lib/network_protocol.hpp",
        "patchSetId": 15
      },
      "lineNbr": 255,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2024-03-11T16:01:03Z",
      "side": 1,
      "message": "Can ntpEnabled no longer be const \u0026?",
      "range": {
        "startLine": 255,
        "startChar": 57,
        "endLine": 255,
        "endChar": 72
      },
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c91c71ca_b6b2025c",
        "filename": "redfish-core/lib/network_protocol.hpp",
        "patchSetId": 15
      },
      "lineNbr": 255,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-11T16:11:02Z",
      "side": 1,
      "message": "We pass small values by value.  There\u0027s no reason to pass by const reference here.",
      "parentUuid": "c43c3685_48f00311",
      "range": {
        "startLine": 255,
        "startChar": 57,
        "endLine": 255,
        "endChar": 72
      },
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ae8666b_10f417b0",
        "filename": "redfish-core/lib/network_protocol.hpp",
        "patchSetId": 15
      },
      "lineNbr": 456,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2024-03-11T16:01:03Z",
      "side": 1,
      "message": "Can enabled be const?",
      "range": {
        "startLine": 456,
        "startChar": 57,
        "endLine": 456,
        "endChar": 69
      },
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57985bc1_82275a58",
        "filename": "redfish-core/lib/network_protocol.hpp",
        "patchSetId": 15
      },
      "lineNbr": 456,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-11T16:11:02Z",
      "side": 1,
      "message": "Const correctness on small values is not something we enforce at this time.",
      "parentUuid": "3ae8666b_10f417b0",
      "range": {
        "startLine": 456,
        "startChar": 57,
        "endLine": 456,
        "endChar": 69
      },
      "revId": "fc3ce4231a3ecb69c7d6b5bd8e86582e11a5c38f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}