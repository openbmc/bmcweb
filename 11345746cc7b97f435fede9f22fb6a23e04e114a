{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1e1be9c1_080183df",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 6
      },
      "lineNbr": 81,
      "author": {
        "id": 1000359
      },
      "writtenOn": "2023-05-30T16:44:13Z",
      "side": 1,
      "message": "The `inline` keyword is not needed when defining a function within the class definition.",
      "range": {
        "startLine": 81,
        "startChar": 4,
        "endLine": 81,
        "endChar": 10
      },
      "revId": "11345746cc7b97f435fede9f22fb6a23e04e114a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2efe1d08_6f289823",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 6
      },
      "lineNbr": 164,
      "author": {
        "id": 1000359
      },
      "writtenOn": "2023-05-30T16:44:13Z",
      "side": 1,
      "message": "\"std::array is a template class that encapsulate a statically-sized array, stored inside the object itself, which means that, if you instantiate the class on the stack, the array itself will be on the stack. Its size has to be known at compile time (it\u0027s passed as a template parameter), and it cannot grow or shrink.\"\n\nI highly recommend using `std::vector` here instead. That will allocate space as needed on the heap.",
      "range": {
        "startLine": 164,
        "startChar": 9,
        "endLine": 164,
        "endChar": 14
      },
      "revId": "11345746cc7b97f435fede9f22fb6a23e04e114a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}