{
    "$id": "http://redfish.dmtf.org/schemas/v1/AggregationSource.v1_3_1.json",
    "$ref": "#/definitions/AggregationSource",
    "$schema": "http://redfish.dmtf.org/schemas/v1/redfish-schema-v1.json",
    "copyright": "Copyright 2014-2022 DMTF. For the full DMTF copyright policy, see http://www.dmtf.org/about/policies/copyright",
    "definitions": {
        "Actions": {
            "additionalProperties": false,
            "description": "The available actions for this resource.",
            "longDescription": "This type shall contain the available actions for this resource.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "#AggregationSource.GenerateSSHIdentityKeyPair": {
                    "$ref": "#/definitions/GenerateSSHIdentityKeyPair"
                },
                "#AggregationSource.RemoveSSHIdentityKeyPair": {
                    "$ref": "#/definitions/RemoveSSHIdentityKeyPair"
                },
                "Oem": {
                    "$ref": "#/definitions/OemActions",
                    "description": "The available OEM-specific actions for this resource.",
                    "longDescription": "This property shall contain the available OEM-specific actions for this resource."
                }
            },
            "type": "object"
        },
        "AggregationSource": {
            "additionalProperties": false,
            "description": "The AggregationSource schema is used to represent the source of information for a subset of the resources provided by a Redfish service.  It can be thought of as a provider of information.  As such, most such interfaces have requirements to support the gathering of information like address and account used to access the information.",
            "longDescription": "This resource shall represent an aggregation source for a Redfish implementation.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "@odata.context": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata-v4.json#/definitions/context"
                },
                "@odata.etag": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata-v4.json#/definitions/etag"
                },
                "@odata.id": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata-v4.json#/definitions/id"
                },
                "@odata.type": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata-v4.json#/definitions/type"
                },
                "Actions": {
                    "$ref": "#/definitions/Actions",
                    "description": "The available actions for this resource.",
                    "longDescription": "This property shall contain the available actions for this resource."
                },
                "AggregationType": {
                    "$ref": "#/definitions/AggregationType",
                    "description": "The type of aggregation used towards the aggregation source.",
                    "longDescription": "This property shall contain the type of aggregation used for the connection method towards the aggregation source.  If this property is not present, the value shall be assumed to be `Full`.",
                    "readonly": false,
                    "versionAdded": "v1_2_0"
                },
                "Description": {
                    "anyOf": [
                        {
                            "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Description"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "readonly": true
                },
                "HostName": {
                    "description": "The URI of the system to be accessed.",
                    "format": "uri-reference",
                    "longDescription": "This property shall contain the URI of the system to be aggregated.  This property shall not be required when the aggregation source is configured to only receive notifications from the aggregated system and the AggregationType property contains the value `NotificationsOnly`.",
                    "readonly": false,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "Id": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Id",
                    "readonly": true
                },
                "Links": {
                    "$ref": "#/definitions/Links",
                    "description": "The links to other resources that are related to this resource.",
                    "longDescription": "This property shall contain links to resources that are related to but are not contained by, or subordinate to, this resource."
                },
                "Name": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Name",
                    "readonly": true
                },
                "Oem": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Oem",
                    "description": "The OEM extension property.",
                    "longDescription": "This property shall contain the OEM extensions.  All values for properties that this object contains shall conform to the Redfish Specification-described requirements."
                },
                "Password": {
                    "description": "The password for accessing the aggregation source.  The value is `null` in responses.",
                    "longDescription": "This property shall contain a password for accessing the aggregation source.  The value shall be `null` in responses.",
                    "readonly": false,
                    "type": [
                        "string",
                        "null"
                    ],
                    "writeOnly ": true
                },
                "SNMP": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/SNMPSettings"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "SNMP settings of the aggregation source.",
                    "longDescription": "This property shall contain the SNMP settings of the aggregation source.",
                    "versionAdded": "v1_1_0"
                },
                "SSHSettings": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/SSHSettingsType"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "Settings for an aggregation source using SSH as part of the associated connection method.",
                    "longDescription": "This property shall contain the settings for an aggregation source using SSH as part of the associated connection method.",
                    "versionAdded": "v1_3_0"
                },
                "Status": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Status",
                    "description": "The status and health of the resource and its subordinate or dependent resources.",
                    "longDescription": "This property shall contain any status or health properties of the resource.",
                    "versionAdded": "v1_3_0"
                },
                "UserName": {
                    "description": "The user name for accessing the aggregation source.",
                    "longDescription": "This property shall contain the user name for accessing the aggregation source.",
                    "readonly": false,
                    "type": [
                        "string",
                        "null"
                    ]
                }
            },
            "required": [
                "@odata.id",
                "@odata.type",
                "Id",
                "Name"
            ],
            "type": "object"
        },
        "AggregationType": {
            "enum": [
                "NotificationsOnly",
                "Full"
            ],
            "enumDescriptions": {
                "Full": "Full aggregation according to connection method.",
                "NotificationsOnly": "Only notifications are aggregated."
            },
            "enumLongDescriptions": {
                "Full": "This value shall indicate that the aggregator is performing full aggregation according to the connection method without any limitation such as only receiving notifications.",
                "NotificationsOnly": "This value shall indicate that the aggregator is only aggregating notifications or events from the aggregation source according to the connection method used.  This value shall not be used with connection methods that do not include notifications."
            },
            "type": "string"
        },
        "ECDSACurveType": {
            "enum": [
                "NISTP256",
                "NISTP384",
                "NISTP521",
                "NISTK163",
                "NISTP192",
                "NISTP224",
                "NISTK233",
                "NISTB233",
                "NISTK283",
                "NISTK409",
                "NISTB409",
                "NISTT571"
            ],
            "enumDescriptions": {
                "NISTB233": "NIST B-233.",
                "NISTB409": "NIST B-409.",
                "NISTK163": "NIST K-163.",
                "NISTK233": "NIST K-233.",
                "NISTK283": "NIST K-283.",
                "NISTK409": "NIST K-409.",
                "NISTP192": "NIST P-192.",
                "NISTP224": "NIST P-224.",
                "NISTP256": "NIST P-256.",
                "NISTP384": "NIST P-384.",
                "NISTP521": "NIST P-521.",
                "NISTT571": "NIST T-571."
            },
            "enumLongDescriptions": {
                "NISTB233": "This value shall indicate the 'nistb233' curve in RFC5656.",
                "NISTB409": "This value shall indicate the 'nistb409' curve in RFC5656.",
                "NISTK163": "This value shall indicate the 'nistk163' curve in RFC5656.",
                "NISTK233": "This value shall indicate the 'nistk233' curve in RFC5656.",
                "NISTK283": "This value shall indicate the 'nistk283' curve in RFC5656.",
                "NISTK409": "This value shall indicate the 'nistk409' curve in RFC5656.",
                "NISTP192": "This value shall indicate the 'nistp192' curve in RFC5656.",
                "NISTP224": "This value shall indicate the 'nistp224' curve in RFC5656.",
                "NISTP256": "This value shall indicate the 'nistp256' curve in RFC5656.",
                "NISTP384": "This value shall indicate the 'nistp384' curve in RFC5656.",
                "NISTP521": "This value shall indicate the 'nistp521' curve in RFC5656.",
                "NISTT571": "This value shall indicate the 'nistt571' curve in RFC5656."
            },
            "type": "string"
        },
        "GenerateSSHIdentityKeyPair": {
            "additionalProperties": false,
            "description": "This action generates a new SSH identity key-pair to be used with this aggregation source.  The generated public key is stored in the Key resource referenced by the PublicIdentityKey property in SSHSettings.  Any existing key-pair is deleted and replace by the new key-pair.",
            "longDescription": "This action shall generate a new SSH identity key-pair to be used with this aggregation source.  The service shall store the generated public key in the Key resource referenced by the PublicIdentityKey property in SSHSettings.  If the aggregation source already has an associated SSH identity key-pair, the service shall delete the key-pair and replace it with the new key-pair.",
            "parameters": {
                "Curve": {
                    "$ref": "#/definitions/ECDSACurveType",
                    "description": "The curve to use with the SSH key if the KeyType parameter contains `ECDSA`.",
                    "longDescription": "This parameter shall contain the curve to use with the SSH key.  This parameter shall be required if the KeyType parameter contains `ECDSA` and rejected for other values."
                },
                "KeyLength": {
                    "description": "The length of the SSH key, in bits, if the KeyType parameter contains `RSA`.",
                    "longDescription": "This parameter shall contain the length of the SSH key, in bits.  This parameter shall be required if the KeyType parameter contains `RSA` and rejected for other values.",
                    "type": "integer"
                },
                "KeyType": {
                    "$ref": "#/definitions/SSHKeyType",
                    "description": "The type of SSH key.",
                    "longDescription": "This parameter shall contain the type of SSH key.",
                    "requiredParameter": true
                }
            },
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_3_0"
        },
        "Links": {
            "additionalProperties": false,
            "description": "The links to other resources that are related to this resource.",
            "longDescription": "This Redfish Specification-described type shall contain links to resources that are related to but are not contained by, or subordinate to, this resource.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "ConnectionMethod": {
                    "anyOf": [
                        {
                            "$ref": "http://redfish.dmtf.org/schemas/v1/ConnectionMethod.json#/definitions/ConnectionMethod"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "An array of links to the connection methods used to contact this aggregation source.",
                    "longDescription": "This property shall contain an array of links to resources of type ConnectionMethod that are used to connect to the aggregation source.",
                    "readonly": true
                },
                "Oem": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Oem",
                    "description": "The OEM extension property.",
                    "longDescription": "This property shall contain the OEM extensions.  All values for properties contained in this object shall conform to the Redfish Specification-described requirements."
                },
                "ResourcesAccessed": {
                    "description": "An array links to the resources added to the service through this aggregation source.  It is recommended that this be the minimal number of properties needed to find the resources that would be lost when the aggregation source is deleted.",
                    "items": {
                        "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Resource"
                    },
                    "longDescription": "This property shall contain an array of links to the resources added to the service through the aggregation source.  It is recommended that this be the minimal number of properties needed to find the resources that would be lost when the aggregation source is deleted.  For example, this could be the pointers to the members of the root level collections or the manager of a BMC.",
                    "readonly": true,
                    "type": "array"
                },
                "ResourcesAccessed@odata.count": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata-v4.json#/definitions/count"
                }
            },
            "type": "object"
        },
        "OemActions": {
            "additionalProperties": true,
            "description": "The available OEM-specific actions for this resource.",
            "longDescription": "This type shall contain the available OEM-specific actions for this resource.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {},
            "type": "object"
        },
        "RemoveSSHIdentityKeyPair": {
            "additionalProperties": false,
            "description": "This action removes the SSH identity key-pair used with this aggregation source.",
            "longDescription": "This action shall remove the private SSH identity key-pair used with this aggregation source.",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object",
            "versionAdded": "v1_3_0"
        },
        "SNMPAuthenticationProtocols": {
            "enum": [
                "None",
                "CommunityString",
                "HMAC_MD5",
                "HMAC_SHA96",
                "HMAC128_SHA224",
                "HMAC192_SHA256",
                "HMAC256_SHA384",
                "HMAC384_SHA512"
            ],
            "enumDescriptions": {
                "CommunityString": "Trap community string authentication.",
                "HMAC128_SHA224": "HMAC-128-SHA-224 authentication.",
                "HMAC192_SHA256": "HMAC-192-SHA-256 authentication.",
                "HMAC256_SHA384": "HMAC-256-SHA-384 authentication.",
                "HMAC384_SHA512": "HMAC-384-SHA-512 authentication.",
                "HMAC_MD5": "HMAC-MD5-96 authentication.",
                "HMAC_SHA96": "HMAC-SHA-96 authentication.",
                "None": "No authentication."
            },
            "enumLongDescriptions": {
                "CommunityString": "This value shall indicate authentication using SNMP community strings and the value of TrapCommunity.",
                "HMAC128_SHA224": "This value shall indicate authentication for SNMPv3 access conforms to the RFC7860-defined usmHMAC128SHA224AuthProtocol.",
                "HMAC192_SHA256": "This value shall indicate authentication for SNMPv3 access conforms to the RFC7860-defined usmHMAC192SHA256AuthProtocol.",
                "HMAC256_SHA384": "This value shall indicate authentication for SNMPv3 access conforms to the RFC7860-defined usmHMAC256SHA384AuthProtocol.",
                "HMAC384_SHA512": "This value shall indicate authentication for SNMPv3 access conforms to the RFC7860-defined usmHMAC384SHA512AuthProtocol.",
                "HMAC_MD5": "This value shall indicate authentication conforms to the RFC3414-defined HMAC-MD5-96 authentication protocol.",
                "HMAC_SHA96": "This value shall indicate authentication conforms to the RFC3414-defined HMAC-SHA-96 authentication protocol.",
                "None": "This value shall indicate authentication is not required."
            },
            "type": "string"
        },
        "SNMPEncryptionProtocols": {
            "enum": [
                "None",
                "CBC_DES",
                "CFB128_AES128"
            ],
            "enumDescriptions": {
                "CBC_DES": "CBC-DES encryption.",
                "CFB128_AES128": "CFB128-AES-128 encryption.",
                "None": "No encryption."
            },
            "enumLongDescriptions": {
                "CBC_DES": "This value shall indicate encryption conforms to the RFC3414-defined CBC-DES encryption protocol.",
                "CFB128_AES128": "This value shall indicate encryption conforms to the RFC3414-defined CFB128-AES-128 encryption protocol.",
                "None": "This value shall indicate there is no encryption."
            },
            "type": "string"
        },
        "SNMPSettings": {
            "additionalProperties": false,
            "description": "Settings for an SNMP aggregation source.",
            "longDescription": "This type shall contain the settings for an SNMP aggregation source.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "AuthenticationKey": {
                    "description": "The secret authentication key for SNMPv3.",
                    "longDescription": "This property shall contain the key for SNMPv3 authentication.  The value shall be `null` in responses.  This property accepts a passphrase or a hex-encoded key.  If the string starts with `Passphrase:`, the remainder of the string shall be the passphrase and shall be converted to the key as described in the 'Password to Key Algorithm' section of RFC3414.  If the string starts with `Hex:`, then the remainder of the string shall be the key encoded in hexadecimal notation.  If the string starts with neither, the full string shall be a passphrase and shall be converted to the key as described in the 'Password to Key Algorithm' section of RFC3414.  The passphrase can contain any printable characters except for the double quotation mark.",
                    "pattern": "(^[ !#-~]+$)|(^Passphrase:[ ^[ !#-~]+$)|(^Hex:[0-9A-Fa-f]{24,96})|(^\\*+$)",
                    "readonly": false,
                    "type": [
                        "string",
                        "null"
                    ],
                    "versionAdded": "v1_1_0",
                    "writeOnly ": true
                },
                "AuthenticationKeySet": {
                    "description": "Indicates if the AuthenticationKey property is set.",
                    "longDescription": "This property shall contain `true` if a valid value was provided for the AuthenticationKey property.  Otherwise, the property shall contain `false`.",
                    "readonly": true,
                    "type": "boolean",
                    "versionAdded": "v1_1_0"
                },
                "AuthenticationProtocol": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/SNMPAuthenticationProtocols"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The authentication protocol for SNMPv3.",
                    "longDescription": "This property shall contain the SNMPv3 authentication protocol.",
                    "readonly": false,
                    "versionAdded": "v1_1_0"
                },
                "EncryptionKey": {
                    "description": "The secret authentication key for SNMPv3.",
                    "longDescription": "This property shall contain the key for SNMPv3 encryption.  The value shall be `null` in responses.  This property accepts a passphrase or a hex-encoded key.  If the string starts with `Passphrase:`, the remainder of the string shall be the passphrase and shall be converted to the key as described in the 'Password to Key Algorithm' section of RFC3414.  If the string starts with `Hex:`, then the remainder of the string shall be the key encoded in hexadecimal notation.  If the string starts with neither, the full string shall be a passphrase and shall be converted to the key as described in the 'Password to Key Algorithm' section of RFC3414.  The passphrase can contain any printable characters except for the double quotation mark.",
                    "pattern": "(^[A-Za-z0-9]+$)|(^\\*+$)",
                    "readonly": false,
                    "type": [
                        "string",
                        "null"
                    ],
                    "versionAdded": "v1_1_0",
                    "writeOnly ": true
                },
                "EncryptionKeySet": {
                    "description": "Indicates if the EncryptionKey property is set.",
                    "longDescription": "This property shall contain `true` if a valid value was provided for the EncryptionKey property.  Otherwise, the property shall contain `false`.",
                    "readonly": true,
                    "type": "boolean",
                    "versionAdded": "v1_1_0"
                },
                "EncryptionProtocol": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/SNMPEncryptionProtocols"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The encryption protocol for SNMPv3.",
                    "longDescription": "This property shall contain the SNMPv3 encryption protocol.",
                    "readonly": false,
                    "versionAdded": "v1_1_0"
                },
                "TrapCommunity": {
                    "description": "The SNMP trap community string.",
                    "longDescription": "This property shall contain the SNMP trap community string.  The value shall be `null` in responses.  Services may provide a common trap community if not specified by the client when creating the aggregation source.",
                    "readonly": false,
                    "type": [
                        "string",
                        "null"
                    ],
                    "versionAdded": "v1_2_0",
                    "writeOnly ": true
                }
            },
            "type": "object"
        },
        "SSHKeyType": {
            "enum": [
                "RSA",
                "DSA",
                "ECDSA",
                "Ed25519"
            ],
            "enumDescriptions": {
                "DSA": "DSA.",
                "ECDSA": "ECDSA.",
                "Ed25519": "Ed25519.",
                "RSA": "RSA."
            },
            "enumLongDescriptions": {
                "DSA": "This value shall indicate an RFC4253-defined 'ssh-dss' key type.",
                "ECDSA": "This value shall indicate an RFC5656-defined ECDSA key type.",
                "Ed25519": "This value shall indicate an RFC8709-defined 'ssh-ed25519' key type.",
                "RSA": "This value shall indicate an RFC4253-defined 'ssh-rsa' key type."
            },
            "type": "string"
        },
        "SSHSettingsType": {
            "additionalProperties": false,
            "description": "Settings for an aggregation source using SSH as part of the associated connection method.",
            "longDescription": "This type shall contain the settings for an aggregation source using SSH as part of the associated connection method.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "PresentedPublicHostKey": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Key.json#/definitions/Key",
                    "description": "A link to the last public host key presented by the remote service corresponding to the aggregation source.  A client that trusts this public host key can add the public host key to the TrustedPublicHostKeys collection to allow SSH communication with the aggregation source.",
                    "longDescription": "This property shall contain a link to a resource of type Key that represents the last public host key presented by the remote service corresponding to the aggregation source.  This property shall not be present if a public host key has not yet been presented by the remote service.",
                    "readonly": true,
                    "versionAdded": "v1_3_0"
                },
                "PresentedPublicHostKeyTimestamp": {
                    "description": "The date and time when the key referenced by the PresentedPublicHostKey property was last updated.",
                    "format": "date-time",
                    "longDescription": "This property shall contain the date and time when the key referenced by the PresentedPublicHostKey property was last updated.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ],
                    "versionAdded": "v1_3_0"
                },
                "PublicIdentityKey": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Key.json#/definitions/Key",
                    "description": "A link to the public key that is used with the aggregation source when the authentication method is configured to use a public key.  The GenerateSSHIdentityKeyPair and RemoveSSHIdentityKeyPair are used to update the key for this aggregation source.",
                    "longDescription": "This property shall contain a link to a resource of type Key that represents the public key that is used with the aggregation source when UserAuthenticationMethod contains `PublicKey`.  This property shall not be present if a key-pair is not available.  The State property within Status shall contain `Disabled` if a key-pair is not available and UserAuthenticationMethod contains `PublicKey`.",
                    "readonly": true,
                    "versionAdded": "v1_3_0"
                },
                "TrustedPublicHostKeys": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/KeyCollection.json#/definitions/KeyCollection",
                    "description": "A link to the trusted public host keys of the remote service corresponding to the aggregation source.  These trusted public host keys are used for authentication of the remote service with SSH.  An SSH public host key of the remote service can be added to this collection to allow for public key-based SSH authentication.",
                    "longDescription": "This property shall contain a link to a resource collection of type KeyCollection that represents the trusted public host keys of the remote service corresponding to the aggregation source.  If the associated connection method specifies SSH tunneling, the service shall compare the public host key presented by the remote service with members of this collection to determine if the remote service can be trusted.  If the remote service cannot be trusted, the State property within Status shall contain `Disabled` and the service shall not connect to the remote service.",
                    "readonly": true,
                    "versionAdded": "v1_3_0"
                },
                "UserAuthenticationMethod": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/UserAuthenticationMethod"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The client user authentication method.",
                    "longDescription": "This property shall contain the client user authentication method.",
                    "readonly": false,
                    "versionAdded": "v1_3_0"
                }
            },
            "type": "object"
        },
        "UserAuthenticationMethod": {
            "enum": [
                "PublicKey",
                "Password"
            ],
            "enumDescriptions": {
                "Password": "SSH user authentication with a password.",
                "PublicKey": "SSH user authentication with a public key."
            },
            "enumLongDescriptions": {
                "Password": "This value shall indicate SSH user authentication with a password specified by the Password property.",
                "PublicKey": "This value shall indicate SSH user authentication with a public key specified by the PublicIdentityKey property in SSHSettings."
            },
            "type": "string"
        }
    },
    "owningEntity": "DMTF",
    "release": "2022.3",
    "title": "#AggregationSource.v1_3_1.AggregationSource"
}