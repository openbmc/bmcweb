{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "eca02937_d7dcd16d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-18T17:02:03Z",
      "side": 1,
      "message": "There\u0027s only one host here, why are unique paths important?",
      "range": {
        "startLine": 13,
        "startChar": 35,
        "endLine": 13,
        "endChar": 41
      },
      "revId": "903f06a8c9ecb7ecd296e4321e78c7ac2f6cdd69",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2371cf56_49f53182",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-03-18T17:23:27Z",
      "side": 1,
      "message": "I\u0027ll rephrase the commit msg.  \nMultiple attached modules may have the devices like with the similar patterns -\n\nFor example :\n- chassis1/io_module1/adapter1\n- chassis2/io_module1/adapter1\n\nIn that case, redfish output via bmcweb will show them as same.",
      "parentUuid": "eca02937_d7dcd16d",
      "range": {
        "startLine": 13,
        "startChar": 35,
        "endLine": 13,
        "endChar": 41
      },
      "revId": "903f06a8c9ecb7ecd296e4321e78c7ac2f6cdd69",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "845e82d5_9f1e2be8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-18T17:51:46Z",
      "side": 1,
      "message": "\u003e I\u0027ll rephrase the commit msg.  \n\u003e Multiple attached modules may have the devices like with the similar patterns -\n\u003e \n\u003e For example :\n\u003e - chassis1/io_module1/adapter1\n\u003e - chassis2/io_module1/adapter1\n\nYou\u0027re not making edits to ChassisCollection, where your statement would make more sense, you\u0027re making change to ComputerSystemCollection, which there is only currently one.\n\nIf you\u0027re planning on taking over the multi-host work, that\u0027s a MUCH larger conversation that needs to happen outside this patch.\n\n\u003e \n\u003e In that case, redfish output via bmcweb will show them as same.\n\nPlease come up with an example that actually applies to this patch.  I get the feeling like you\u0027re moving toward an overall direction that you haven\u0027t really made clear.",
      "parentUuid": "2371cf56_49f53182",
      "range": {
        "startLine": 13,
        "startChar": 35,
        "endLine": 13,
        "endChar": 41
      },
      "revId": "903f06a8c9ecb7ecd296e4321e78c7ac2f6cdd69",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79e76812_50758438",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-18T17:02:03Z",
      "side": 1,
      "message": "This seems worse.  The intent originally is that this disambiguation should be pushed onto the individual DBus daemon implementations, such that non-complicated systems can have simple naming (pcie1, pcie2, etc) and complex systems can do complicated schemes like what you proposed (chassisN_io_moduleN_slotN_adapterN).  In this way, the system itself can decide if the PCIe devices should be.  bmcweb should not be making that decision.",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 19,
        "endChar": 37
      },
      "revId": "903f06a8c9ecb7ecd296e4321e78c7ac2f6cdd69",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4a71602_b5b18ad0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2024-03-20T10:50:03Z",
      "side": 1,
      "message": "\u003e This seems worse.  The intent originally is that this disambiguation should be pushed onto the individual DBus daemon implementations, such that non-complicated systems can have simple naming (pcie1, pcie2, etc) and complex systems can do complicated schemes like what you proposed (chassisN_io_moduleN_slotN_adapterN).  In this way, the system itself can decide if the PCIe devices should be. \n\n@ed - I\u0027m a bit puzzled by your mention of \"complex systems\" here, as I perceive this as more of a general issue concerning how we populate redfish resources, particularly those not directly associated with the chassis, even in relatively straightforward systems.\n\nFor instance, let\u0027s consider two distinct dbus objects:\n\n- slot1[hosts Item.PCIeSlot interface]/adapter1[hosts Item.PCIeDevice]\n- slot2[hosts Item.PCIeSlot interface]/adapter1[hosts Item.PCIeDevice]\n\nEven though these objects are located within the same chassis, they aren\u0027t recognized as unique redfish resources according to the current logic of bmcweb. This is because bmcweb only takes into account the leaf node in the path (adapter1) when populating the redfish resource.\n\n\u003e bmcweb should not be making that decision.\n\nbmcweb serves as the bridge translating the dbus data to redfish right ? In the scenario described, both dbus objects appear distinct and unique, given their differing parents and separate observation by the mapper as two distinct entities. However, bmcweb appears to treat them as identical, generating a single redfish resource due to its consideration solely of the leaf node in the path. Might it be beneficial for bmcweb to employ more comprehensive logic in discerning the uniqueness of dbus objects? I find myself questioning the appropriateness of bmcweb imposing this requirement on other applications. If indeed this is a requisite being enforced on applications, would it not be prudent for it to be formally documented?",
      "parentUuid": "79e76812_50758438",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 19,
        "endChar": 37
      },
      "revId": "903f06a8c9ecb7ecd296e4321e78c7ac2f6cdd69",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}