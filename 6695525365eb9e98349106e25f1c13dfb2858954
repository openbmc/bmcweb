{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a29647ae_76137bf5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 14,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2023-12-13T02:40:34Z",
      "side": 1,
      "message": "as per our discussion, both bmc \u0026 system dump requires base64 encoding\nplease modify this commit message as well",
      "revId": "6695525365eb9e98349106e25f1c13dfb2858954",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc141ee3_41560fe0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 14
      },
      "lineNbr": 14,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2023-12-13T13:35:25Z",
      "side": 1,
      "message": "Nope. Only the system dump uses base64 encoding. BMC dump will use plain text for backward compatibility.",
      "parentUuid": "a29647ae_76137bf5",
      "revId": "6695525365eb9e98349106e25f1c13dfb2858954",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43ec20bd_05b1a803",
        "filename": "http/http_base64_file_body.hpp",
        "patchSetId": 14
      },
      "lineNbr": 27,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2023-12-13T02:40:34Z",
      "side": 1,
      "message": "why is this calculation needed here to get size of body.",
      "revId": "6695525365eb9e98349106e25f1c13dfb2858954",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eee0574c_00766027",
        "filename": "http/http_base64_file_body.hpp",
        "patchSetId": 14
      },
      "lineNbr": 69,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2023-12-13T02:40:34Z",
      "side": 1,
      "message": "what\u0027s the significance of %3 here?\nplease add a comment here",
      "revId": "6695525365eb9e98349106e25f1c13dfb2858954",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62df386e_670d7ff6",
        "filename": "http/http_response.hpp",
        "patchSetId": 14
      },
      "lineNbr": 414,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2023-12-13T02:51:51Z",
      "side": 1,
      "message": "does this mean seek() here tries to set file size?",
      "revId": "6695525365eb9e98349106e25f1c13dfb2858954",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d3a6517_d388deda",
        "filename": "http/http_response.hpp",
        "patchSetId": 14
      },
      "lineNbr": 414,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2023-12-13T13:35:25Z",
      "side": 1,
      "message": "unfortunately yes. That is how we can support file reading using a descriptor.",
      "parentUuid": "62df386e_670d7ff6",
      "revId": "6695525365eb9e98349106e25f1c13dfb2858954",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4d55e5b_f8dab149",
        "filename": "http/http_response.hpp",
        "patchSetId": 14
      },
      "lineNbr": 414,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-18T20:34:37Z",
      "side": 1,
      "message": "Can\u0027t we just assume that the descriptor sent here has started at 0?  Not all descriptors support seeking, so this might be a dangerous operation.\n\nIf a seek is truly required, I\u0027d much rather it be put in the code calling this API, so it can document in comments why it\u0027s required.  I wouldn\u0027t expect it to be required for any dbus calls.",
      "parentUuid": "0d3a6517_d388deda",
      "revId": "6695525365eb9e98349106e25f1c13dfb2858954",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a39799f4_eacd498c",
        "filename": "http/http_response.hpp",
        "patchSetId": 14
      },
      "lineNbr": 414,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2023-12-19T07:22:51Z",
      "side": 1,
      "message": "It is not about just seeking. Unfortunately, the body type\u0027s size field will be initialized with this call. With an un-initialised size variable, the serializer doesn\u0027t work. Ideally, the native_handle set call should take care of the size also.",
      "parentUuid": "c4d55e5b_f8dab149",
      "revId": "6695525365eb9e98349106e25f1c13dfb2858954",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c592ab0e_d3f11d79",
        "filename": "http/http_response.hpp",
        "patchSetId": 14
      },
      "lineNbr": 414,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-03T20:06:52Z",
      "side": 1,
      "message": "the body size field will be initialized with prepare-payload, right?",
      "parentUuid": "a39799f4_eacd498c",
      "revId": "6695525365eb9e98349106e25f1c13dfb2858954",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44f9828f_6c3ca74d",
        "filename": "test/http/http_response_test.cpp",
        "patchSetId": 14
      },
      "lineNbr": 25,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2023-12-13T02:40:34Z",
      "side": 1,
      "message": "const reference?",
      "revId": "6695525365eb9e98349106e25f1c13dfb2858954",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}