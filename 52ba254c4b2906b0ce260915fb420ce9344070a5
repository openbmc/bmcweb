{
  "comments": [
    {
      "key": {
        "uuid": "4ff9d049_91dacaad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-01-19T16:04:10Z",
      "side": 1,
      "message": "This commit presumes that \"resource dump\" is a common term, which it is not.  Please provide information on WHY this change is valuable and what this change would be used for in a general application.",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 13
      },
      "revId": "52ba254c4b2906b0ce260915fb420ce9344070a5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68ec9ed2_307e4d7f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 63,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-01-19T16:04:10Z",
      "side": 1,
      "message": "This is the first instance of these, but OEM log types likely should have the same rules as OEM schemas, in that they impose the same requirements and concerns a schemas.",
      "range": {
        "startLine": 63,
        "startChar": 25,
        "endLine": 63,
        "endChar": 28
      },
      "revId": "52ba254c4b2906b0ce260915fb420ce9344070a5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8f84589_0c42300a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 63,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2021-02-02T15:19:01Z",
      "side": 1,
      "message": "DMTF suggested that we can extend the enums, in a way that in the standard enum value we would have OEM as value and then we would have property named OEMPropertyName.\n\nEg: In this case we have the DiagnosticDataType which is having the value as OEM, If we have the value as OEM then we have to use the property OEMDiagnosticDataType with any other string.\n\nI am not getting why we need to provide a schema for the same.",
      "parentUuid": "68ec9ed2_307e4d7f",
      "range": {
        "startLine": 63,
        "startChar": 25,
        "endLine": 63,
        "endChar": 28
      },
      "revId": "52ba254c4b2906b0ce260915fb420ce9344070a5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cbfc830_6165ff14",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 12
      },
      "lineNbr": 407,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-01-19T13:00:36Z",
      "side": 1,
      "message": "Do we really need to define a new type? If the intent is to enable passing parameters as per https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-dbus-interfaces/+/37355, can we encode that as \"key1\u003dvalue1;key2\u003dvalue2;...\" for the \"System\" type and parse the same, if it exists?",
      "range": {
        "startLine": 407,
        "startChar": 50,
        "endLine": 407,
        "endChar": 58
      },
      "revId": "52ba254c4b2906b0ce260915fb420ce9344070a5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af48e7aa_eea65fc9",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 12
      },
      "lineNbr": 520,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2021-01-19T03:38:00Z",
      "side": 1,
      "message": "Ed, I think we discussed the same in the discord, You suggested that we should use the GUID, Are you suggesting the backend should provide the GUID or the bmcweb should create the GUID and have the mapping in the bmcweb between the bmcweb generated GUID and the ID returns from the backend.",
      "range": {
        "startLine": 517,
        "startChar": 0,
        "endLine": 520,
        "endChar": 50
      },
      "revId": "52ba254c4b2906b0ce260915fb420ce9344070a5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d699f76_e4d9ee40",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 12
      },
      "lineNbr": 901,
      "author": {
        "id": 1000056
      },
      "writtenOn": "2021-01-25T12:55:42Z",
      "side": 1,
      "message": "Why does this need to be explicitly specified in each case? The previous to_lower_copy() should work?",
      "revId": "52ba254c4b2906b0ce260915fb420ce9344070a5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2757bca_c3d34e8d",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 12
      },
      "lineNbr": 901,
      "author": {
        "id": 1000401
      },
      "writtenOn": "2021-01-25T17:39:41Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8d699f76_e4d9ee40",
      "revId": "52ba254c4b2906b0ce260915fb420ce9344070a5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d36fc0b_6a6bb8b7",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 12
      },
      "lineNbr": 901,
      "author": {
        "id": 1000401
      },
      "writtenOn": "2021-01-27T17:29:04Z",
      "side": 1,
      "message": "It is because, the dumpType would be sent in either as system or bmc.\nThe resource check falls here in this method above. Hence, used this dumpPath to store the respective dump entry paths",
      "parentUuid": "c2757bca_c3d34e8d",
      "revId": "52ba254c4b2906b0ce260915fb420ce9344070a5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}