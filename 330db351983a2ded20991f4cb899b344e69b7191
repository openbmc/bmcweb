{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "32d2e744_73c5a49f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-13T21:16:52Z",
      "side": 1,
      "message": "So how do we fix that?  Do our lookup tables need to be namespaced on odata.type?  I kinda wondered if that were the case.",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 17,
        "endChar": 34
      },
      "revId": "330db351983a2ded20991f4cb899b344e69b7191",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91d5ea4b_90b9ef0d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-01-13T21:54:44Z",
      "side": 1,
      "message": "I think for now we should leave this change as is so that we do not attempt to fix \"OriginOfCondition\" in responses.  So far I am not aware of an instance of a specific response property whose type varies between string and object depending on odata.type.  There are definitely instances of its type changing between \"string\" and \"string (URI)\", but the property in both contexts is still intended to contain a URI.  Until that situation arises, I don\u0027t think we need to to consider odata.type.\n\nAs a followup patch we would instead add a separate routine with its own lookup table for doing prefix fixing on non-GET request payloads.\n\nSlightly related, we do not account for response header properties which can contain a URI which may require fixing. \"Location\" is the main concern, although they might be other fields like \"Link\" which require fixing https://www.dmtf.org/sites/default/files/standards/documents/DSP0266_1.16.0.pdf#page\u003d64.\n\nRight now we drop satellite response headers so that information is not surfaced by the aggregator at all.",
      "parentUuid": "32d2e744_73c5a49f",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 17,
        "endChar": 34
      },
      "revId": "330db351983a2ded20991f4cb899b344e69b7191",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8c5953d_eb8703c9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-13T21:16:52Z",
      "side": 1,
      "message": "Couple minor comments.",
      "revId": "330db351983a2ded20991f4cb899b344e69b7191",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6c0836e_fd8ae89b",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 196,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-13T21:16:52Z",
      "side": 1,
      "message": "We should allow all 3XX response codes as well.  Check out section 8.3, table 14 of the redfish spec for all the \"valid\" return codes.",
      "range": {
        "startLine": 196,
        "startChar": 49,
        "endLine": 196,
        "endChar": 52
      },
      "revId": "330db351983a2ded20991f4cb899b344e69b7191",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa254412_b2cec4e8",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 196,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-01-13T21:54:44Z",
      "side": 1,
      "message": "ACK.  I\u0027ll have a look and update based on that table.",
      "parentUuid": "a6c0836e_fd8ae89b",
      "range": {
        "startLine": 196,
        "startChar": 49,
        "endLine": 196,
        "endChar": 52
      },
      "revId": "330db351983a2ded20991f4cb899b344e69b7191",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "686b3029_4a474503",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 196,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-01-14T00:53:43Z",
      "side": 1,
      "message": "Based on offline discussions it is better to just surface all responses to the client and let them what action to take for a given response code.\n\nAs part of that we should also attempt to perform prefix fixing on the response.\n\nI have made those changes.",
      "parentUuid": "aa254412_b2cec4e8",
      "range": {
        "startLine": 196,
        "startChar": 49,
        "endLine": 196,
        "endChar": 52
      },
      "revId": "330db351983a2ded20991f4cb899b344e69b7191",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}