{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1ef23bf4_53dfd030",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-16T20:43:49Z",
      "side": 1,
      "message": "Manually created dbus objects are not a test.  Please include the backend you used in this test.",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 32
      },
      "revId": "7e46f4e4f4241133a0dc61b0b32edac66a7e9614",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a097cc5d_d5f63a30",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1001210
      },
      "writtenOn": "2022-11-18T08:38:12Z",
      "side": 1,
      "message": "I don\u0027t have another backend",
      "parentUuid": "1ef23bf4_53dfd030",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 32
      },
      "revId": "7e46f4e4f4241133a0dc61b0b32edac66a7e9614",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e3a59d2_4f522031",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-18T20:30:01Z",
      "side": 1,
      "message": "What are you trying to accomplish then?  A manually created DBus object doesnt\u0027 really implement anything real;  It\u0027d be good to understand your use case.",
      "parentUuid": "a097cc5d_d5f63a30",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 32
      },
      "revId": "7e46f4e4f4241133a0dc61b0b32edac66a7e9614",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c06fa283_9cd70a24",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1001210
      },
      "writtenOn": "2022-11-19T09:47:27Z",
      "side": 1,
      "message": "1) I make my own program which reads the dimm information from the SPD via i2c. I have no BIOS or PECI. This test object is part of my program.\n2) I think the test object is better than the real one. So in the test one I can implement all the properties, even those which are missing in the real one.",
      "parentUuid": "1e3a59d2_4f522031",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 32
      },
      "revId": "7e46f4e4f4241133a0dc61b0b32edac66a7e9614",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "611267e5_55a8aac9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1001210
      },
      "writtenOn": "2022-11-19T09:51:01Z",
      "side": 1,
      "message": "Perhaps creating a large static dbus test object with all available properties would be good for testing BMCWeb",
      "parentUuid": "c06fa283_9cd70a24",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 32
      },
      "revId": "7e46f4e4f4241133a0dc61b0b32edac66a7e9614",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2d2a868_d3e3508b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-22T19:20:15Z",
      "side": 1,
      "message": "\u003e Perhaps creating a large static dbus test object with all available properties would be good for testing BMCWeb\n\nI am with you regarding this. I have this setup for some resources during my development. \n\nGetting a giant mock can greatly improve the unit test coverage of BMCWeb.\n\nHowever, I don\u0027t know what Ed or Gunnar thinks",
      "parentUuid": "611267e5_55a8aac9",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 32
      },
      "revId": "7e46f4e4f4241133a0dc61b0b32edac66a7e9614",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e91b76e1_683b33f9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-12-19T18:45:40Z",
      "side": 1,
      "message": "\"The project should be able to mock out dbus\" is a discussion that needs had in the context of sdbusplus at a project level.  bmcweb should not maintain its own mocking that\u0027s different.  bmcweb intentionally uses the common library sdbusplus (and in the past, took very painful migrations to get to that state).  So this discussion needs to continue in the context of sdbusplus.\n\nWith that said, i fully support adding mocking capability to sdbusplus, but that needs had in a different discussion.\n\nAll of the above isn\u0027t really the point though.  Testing needs to be done in as real of a test vehicle as possible, to ensure that we\u0027re catching integration problems.  Many of our bugs have been injected because of misunderstood expectations of how the DBus interface operates.  Very rarely do we actually get the dbus interface itself wrong in a way that a unit test could catch.  Especially so if the unit tests are written using the same code they\u0027re testing.\n\n\n\u003e I make my own program which reads the dimm information from the SPD via i2c.\n\nCool, let us know when that program is made available.  Until then, this patchset is dead code.  There\u0027s already similar code being worked on in dbus-sensors, so please collaborate with those folks to make sure that it\u0027s not duplicating already existing functionality.\n\n\u003e I think the test object is better than the real one.\n\nThe point of OpenBMC is to be able to build a bmc.  Tests can be very effective, but if there\u0027s no backend that actually hosts the functionality in question, the code itself doesn\u0027t do anyone much good.",
      "parentUuid": "f2d2a868_d3e3508b",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 32
      },
      "revId": "7e46f4e4f4241133a0dc61b0b32edac66a7e9614",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03508615_26ad7d1a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 12,
      "author": {
        "id": 1001210
      },
      "writtenOn": "2022-12-20T07:19:40Z",
      "side": 1,
      "message": "| Tests can be very effective, but if there\u0027s no backend that actually hosts\n| thefunctionality in question, the code itself doesn\u0027t do anyone much good.\n\nThat makes some sense, although I don\u0027t completely agree. But my code is not new code that no one but me uses. It is fixing a bug in the old code. Maybe this code is better deleted than a little fixing?",
      "parentUuid": "e91b76e1_683b33f9",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 32
      },
      "revId": "7e46f4e4f4241133a0dc61b0b32edac66a7e9614",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac5b19d4_2f763154",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-16T20:37:45Z",
      "side": 1,
      "message": "I am okay with no Redfish validator test for this commit",
      "revId": "7e46f4e4f4241133a0dc61b0b32edac66a7e9614",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74375fda_99ac046e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-16T20:42:09Z",
      "side": 1,
      "message": "No......  This is exactly the kind of patch we need service validator run on, because they\u0027re making semantic and type changes to the redfish tree.  The service validator is the best test we have for this.",
      "parentUuid": "ac5b19d4_2f763154",
      "revId": "7e46f4e4f4241133a0dc61b0b32edac66a7e9614",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a1f29a4_bed36e2a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-11-17T17:36:30Z",
      "side": 1,
      "message": "The -2 is to prevent submitting ",
      "revId": "7e46f4e4f4241133a0dc61b0b32edac66a7e9614",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "422cc8b7_534b08da",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-17T18:32:53Z",
      "side": 1,
      "message": "Lower to +1 while this is in discussion",
      "revId": "7e46f4e4f4241133a0dc61b0b32edac66a7e9614",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d2182606_d47ce64e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-17T19:29:15Z",
      "side": 1,
      "message": "Moved to the other thread",
      "parentUuid": "74375fda_99ac046e",
      "revId": "7e46f4e4f4241133a0dc61b0b32edac66a7e9614",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f38398a_deffe7a5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-06-28T00:21:06Z",
      "side": 1,
      "message": "THis got merged and tested in another, very similar patch.",
      "revId": "7e46f4e4f4241133a0dc61b0b32edac66a7e9614",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}