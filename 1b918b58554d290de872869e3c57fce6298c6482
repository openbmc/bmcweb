{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "14f681c9_8d900826",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-05-23T23:38:59Z",
      "side": 1,
      "message": "This is also a trivial change. PTAL",
      "revId": "1b918b58554d290de872869e3c57fce6298c6482",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6b631c2_c41431e7",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 3
      },
      "lineNbr": 168,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-25T22:20:21Z",
      "side": 1,
      "message": "Now that the json object is modified from within dimmPropToHex, it invalidates the reference to the json object, which means that this code can now have lifetime issues.  Please rework to avoid the lifetime issues.",
      "range": {
        "startLine": 168,
        "startChar": 0,
        "endLine": 168,
        "endChar": 64
      },
      "revId": "1b918b58554d290de872869e3c57fce6298c6482",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "706a3b20_91a49ada",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 3
      },
      "lineNbr": 168,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-05-25T23:58:44Z",
      "side": 1,
      "message": "Hmm, is adding a comment saying \"Callers should guarantee the reference outlives the function call\" enough?\n\nThese two functions don\u0027t create async calls. They just manipulates a JSON and codes run synchronously. So it\u0027s unlikely to have lifecycle issues like the HealthPopulate object which runs asynchronously.",
      "parentUuid": "d6b631c2_c41431e7",
      "range": {
        "startLine": 168,
        "startChar": 0,
        "endLine": 168,
        "endChar": 64
      },
      "revId": "1b918b58554d290de872869e3c57fce6298c6482",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b53a841d_a537b595",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 3
      },
      "lineNbr": 168,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-05-25T23:59:08Z",
      "side": 1,
      "message": "But I can use a JSON pointer instead.",
      "parentUuid": "706a3b20_91a49ada",
      "range": {
        "startLine": 168,
        "startChar": 0,
        "endLine": 168,
        "endChar": 64
      },
      "revId": "1b918b58554d290de872869e3c57fce6298c6482",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47d5cc75_b39cb19d",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 3
      },
      "lineNbr": 168,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-05-26T00:13:42Z",
      "side": 1,
      "message": "Wait, specifically to this dimmPropToHex issue, why does the reference gets invalidated?",
      "parentUuid": "b53a841d_a537b595",
      "range": {
        "startLine": 168,
        "startChar": 0,
        "endLine": 168,
        "endChar": 64
      },
      "revId": "1b918b58554d290de872869e3c57fce6298c6482",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b24dc80d_5639f1b0",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 3
      },
      "lineNbr": 168,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-26T00:20:45Z",
      "side": 1,
      "message": "because the json object itself is modified as part of the messages::internalError calls.\n\n\u003e Hmm, is adding a comment saying \"Callers should guarantee the reference outlives the function call\" enough?\n\nNo, as written, I\u0027m pretty sure this code will seg fault if it hits an InternalError call, then tries to parse a value after that.\n\n\n\u003e But I can use a JSON pointer instead.\nThat would be one approach, although a little bit overkill in this case.  MIght be better to make dimmPropToHex just return the value and load it directly without a reference at all?",
      "parentUuid": "47d5cc75_b39cb19d",
      "range": {
        "startLine": 168,
        "startChar": 0,
        "endLine": 168,
        "endChar": 64
      },
      "revId": "1b918b58554d290de872869e3c57fce6298c6482",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb779034_060df836",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 3
      },
      "lineNbr": 168,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-05-26T00:35:34Z",
      "side": 1,
      "message": "Oh, I see what you meant. You are worrying about that line149 invalidates the reference.",
      "parentUuid": "b24dc80d_5639f1b0",
      "range": {
        "startLine": 168,
        "startChar": 0,
        "endLine": 168,
        "endChar": 64
      },
      "revId": "1b918b58554d290de872869e3c57fce6298c6482",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4969d98c_59faa8a8",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 3
      },
      "lineNbr": 168,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-05-26T17:06:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb779034_060df836",
      "range": {
        "startLine": 168,
        "startChar": 0,
        "endLine": 168,
        "endChar": 64
      },
      "revId": "1b918b58554d290de872869e3c57fce6298c6482",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}