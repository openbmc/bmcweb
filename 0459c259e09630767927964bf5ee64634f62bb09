{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "eb4e5a77_d4679d20",
        "filename": "/COMMIT_MSG",
        "patchSetId": 25
      },
      "lineNbr": 24,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-03-08T00:29:32Z",
      "side": 1,
      "message": "Password is generally read-only in the spec (I\u0027ll be honest, I didn\u0027t check in this case) which would mean this needs to be null.",
      "range": {
        "startLine": 24,
        "startChar": 15,
        "endLine": 24,
        "endChar": 16
      },
      "revId": "0459c259e09630767927964bf5ee64634f62bb09",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6dce85b_d80355f5",
        "filename": "redfish-core/include/redfish.hpp",
        "patchSetId": 25
      },
      "lineNbr": 77,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-03-07T23:11:47Z",
      "side": 1,
      "message": "Changed these to match the syntax used by the other route handlers.",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 77,
        "endChar": 54
      },
      "revId": "0459c259e09630767927964bf5ee64634f62bb09",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a68daac4_52ada423",
        "filename": "redfish-core/include/redfish.hpp",
        "patchSetId": 25
      },
      "lineNbr": 77,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-03-08T00:29:32Z",
      "side": 1,
      "message": "üëç",
      "parentUuid": "f6dce85b_d80355f5",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 77,
        "endChar": 54
      },
      "revId": "0459c259e09630767927964bf5ee64634f62bb09",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01c911a2_367fb61c",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 25
      },
      "lineNbr": 418,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-03-08T00:31:28Z",
      "side": 1,
      "message": "Nit, please just use auto here.  bind_front does not produce a std::function, so this code is doing some implicit stuff that you probably want to avoid.",
      "range": {
        "startLine": 417,
        "startChar": 8,
        "endLine": 418,
        "endChar": 70
      },
      "revId": "0459c259e09630767927964bf5ee64634f62bb09",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bbaa2d8_196e2cd4",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 25
      },
      "lineNbr": 421,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-03-08T00:31:28Z",
      "side": 1,
      "message": "std::move",
      "range": {
        "startLine": 421,
        "startChar": 28,
        "endLine": 421,
        "endChar": 30
      },
      "revId": "0459c259e09630767927964bf5ee64634f62bb09",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3eb1341b_93230667",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 25
      },
      "lineNbr": 603,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-03-08T00:29:32Z",
      "side": 1,
      "message": "This is your problem.  You need to take this by value, because you need to take ownership of it.  Remove the \u0026 and you should be able to get rid of the copy previously.",
      "range": {
        "startLine": 603,
        "startChar": 70,
        "endLine": 603,
        "endChar": 71
      },
      "revId": "0459c259e09630767927964bf5ee64634f62bb09",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51fb3caf_d2f288ee",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 25
      },
      "lineNbr": 607,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-03-08T00:29:32Z",
      "side": 1,
      "message": "long lambdas are now disallowed int the coding standard.  This came from previously, which is fine, but somethign to be aware of.",
      "revId": "0459c259e09630767927964bf5ee64634f62bb09",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c909b6c2_67332bc1",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 25
      },
      "lineNbr": 614,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-03-08T00:29:32Z",
      "side": 1,
      "message": "You need to pass the error back to the handler.",
      "range": {
        "startLine": 614,
        "startChar": 16,
        "endLine": 614,
        "endChar": 22
      },
      "revId": "0459c259e09630767927964bf5ee64634f62bb09",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7377b83_15ed0f13",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 25
      },
      "lineNbr": 877,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-03-07T23:11:47Z",
      "side": 1,
      "message": "When we support multiple satellites the aggregation prefix may become something like \u003caggregationId\u003e_\u003csatelliteId\u003e whereas right now it is only \u003caggregationId\u003e.\n\nWe\u0027ll need to account for \u003caggregationId\u003e_\u003csatelliteId\u003e being a local AggregationSource and \u003caggregationId\u003e_\u003csatelliteId\u003e_\u003cAggregationSource\u003e being an AggregationSource from a satellite BMC.  We\u0027ll be able to derive the \u003caggregationId\u003e at runtime, but we won\u0027t know \u003csatelliteId\u003e until after we query dbus to get the satellite configs.  We currently can\u0027t do the latter until after we have determined whether or not we need to handle the request locally on the aggregating BMC.\n\nI don\u0027t think we need to deal with this right now.  It\u0027d be better implemented as part of adding support for multiple satellite BMC.  Please mark this as unresolved if you should we should deal with that now as part of this patch.",
      "range": {
        "startLine": 874,
        "startChar": 0,
        "endLine": 877,
        "endChar": 66
      },
      "revId": "0459c259e09630767927964bf5ee64634f62bb09",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}