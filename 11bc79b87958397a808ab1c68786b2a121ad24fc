{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1f235fcf_0785f063",
        "filename": "/COMMIT_MSG",
        "patchSetId": 41
      },
      "lineNbr": 12,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-05-01T17:32:48Z",
      "side": 1,
      "message": "Please wrap your prose 50/72 like the developing guide asks.",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 12,
        "endChar": 7
      },
      "revId": "11bc79b87958397a808ab1c68786b2a121ad24fc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee62c215_5e205062",
        "filename": "/COMMIT_MSG",
        "patchSetId": 41
      },
      "lineNbr": 12,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-05-03T02:23:13Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "1f235fcf_0785f063",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 12,
        "endChar": 7
      },
      "revId": "11bc79b87958397a808ab1c68786b2a121ad24fc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2caab7c3_953af62a",
        "filename": "DEVELOPING.md",
        "patchSetId": 41
      },
      "lineNbr": 253,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-05-01T17:32:48Z",
      "side": 1,
      "message": "nit, please remove newlines in between these list entries.",
      "revId": "11bc79b87958397a808ab1c68786b2a121ad24fc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86b20f84_4fa23855",
        "filename": "DEVELOPING.md",
        "patchSetId": 41
      },
      "lineNbr": 253,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-05-03T02:23:13Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2caab7c3_953af62a",
      "revId": "11bc79b87958397a808ab1c68786b2a121ad24fc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f5fa4c3_247e069f",
        "filename": "http/logging.hpp",
        "patchSetId": 41
      },
      "lineNbr": 47,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-05-01T17:32:48Z",
      "side": 1,
      "message": "This is another place where we\u0027re mixing ifdef and contexpr.  Please pick one or another, mixing them causes this code to be hard to read.\n\nAlso, now that we have level, isn\u0027t the BMCWEB_ENABLE_LOGGING no longer needed, given that LEVEL \u003d 0 would be \"disabled\"?",
      "revId": "11bc79b87958397a808ab1c68786b2a121ad24fc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d1b3ad2_126256c5",
        "filename": "http/logging.hpp",
        "patchSetId": 41
      },
      "lineNbr": 47,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-05-03T02:23:13Z",
      "side": 1,
      "message": "I\u0027d prefer to use constexpr and get rid of #ifdef BMCWEB_ENABLE_LOGGING.\n(In fact, it was my original approach in the early patchsets).\n\nI\u0027ll redo this part in using constexpr.",
      "parentUuid": "5f5fa4c3_247e069f",
      "revId": "11bc79b87958397a808ab1c68786b2a121ad24fc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "567d45b9_c4167f60",
        "filename": "http/logging.hpp",
        "patchSetId": 41
      },
      "lineNbr": 47,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-05-03T16:02:12Z",
      "side": 1,
      "message": "üëç",
      "parentUuid": "1d1b3ad2_126256c5",
      "revId": "11bc79b87958397a808ab1c68786b2a121ad24fc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1289745b_1afc30c7",
        "filename": "http/logging.hpp",
        "patchSetId": 41
      },
      "lineNbr": 88,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-05-01T17:32:48Z",
      "side": 1,
      "message": "Why did this ifdef move?",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 88,
        "endChar": 28
      },
      "revId": "11bc79b87958397a808ab1c68786b2a121ad24fc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eebe4bb9_6b8ebfa3",
        "filename": "http/logging.hpp",
        "patchSetId": 41
      },
      "lineNbr": 88,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-05-03T02:23:13Z",
      "side": 1,
      "message": "If #ifdef is false, the the previous code is doing no-op inside if() clause like\n```\nif (level \u003e\u003d getCurrentLogLevel())\n{\n   // no-open\n}\n```\n\nThis is essentially equivalent to no-op, and thus move #ifdef to above if().\n\nHowever, going toward the direction of constexpr, it will become a mute point.",
      "parentUuid": "1289745b_1afc30c7",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 88,
        "endChar": 28
      },
      "revId": "11bc79b87958397a808ab1c68786b2a121ad24fc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee04aeb8_cd1f5d7f",
        "filename": "http/logging.hpp",
        "patchSetId": 41
      },
      "lineNbr": 137,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-05-01T17:32:48Z",
      "side": 1,
      "message": "Why is this constexpr needed?  We\u0027re mixing ifdefs and constexpr if here.  I\u0027d prefer we stick to one or the other for clarity, with a minor preference for if constexpr for everything, but I realize that\u0027s a larger change.\n\nAlso, why doesn\u0027t this check the level like the other ifdefs?",
      "range": {
        "startLine": 137,
        "startChar": 7,
        "endLine": 137,
        "endChar": 16
      },
      "revId": "11bc79b87958397a808ab1c68786b2a121ad24fc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5717af58_59800fa0",
        "filename": "http/logging.hpp",
        "patchSetId": 41
      },
      "lineNbr": 137,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-05-03T02:23:13Z",
      "side": 1,
      "message": "isLoggingEnabled() can be a constexpr as all necessary values are available at compile-time.\nHowever, checkLoggingLevel() can not be evaluated at a time, as the input \u0027loglevel\u0027 to Logger (current implementation) is not a constant.\n\nBecause of that, I first check isLoggingEnabled() as constexpr.  This approach will reduce the binary output size in case debugging is not enabled.\n\nI\u0027ll also look more to see whether isLoggingEnabled() and checkLoggingLevel() can be combined as constexpr.",
      "parentUuid": "ee04aeb8_cd1f5d7f",
      "range": {
        "startLine": 137,
        "startChar": 7,
        "endLine": 137,
        "endChar": 16
      },
      "revId": "11bc79b87958397a808ab1c68786b2a121ad24fc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "898a8388_2bdb2f6d",
        "filename": "http/logging.hpp",
        "patchSetId": 41
      },
      "lineNbr": 137,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-05-03T16:02:12Z",
      "side": 1,
      "message": "\u003e checkLoggingLevel() can not be evaluated at a time\n\nLogging level is a compile time constant, it should be able to be constexpr?  if checkLoggingLevel is contexpr, I suspect we\u0027ll get the same result.",
      "parentUuid": "5717af58_59800fa0",
      "range": {
        "startLine": 137,
        "startChar": 7,
        "endLine": 137,
        "endChar": 16
      },
      "revId": "11bc79b87958397a808ab1c68786b2a121ad24fc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56cfd34c_78d212cd",
        "filename": "meson_options.txt",
        "patchSetId": 41
      },
      "lineNbr": 138,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-05-01T17:32:48Z",
      "side": 1,
      "message": "Please put relative links.",
      "range": {
        "startLine": 138,
        "startChar": 23,
        "endLine": 138,
        "endChar": 86
      },
      "revId": "11bc79b87958397a808ab1c68786b2a121ad24fc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa489cc5_adf14dab",
        "filename": "meson_options.txt",
        "patchSetId": 41
      },
      "lineNbr": 138,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-05-03T02:23:13Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "56cfd34c_78d212cd",
      "range": {
        "startLine": 138,
        "startChar": 23,
        "endLine": 138,
        "endChar": 86
      },
      "revId": "11bc79b87958397a808ab1c68786b2a121ad24fc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}