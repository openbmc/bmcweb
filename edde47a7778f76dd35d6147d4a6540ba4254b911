{
  "comments": [
    {
      "key": {
        "uuid": "a3988604_de66baa3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 11,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-10T19:41:30Z",
      "side": 1,
      "message": "We should really get this codified better because what I seem to be hearing (subject to interpretation) in the working groups is that assembly is ok for \"dumb\" devices, but anything that needs modeled more significantly, or might have sub-nodes will need a Chassis.  Using the newest SmartNic proposal as an example, which in theory has the latest best practices accounted for, this would require a smartnic (which in OpenBMC would have a type \"Board\") to be a Chassis per the mockups (see \"Card1\" and \"Card2\"), so I suspect we can\u0027t just indiscriminately say \"all boards are assemblies\".  MAYBE (this needs more thought) we could say that boards without sensors or thermal nodes should be assemblies?  But that starts to get into a weird distinction that we should document very clearly and have a good long term plan for.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 29
      },
      "revId": "edde47a7778f76dd35d6147d4a6540ba4254b911",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25481db8_7bac4496",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 11,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2021-09-16T19:09:19Z",
      "side": 1,
      "message": "If \"all boards are assemblies\" don\u0027t work for everyone (I thought by some discord discussion long time ago and the email it might, at least for the time being I thought it might work), then I think we need more grainier boards and some should be assemblies and some chassis.\nSo a board of type smartnic is a chassis but some other \"dumb\" board is a assembly.",
      "parentUuid": "a3988604_de66baa3",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 29
      },
      "revId": "edde47a7778f76dd35d6147d4a6540ba4254b911",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92b691f8_fd1c1ab0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 11,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-17T18:58:19Z",
      "side": 1,
      "message": "\u003e If \"all boards are assemblies\" don\u0027t work for everyone (I thought by some discord discussion long time ago and the email it might, at least for the time being I thought it might work), then I think we need more grainier boards and some should be assemblies and some chassis.\n\nYep, we had that discussion, and I think at the time it was right.  For some reason I remember years ago DMTF having a discussion about assemblies, and how that was largely the future, but in the last year or so, they\u0027ve kind of taken a 180, and now all the new models are using Chassis again for non-trivial cards and devices.\n\n\u003e So a board of type smartnic is a chassis but some other \"dumb\" board is a assembly.\n\nMaybe we need a new board variation?  I\u0027m having a little trouble coming up with a definition other than \"dumb board\", or guidance on when to use each.  In theory, if the board had ANY sensor, firmware, or controllable system on it, it should be a chassis, otherwise, it\u0027s an assembly.  now the question is how to codify that.......\n\nmaybe some code in chassis that checks for the relevant associations to sensors/drives ect that would make the board \"smart\"?  That sounds sucky to code.",
      "parentUuid": "25481db8_7bac4496",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 29
      },
      "revId": "edde47a7778f76dd35d6147d4a6540ba4254b911",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c8c3de9_9f8727d3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 11,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2021-09-23T21:38:59Z",
      "side": 1,
      "message": "\u003e For some reason I remember years ago DMTF having a discussion about assemblies, and how that was largely the future, but in the last year or so, they\u0027ve kind of taken a 180, and now all the new models are using Chassis again for non-trivial cards and devices.\n\nNot sure I would call it a 180.. A Redfish co-chair recently said \"a simple rack server, probably just has 1 chassis\". The mockups show this. Redfish also added Led Identify, location to assembly in the last year so more FRUs could be assemblies. I think for \"non-trivial cards and devices\" (which it sounds like you have that use case  but we don\u0027t at this time) they are still advising chassis (Redfish must then assume a simple rack server probably doesn\u0027t have this use case). \n\n\u003e maybe some code in chassis that checks for the relevant associations to sensors/drives ect that would make the board \"smart\"?  That sounds sucky to code.\n\nYeah that sounds sucky.. I would really prefer some interface(s) to decide.\n\nWe have to get the assemblies code in first, so maybe we punt for a bit here?",
      "parentUuid": "92b691f8_fd1c1ab0",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 29
      },
      "revId": "edde47a7778f76dd35d6147d4a6540ba4254b911",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c52a8db_27b09e99",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 11,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-24T18:42:04Z",
      "side": 1,
      "message": "\u003e \u003e For some reason I remember years ago DMTF having a discussion about assemblies, and how that was largely the future, but in the last year or so, they\u0027ve kind of taken a 180, and now all the new models are using Chassis again for non-trivial cards and devices.\n\u003e \n\u003e Not sure I would call it a 180.. A Redfish co-chair recently said \"a simple rack server, probably just has 1 chassis\".\n\nBut..... a smart nic can easily exist in a \"simple rack server\", in fact, most new servers are coming with some form of smart nic.  Fair that it\u0027s not a 180, but it\u0027s definitely not as cut and dry as I thought it was.\n\n\u003e The mockups show this. Redfish also added Led Identify, location to assembly in the last year so more FRUs could be assemblies. I think for \"non-trivial cards and devices\" (which it sounds like you have that use case  but we don\u0027t at this time) they are still advising chassis (Redfish must then assume a simple rack server probably doesn\u0027t have this use case).\n\nYep, Willys patches are essentially adding cards with non-trivial controllers on them.\n\n\u003e \n\u003e \u003e maybe some code in chassis that checks for the relevant associations to sensors/drives ect that would make the board \"smart\"?  That sounds sucky to code.\n\u003e \n\u003e Yeah that sounds sucky.. I would really prefer some interface(s) to decide.\n\u003e \n\u003e We have to get the assemblies code in first, so maybe we punt for a bit here?\n\nI\u0027m not following what that means.....  Any assemblies code would have to answer \"From dbus, what is an assembly, and what is a chassis?\"  I\u0027m not sure how we\u0027d get assemblies code in without that?\n\nConsidering that moving a bunch of stuff to chassis is already going to be an API breaking change, I\u0027d really like to only do it once if we can.",
      "parentUuid": "1c8c3de9_9f8727d3",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 29
      },
      "revId": "edde47a7778f76dd35d6147d4a6540ba4254b911",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b8957f6_17d51f42",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 12
      },
      "lineNbr": 204,
      "author": {
        "id": 1001048
      },
      "writtenOn": "2021-10-06T07:24:06Z",
      "side": 1,
      "message": "nit : Instead using magic number (7) ,can we use enumeration of it for readability of code ..?",
      "revId": "edde47a7778f76dd35d6147d4a6540ba4254b911",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}