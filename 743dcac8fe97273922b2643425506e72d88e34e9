{
  "comments": [
    {
      "key": {
        "uuid": "44feaa8f_e407a342",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 23,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2021-06-17T16:34:59Z",
      "side": 1,
      "message": "Can you show which one will have trouble and explain.  I think I need education here.\nFor this commit, I think the answer is that code would stay the same (and continue to work as before).",
      "revId": "743dcac8fe97273922b2643425506e72d88e34e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6e74b43_8e85e8fc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 25,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2021-06-17T16:34:59Z",
      "side": 1,
      "message": "We can check the binary when we test.  I expect unused constants to be removed.",
      "revId": "743dcac8fe97273922b2643425506e72d88e34e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c047981_98f3df2b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 35,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2021-06-16T23:39:32Z",
      "side": 1,
      "message": "I\u0027m not sure this helps, but would it be possible to have constexpr functions so we can separate the Redfish type and the HTTP verb, like this?:\n\u003e BMCWEB_ROUTE(app, \"/redfish/v1/AccountService/\")\n\u003e   .privileges(redfish::privileges::lookup(\n\u003e                 boost::beast::http::verb::get,\n\u003e                 redfish::privileges::type::AccountService))",
      "revId": "743dcac8fe97273922b2643425506e72d88e34e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95844e46_0831000a",
        "filename": "redfish-core/include/registries/privilege_registry.hpp",
        "patchSetId": 9
      },
      "lineNbr": 37,
      "author": {
        "id": 1001099
      },
      "writtenOn": "2021-06-17T02:10:53Z",
      "side": 1,
      "message": "Why we are creating all this reference variable, because if we need to check privilege config then we need to resolve (understand set). can we directly use that set name?",
      "revId": "743dcac8fe97273922b2643425506e72d88e34e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9236473_c9cf9389",
        "filename": "redfish-core/include/registries/privilege_registry.hpp",
        "patchSetId": 9
      },
      "lineNbr": 37,
      "author": {
        "id": 1001099
      },
      "writtenOn": "2021-06-17T16:00:57Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "95844e46_0831000a",
      "revId": "743dcac8fe97273922b2643425506e72d88e34e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b6c7344_10a153c3",
        "filename": "redfish-core/include/registries/privilege_registry.hpp",
        "patchSetId": 9
      },
      "lineNbr": 37,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2021-06-17T16:34:59Z",
      "side": 1,
      "message": "Are you asking why we need to indirection (a const defined by another const)?\n\nI prefer for this file to provide the mapping from {verb+RedfishType} to privilegeSet so we can use the const names (which are defined in this section) in the code which implements the methods.",
      "parentUuid": "c9236473_c9cf9389",
      "revId": "743dcac8fe97273922b2643425506e72d88e34e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68b0b0c4_3ad6e1b1",
        "filename": "redfish-core/include/registries/privilege_registry.hpp",
        "patchSetId": 9
      },
      "lineNbr": 37,
      "author": {
        "id": 1001099
      },
      "writtenOn": "2021-06-17T16:40:34Z",
      "side": 1,
      "message": "I get that little later ðŸ˜„",
      "parentUuid": "6b6c7344_10a153c3",
      "revId": "743dcac8fe97273922b2643425506e72d88e34e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc1ace9e_ff392293",
        "filename": "scripts/parse_registries.py",
        "patchSetId": 9
      },
      "lineNbr": 132,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2021-06-16T23:39:32Z",
      "side": 1,
      "message": "Handling the NoAuth case seems odd.  Does checking up front help?:\n\u003e if privileges[0] \u003d\u003d \"NoAuth\":\n\u003e   privilege_string \u003d \"\"\n\u003e else\n\u003e   privilege_string +\u003d \"    {\"\n\u003e   for privilege in privileges:\n\u003e     privilege_string +\u003d \u0027\"\u0027 + privilege + \u0027\",\\n\u0027",
      "range": {
        "startLine": 132,
        "startChar": 16,
        "endLine": 132,
        "endChar": 24
      },
      "revId": "743dcac8fe97273922b2643425506e72d88e34e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2354d1a1_6e32cace",
        "filename": "scripts/parse_registries.py",
        "patchSetId": 9
      },
      "lineNbr": 146,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2021-06-16T23:39:32Z",
      "side": 1,
      "message": "Should we sort this list?  (Is getting keys from a Python Dictionary guaranteed to make a list in any specific sequence?  https://docs.python.org/3/library/stdtypes.html#dict-views)",
      "range": {
        "startLine": 146,
        "startChar": 26,
        "endLine": 146,
        "endChar": 40
      },
      "revId": "743dcac8fe97273922b2643425506e72d88e34e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}