{
  "comments": [
    {
      "key": {
        "uuid": "20f5787a_de5fb5df",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 14,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-27T00:40:51Z",
      "side": 1,
      "message": "It would\u0027ve really helped if this change were made in a different commit.  This is going to significantly change the cache loading of the router, as what existed there was done on purpose to reduce the cache misses for the hot path (ie searching for a URI).\n\nCan you walk me through why this was required?  It would seem like the flattened node structure would\u0027ve still worked, and this was just an extra cleanup.",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 14,
        "endChar": 62
      },
      "revId": "7548fb413b5a90206b3f4bab99012c5340ff7333",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4e83f4b_a850450a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 19,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-27T00:40:51Z",
      "side": 1,
      "message": "Can we just remove it entirely?  We don\u0027t use it, and its usage was deprecated a long time ago.  The code you\u0027re seeing there is just remnants that haven\u0027t been cleaned up.",
      "range": {
        "startLine": 18,
        "startChar": 3,
        "endLine": 19,
        "endChar": 37
      },
      "revId": "7548fb413b5a90206b3f4bab99012c5340ff7333",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db5f40db_3e08e807",
        "filename": "http/routing.hpp",
        "patchSetId": 9
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-27T00:40:51Z",
      "side": 1,
      "message": "?",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 41
      },
      "revId": "7548fb413b5a90206b3f4bab99012c5340ff7333",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2a81778_f39518c1",
        "filename": "http/routing.hpp",
        "patchSetId": 9
      },
      "lineNbr": 108,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-05-26T21:06:50Z",
      "side": 1,
      "message": "Are these only used in the test?",
      "range": {
        "startLine": 108,
        "startChar": 0,
        "endLine": 108,
        "endChar": 38
      },
      "revId": "7548fb413b5a90206b3f4bab99012c5340ff7333",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84029fbd_afc23962",
        "filename": "http/routing.hpp",
        "patchSetId": 9
      },
      "lineNbr": 108,
      "author": {
        "id": 1000857
      },
      "writtenOn": "2021-05-26T21:30:22Z",
      "side": 1,
      "message": "No it will be used for anyone who want to set a highest or lowest priority.",
      "parentUuid": "c2a81778_f39518c1",
      "range": {
        "startLine": 108,
        "startChar": 0,
        "endLine": 108,
        "endChar": 38
      },
      "revId": "7548fb413b5a90206b3f4bab99012c5340ff7333",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28a54e7a_7c319f34",
        "filename": "http/routing.hpp",
        "patchSetId": 9
      },
      "lineNbr": 115,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-27T00:40:51Z",
      "side": 1,
      "message": "I only see these used in unit tests, and would imagine they\u0027re a bit of an anti-pattern.  There should be no route with a \"max\" priority such that it can\u0027t be overridden.",
      "range": {
        "startLine": 108,
        "startChar": 0,
        "endLine": 115,
        "endChar": 5
      },
      "revId": "7548fb413b5a90206b3f4bab99012c5340ff7333",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd4576ef_9fb0a33e",
        "filename": "http/routing.hpp",
        "patchSetId": 9
      },
      "lineNbr": 676,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-27T00:40:51Z",
      "side": 1,
      "message": "This is taking ownership of a raw pointer, which we don\u0027t really want from a safety perspective, if we continue with combining the structs this way, we should be using some form of smart pointer.",
      "range": {
        "startLine": 676,
        "startChar": 8,
        "endLine": 676,
        "endChar": 32
      },
      "revId": "7548fb413b5a90206b3f4bab99012c5340ff7333",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f5e9140_690173df",
        "filename": "http/routing.hpp",
        "patchSetId": 9
      },
      "lineNbr": 692,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-27T00:40:51Z",
      "side": 1,
      "message": "Is this new constructor and private variable needed?  I don\u0027t see it used.",
      "range": {
        "startLine": 688,
        "startChar": 0,
        "endLine": 692,
        "endChar": 19
      },
      "revId": "7548fb413b5a90206b3f4bab99012c5340ff7333",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b172dcd0_0cc1a122",
        "filename": "http/routing.hpp",
        "patchSetId": 9
      },
      "lineNbr": 1323,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-27T00:40:51Z",
      "side": 1,
      "message": "You\u0027re capturing a pointer by value here, which makes it really easy to have lifetime issues.  The old mechanism was safer, because routes were always added to the array, and range checked before being used.",
      "range": {
        "startLine": 1323,
        "startChar": 30,
        "endLine": 1323,
        "endChar": 34
      },
      "revId": "7548fb413b5a90206b3f4bab99012c5340ff7333",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e52ae7e_49ef4910",
        "filename": "redfish-core/ut/priority_test.cpp",
        "patchSetId": 9
      },
      "lineNbr": 19,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-05-26T21:06:50Z",
      "side": 1,
      "message": "Will routes need to add a priority this way, to have an explicit priority.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 79
      },
      "revId": "7548fb413b5a90206b3f4bab99012c5340ff7333",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "884f92e3_785b7661",
        "filename": "redfish-core/ut/priority_test.cpp",
        "patchSetId": 9
      },
      "lineNbr": 19,
      "author": {
        "id": 1000857
      },
      "writtenOn": "2021-05-26T21:30:22Z",
      "side": 1,
      "message": "yes. This is the way to set priority. The default priority value is 0 so most of the current node/rule doesn\u0027t need to explicitly set the priority. \n\nThe priority is designed to set default rule for redfish node in the future.",
      "parentUuid": "6e52ae7e_49ef4910",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 79
      },
      "revId": "7548fb413b5a90206b3f4bab99012c5340ff7333",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}