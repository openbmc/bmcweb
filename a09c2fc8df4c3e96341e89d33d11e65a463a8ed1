{
  "comments": [
    {
      "key": {
        "uuid": "6ea4bafb_687dc431",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 26
      },
      "lineNbr": 41,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-25T18:48:40Z",
      "side": 1,
      "message": "This doesn\u0027t work as an error code.  0 is valid as an input.",
      "range": {
        "startLine": 41,
        "startChar": 28,
        "endLine": 41,
        "endChar": 40
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04174bf5_cea2998e",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 26
      },
      "lineNbr": 41,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-04T14:23:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6ea4bafb_687dc431",
      "range": {
        "startLine": 41,
        "startChar": 28,
        "endLine": 41,
        "endChar": 40
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "663101d3_e06dd439",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 26
      },
      "lineNbr": 47,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-25T18:48:40Z",
      "side": 1,
      "message": "Written generically this function doesn\u0027t require floating points at all.  std::chrono runs on ints by default.  This would be much easier if you just parsed milliseconds, then nanoseconds, and added the decimal in between.\n\nIf you\u0027d like me to make you another example as I did in the last patch, I\u0027m happy to.",
      "range": {
        "startLine": 47,
        "startChar": 31,
        "endLine": 47,
        "endChar": 40
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2036c869_19371ae9",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 26
      },
      "lineNbr": 47,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-04T14:23:01Z",
      "side": 1,
      "message": "Modified it to only use integers",
      "parentUuid": "663101d3_e06dd439",
      "range": {
        "startLine": 47,
        "startChar": 31,
        "endLine": 47,
        "endChar": 40
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57adf7c5_1464bac7",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 26
      },
      "lineNbr": 47,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-04T15:53:25Z",
      "side": 1,
      "message": "excellent, thank you.",
      "parentUuid": "2036c869_19371ae9",
      "range": {
        "startLine": 47,
        "startChar": 31,
        "endLine": 47,
        "endChar": 40
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b1d4661_abd4d150",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 26
      },
      "lineNbr": 72,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-25T18:48:40Z",
      "side": 1,
      "message": "This is very inefficient.  You\u0027d be much better off simply tracking an index or an iterator.  Alternatively, string_view has efficient methods for stripping the beginning and end of a string_view.",
      "range": {
        "startLine": 72,
        "startChar": 4,
        "endLine": 72,
        "endChar": 27
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45f4026a_f000853b",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 26
      },
      "lineNbr": 72,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-04T14:23:01Z",
      "side": 1,
      "message": "Changed it back to string_view. Done",
      "parentUuid": "1b1d4661_abd4d150",
      "range": {
        "startLine": 72,
        "startChar": 4,
        "endLine": 72,
        "endChar": 27
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e56d20df_dd27c482",
        "filename": "redfish-core/include/utils/validate_params_length.hpp",
        "patchSetId": 26
      },
      "lineNbr": 5,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-25T18:48:40Z",
      "side": 1,
      "message": "This file contains complexity that we aim to disallow.  Most of what this is doing is handling a simple length check.  This can be done simply and easily inline, as has been done before.  When done that way, it\u0027s much easier to read.\n\nPlease delete this file, and handle your errors without templates.",
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0f76d3b_88b2068e",
        "filename": "redfish-core/include/utils/validate_params_length.hpp",
        "patchSetId": 26
      },
      "lineNbr": 5,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-04T14:23:01Z",
      "side": 1,
      "message": "Okay, we will review it again. Is there any range check in readJson (not overflow check)? What if user provide a very long string in request? Is there any limitation for payload from user in bmcweb? Thanks in advance\n\nAnyway this discussion already exists:\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/32536/20/redfish-core/include/utils/validate_params_length.hpp#3\n\nPlease, answer to it. Thanks in advance",
      "parentUuid": "e56d20df_dd27c482",
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be09664d_d02439f1",
        "filename": "redfish-core/include/utils/validate_params_length.hpp",
        "patchSetId": 26
      },
      "lineNbr": 5,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-04T15:53:25Z",
      "side": 1,
      "message": "\"Is there any range check in readJson (not overflow check)?\"\n\nNo, we expect the dbus interface on the daemon side to impose whatever size and range checks it needs, and return appropriate error codes.\n\nIn theory, readJson should support using something like boost::safe_numerics::safe as input, but that\u0027s a much bigger discussion and could be had a project level.\n\n\"What if user provide a very long string in request?\"\nDepending on what limit you run over, you might get an HTTP 400, if you go over the request size limit, or you might get a DBus error if you go over the message size limit.  If you go over an arbitrary property/method input limit, it\u0027s expected that the receiving dbus daemon return an appropriate error code.\n\n\"Is there any limitation for payload from user in bmcweb?\"\nYes, there are several, but once a user is logged the limit is fairly large, given there are use cases with large payloads send to dbus.",
      "parentUuid": "c0f76d3b_88b2068e",
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "773bbb86_6bdde321",
        "filename": "redfish-core/include/utils/validate_params_length.hpp",
        "patchSetId": 26
      },
      "lineNbr": 5,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-07T07:47:06Z",
      "side": 1,
      "message": "Ok, thanks for answer",
      "parentUuid": "be09664d_d02439f1",
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7af8a63d_8d61e26e",
        "filename": "redfish-core/include/utils/validate_params_length.hpp",
        "patchSetId": 26
      },
      "lineNbr": 5,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-12-14T11:21:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "773bbb86_6bdde321",
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e51761e_d788a121",
        "filename": "redfish-core/include/utils/validate_params_length.hpp",
        "patchSetId": 26
      },
      "lineNbr": 31,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-25T18:48:40Z",
      "side": 1,
      "message": "You\u0027re casting a size_t to a size_t?",
      "range": {
        "startLine": 31,
        "startChar": 19,
        "endLine": 31,
        "endChar": 45
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73b11922_f14c3861",
        "filename": "redfish-core/include/utils/validate_params_length.hpp",
        "patchSetId": 26
      },
      "lineNbr": 31,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-04T14:23:01Z",
      "side": 1,
      "message": "Yes, it is mistake. Thanks",
      "parentUuid": "0e51761e_d788a121",
      "range": {
        "startLine": 31,
        "startChar": 19,
        "endLine": 31,
        "endChar": 45
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f9d9a18_95cc8e60",
        "filename": "redfish-core/include/utils/validate_params_length.hpp",
        "patchSetId": 26
      },
      "lineNbr": 31,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-09T13:59:01Z",
      "side": 1,
      "message": "Removed validate_params_length in the latest patchset",
      "parentUuid": "73b11922_f14c3861",
      "range": {
        "startLine": 31,
        "startChar": 19,
        "endLine": 31,
        "endChar": 45
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9104aef_0de12dd3",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 100,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-25T18:48:40Z",
      "side": 1,
      "message": "This is technically the wrong key.",
      "range": {
        "startLine": 100,
        "startChar": 56,
        "endLine": 100,
        "endChar": 72
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3dd060c7_2d7047df",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 100,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-04T14:23:01Z",
      "side": 1,
      "message": "I will change message to \"PropertyValueIncorrect\"",
      "parentUuid": "d9104aef_0de12dd3",
      "range": {
        "startLine": 100,
        "startChar": 56,
        "endLine": 100,
        "endChar": 72
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15a886f8_ab61f0f5",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 100,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-08T08:02:43Z",
      "side": 1,
      "message": "Not what I was pointing out, but fine.\n\nThis needs to be \"MetricProperties/1\" where 1 isvthe index that failed.",
      "parentUuid": "3dd060c7_2d7047df",
      "range": {
        "startLine": 100,
        "startChar": 56,
        "endLine": 100,
        "endChar": 72
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef58a922_1374c46e",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 100,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-08T12:20:16Z",
      "side": 1,
      "message": "Ok, it makes more sense. Thanks",
      "parentUuid": "15a886f8_ab61f0f5",
      "range": {
        "startLine": 100,
        "startChar": 56,
        "endLine": 100,
        "endChar": 72
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36fc8cbd_deab0ae5",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 100,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-09T13:59:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ef58a922_1374c46e",
      "range": {
        "startLine": 100,
        "startChar": 56,
        "endLine": 100,
        "endChar": 72
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e42c9ed_fb59003b",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 118,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-25T18:48:40Z",
      "side": 1,
      "message": "Please move out of this class.\n\nAlso, can this just return bool, and take res as an input?  That pattern tends to work better, and keeps the indexing information available.",
      "range": {
        "startLine": 118,
        "startChar": 4,
        "endLine": 118,
        "endChar": 11
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd582ba7_54522470",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 118,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-04T14:23:01Z",
      "side": 1,
      "message": "Where is the proof that your pattern is better? It requires a different function parameters and different return type. Okay, it helps to fetch only an index, but we can get similar information using optional. Unless you mean that we want to omit std::string move? Anyway I will change try to change it, but I want your opinion.",
      "parentUuid": "6e42c9ed_fb59003b",
      "range": {
        "startLine": 118,
        "startChar": 4,
        "endLine": 118,
        "endChar": 11
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b13a06ee_49c114c4",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 118,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-04T16:34:29Z",
      "side": 1,
      "message": "\"Where is the proof that your pattern is better? \"\n\nBecause we use that pattern in other places?  Because code that\u0027s been originally written the way you did it, had to be translated to the way I\u0027m suggesting because it was found to be wrong after merging?  Because it\u0027s a much easier pattern to get right?  I have no formal \"proof\".\n\nAs is, you\u0027re returning the wrong json pointer in your error code on line 191.  If you can get the pointer type correct with this pattern, I\u0027m ok with it, but I think it\u0027s much easier to get correct by passing res in.",
      "parentUuid": "cd582ba7_54522470",
      "range": {
        "startLine": 118,
        "startChar": 4,
        "endLine": 118,
        "endChar": 11
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d7d7ee1_d11459a9",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 118,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-09T13:59:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b13a06ee_49c114c4",
      "range": {
        "startLine": 118,
        "startChar": 4,
        "endLine": 118,
        "endChar": 11
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f64d09db_d4b93f29",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 139,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-25T18:48:40Z",
      "side": 1,
      "message": "considering this is static, please move this outside the class itself.",
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23a42d7f_9d6f89d0",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 139,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-04T14:23:01Z",
      "side": 1,
      "message": "This is only used inside this class. Is there any better argument to move it outside?",
      "parentUuid": "f64d09db_d4b93f29",
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed969d38_a5d59982",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 139,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-12-14T11:21:38Z",
      "side": 1,
      "message": "@Ed Tanous, any comment?",
      "parentUuid": "23a42d7f_9d6f89d0",
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "864938f9_4d99e53a",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 139,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-08T17:38:14Z",
      "side": 1,
      "message": "See comment on the patchset previous to this.  The Node-inherited class objects should only implement methods overriden from their subclass, nothing more, as it makes future transitions harder.",
      "parentUuid": "ed969d38_a5d59982",
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b896292_57f99392",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 139,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2021-02-09T13:06:40Z",
      "side": 1,
      "message": "Yes, understood. Already changed it in the latest patchset. Thanks",
      "parentUuid": "864938f9_4d99e53a",
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab0c980b_f3dc9c66",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 163,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-25T18:48:40Z",
      "side": 1,
      "message": "Please don\u0027t do this this way.  Again, it obfuscates what should be a simple length check, and adds a ton of complicated code, including a construction of a tuple, which seems like it\u0027s just designed so you can use variadic templates.\n\nPlease do this in the more conventional way.\nif (name.size() \u003e maxReportIdLen){\n    // set error\n    return\n}",
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b17a6532_c1daff1c",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 163,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-09T13:59:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab0c980b_f3dc9c66",
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a57369c_985ed496",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 168,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-25T18:48:40Z",
      "side": 1,
      "message": "This kind of check comes up all the time.  If you really want to write generic utils code, a check for this kind of thing (and moving some other code to it) would be good.\n\nWith that said, this is the current best practice, so this is fine as-is.",
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b54f1646_8358a16a",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 168,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-01T14:04:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a57369c_985ed496",
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d3af75d_a05b7031",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 176,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-25T18:48:40Z",
      "side": 1,
      "message": "Are you sure this is the right error?  In this case the type was correct, but the values were wrong?  I suspect there\u0027s a more specific error there.",
      "range": {
        "startLine": 176,
        "startChar": 22,
        "endLine": 176,
        "endChar": 46
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c51cc25_42de9303",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 176,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-04T14:23:01Z",
      "side": 1,
      "message": "I took it because it was the closest matching one that was already defined. I will add \"PropertyValueIncorrect\" to the list of error messages to correct it.",
      "parentUuid": "0d3af75d_a05b7031",
      "range": {
        "startLine": 176,
        "startChar": 22,
        "endLine": 176,
        "endChar": 46
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3066f1e_68b285a3",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 176,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-04T16:34:29Z",
      "side": 1,
      "message": "So you\u0027re intending to go to the redfish committee and add the type;  I commend your bravery, and dedication, and please do if that\u0027s something you\u0027re interested in, but I don\u0027t think that level of change will be needed to get this patchset in.\n\nI think what you want here is a PropertyValueNotInList error.\n\n\"Indicates that a property was given the correct value type but the value of that property was not supported.  This values not in an enumeration\"\n\nWhile this isn\u0027t technically an enumeration, I believe it\u0027s the closest match redfish has to what you need today.  Also, we\u0027ve used it in other similar situations.",
      "parentUuid": "5c51cc25_42de9303",
      "range": {
        "startLine": 176,
        "startChar": 22,
        "endLine": 176,
        "endChar": 46
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d95f2fe_52f2904c",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 176,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-07T07:47:06Z",
      "side": 1,
      "message": "Type exists in the redfish registries. You can check it by youreslf: https://redfish.dmtf.org/registries/Base.1.8.1.json",
      "parentUuid": "c3066f1e_68b285a3",
      "range": {
        "startLine": 176,
        "startChar": 22,
        "endLine": 176,
        "endChar": 46
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90e10e51_e5369f59",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 176,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-08T07:52:50Z",
      "side": 1,
      "message": "For type mismatch there is another message PropertyValueTypeError. Anyway I will add a PropertyValueIncorrect to bmcweb for future use\n\nPropertyValueFormatError: Indicates that a property was given the correct value type but the value of that property was not supported\nPropertyValueIncorrect: Indicates that the requested write of a property value could not be completed, because of an incorrect value of the property. Examples include values that do not match a regular expression requirement or passwords that do not match the implementation constraints.\n\nPropertyValueFormatError and PropertyValueIncorrect can be used interchangeably in some cases.",
      "parentUuid": "3d95f2fe_52f2904c",
      "range": {
        "startLine": 176,
        "startChar": 22,
        "endLine": 176,
        "endChar": 46
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec0ff108_6b780a96",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 176,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-08T08:02:43Z",
      "side": 1,
      "message": "Sweeet!  Didn\u0027t know they added that one.  Yes, that\u0027s the thing to use.\nPropertyValueIncorrect",
      "parentUuid": "90e10e51_e5369f59",
      "range": {
        "startLine": 176,
        "startChar": 22,
        "endLine": 176,
        "endChar": 46
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cae7ffc_e2dd78c1",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 176,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-09T13:59:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ec0ff108_6b780a96",
      "range": {
        "startLine": 176,
        "startChar": 22,
        "endLine": 176,
        "endChar": 46
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8858a9f9_e4c78bd8",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 191,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-25T18:48:40Z",
      "side": 1,
      "message": "Technically this is the wrong json pointer to the key, but because you\u0027ve created a helper, you\u0027ve lost the actual key index.  I suspect your check should just be inlined, or the res object can be put into replaceReportActions.",
      "range": {
        "startLine": 191,
        "startChar": 63,
        "endLine": 191,
        "endChar": 76
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6059ea67_83d775c6",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 191,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-04T14:23:01Z",
      "side": 1,
      "message": "reportActions is already a vector of strings. message::propertyValueNotInList takes strings as parameters. Can you be more clear? Thanks",
      "parentUuid": "8858a9f9_e4c78bd8",
      "range": {
        "startLine": 191,
        "startChar": 63,
        "endLine": 191,
        "endChar": 76
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a19e25f_b2485cb9",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 191,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-04T16:34:29Z",
      "side": 1,
      "message": "This argument should be \nReportActions/\u003cindex of element that was wrong\u003e\nand ideally contain entries for every parameter that was wrong (although that\u0027s not required).",
      "parentUuid": "6059ea67_83d775c6",
      "range": {
        "startLine": 191,
        "startChar": 63,
        "endLine": 191,
        "endChar": 76
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a70af1b3_fc80981a",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 191,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-07T07:47:06Z",
      "side": 1,
      "message": "Ok",
      "parentUuid": "1a19e25f_b2485cb9",
      "range": {
        "startLine": 191,
        "startChar": 63,
        "endLine": 191,
        "endChar": 76
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dff7f71_d42d4ed1",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 191,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-09T13:59:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a70af1b3_fc80981a",
      "range": {
        "startLine": 191,
        "startChar": 63,
        "endLine": 191,
        "endChar": 76
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1febea9a_b70b27dc",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 210,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-25T18:48:40Z",
      "side": 1,
      "message": "Please just do this the conventional way.\n\nif (interval \u003e maxShortParamLength){\n    // return error\n}\n\nAlso, isn\u0027t this check unnecessary, given that fromDurationFormat should parse it and return an error code anyway?",
      "range": {
        "startLine": 210,
        "startChar": 17,
        "endLine": 210,
        "endChar": 36
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c4a84e1_f93b2d1c",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 210,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-04T14:23:01Z",
      "side": 1,
      "message": "Yes, this check is no more required if std::from_chars stops after detecting value overflow.",
      "parentUuid": "1febea9a_b70b27dc",
      "range": {
        "startLine": 210,
        "startChar": 17,
        "endLine": 210,
        "endChar": 36
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4adca543_e44a9db3",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 210,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-04T16:34:29Z",
      "side": 1,
      "message": "excellent!",
      "parentUuid": "9c4a84e1_f93b2d1c",
      "range": {
        "startLine": 210,
        "startChar": 17,
        "endLine": 210,
        "endChar": 36
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4ac77d4_5fd12514",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 210,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-09T13:59:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4adca543_e44a9db3",
      "range": {
        "startLine": 210,
        "startChar": 17,
        "endLine": 210,
        "endChar": 36
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef711a5b_0e88b1f3",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 216,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-25T18:48:40Z",
      "side": 1,
      "message": "Please use params.scanPeriod here and below.  It makes the code easier to read.",
      "range": {
        "startLine": 216,
        "startChar": 12,
        "endLine": 216,
        "endChar": 23
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "797e1a92_df343b68",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 216,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-04T14:23:01Z",
      "side": 1,
      "message": "I am not sure of it. Thanks in advance",
      "parentUuid": "ef711a5b_0e88b1f3",
      "range": {
        "startLine": 216,
        "startChar": 12,
        "endLine": 216,
        "endChar": 23
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5063944c_5a165aa1",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 216,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-04T16:34:29Z",
      "side": 1,
      "message": "I suspect with your range checks getting simplified or going away, this will resolve itself, as scanPeriod will be a value, and no longer part of a tuple that requires taking a reference to.",
      "parentUuid": "797e1a92_df343b68",
      "range": {
        "startLine": 216,
        "startChar": 12,
        "endLine": 216,
        "endChar": 23
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67286429_a5910d2e",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 216,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-07T07:47:06Z",
      "side": 1,
      "message": "scanPeriod is a reference to an element that is stored in AddReportArgs structure. Do you suggest to use a addReportArgs.scanPeriod and drop the idea of unpacking a structure?",
      "parentUuid": "5063944c_5a165aa1",
      "range": {
        "startLine": 216,
        "startChar": 12,
        "endLine": 216,
        "endChar": 23
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67fb02b8_0e4d65b9",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 216,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-12-14T11:21:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "67286429_a5910d2e",
      "range": {
        "startLine": 216,
        "startChar": 12,
        "endLine": 216,
        "endChar": 23
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57f007c1_287af6e9",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 217,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-25T18:48:40Z",
      "side": 1,
      "message": "This needs to handle out of range values here.   time_t is only uint32_t on 32 bit systems.\n\nIdeally, the API would change to be a uint32_t.",
      "range": {
        "startLine": 217,
        "startChar": 38,
        "endLine": 217,
        "endChar": 78
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90b39c4c_632dd234",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 217,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-04T14:23:01Z",
      "side": 1,
      "message": "Ok",
      "parentUuid": "57f007c1_287af6e9",
      "range": {
        "startLine": 217,
        "startChar": 38,
        "endLine": 217,
        "endChar": 78
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4224a8ee_f99e88b6",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 217,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-09T13:59:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "90b39c4c_632dd234",
      "range": {
        "startLine": 217,
        "startChar": 38,
        "endLine": 217,
        "endChar": 78
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfff2516_01b55cfe",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 251,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-25T18:48:40Z",
      "side": 1,
      "message": "Again, please do this the conventional way.",
      "range": {
        "startLine": 251,
        "startChar": 17,
        "endLine": 251,
        "endChar": 37
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9940417d_d30f4248",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 251,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-09T13:59:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dfff2516_01b55cfe",
      "range": {
        "startLine": 251,
        "startChar": 17,
        "endLine": 251,
        "endChar": 37
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "477689cd_40943aef",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 258,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-25T18:48:40Z",
      "side": 1,
      "message": "Please avoid auto here.\n\nalso, suspect you want const (or do it by move).",
      "range": {
        "startLine": 258,
        "startChar": 17,
        "endLine": 258,
        "endChar": 21
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a185e652_8a005002",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 258,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-04T14:23:01Z",
      "side": 1,
      "message": "Ok",
      "parentUuid": "477689cd_40943aef",
      "range": {
        "startLine": 258,
        "startChar": 17,
        "endLine": 258,
        "endChar": 21
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4414822c_9569fec2",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 258,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-09T13:59:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a185e652_8a005002",
      "range": {
        "startLine": 258,
        "startChar": 17,
        "endLine": 258,
        "endChar": 21
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "417c2892_feeec0a5",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 276,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-25T18:48:40Z",
      "side": 1,
      "message": "Please avoid using auto here, as it obfuscates the type.",
      "range": {
        "startLine": 276,
        "startChar": 18,
        "endLine": 276,
        "endChar": 22
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e86e3a94_49d850ec",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 276,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-04T14:23:01Z",
      "side": 1,
      "message": "Ok",
      "parentUuid": "417c2892_feeec0a5",
      "range": {
        "startLine": 276,
        "startChar": 18,
        "endLine": 276,
        "endChar": 22
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c98e9d1e_30055915",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 26
      },
      "lineNbr": 276,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-09T13:59:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e86e3a94_49d850ec",
      "range": {
        "startLine": 276,
        "startChar": 18,
        "endLine": 276,
        "endChar": 22
      },
      "revId": "a09c2fc8df4c3e96341e89d33d11e65a463a8ed1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}