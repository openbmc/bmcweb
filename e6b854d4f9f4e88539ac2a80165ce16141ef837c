{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5d93bba1_a3af986f",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 1
      },
      "lineNbr": 420,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-07-05T14:37:03Z",
      "side": 1,
      "message": "Similar to https://gerrit.openbmc.org/c/openbmc/bmcweb/+/64638, I think the correct type is int64 as specified in https://redfish.dmtf.org/schemas/v1/PCIeDevice_v1.xml",
      "range": {
        "startLine": 420,
        "startChar": 0,
        "endLine": 420,
        "endChar": 37
      },
      "revId": "e6b854d4f9f4e88539ac2a80165ce16141ef837c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a5e1d98_dcf07a10",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 1
      },
      "lineNbr": 420,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-07-05T18:09:19Z",
      "side": 1,
      "message": "As commented in https://gerrit.openbmc.org/c/openbmc/bmcweb/+/64638/comment/7bcb0cf4_26ab9d55/, it seems that `size_t` seems preferred for the countable entities.",
      "parentUuid": "5d93bba1_a3af986f",
      "range": {
        "startLine": 420,
        "startChar": 0,
        "endLine": 420,
        "endChar": 37
      },
      "revId": "e6b854d4f9f4e88539ac2a80165ce16141ef837c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80487968_e0d57723",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 1
      },
      "lineNbr": 420,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-07-05T23:04:26Z",
      "side": 1,
      "message": "Why?  There\u0027s no requirement that Redfish and Dbus match types.  You need to be quoting phosphor-dbus-interfaces, not redfish.  Unless we go over int32_t_max, then size-t, int64_t, and int32_t produce the same result.",
      "parentUuid": "4a5e1d98_dcf07a10",
      "range": {
        "startLine": 420,
        "startChar": 0,
        "endLine": 420,
        "endChar": 37
      },
      "revId": "e6b854d4f9f4e88539ac2a80165ce16141ef837c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8047c2b2_f4c75f45",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 1
      },
      "lineNbr": 421,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-07-05T13:43:27Z",
      "side": 1,
      "message": "Can we change this to be similar to what we did with the properties in PCIeSlot?\nhttps://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/pcie.hpp#L162C1-L162C1\n   \n   std::string generationSupported;\n   size_t maxLanes \u003d 0;",
      "revId": "e6b854d4f9f4e88539ac2a80165ce16141ef837c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24ea1a88_3f9fab85",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 1
      },
      "lineNbr": 494,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-07-05T18:09:19Z",
      "side": 1,
      "message": "Since the output will be omitted in case MaxLanes is not set or set to default (0), \nAs @Lakshmi-y commented, it may be better to be done like\n\n```\n  size_t lanesInUse \u003d 0;   \n  size_t maxLanes \u003d 0;\n  const bool success \u003d sdbusplus::unpackPropertiesNoThrow(...);\n  if(maxLanes !\u003d 0)\n  {\n       ...\n   }\n```",
      "range": {
        "startLine": 492,
        "startChar": 0,
        "endLine": 494,
        "endChar": 46
      },
      "revId": "e6b854d4f9f4e88539ac2a80165ce16141ef837c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}