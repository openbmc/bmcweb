{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "61da7a91_0076bc98",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2022-03-22T22:39:34Z",
      "side": 1,
      "message": "Attempt to appease clang-tidy, round 2.",
      "revId": "43e1e29927a5d78236d1ab32219ec75de17280f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "393c9bc2_6e4da610",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-24T21:25:53Z",
      "side": 1,
      "message": "Looking pretty good.",
      "revId": "43e1e29927a5d78236d1ab32219ec75de17280f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fee4d74e_3578cb74",
        "filename": "redfish-core/lib/ethernet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 124,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-24T21:25:53Z",
      "side": 1,
      "message": "I realize that some of these were duplicated, but in practice the code before was a lot easier to read given all the strings were inline.  We\u0027ve also seen cases where that optimized better when we inlined the strings.\n\nIf this is a reformatting you\u0027d like to do, lets take it up in another patch, separate from adding ipv6 dhcp support, and we can discuss the advantages, but putting them both together is causing me trouble reviewing what the functional diff is because basically every call site has changed.",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 124,
        "endChar": 64
      },
      "revId": "43e1e29927a5d78236d1ab32219ec75de17280f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfbc4d19_57292204",
        "filename": "redfish-core/lib/ethernet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 124,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2022-03-25T17:03:08Z",
      "side": 1,
      "message": "I would not have messed with this at all but for the fact that clang-tidy disliked\n\nif ()\n  return \"lit_str\";\nelse if ()\n  return \"lit_str\";\n...\nreturn \"lit_str\";\n\nThus the constexpr and the var assignment model was my favored answer.\n\nI have this vague recollection that I may have tried to dedup these in the past, and you requested not to. \n\nI also like that the various code blocks get shorter, ala translateDHCPv4DbusToBool, and translateDHCPv6DbusToModeString.\n\nWill revert, just expect me to forget you prefer the inline vs the dedup.",
      "parentUuid": "fee4d74e_3578cb74",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 124,
        "endChar": 64
      },
      "revId": "43e1e29927a5d78236d1ab32219ec75de17280f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96a0bf7f_0fa9d428",
        "filename": "redfish-core/lib/ethernet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 124,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-28T19:07:16Z",
      "side": 1,
      "message": "\u003e I would not have messed with this at all but for the fact that clang-tidy disliked\n\u003e \n\u003e if ()\n\u003e   return \"lit_str\";\n\u003e else if ()\n\u003e   return \"lit_str\";\n\u003e ...\n\u003e return \"lit_str\";\n\nThat\u0027s.... odd.  We do that pattern other places and clang-tidy seems fine with it, do you remember what the error was?  Was it related to the return type of that method returning const char* instead of string or string_view?  (just guessing)\n\n\u003e \n\u003e Thus the constexpr and the var assignment model was my favored answer.\n\u003e \n\u003e I have this vague recollection that I may have tried to dedup these in the past, and you requested not to. \n\nThe main concern here is declaring things at global scope, then those things get used in another file over, and we end up with weird #include dependencies (as a real example, SensorCollection relied on AccountService) that take a long convoluted set of patches to resolve.  There is probably a pattern for these that might be reasonable to maintain, and I\u0027m happy to have that discussion, just not in a patch that\u0027s also changing behavior, because it makes it hard to validate that we\u0027re getting the same optimization, binary size, and other stuff.\n\n\u003e \n\u003e I also like that the various code blocks get shorter, ala translateDHCPv4DbusToBool, and translateDHCPv6DbusToModeString.\n\u003e \n\u003e Will revert, just expect me to forget you prefer the inline vs the dedup.\n\nNo worries.  Like I said, it\u0027s largely about consistency, and FWIW, this file suffers from being one of the first we wrote, and having non-trivial dbus conversion, and so it does some strange things.  I\u0027m not completely against non-inline variables, I\u0027d just like them to be backed by the specification if we do them.\n\nAKA: https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/51993/2/redfish-core/include/redfish_defs.hpp\n\n\nIf you have strong opinions on this, I\u0027d love your input on the above.",
      "parentUuid": "dfbc4d19_57292204",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 124,
        "endChar": 64
      },
      "revId": "43e1e29927a5d78236d1ab32219ec75de17280f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55830849_43d2bfe2",
        "filename": "redfish-core/lib/ethernet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 124,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2022-03-28T19:43:46Z",
      "side": 1,
      "message": "WRT clang-tidy:\nhttps://clang.llvm.org/extra/clang-tidy/checks/readability-else-after-return.html\n\nWRT constexpr\u0027s, I don\u0027t suppose C++ would have allowed \u0027static\u0027 to prevent the module leak issue. Either way, thanks for guarding the intent of the change. It\u0027s so easy to lose sight of the minimum code required to complete the task.\n\nI\u0027ll take a look at that WIP commit. Redfish schemas are such a joy to manually parse that something that aids that would be appreciated. Of course the cure has to be a cure.... ;)",
      "parentUuid": "96a0bf7f_0fa9d428",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 124,
        "endChar": 64
      },
      "revId": "43e1e29927a5d78236d1ab32219ec75de17280f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36a512be_12727977",
        "filename": "redfish-core/lib/ethernet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 138,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-24T21:25:53Z",
      "side": 1,
      "message": "Same as below, camel case as Dbus please.",
      "range": {
        "startLine": 138,
        "startChar": 27,
        "endLine": 138,
        "endChar": 28
      },
      "revId": "43e1e29927a5d78236d1ab32219ec75de17280f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ffb5bd2c_313c0818",
        "filename": "redfish-core/lib/ethernet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 138,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2022-03-25T17:03:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "36a512be_12727977",
      "range": {
        "startLine": 138,
        "startChar": 27,
        "endLine": 138,
        "endChar": 28
      },
      "revId": "43e1e29927a5d78236d1ab32219ec75de17280f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d00376f_136c6940",
        "filename": "redfish-core/lib/ethernet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-24T21:25:53Z",
      "side": 1,
      "message": "Typo.  ALso, please follow the naming convention.  D in dbus should be capitalized.",
      "range": {
        "startLine": 144,
        "startChar": 19,
        "endLine": 144,
        "endChar": 27
      },
      "revId": "43e1e29927a5d78236d1ab32219ec75de17280f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1685858a_36347d53",
        "filename": "redfish-core/lib/ethernet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2022-03-25T17:03:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d00376f_136c6940",
      "range": {
        "startLine": 144,
        "startChar": 19,
        "endLine": 144,
        "endChar": 27
      },
      "revId": "43e1e29927a5d78236d1ab32219ec75de17280f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa9f2cd4_2513e703",
        "filename": "redfish-core/lib/ethernet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 159,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-24T21:25:53Z",
      "side": 1,
      "message": "Did this name really have to change?  I\u0027m not really sure what the word \"next\" has to do with it, but it\u0027s been added to all the parameters as well as the function name?  Maybe there\u0027s a good reason why it\u0027s the \"next\" one that I\u0027m not understanding?  (seems likely)",
      "range": {
        "startLine": 159,
        "startChar": 19,
        "endLine": 159,
        "endChar": 38
      },
      "revId": "43e1e29927a5d78236d1ab32219ec75de17280f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fda9d09_88d19ec6",
        "filename": "redfish-core/lib/ethernet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 159,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2022-03-25T17:03:08Z",
      "side": 1,
      "message": "I don\u0027t recall my thought process for this, thus can\u0027t/won\u0027t defend it.",
      "parentUuid": "fa9f2cd4_2513e703",
      "range": {
        "startLine": 159,
        "startChar": 19,
        "endLine": 159,
        "endChar": 38
      },
      "revId": "43e1e29927a5d78236d1ab32219ec75de17280f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b0d08442_d75528e3",
        "filename": "redfish-core/lib/ethernet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 159,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-28T19:07:16Z",
      "side": 1,
      "message": "No worries.  It is naming, so it\u0027s not a bridge I\u0027m going to stand on if you really want to call it next, I just didn\u0027t really get the reference.",
      "parentUuid": "8fda9d09_88d19ec6",
      "range": {
        "startLine": 159,
        "startChar": 19,
        "endLine": 159,
        "endChar": 38
      },
      "revId": "43e1e29927a5d78236d1ab32219ec75de17280f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1970bf6d_176d3411",
        "filename": "redfish-core/lib/ethernet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 1281,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-24T21:25:53Z",
      "side": 1,
      "message": "Can we avoid the terinary and stick with some normal conditionals here please?  It makes this code really tough to read.",
      "range": {
        "startLine": 1278,
        "startChar": 0,
        "endLine": 1281,
        "endChar": 0
      },
      "revId": "43e1e29927a5d78236d1ab32219ec75de17280f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "caaf75e0_9104082a",
        "filename": "redfish-core/lib/ethernet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 1281,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2022-03-25T17:03:08Z",
      "side": 1,
      "message": "Not sure I agree with the readability angle. This is long established C form, unlike the gibberish extant in C++.\nChanging per your request.",
      "parentUuid": "1970bf6d_176d3411",
      "range": {
        "startLine": 1278,
        "startChar": 0,
        "endLine": 1281,
        "endChar": 0
      },
      "revId": "43e1e29927a5d78236d1ab32219ec75de17280f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0dc09bc_6d88296d",
        "filename": "redfish-core/lib/ethernet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 1281,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-03-28T07:14:20Z",
      "side": 1,
      "message": "I would vote for using value_or since dhcpv4Enabled is an std::optional\n\nconst bool nextv4DHCPState \u003d v4dhcpParms.dhcpv4Enabled.value_or(translateDHCPv4dbusToBool(ethData.DHCPEnabled));",
      "parentUuid": "caaf75e0_9104082a",
      "range": {
        "startLine": 1278,
        "startChar": 0,
        "endLine": 1281,
        "endChar": 0
      },
      "revId": "43e1e29927a5d78236d1ab32219ec75de17280f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e95f10c3_981cd375",
        "filename": "redfish-core/lib/ethernet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 1281,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-03-28T07:31:52Z",
      "side": 1,
      "message": "I also suggest using `value_or` here",
      "parentUuid": "e0dc09bc_6d88296d",
      "range": {
        "startLine": 1278,
        "startChar": 0,
        "endLine": 1281,
        "endChar": 0
      },
      "revId": "43e1e29927a5d78236d1ab32219ec75de17280f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f82fa324_a246f981",
        "filename": "redfish-core/lib/ethernet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 1281,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2022-03-28T17:36:55Z",
      "side": 1,
      "message": "It appears value_or can throw an exception. BMCWeb is designed to avoid exceptions. I expect using syntax similar to the remaining statements in the function are preferred.",
      "parentUuid": "e95f10c3_981cd375",
      "range": {
        "startLine": 1278,
        "startChar": 0,
        "endLine": 1281,
        "endChar": 0
      },
      "revId": "43e1e29927a5d78236d1ab32219ec75de17280f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccd8128a_6c8932ea",
        "filename": "redfish-core/lib/ethernet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 1281,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-28T19:07:16Z",
      "side": 1,
      "message": "value_or doesn\u0027t throw exceptions so its use would be fine, with that said, there are zero uses of it in the bmcweb codebase to date, so I\u0027m not going to require it on new patches, although it could\u0027ve worked fine here.",
      "parentUuid": "f82fa324_a246f981",
      "range": {
        "startLine": 1278,
        "startChar": 0,
        "endLine": 1281,
        "endChar": 0
      },
      "revId": "43e1e29927a5d78236d1ab32219ec75de17280f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae975a1b_d850d125",
        "filename": "redfish-core/lib/ethernet.hpp",
        "patchSetId": 4
      },
      "lineNbr": 1281,
      "author": {
        "id": 1000278
      },
      "writtenOn": "2022-03-28T19:43:46Z",
      "side": 1,
      "message": "I don\u0027t know when this is true/false:\n\"Any exception thrown by the selected constructor of the return value T.\"\n\nUsing the code as written clearly does NOT throw, and is preferred as a result.",
      "parentUuid": "ccd8128a_6c8932ea",
      "range": {
        "startLine": 1278,
        "startChar": 0,
        "endLine": 1281,
        "endChar": 0
      },
      "revId": "43e1e29927a5d78236d1ab32219ec75de17280f5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}