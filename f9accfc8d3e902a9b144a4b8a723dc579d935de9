{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "236c06e9_4869d0a0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-23T15:12:36Z",
      "side": 1,
      "message": "Cool.  Sounds like this needs to be marked as WIP until then?",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 20,
        "endChar": 0
      },
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7143df0c_77f4558c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-09-24T09:40:08Z",
      "side": 1,
      "message": "No, it is my understanding that this was explicitly requested to go in and eventually get completed when the mapping is ready to correctly initialize the MessageArgs.\n\nI can remove the \u0027MessageArgs\u0027 property from the response, as is already done in\nfunction \u0027dBusEventLogEntryGet\u0027\nhttps://github.com/openbmc/bmcweb/blob/a14c9113226dcae33a36eb4e50abbcc28be998ae/redfish-core/lib/log_services.hpp#L1760\n\nis that what you want?",
      "parentUuid": "236c06e9_4869d0a0",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 20,
        "endChar": 0
      },
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efaa12d0_a8d50278",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-24T19:56:14Z",
      "side": 1,
      "message": "We cannot check in code that produces redfish that\u0027s hardcoded wrong and breaks existing systems.  MessageArgs isn\u0027t a required field in redfish if messageId doesn\u0027t exist, so yeah, omitting is should be fine.",
      "parentUuid": "7143df0c_77f4558c",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 20,
        "endChar": 0
      },
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "973fc921_a86731b3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-10-10T13:56:35Z",
      "side": 1,
      "message": "I interpret this as resolved, please un-resolve if there\u0027s still any issue.",
      "parentUuid": "efaa12d0_a8d50278",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 20,
        "endChar": 0
      },
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73d797b4_b3a4d87f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-23T15:12:36Z",
      "side": 1,
      "message": "what does this mean?",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 23
      },
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19c9c9fe_2f47f5bd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-09-24T09:40:08Z",
      "side": 1,
      "message": "The order of \u0027MessageArgs\u0027 provided via \u0027AdditionalData\u0027 on dbus is not correct.",
      "parentUuid": "73d797b4_b3a4d87f",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 23
      },
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "087b74d7_19c4596c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-24T19:56:14Z",
      "side": 1,
      "message": "Lets just remove all mention of messageargs.  It\u0027s unimportant to this commit.",
      "parentUuid": "19c9c9fe_2f47f5bd",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 23
      },
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ba9a539_55bc1304",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-10-10T13:56:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "087b74d7_19c4596c",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 23
      },
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9df784a3_b0317278",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-23T15:12:36Z",
      "side": 1,
      "message": "Any way to test this without directly creating a dbus entry?  Maybe triggering a real event (like a reboot) instead?",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 52,
        "endChar": 6
      },
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e40ca9e8_d5944546",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-09-24T09:40:08Z",
      "side": 1,
      "message": "It depends on which daemons generate phosphor-logging events. I\u0027m not aware of any overview or complete list. Patrick would probably have an idea on this.",
      "parentUuid": "9df784a3_b0317278",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 52,
        "endChar": 6
      },
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c778e671_d974266b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-24T19:56:14Z",
      "side": 1,
      "message": "Cool.  Lets leave this open until the commit message is updated with a functional test.",
      "parentUuid": "e40ca9e8_d5944546",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 52,
        "endChar": 6
      },
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8aacc230_5e54796c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-10-10T13:56:35Z",
      "side": 1,
      "message": "I\u0027m implementing in bmcweb here, not in other daemons.\n\nIf other daemons create the log entry or not, it does not matter to this implementation. The implementation is about the dbus log entries, their dbus interface, consuming that in bmcweb and exposing it via redfish.\n\nRelying on another daemon to produce a specific log entry or produce one at all creates a problem for the reproducibility of that manual test. \n\nIs there any log entry instance that you think the implementation would fail on?",
      "parentUuid": "c778e671_d974266b",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 52,
        "endChar": 6
      },
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "993d1324_53df132d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 67,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-23T15:12:36Z",
      "side": 1,
      "message": "Can you rewrite your test a little to remove the parts that don\u0027t actually effect the outside interface?  For example, \"makes it through the filtering code\" I\u0027m not really sure what that means, and isn\u0027t really relevant to your test.",
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a3be529_8b71c6a2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 67,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-09-24T09:40:08Z",
      "side": 1,
      "message": "There is event filtration happening based on the properties set for the event subscription. So it\u0027s quite important we go through that, otherwise the event will not come out on the other side.\n\nSo it is affecting the outside interface.",
      "parentUuid": "993d1324_53df132d",
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a7d47b3_88b9589b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 67,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-24T19:56:14Z",
      "side": 1,
      "message": "if you\u0027re going to test filtering, then add it to your test by imposing filters.  What\u0027s written here doesn\u0027t really test anything.  If you\u0027re not going to test filters, then no need to mention it in your tested statement.",
      "parentUuid": "7a3be529_8b71c6a2",
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5dce005d_f9a9633c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 67,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-10-10T13:56:35Z",
      "side": 1,
      "message": "Every log entry goes through the filtering code. I\u0027m not testing the filters, i am just stating the observed behavior and expected result.\n\nExample:\n```\nint x \u003d myfunction();\n\nassert(x \u003e 0);\nassert(otherfunction(x) \u003e 0);\n\n```\n\nin the example the \u0027otherfunction\u0027 is part of the assertions, but i am not testing \u0027otherfunction\u0027.\n\nSimilarly, by mentioning the filtering code, i am not testing it, just noting that it exists and that the message generated from this implementation should make it through that code.\n\nThat outcome is a property of my implementation, not of the filtering code. Because the filtering code has hopefully already been tested and should be working.",
      "parentUuid": "8a7d47b3_88b9589b",
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc758e1a_a654e3ff",
        "filename": "redfish-core/include/event_service_manager.hpp",
        "patchSetId": 9
      },
      "lineNbr": 1321,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-23T15:12:36Z",
      "side": 1,
      "message": "We should really look at breaking this class down a bit to make clear the two backends.",
      "range": {
        "startLine": 1321,
        "startChar": 16,
        "endLine": 1321,
        "endChar": 38
      },
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31df9230_b0be3055",
        "filename": "redfish-core/include/event_service_manager.hpp",
        "patchSetId": 9
      },
      "lineNbr": 1321,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-09-24T09:40:08Z",
      "side": 1,
      "message": "instructions unclear. Is this something i should do?\n\nIf so, how should the separation look like, in terms of files and classes.",
      "parentUuid": "dc758e1a_a654e3ff",
      "range": {
        "startLine": 1321,
        "startChar": 16,
        "endLine": 1321,
        "endChar": 38
      },
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77c88cf2_140a0e64",
        "filename": "redfish-core/include/event_service_manager.hpp",
        "patchSetId": 9
      },
      "lineNbr": 1321,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-24T19:56:14Z",
      "side": 1,
      "message": "Break out the methods for DBus access that are separate from filesystem access.  Today they\u0027re all in this class, which wasn\u0027t great when we only supported one path, but really is a problem when we add a second path.  I\u0027d expect 3 classes\n\nEventServiceManager\nDbusEventLog\nFileSystemEventLog\n\neach with the appropriate methods.  EventServiceManager might take the second two as members.",
      "parentUuid": "31df9230_b0be3055",
      "range": {
        "startLine": 1321,
        "startChar": 16,
        "endLine": 1321,
        "endChar": 38
      },
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89839570_d511079a",
        "filename": "redfish-core/include/event_service_manager.hpp",
        "patchSetId": 9
      },
      "lineNbr": 1352,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-23T15:12:36Z",
      "side": 1,
      "message": "Presumably you meant to return here?",
      "range": {
        "startLine": 1352,
        "startChar": 0,
        "endLine": 1352,
        "endChar": 74
      },
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dab13cc4_86ea8b18",
        "filename": "redfish-core/include/event_service_manager.hpp",
        "patchSetId": 9
      },
      "lineNbr": 1352,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-09-24T09:40:08Z",
      "side": 1,
      "message": "yes, fixed it 👍",
      "parentUuid": "89839570_d511079a",
      "range": {
        "startLine": 1352,
        "startChar": 0,
        "endLine": 1352,
        "endChar": 74
      },
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a39c5120_07ebf060",
        "filename": "redfish-core/include/event_service_manager.hpp",
        "patchSetId": 9
      },
      "lineNbr": 1398,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-23T15:12:36Z",
      "side": 1,
      "message": "More than this can create log entries, right?",
      "range": {
        "startLine": 1398,
        "startChar": 0,
        "endLine": 1398,
        "endChar": 52
      },
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f1ce56f_8c37a65a",
        "filename": "redfish-core/include/event_service_manager.hpp",
        "patchSetId": 9
      },
      "lineNbr": 1398,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-09-24T09:40:08Z",
      "side": 1,
      "message": "Yes they can create them via phosphor-logging library, but it\u0027s my understanding they are listed as log entries under this bus name.",
      "parentUuid": "a39c5120_07ebf060",
      "range": {
        "startLine": 1398,
        "startChar": 0,
        "endLine": 1398,
        "endChar": 52
      },
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57652544_c74d9b64",
        "filename": "redfish-core/include/event_service_manager.hpp",
        "patchSetId": 9
      },
      "lineNbr": 1398,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-24T19:56:14Z",
      "side": 1,
      "message": "What do we do in the GET handler?  I believe we use the mapper?  If we support multiple daemons in the GET handler, we should support multiple daemons here, if we support only one daemon in the GET handler, then this is fine, but the point is that these should match.",
      "parentUuid": "4f1ce56f_8c37a65a",
      "range": {
        "startLine": 1398,
        "startChar": 0,
        "endLine": 1398,
        "endChar": 52
      },
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c510924f_f7bfa8cf",
        "filename": "redfish-core/include/event_service_manager.hpp",
        "patchSetId": 9
      },
      "lineNbr": 1398,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-10-10T13:56:35Z",
      "side": 1,
      "message": "The GET handler for a single dbus event log entry is hardcoding the dbus service.\n\nhttps://github.com/openbmc/bmcweb/blob/d8e2b61839ed557c24cb1180ff7f8b9f0c4c4b12/redfish-core/lib/log_services.hpp#L1768\n\nThe GET handler for the whole collection is also directly referencing the service.\n\nhttps://github.com/openbmc/bmcweb/blob/d8e2b61839ed557c24cb1180ff7f8b9f0c4c4b12/redfish-core/lib/log_services.hpp#L1723\n\nI\u0027m not sure it makes sense to go via the mapper here. Also i don\u0027t think there is currently any design that proposes any other service to also create these dbus log entries.",
      "parentUuid": "57652544_c74d9b64",
      "range": {
        "startLine": 1398,
        "startChar": 0,
        "endLine": 1398,
        "endChar": 52
      },
      "revId": "f9accfc8d3e902a9b144a4b8a723dc579d935de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}