{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a5474167_44c8c67b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-18T18:22:43Z",
      "side": 1,
      "message": "Lots of great progress here.  Keep it coming!",
      "revId": "1114d0b25bd8fdd0a4372710bad611b5846239ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64a194de_65b94290",
        "filename": "http/ut/utility_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 186,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-18T18:33:29Z",
      "side": 1,
      "message": "In the below code this is now called AnySegment with a capital A.  I\u0027m surprised this compiles.  Please take a look?",
      "range": {
        "startLine": 186,
        "startChar": 33,
        "endLine": 186,
        "endChar": 43
      },
      "revId": "1114d0b25bd8fdd0a4372710bad611b5846239ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa5cd5b6_5ac404b0",
        "filename": "http/ut/utility_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 186,
      "author": {
        "id": 1001026
      },
      "writtenOn": "2022-03-25T15:36:38Z",
      "side": 1,
      "message": "The one with capital A is typename for empty struct, the lowercase one is the constexpr variable in crow::utility namespace to use by user in the call.",
      "parentUuid": "64a194de_65b94290",
      "range": {
        "startLine": 186,
        "startChar": 33,
        "endLine": 186,
        "endChar": 43
      },
      "revId": "1114d0b25bd8fdd0a4372710bad611b5846239ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30ce4ca2_fd63ff27",
        "filename": "http/ut/utility_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 186,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-25T16:13:46Z",
      "side": 1,
      "message": "I suspect we don\u0027t need two different typedefs, especially two that having the same name with different casing.  Just declare the struct outside of details and remove the using please.",
      "parentUuid": "aa5cd5b6_5ac404b0",
      "range": {
        "startLine": 186,
        "startChar": 33,
        "endLine": 186,
        "endChar": 43
      },
      "revId": "1114d0b25bd8fdd0a4372710bad611b5846239ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab86327a_aca248ba",
        "filename": "http/ut/utility_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 186,
      "author": {
        "id": 1001026
      },
      "writtenOn": "2022-03-29T16:00:58Z",
      "side": 1,
      "message": "As we are dropping anySegement matcher, this is no longer needed.",
      "parentUuid": "30ce4ca2_fd63ff27",
      "range": {
        "startLine": 186,
        "startChar": 33,
        "endLine": 186,
        "endChar": 43
      },
      "revId": "1114d0b25bd8fdd0a4372710bad611b5846239ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93f43288_e4014864",
        "filename": "http/utility.hpp",
        "patchSetId": 5
      },
      "lineNbr": 678,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-18T18:33:29Z",
      "side": 1,
      "message": "Can you please add a quick comment (doesn\u0027t need to be extensive) about what each of these types represent in this case?  It\u0027s pretty subtle in this case, and I understand it now, but I didn\u0027t first reading this.",
      "range": {
        "startLine": 678,
        "startChar": 5,
        "endLine": 678,
        "endChar": 6
      },
      "revId": "1114d0b25bd8fdd0a4372710bad611b5846239ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e496432_b978e418",
        "filename": "http/utility.hpp",
        "patchSetId": 5
      },
      "lineNbr": 678,
      "author": {
        "id": 1001026
      },
      "writtenOn": "2022-03-25T15:36:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "93f43288_e4014864",
      "range": {
        "startLine": 678,
        "startChar": 5,
        "endLine": 678,
        "endChar": 6
      },
      "revId": "1114d0b25bd8fdd0a4372710bad611b5846239ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "811ce8bf_dd7a9562",
        "filename": "http/utility.hpp",
        "patchSetId": 5
      },
      "lineNbr": 705,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-25T16:13:46Z",
      "side": 1,
      "message": "Iterators should be generally taken by value, but I suspect this should be taken by the contained type so the actual visitor doesn\u0027t have to do the dereference (which isn\u0027t necessarily valid).",
      "range": {
        "startLine": 705,
        "startChar": 46,
        "endLine": 705,
        "endChar": 47
      },
      "revId": "1114d0b25bd8fdd0a4372710bad611b5846239ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51c5ac23_2e923761",
        "filename": "http/utility.hpp",
        "patchSetId": 5
      },
      "lineNbr": 705,
      "author": {
        "id": 1001026
      },
      "writtenOn": "2022-03-29T16:00:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "811ce8bf_dd7a9562",
      "range": {
        "startLine": 705,
        "startChar": 46,
        "endLine": 705,
        "endChar": 47
      },
      "revId": "1114d0b25bd8fdd0a4372710bad611b5846239ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c859de1_db6f8a5b",
        "filename": "redfish-core/include/utils/telemetry_utils.hpp",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-25T16:13:46Z",
      "side": 1,
      "message": "This is the return of the failure.  Should this have a name to denote that \"NodeFindError\" or something like that?",
      "range": {
        "startLine": 32,
        "startChar": 7,
        "endLine": 32,
        "endChar": 20
      },
      "revId": "1114d0b25bd8fdd0a4372710bad611b5846239ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8446b47_8dc9ab42",
        "filename": "redfish-core/include/utils/telemetry_utils.hpp",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 1001026
      },
      "writtenOn": "2022-03-29T16:00:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5c859de1_db6f8a5b",
      "range": {
        "startLine": 32,
        "startChar": 7,
        "endLine": 32,
        "endChar": 20
      },
      "revId": "1114d0b25bd8fdd0a4372710bad611b5846239ff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}