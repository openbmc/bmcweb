{
  "comments": [
    {
      "key": {
        "uuid": "47715f24_b3f7522a",
        "filename": "redfish-core/lib/ut/service_root_test.cpp",
        "patchSetId": 22
      },
      "lineNbr": 52,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2021-10-05T16:39:27Z",
      "side": 1,
      "message": "Can we remove these ? Why the commented out code ?",
      "revId": "e544e54f97604924d9d7b24a2002337964c8786e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3d20c07_bd4db4cd",
        "filename": "redfish-core/lib/ut/service_root_test.cpp",
        "patchSetId": 22
      },
      "lineNbr": 52,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-10-05T16:50:37Z",
      "side": 1,
      "message": "yes, there are still some issues with this test\nI would like to validate the size of the json. That is my only way to make sure additional fields are not present.\n\nThere might be a cleaver way to do (automatically increasing the size for every element tested against, but I will probablly end up doing something simplistic like json.size()\u003d\u003d28)",
      "parentUuid": "47715f24_b3f7522a",
      "revId": "e544e54f97604924d9d7b24a2002337964c8786e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9fe1894a_e30f3446",
        "filename": "redfish-core/lib/ut/service_root_test.cpp",
        "patchSetId": 22
      },
      "lineNbr": 52,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-06T02:11:37Z",
      "side": 1,
      "message": "This probably should stay and get commented in, I\u0027m guessing the UUID one should go (although the TODO seems reasonable to keep)",
      "parentUuid": "b3d20c07_bd4db4cd",
      "revId": "e544e54f97604924d9d7b24a2002337964c8786e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a62796e_c0f5061b",
        "filename": "redfish-core/lib/ut/service_root_test.cpp",
        "patchSetId": 22
      },
      "lineNbr": 52,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-10-27T17:30:04Z",
      "side": 1,
      "message": "On the most recent version of this, I added some testing for uuid.",
      "parentUuid": "9fe1894a_e30f3446",
      "revId": "e544e54f97604924d9d7b24a2002337964c8786e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5db65f8a_135fc232",
        "filename": "redfish-core/lib/ut/service_root_test.cpp",
        "patchSetId": 22
      },
      "lineNbr": 60,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-06T02:11:37Z",
      "side": 1,
      "message": "Take a look a the $only patch that I CCed you on.  I changed setCompleteRequestHandler to include the actual Response object in it.  I THINK that would mean in this context, you could get rid of the class entirely, and just do your assertions directly in the completeRequestHandler callback, which would simplify this code quite a bit.  Take a look and see.  Having to build a test class that takes the ownership of the request and the response for every endpoint seems like overkill.",
      "range": {
        "startLine": 60,
        "startChar": 52,
        "endLine": 60,
        "endChar": 72
      },
      "revId": "e544e54f97604924d9d7b24a2002337964c8786e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02f51481_b479250c",
        "filename": "redfish-core/lib/ut/service_root_test.cpp",
        "patchSetId": 22
      },
      "lineNbr": 60,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-10-06T03:35:01Z",
      "side": 1,
      "message": "https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/47474/4/http/http_response.hpp#137\n\nThat will make my test code much simpler. Why did I not think of that when I added setCompeteRequestHandler. \n\nThanks",
      "parentUuid": "5db65f8a_135fc232",
      "range": {
        "startLine": 60,
        "startChar": 52,
        "endLine": 60,
        "endChar": 72
      },
      "revId": "e544e54f97604924d9d7b24a2002337964c8786e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19780a92_7ef2fa47",
        "filename": "redfish-core/lib/ut/service_root_test.cpp",
        "patchSetId": 22
      },
      "lineNbr": 60,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-06T06:05:41Z",
      "side": 1,
      "message": "\u003e https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/47474/4/http/http_response.hpp#137\n\u003e \n\u003e That will make my test code much simpler. Why did I not think of that when I added setCompeteRequestHandler. \n\u003e \n\u003e Thanks\n\nProbably because it\u0027s super non-obvious and only just came to _me_ as I was looking at something totally different.  I really dislike how the completion handlers work, but we inherited it from crow a long time ago.",
      "parentUuid": "02f51481_b479250c",
      "range": {
        "startLine": 60,
        "startChar": 52,
        "endLine": 60,
        "endChar": 72
      },
      "revId": "e544e54f97604924d9d7b24a2002337964c8786e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cbd3938_dca76191",
        "filename": "redfish-core/lib/ut/service_root_test.cpp",
        "patchSetId": 22
      },
      "lineNbr": 60,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2021-10-27T17:30:04Z",
      "side": 1,
      "message": "I rebased on a smaller change\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/48002\n\n47474 is a monster",
      "parentUuid": "19780a92_7ef2fa47",
      "range": {
        "startLine": 60,
        "startChar": 52,
        "endLine": 60,
        "endChar": 72
      },
      "revId": "e544e54f97604924d9d7b24a2002337964c8786e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}