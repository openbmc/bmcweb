{
  "comments": [
    {
      "key": {
        "uuid": "8d802225_a08ca61a",
        "filename": "redfish-core/include/gzfile.hpp",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2021-08-18T17:19:47Z",
      "side": 1,
      "message": "I am not a big fan of static local variables. Do we have race condition here if there are multiple requests running at the same time?",
      "revId": "c7aba72a76bce96b78ecfb95bcf941e0d1b2a672",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b79b348_0db5d7fe",
        "filename": "redfish-core/include/gzfile.hpp",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2021-08-18T20:27:50Z",
      "side": 1,
      "message": "Talked with Ed. There is a good doc about common errors. Section 7 describes this. \n\nhttps://github.com/openbmc/bmcweb/blob/master/COMMON_ERRORS.md#7-lack-of-locking-between-subsequent-calls\n\nWe don\u0027t need the static string here. We can make this variable a class member. Each GET request callback creates a single GzFileReader instance.",
      "parentUuid": "8d802225_a08ca61a",
      "revId": "c7aba72a76bce96b78ecfb95bcf941e0d1b2a672",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0a929a7_aa75dd83",
        "filename": "redfish-core/include/gzfile.hpp",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 1000404
      },
      "writtenOn": "2021-08-19T08:52:12Z",
      "side": 1,
      "message": "Okay, I see. I will above to use static. Use class member to rewrite the code.",
      "parentUuid": "0b79b348_0db5d7fe",
      "revId": "c7aba72a76bce96b78ecfb95bcf941e0d1b2a672",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "798e9e41_2267e18a",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 12
      },
      "lineNbr": 1940,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2021-08-18T17:26:32Z",
      "side": 1,
      "message": "Did we miss the last incomplete message? According to previous discussion, we should add it to the end even if it is not complete.",
      "revId": "c7aba72a76bce96b78ecfb95bcf941e0d1b2a672",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b29e8d9a_194612c0",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 12
      },
      "lineNbr": 1940,
      "author": {
        "id": 1000404
      },
      "writtenOn": "2021-08-19T08:52:12Z",
      "side": 1,
      "message": "Yes, we need to push back the last message here.",
      "parentUuid": "798e9e41_2267e18a",
      "revId": "c7aba72a76bce96b78ecfb95bcf941e0d1b2a672",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33c5822d_0cb3f359",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 12
      },
      "lineNbr": 1944,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2021-08-18T17:26:32Z",
      "side": 1,
      "message": "this loop can be simply written as\n\n```\nfor (size_t id \u003d skip; id \u003c\u003d min(skip + top, logEntries.size()); ++id) {\n...\nfillHostLoggerEntryJson(std::to_string(id),\n                                                msg, hostLogEntry);\n}\n```",
      "revId": "c7aba72a76bce96b78ecfb95bcf941e0d1b2a672",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38bbd730_9d30ea9e",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 12
      },
      "lineNbr": 1944,
      "author": {
        "id": 1000404
      },
      "writtenOn": "2021-08-19T08:52:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "33c5822d_0cb3f359",
      "revId": "c7aba72a76bce96b78ecfb95bcf941e0d1b2a672",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae3367ec_d47b7565",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 12
      },
      "lineNbr": 1957,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2021-08-18T17:26:32Z",
      "side": 1,
      "message": "why +1? can we start from 0?",
      "range": {
        "startLine": 1957,
        "startChar": 72,
        "endLine": 1957,
        "endChar": 73
      },
      "revId": "c7aba72a76bce96b78ecfb95bcf941e0d1b2a672",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f340a331_6dfe7374",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 12
      },
      "lineNbr": 1957,
      "author": {
        "id": 1000404
      },
      "writtenOn": "2021-08-19T08:52:12Z",
      "side": 1,
      "message": "I think this is find to start ID from 0. Remove +1 here.",
      "parentUuid": "ae3367ec_d47b7565",
      "range": {
        "startLine": 1957,
        "startChar": 72,
        "endLine": 1957,
        "endChar": 73
      },
      "revId": "c7aba72a76bce96b78ecfb95bcf941e0d1b2a672",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}