{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "094a6c22_53620ba3",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 11
      },
      "lineNbr": 543,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-04-06T17:42:22Z",
      "side": 1,
      "message": "\"it\" is only referenced inside the loop, then why not using a for loop?",
      "revId": "25137e52b3d834f626eabc421bd968a64bda17d7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4d10b54_41e11278",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 11
      },
      "lineNbr": 543,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-07T01:58:20Z",
      "side": 1,
      "message": "Because on line 550 we modify the object (ie erase the value).  Modifying the map while iterating invalidates any iterators in the map, but erase() solves this by returning an iterator to the NEXT item after the item that was erased, thus giving a way to erase items while still only iterating the map once.\n\nSo far as I\u0027m aware, there\u0027s no way to do that with a range based for loop.  If there is, I\u0027d be super interested to know about it.",
      "parentUuid": "094a6c22_53620ba3",
      "revId": "25137e52b3d834f626eabc421bd968a64bda17d7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ba31381_6e761c9c",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 11
      },
      "lineNbr": 543,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-04-08T01:41:50Z",
      "side": 1,
      "message": "oh, I meant a normal for loop where you can define variables whose scope is just the for loop. It is really a nit :)",
      "parentUuid": "b4d10b54_41e11278",
      "revId": "25137e52b3d834f626eabc421bd968a64bda17d7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e614038_2b1b76a5",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 11
      },
      "lineNbr": 543,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-08T02:07:45Z",
      "side": 1,
      "message": "Oh, duh......  Sorry for being obtuse.\n\nACK.  Will fix.",
      "parentUuid": "4ba31381_6e761c9c",
      "revId": "25137e52b3d834f626eabc421bd968a64bda17d7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b60baa5c_45ac19e3",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 11
      },
      "lineNbr": 543,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-08T17:18:47Z",
      "side": 1,
      "message": "This actually gave me a better idea to use std::erase_if, because we\u0027re operating on a std::map, which cleans up this code a bunch, and makes it way more clear what\u0027s happening.\n\nLet me know if that works for you.",
      "parentUuid": "0e614038_2b1b76a5",
      "revId": "25137e52b3d834f626eabc421bd968a64bda17d7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0bd38ad1_cfb7fef8",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 11
      },
      "lineNbr": 543,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-04-18T22:12:56Z",
      "side": 1,
      "message": "Missed this comment, yeah, erase_if works",
      "parentUuid": "b60baa5c_45ac19e3",
      "revId": "25137e52b3d834f626eabc421bd968a64bda17d7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce42c763_a95e87ed",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 11
      },
      "lineNbr": 543,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-04-19T00:49:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0bd38ad1_cfb7fef8",
      "revId": "25137e52b3d834f626eabc421bd968a64bda17d7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}