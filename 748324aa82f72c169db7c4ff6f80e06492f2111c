{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "390d06f5_a0c124a0",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 8
      },
      "lineNbr": 311,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-05-16T02:38:54Z",
      "side": 1,
      "message": "ManagementDetectedFault is not in the list of generated enums. OEM is missing in this list. \n\nhttps://github.com/openbmc/bmcweb/blob/master/redfish-core/include/generated/enums/processor.hpp#L167",
      "revId": "748324aa82f72c169db7c4ff6f80e06492f2111c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70e8351e_b4542f73",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 8
      },
      "lineNbr": 311,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2023-05-16T14:01:05Z",
      "side": 1,
      "message": "ManagementDetectedFault was added as part of the Processor v18.0 schema which should be releasing shortly.  https://www.dmtf.org/sites/default/files/standards/documents/DSP2046_2023.1WIP99.pdf",
      "parentUuid": "390d06f5_a0c124a0",
      "revId": "748324aa82f72c169db7c4ff6f80e06492f2111c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c83bd9a9_582bdf20",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 8
      },
      "lineNbr": 311,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2023-05-16T22:29:44Z",
      "side": 1,
      "message": "This commit will not be merged until the schema has been released.",
      "parentUuid": "70e8351e_b4542f73",
      "revId": "748324aa82f72c169db7c4ff6f80e06492f2111c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f733cc3_d054ef72",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 8
      },
      "lineNbr": 311,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-05-16T23:19:38Z",
      "side": 1,
      "message": "I\u0027m marking this WIP for now.  In the future, if you know there are still things to be done, please mark your commits WIP.",
      "parentUuid": "c83bd9a9_582bdf20",
      "revId": "748324aa82f72c169db7c4ff6f80e06492f2111c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "daa727c6_3fdd7b2c",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 8
      },
      "lineNbr": 311,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2023-05-18T13:07:33Z",
      "side": 1,
      "message": "Okay. The only required change in the new schema was this one enum value and it was already approved.  I am just waiting for them to release 2023.1 which is supposed to be released very soon. There are no additional code changes expected here (unless there are additional review comments).",
      "parentUuid": "1f733cc3_d054ef72",
      "revId": "748324aa82f72c169db7c4ff6f80e06492f2111c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8341451e_6c75468b",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 8
      },
      "lineNbr": 311,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-05-18T15:50:37Z",
      "side": 1,
      "message": "\u003e There are no additional code changes expected here\n\nThe changes required here would be to move this over to the Redfish enum for this property (which would\u0027ve immediately flagged that this wasn\u0027t in the schema).",
      "parentUuid": "daa727c6_3fdd7b2c",
      "revId": "748324aa82f72c169db7c4ff6f80e06492f2111c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8860f2ce_9cee4e4c",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 8
      },
      "lineNbr": 339,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-05-15T23:35:34Z",
      "side": 1,
      "message": "inline lambda should not be longer than 10 lines.",
      "revId": "748324aa82f72c169db7c4ff6f80e06492f2111c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ca4b77b_e3f2f5e5",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 8
      },
      "lineNbr": 339,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2023-05-16T18:40:59Z",
      "side": 1,
      "message": "Most of the lambda functions in these files are all longer than 10 lines. I used existing code as examples.  I can split this into a wrapper call and new function, but seems overkill.",
      "parentUuid": "8860f2ce_9cee4e4c",
      "revId": "748324aa82f72c169db7c4ff6f80e06492f2111c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a17d78f_ae4797c2",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 8
      },
      "lineNbr": 339,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2023-05-16T19:21:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ca4b77b_e3f2f5e5",
      "revId": "748324aa82f72c169db7c4ff6f80e06492f2111c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d00b6b43_e47db91f",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 8
      },
      "lineNbr": 342,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-05-16T00:55:35Z",
      "side": 1,
      "message": "Check if (ec.value() !\u003d EBADR) and return internal error like we do other places.\nhttps://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/fabric_adapters.hpp#L77",
      "revId": "748324aa82f72c169db7c4ff6f80e06492f2111c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e3a6520_b8cb4d89",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 8
      },
      "lineNbr": 342,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-05-16T15:03:39Z",
      "side": 1,
      "message": "The difference here is this code is already checking for the interface so I feel a EBADR isn\u0027t needed\n\n            else if (interface \u003d\u003d \"xyz.openbmc_project.Control.Power.Throttle\")\n            {\n                getThrottleProperties(aResp, serviceName, objectPath);\n            }",
      "parentUuid": "d00b6b43_e47db91f",
      "revId": "748324aa82f72c169db7c4ff6f80e06492f2111c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9effd269_6989752d",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 8
      },
      "lineNbr": 342,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-05-16T15:10:02Z",
      "side": 1,
      "message": "If the interface is there but getAllProperties failed then don\u0027t we need to give internal error?",
      "parentUuid": "8e3a6520_b8cb4d89",
      "revId": "748324aa82f72c169db7c4ff6f80e06492f2111c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8406d0f4_3d34f260",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 8
      },
      "lineNbr": 371,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-05-16T00:55:35Z",
      "side": 1,
      "message": "rfCause.empty() will always evaluate to true because the dbusToRfThrottleCause function does not return an empty string.\n\ndbusauseToRfThrottleCause is returning unknown if it is invalid type, shouldn\u0027t we return error for invalid type?\n\nShould we ignore if it is unknown type? \nI am working on similar change in PCIeSlot, I am not sure which is right way.\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/63041",
      "revId": "748324aa82f72c169db7c4ff6f80e06492f2111c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c73f7a1f_923cbbdb",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 8
      },
      "lineNbr": 371,
      "author": {
        "id": 1000238
      },
      "writtenOn": "2023-05-16T14:01:05Z",
      "side": 1,
      "message": "Good point on empty call. Since Unknown is a valid Redfish throttle cause, I think it makes sense to return that value (instead of an error).  We know the processor is throttled at this point, but just not able to determine why.\nI can remove empty check.",
      "parentUuid": "8406d0f4_3d34f260",
      "revId": "748324aa82f72c169db7c4ff6f80e06492f2111c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}