{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4b8a48db_49daaa1c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-25T22:31:51Z",
      "side": 1,
      "message": "Looks like you forgot to check in the result of this generation.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 8
      },
      "revId": "1ba21b0a1d5a25181bdfd5ac7ab4430022154514",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f42d40b5_9c53e6c8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-25T22:31:51Z",
      "side": 1,
      "message": "Please take a look at the existing structures we have for redfish Message registries. What you\u0027ve implemented here looks like a duplicate.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 13,
        "endChar": 22
      },
      "revId": "1ba21b0a1d5a25181bdfd5ac7ab4430022154514",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63dcefc9_045ec591",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-25T22:31:51Z",
      "side": 1,
      "message": "minor comments.",
      "revId": "1ba21b0a1d5a25181bdfd5ac7ab4430022154514",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aff9e416_ba1b75f1",
        "filename": "scripts/parse_registries.py",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-25T22:31:51Z",
      "side": 1,
      "message": "How does this stay up to date if we\u0027re pulling this from github directly?",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 51,
        "endChar": 131
      },
      "revId": "1ba21b0a1d5a25181bdfd5ac7ab4430022154514",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05b17548_8249e7cf",
        "filename": "scripts/parse_registries.py",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-25T23:08:30Z",
      "side": 1,
      "message": "Nvm, bad comment.",
      "parentUuid": "aff9e416_ba1b75f1",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 51,
        "endChar": 131
      },
      "revId": "1ba21b0a1d5a25181bdfd5ac7ab4430022154514",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df4da75f_1e4e5493",
        "filename": "scripts/parse_registries.py",
        "patchSetId": 1
      },
      "lineNbr": 704,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-25T22:31:51Z",
      "side": 1,
      "message": "Some issues with this structure:\n1. It\u0027s going to consume memory the whole time bmcweb is running\n2. It needs to be constructed/malloced/sorted at startup which effects the startup time on socket activation.\n\nPlease look at the existing Registry structures and model your code after them.  They don\u0027t have either of these problems, give essentially the same result.\n\nIf there\u0027s modifications we need to make to them, great, but I don\u0027t want to maintain two different structure definitions for storing a \"registry\" in the binary.",
      "revId": "1ba21b0a1d5a25181bdfd5ac7ab4430022154514",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e5d42e7_cd5da478",
        "filename": "scripts/parse_registries.py",
        "patchSetId": 1
      },
      "lineNbr": 742,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-25T22:31:51Z",
      "side": 1,
      "message": "This script currently doesn\u0027t use type hints.  If you\u0027d like to refactor it to use them consistently, I\u0027m in support of that, but I\u0027d like to see it done in another commit.  Up to you if it happens before or after this feature add.",
      "range": {
        "startLine": 742,
        "startChar": 13,
        "endLine": 742,
        "endChar": 19
      },
      "revId": "1ba21b0a1d5a25181bdfd5ac7ab4430022154514",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a778050d_47758f60",
        "filename": "scripts/parse_registries.py",
        "patchSetId": 1
      },
      "lineNbr": 742,
      "author": {
        "id": 1002230
      },
      "writtenOn": "2025-02-26T16:17:12Z",
      "side": 1,
      "message": "Added a change before this one for that.",
      "parentUuid": "3e5d42e7_cd5da478",
      "range": {
        "startLine": 742,
        "startChar": 13,
        "endLine": 742,
        "endChar": 19
      },
      "revId": "1ba21b0a1d5a25181bdfd5ac7ab4430022154514",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "304a09fd_d9dfd6de",
        "filename": "scripts/parse_registries.py",
        "patchSetId": 1
      },
      "lineNbr": 890,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-25T22:31:51Z",
      "side": 1,
      "message": "Lets start by working through adding a single new shcema.",
      "range": {
        "startLine": 889,
        "startChar": 0,
        "endLine": 890,
        "endChar": 10
      },
      "revId": "1ba21b0a1d5a25181bdfd5ac7ab4430022154514",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}