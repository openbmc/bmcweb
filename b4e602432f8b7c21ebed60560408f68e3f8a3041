{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6c7ccf62_0093fa4d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-05-23T18:18:33Z",
      "side": 1,
      "message": "Overall, my worry on patches like this is that there are cases where they make things slower:\n\nhttps://lists.ozlabs.org/pipermail/openbmc/2023-April/033331.html\n\nIt seems to be highly related to how many elements exist on the service for which you\u0027re calling GetManagedObjects.  As systems are getting bigger, we\u0027re having the same problem on EM as well.  I\u0027m a little bit worried about universally enabling this everywhere.\n\nHas the above problem in the ML been considered?",
      "revId": "b4e602432f8b7c21ebed60560408f68e3f8a3041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "deffb1f6_bdf13648",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-05-23T18:30:45Z",
      "side": 1,
      "message": "not sure what is `ML` referring to in this case?\n\nIn the case of Chassis, it is not calling `GetManagedObjects` to get the Chassis, so maybe it is not an issue here? It is only called in `health-\u003epopulate()` which I have tried to address along with this change. So in this case, that delay will not be portional to the number of Chassis / size of the system.",
      "parentUuid": "6c7ccf62_0093fa4d",
      "revId": "b4e602432f8b7c21ebed60560408f68e3f8a3041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18af08c3_c55c9847",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 7
      },
      "lineNbr": 197,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-05-23T05:54:46Z",
      "side": 1,
      "message": "from downstream discussion.\n\n+rahulkpr@google.com:\n\n\u003eThere are around 8 locations where we are checking for maybeChassisId to decide if it\u0027s directed query or collection. This number would grow as more attributes get added to chassis. I would recommend refactoring to separate the code for handling a chassis instance vs a collection.\n\n\nwltu@google.com:\n\n\u003e I would prefer to keep the two common to prevent them from diverging. I don\u0027t believe more checks to maybeChassisId will be done. In most cases, they just need to pass chassisPtr to support direct query vs. collection.",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 197,
        "endChar": 1
      },
      "revId": "b4e602432f8b7c21ebed60560408f68e3f8a3041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a24f55aa_4bae8594",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 7
      },
      "lineNbr": 384,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-05-23T05:54:46Z",
      "side": 1,
      "message": "From downstream discussion:\n\nrahulkpr@google.com\n\u003e Was there an analysis done to understand if we do a single GetManagedObjects to the connectionName (and reuse the result for all functions) vs multiple getProperty + getAllProperties, which approach seems to be optimum? I see quite a lot of GetProperty in this file so was wondering.",
      "range": {
        "startLine": 382,
        "startChar": 12,
        "endLine": 384,
        "endChar": 64
      },
      "revId": "b4e602432f8b7c21ebed60560408f68e3f8a3041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f026c473_bf39156c",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 7
      },
      "lineNbr": 384,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-05-23T05:56:57Z",
      "side": 1,
      "message": "I didn\u0027t do an analysis on using GetManagedObjects to get a single object. It would most likely be a bit faster than multipl dbus calls. The main issue here is that we don\u0027t know which path is the managed object path to make the GetManagedObjects call on. Each service could be different unless we enforce that it has to be a certain path.\n\nDon\u0027t believe we can do that at the moment.",
      "parentUuid": "a24f55aa_4bae8594",
      "range": {
        "startLine": 382,
        "startChar": 12,
        "endLine": 384,
        "endChar": 64
      },
      "revId": "b4e602432f8b7c21ebed60560408f68e3f8a3041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8dc674c5_b966cf82",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 7
      },
      "lineNbr": 384,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-05-24T20:30:51Z",
      "side": 1,
      "message": "Concern on using GetManagedObjects like in https://gerrit.openbmc.org/c/openbmc/bmcweb/+/63644/comments/6c7ccf62_0093fa4d as the system gets larger.",
      "parentUuid": "f026c473_bf39156c",
      "range": {
        "startLine": 382,
        "startChar": 12,
        "endLine": 384,
        "endChar": 64
      },
      "revId": "b4e602432f8b7c21ebed60560408f68e3f8a3041",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}