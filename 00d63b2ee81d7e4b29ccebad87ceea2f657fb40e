{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0985d6c4_2bf18a05",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-18T17:36:54Z",
      "side": 1,
      "message": "Minor changes.",
      "revId": "00d63b2ee81d7e4b29ccebad87ceea2f657fb40e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e09bd1f4_edcad216",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 880,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-18T17:36:54Z",
      "side": 1,
      "message": "\"memfd\" is an internal detail that shouldn\u0027t be exposed to users.  I think this is supposed to be a URI?",
      "range": {
        "startLine": 880,
        "startChar": 56,
        "endLine": 880,
        "endChar": 61
      },
      "revId": "00d63b2ee81d7e4b29ccebad87ceea2f657fb40e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9baceb5_efb1dbac",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 880,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-18T17:49:46Z",
      "side": 1,
      "message": "\u003e I think this is supposed to be a URI?\n\nI do not see how to construct a unique URI here, since no task has yet been created and i assume we discard the package on failure to discard the update.\n\nmessage registry spec for `UpdateSkipped` says\n```\n2. string: The identifier for the image.\n◦ This argument shall contain the identifier for the image\n```\n\nNow that `memfd` identifier is not unique so it does not `identify` anything.\nDo you think it makes sense to compute the hash of the pldm package blob we receive?\n\nThat way we could refer to it, uniquely, without having to keep it around, but there may be some delay while computing the hash.",
      "parentUuid": "e09bd1f4_edcad216",
      "range": {
        "startLine": 880,
        "startChar": 56,
        "endLine": 880,
        "endChar": 61
      },
      "revId": "00d63b2ee81d7e4b29ccebad87ceea2f657fb40e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "212e459b_a2a25cff",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 880,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-18T17:59:07Z",
      "side": 1,
      "message": "\u003e \u003e I think this is supposed to be a URI?\n\u003e \n\u003e I do not see how to construct a unique URI here, since no task has yet been created and i assume we discard the package on failure to discard the update.\n\u003e \n\u003e message registry spec for `UpdateSkipped` says\n\u003e ```\n\u003e 2. string: The identifier for the image.\n\u003e ◦ This argument shall contain the identifier for the image\n\u003e ```\n\u003e \n\u003e Now that `memfd` identifier is not unique so it does not `identify` anything.\n\nYep, that\u0027s the problem.\n\n\u003e Do you think it makes sense to compute the hash of the pldm package blob we receive?\n\nI don\u0027t really think so given that the hash doesn\u0027t actually mean anything.  Ideally the error message would contain enough information that we can construct a correct message.  Otherwise we should stick with the more generic error message.\n\n\u003e \n\u003e That way we could refer to it, uniquely, without having to keep it around, but there may be some delay while computing the hash.",
      "parentUuid": "c9baceb5_efb1dbac",
      "range": {
        "startLine": 880,
        "startChar": 56,
        "endLine": 880,
        "endChar": 61
      },
      "revId": "00d63b2ee81d7e4b29ccebad87ceea2f657fb40e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffa3b331_bbda0ffa",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 880,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-18T18:00:12Z",
      "side": 1,
      "message": "The message here is: \"Message\": \"Device \u0027%1\u0027 skipped the update with image \u0027%2\u0027.\",\n\nSo presumably the second arg should be some kind of version information.",
      "parentUuid": "212e459b_a2a25cff",
      "range": {
        "startLine": 880,
        "startChar": 56,
        "endLine": 880,
        "endChar": 61
      },
      "revId": "00d63b2ee81d7e4b29ccebad87ceea2f657fb40e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac8fe11d_b8660d84",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 880,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-08-19T10:30:15Z",
      "side": 1,
      "message": "But the version information is inside the PLDM packgage, right?\n\nSo we do not have the version information here.\n\n\u003e Ideally the error message would contain enough information that we can construct a correct message. Otherwise we should stick with the more generic error message.\n\nThe intent is to give the redfish client some idea about what went wrong and to figure out if there is a temporary failure (update in progress), a fixable failure requiring change of update strategy (incorrect apply time) or an non-fixable failure if there is some issue with the update package itself.\n\nThat way an automated redfish update client can recover from some of these failures.\n\n\u003e I don\u0027t really think so given that the hash doesn\u0027t actually mean anything.\n\nThe hash allows the redfish client to map that back to whichever update package it sent. We just have to choose a hash algorithm for which there is a convenient cli tool to run it, so it works for interactive users as-well.\n\n\nIMO the package hash is *identifying* the update package better than any version string since the version string can be the *same* even if the component image is different in the PLDM package.\n\nWhat do you think?",
      "parentUuid": "ffa3b331_bbda0ffa",
      "range": {
        "startLine": 880,
        "startChar": 56,
        "endLine": 880,
        "endChar": 61
      },
      "revId": "00d63b2ee81d7e4b29ccebad87ceea2f657fb40e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d56fa755_fc728311",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 923,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-18T17:36:54Z",
      "side": 1,
      "message": "dbus object paths are not filesystem object paths.  Please use the appropriate class.",
      "range": {
        "startLine": 923,
        "startChar": 10,
        "endLine": 923,
        "endChar": 31
      },
      "revId": "00d63b2ee81d7e4b29ccebad87ceea2f657fb40e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}