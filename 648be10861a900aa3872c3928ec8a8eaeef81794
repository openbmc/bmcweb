{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "12071443_6c1a617d",
        "filename": "Redfish.md",
        "patchSetId": 77
      },
      "lineNbr": 395,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-06-27T14:47:26Z",
      "side": 1,
      "message": "Don\u0027t need to add MemberId and Name. These are fields common to all schemas.",
      "range": {
        "startLine": 395,
        "startChar": 2,
        "endLine": 395,
        "endChar": 10
      },
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b4e16d9_0dc650a3",
        "filename": "Redfish.md",
        "patchSetId": 77
      },
      "lineNbr": 395,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-06-27T22:29:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "12071443_6c1a617d",
      "range": {
        "startLine": 395,
        "startChar": 2,
        "endLine": 395,
        "endChar": 10
      },
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e0cc48e_c53b8b60",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 26,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-06-27T19:16:20Z",
      "side": 1,
      "message": "Where is it used?\nIf so, it may be better to name to present it.",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 72
      },
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f4781106_41235470",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 26,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-06-28T21:15:56Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "6e0cc48e_c53b8b60",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 72
      },
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5279626a_1f647a61",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 42,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-06-27T19:16:20Z",
      "side": 1,
      "message": "In many places, not all cases result as errors.\nIs it the case that may need to ignore like `if(ec.value() !\u003d EBADR)`?\n\nAlso, this function is invoked only from `afterGetAssemblyProperties()`.\nPerhaps should it be handled inside it like\n\n```\nafterGetAssemblyProperties()\n{\n....\n     sdbusplus::asio::getAllProperties(\n                    *crow::connections::systemBus, serviceName, assembly,\n                    \"xyz.openbmc_project.Inventory.Decorator.Asset\",\n                    [aResp,\n                     assemblyIndex](const boost::beast::error_code\u0026 ec2,\n                                    const dbus::utility::DBusPropertiesMap\u0026\n                                        propertiesList) {\n                    if(ec2) {\n                        messages::internalError(aResp-\u003eres);\n                        return;\n                     }\n                     processAssetProperties(...); \u003c- no need to pass \u0027ec2\u0027\n                     \n```",
      "range": {
        "startLine": 41,
        "startChar": 3,
        "endLine": 42,
        "endChar": 5
      },
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ac1ec76_5988f05e",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 42,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-06-28T21:15:56Z",
      "side": 1,
      "message": "I have seen both type of implementation. I think we started checking ec in the function because of the way bind() passes the information.",
      "parentUuid": "5279626a_1f647a61",
      "range": {
        "startLine": 41,
        "startChar": 3,
        "endLine": 42,
        "endChar": 5
      },
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed9e6534_d517f1a8",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 43,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-06-27T14:47:26Z",
      "side": 1,
      "message": "Change these to ERROR for all internalError",
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce81ad5c_e2acf666",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 43,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-06-27T22:29:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ed9e6534_d517f1a8",
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9052898_35b6398f",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 73,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-06-27T14:47:26Z",
      "side": 1,
      "message": "why fail? We retrieve the information if it is not null. Change in all properties.\nCheckout how we do in PCIe or PowerSupply implementation",
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7fad321b_3b1ac5d4",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 73,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-06-27T22:29:57Z",
      "side": 1,
      "message": "I think we can get null if property does not exist and it is an error here.",
      "parentUuid": "c9052898_35b6398f",
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a668a67_e1167f60",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 200,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-06-27T19:16:20Z",
      "side": 1,
      "message": "Is it a case to use `boost::urls::format()`?",
      "range": {
        "startLine": 199,
        "startChar": 1,
        "endLine": 200,
        "endChar": 54
      },
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1eddc394_c2467223",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 200,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-06-28T21:15:56Z",
      "side": 1,
      "message": "format only takes 2 strings we need to concatenate 3 here.",
      "parentUuid": "7a668a67_e1167f60",
      "range": {
        "startLine": 199,
        "startChar": 1,
        "endLine": 200,
        "endChar": 54
      },
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02527f24_6568bfd2",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 223,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-06-27T19:16:20Z",
      "side": 1,
      "message": "Can \u0027ec\u0027 can be handled before calling `afterGetAssemblyProperties()`?",
      "range": {
        "startLine": 221,
        "startChar": 1,
        "endLine": 223,
        "endChar": 48
      },
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9aa3161_e4e40685",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 223,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-06-28T21:15:56Z",
      "side": 1,
      "message": "So far we are checking ec in the function itself.",
      "parentUuid": "02527f24_6568bfd2",
      "range": {
        "startLine": 221,
        "startChar": 1,
        "endLine": 223,
        "endChar": 48
      },
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d2275f5_72c15765",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 339,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-06-27T19:16:20Z",
      "side": 1,
      "message": "Isn\u0027t this the case to use `getAssociationEndPoints()`?\n\nThen `endpoints()` would be the type of `MapperEndPoints`.",
      "range": {
        "startLine": 339,
        "startChar": 0,
        "endLine": 339,
        "endChar": 52
      },
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0a81e0d_3b33b489",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 339,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-06-28T21:15:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5d2275f5_72c15765",
      "range": {
        "startLine": 339,
        "startChar": 0,
        "endLine": 339,
        "endChar": 52
      },
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a3c6160_a2f6c41a",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 358,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-06-27T19:16:20Z",
      "side": 1,
      "message": "If `getAssociationEndPoints()` is used, I don\u0027t think this is needed.\nInstead the check can be like\n`if(endpoints.empty())`",
      "range": {
        "startLine": 350,
        "startChar": 0,
        "endLine": 358,
        "endChar": 0
      },
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "13b580e4_55162b7c",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 358,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-06-28T21:15:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a3c6160_a2f6c41a",
      "range": {
        "startLine": 350,
        "startChar": 0,
        "endLine": 358,
        "endChar": 0
      },
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cdfe082_815095d9",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 382,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-06-27T14:47:26Z",
      "side": 1,
      "message": "checkForAssemblyAssociations and getAssemblyEndpoints functions should be replaced with getAssociatedSubTreePaths. This is written before we don\u0027t have this function.",
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3011f556_9037569a",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 382,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-06-28T21:15:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8cdfe082_815095d9",
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e473819_55d35094",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 452,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-06-27T14:47:26Z",
      "side": 1,
      "message": "We already checked chassis before calling this function, why check again?",
      "range": {
        "startLine": 445,
        "startChar": 4,
        "endLine": 452,
        "endChar": 5
      },
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "018e0cf2_3a1fc344",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 452,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-06-27T22:29:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2e473819_55d35094",
      "range": {
        "startLine": 445,
        "startChar": 4,
        "endLine": 452,
        "endChar": 5
      },
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d21749f0_400bc38a",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 458,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-06-27T14:47:26Z",
      "side": 1,
      "message": "Why not using the interfaces that getSubTreePaths is using?\nThis will narrow down the retrieval to only the interfaces that we  are interested in.",
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23f4cc5c_e74ab793",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 458,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-06-28T21:15:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d21749f0_400bc38a",
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5f941d9_8982f1e4",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 506,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-06-27T14:47:26Z",
      "side": 1,
      "message": "Should be ERROR.",
      "range": {
        "startLine": 506,
        "startChar": 19,
        "endLine": 506,
        "endChar": 24
      },
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1127afc_380510e3",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 506,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-06-27T22:29:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c5f941d9_8982f1e4",
      "range": {
        "startLine": 506,
        "startChar": 19,
        "endLine": 506,
        "endChar": 24
      },
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b39f352_59c145d0",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 544,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-06-27T14:47:26Z",
      "side": 1,
      "message": "Change all aResp to asyncRep.\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/64058",
      "range": {
        "startLine": 544,
        "startChar": 65,
        "endLine": 544,
        "endChar": 70
      },
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c6febbfc_f47b4055",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 77
      },
      "lineNbr": 544,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-06-27T22:29:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b39f352_59c145d0",
      "range": {
        "startLine": 544,
        "startChar": 65,
        "endLine": 544,
        "endChar": 70
      },
      "revId": "648be10861a900aa3872c3928ec8a8eaeef81794",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}