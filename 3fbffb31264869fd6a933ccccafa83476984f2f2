{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6aec8b27_b0155951",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-15T20:44:16Z",
      "side": 1,
      "message": "this should be 443, right?",
      "range": {
        "startLine": 22,
        "startChar": 25,
        "endLine": 22,
        "endChar": 28
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88ce7561_1a4499dc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-09-16T07:22:08Z",
      "side": 1,
      "message": "The current BMCWeb server listening on the HTTPS Ports 443  of all BMC internet interfaces (eth0, eth1, usb0). So all of request will come to that server instance (I call it is main BMCWeb server).\nThe key point of this design spec is using on different BMCWeb server instance for Redfish host interface (I call RHI BMCWeb server). That instance will be bound to one specific ethernet device in this case is usb0.\nBecause main BMCWeb server is listing on port 443 of usb0 so the RHI BMCWeb server have to listen on different port.\n\nSound like I missed your idea in using `additional-ports` and `bootstrapedauth` for `additional-auth`. Would you mind to share your thoughts again?",
      "parentUuid": "6aec8b27_b0155951",
      "range": {
        "startLine": 22,
        "startChar": 25,
        "endLine": 22,
        "endChar": 28
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "803d4ec3_b839e579",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-16T16:48:46Z",
      "side": 1,
      "message": "\u003e So all of request will come to that server instance\n\nWe should be able to accept 443 to a specific device, right?  I suspect we\u0027re doing the bind in the wrong order, need to bind the device specific devices first?\n\n\nThe goal should be to identify on the same port.  Redfish doesn\u0027t really let you change the port number in a specification defined way.",
      "parentUuid": "88ce7561_1a4499dc",
      "range": {
        "startLine": 22,
        "startChar": 25,
        "endLine": 22,
        "endChar": 28
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67a9af68_994ed1c5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-09-18T08:37:46Z",
      "side": 1,
      "message": "\u003e \u003e So all of request will come to that server instance\n\u003e \n\u003e We should be able to accept 443 to a specific device, right?  I suspect we\u0027re doing the bind in the wrong order, need to bind the device specific devices first?\n\nThe `additional-ports` configuration only affects on the added socket instance, such as `bmcweb_443.socket` if we configure port 443. For the socket instance `bmcweb.socket` it will not effected by this option.\nSo all requests to port 443 will come to both sockets.\nDo we have any wait to limit the request to usb0 at port 443 to only new bmcweb_443.socket?\n\n\u003e \n\u003e \n\u003e The goal should be to identify on the same port.  Redfish doesn\u0027t really let you change the port number in a specification defined way.",
      "parentUuid": "803d4ec3_b839e579",
      "range": {
        "startLine": 22,
        "startChar": 25,
        "endLine": 22,
        "endChar": 28
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2bb0dde0_8f847702",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-22T15:31:13Z",
      "side": 1,
      "message": "\u003e \u003e \u003e So all of request will come to that server instance\n\u003e \u003e \n\u003e \u003e We should be able to accept 443 to a specific device, right?  I suspect we\u0027re doing the bind in the wrong order, need to bind the device specific devices first?\n\u003e \n\u003e The `additional-ports` configuration only affects on the added socket instance, such as `bmcweb_443.socket` if we configure port 443. For the socket instance `bmcweb.socket` it will not effected by this option.\n\u003e So all requests to port 443 will come to both sockets.\n\nThis is TCP.... you can\u0027t have a single request go to two different sockets?  Are you saying the request will round robin?\n\n\u003e Do we have any wait to limit the request to usb0 at port 443 to only new bmcweb_443.socket?\n\nI\u0027m not sure what I mean by wait.  In the ideal implementation\n\nusb0 -\u003e bmcweb_usb0 socket\nall other requests bmcweb_443 socket\n\nIs that not possible?\n\n\u003e \n\u003e \u003e \n\u003e \u003e \n\u003e \u003e The goal should be to identify on the same port.  Redfish doesn\u0027t really let you change the port number in a specification defined way.",
      "parentUuid": "67a9af68_994ed1c5",
      "range": {
        "startLine": 22,
        "startChar": 25,
        "endLine": 22,
        "endChar": 28
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85815908_afed137b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-09-23T15:29:11Z",
      "side": 1,
      "message": "Hi Ed,\n\nI had some misunderstanding about configuration the sockets listening in the same HTTPS port. I thought BMCWeb does not allow that. But seem it does.\n\nI tried to configured `additional-ports` to 443. And test my code. It works normally as using 440.\n\nApologies for my limited knowledge on the matter.\nI will retest and update the patch set soon.\n\nThanks.\nThu Nguyen.",
      "parentUuid": "2bb0dde0_8f847702",
      "range": {
        "startLine": 22,
        "startChar": 25,
        "endLine": 22,
        "endChar": 28
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a174c102_e8a3734b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-23T16:30:19Z",
      "side": 1,
      "message": "\u003e I tried to configured additional-ports to 443. And test my code. It works normally as using 440.\n\nThis is great!  Thank you for taking the time to try it.",
      "parentUuid": "85815908_afed137b",
      "range": {
        "startLine": 22,
        "startChar": 25,
        "endLine": 22,
        "endChar": 28
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf09da7a_edde9bd1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-09-27T12:17:21Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "a174c102_e8a3734b",
      "range": {
        "startLine": 22,
        "startChar": 25,
        "endLine": 22,
        "endChar": 28
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73815e2d_9912346d",
        "filename": "http/app.hpp",
        "patchSetId": 5
      },
      "lineNbr": 155,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-15T20:44:16Z",
      "side": 1,
      "message": "Why is this now hardcoded?  This isn\u0027t always correct.  https can be disabled as can auth.",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 155,
        "endChar": 72
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab289e56_ed378412",
        "filename": "http/http_connection.hpp",
        "patchSetId": 5
      },
      "lineNbr": 83,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-15T20:44:16Z",
      "side": 1,
      "message": "We pretty intentionally don\u0027t pass socket name into this class.  Please follow how httpTypeIn is implemented, and implement a similar class.  Please make sure it works with disableAuthentication()",
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fb41cc2_0e43a6a2",
        "filename": "http/http_connection.hpp",
        "patchSetId": 5
      },
      "lineNbr": 944,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-15T20:44:16Z",
      "side": 1,
      "message": "Please make sure that you implement \"bootstrap auth\" as part of this option.  I suspect this will need to move to an enum.",
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36966159_a3c10264",
        "filename": "include/authentication.hpp",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-23T16:31:57Z",
      "side": 1,
      "message": "Remove reading a config file.  That\u0027s not an appropriate IPC.",
      "range": {
        "startLine": 38,
        "startChar": 51,
        "endLine": 38,
        "endChar": 70
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5cd6c473_147428fe",
        "filename": "include/authentication.hpp",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-23T20:52:31Z",
      "side": 1,
      "message": "Can we just have a known bootstrap user?  Initially lets just call it \"bootstrap\" then if we want to make it configurable we can.[",
      "parentUuid": "36966159_a3c10264",
      "range": {
        "startLine": 38,
        "startChar": 51,
        "endLine": 38,
        "endChar": 70
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22e47fd4_af155aab",
        "filename": "include/authentication.hpp",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-09-23T22:08:25Z",
      "side": 1,
      "message": "Yes. That works too. I will add the meson option in phosphor-ipmi-host to setting the bootStrapAccountName. When this option is configured with name. The created bootStrapAccount will always have that Name and random passwords.",
      "parentUuid": "5cd6c473_147428fe",
      "range": {
        "startLine": 38,
        "startChar": 51,
        "endLine": 38,
        "endChar": 70
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00ab6d6f_14c96da4",
        "filename": "include/authentication.hpp",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-23T23:10:25Z",
      "side": 1,
      "message": "I would really prefer we start with just a known name.  \"bootstrap0\" seems like a good place to start (the zero do we can in theory support multihost in the future).\n\nWhen we need to make that configurable, we can.",
      "parentUuid": "22e47fd4_af155aab",
      "range": {
        "startLine": 38,
        "startChar": 51,
        "endLine": 38,
        "endChar": 70
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3ebbeb9_d23a5410",
        "filename": "include/authentication.hpp",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-09-24T01:52:41Z",
      "side": 1,
      "message": "Sure Ed.",
      "parentUuid": "00ab6d6f_14c96da4",
      "range": {
        "startLine": 38,
        "startChar": 51,
        "endLine": 38,
        "endChar": 70
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62a7d48e_63d09c33",
        "filename": "include/authentication.hpp",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2025-10-01T12:19:07Z",
      "side": 1,
      "message": "@ed@tanous.net the get bootstrap credentials ipmi command has a modifier that leaves it enabled.  if the command is run multiple times, what should the behavior be?\n\nThe latest patches create a bootstrap0 user like you suggest here and then reverts back to making users with random names...",
      "parentUuid": "f3ebbeb9_d23a5410",
      "range": {
        "startLine": 38,
        "startChar": 51,
        "endLine": 38,
        "endChar": 70
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9dc19239_e1f21ef0",
        "filename": "include/authentication.hpp",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-02T19:51:00Z",
      "side": 1,
      "message": "\u003e the get bootstrap credentials ipmi command has a modifier that leaves it enabled.\n\nI\u0027m not sure what this means exactly.  You\u0027d want to leave the user enabled, otherwise it wouldn\u0027t\u0027 work for login, right?\n\n\u003e if the command is run multiple times, what should the behavior be?\n\nI\u0027d assume the credentials match the last password requested?  Ideally there\u0027s something tied to boot state, but I\u0027m not an expert on whether IPMI knows the host boot status.\n\n\u003e The latest patches create a bootstrap0 user like you suggest here and then reverts back to making users with random names...\n\nRandomly named users seems unfriendly to humans that ever have to debug this.  \"bootstrap\" (or some other well chosen name) at least gives the user a hint why there\u0027s two users in their system now.",
      "parentUuid": "62a7d48e_63d09c33",
      "range": {
        "startLine": 38,
        "startChar": 51,
        "endLine": 38,
        "endChar": 70
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eedd3a68_134366b8",
        "filename": "include/authentication.hpp",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2025-10-03T14:27:41Z",
      "side": 1,
      "message": "\u003e You\u0027d want to leave the user enabled\n\nThe thing being left enabled by the modifier is credential bootstrapping, not the user.\n\n\u003e I\u0027d assume the credentials match the last password requested?\nNo, the spec says this:\n\nIf the get bootstrap account credentials command is sent subsequent times and responds with the completion code 00h, a new account shall be created based on the newly generated credentials. Any existing bootstrap accounts shall remain active.\n\n\u003e Randomly named users seems unfriendly to humans\n\nAgree but the original question remains...what to name the subsequently created bootstrap users?  bootstrap0..N ?",
      "parentUuid": "9dc19239_e1f21ef0",
      "range": {
        "startLine": 38,
        "startChar": 51,
        "endLine": 38,
        "endChar": 70
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1404b6bc_4936cc69",
        "filename": "include/authentication.hpp",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-03T15:04:40Z",
      "side": 1,
      "message": "\u003e Any existing bootstrap accounts shall remain active.\n\nIs there a reason it was implemented this way?  Why do we enable more than one bootstrap user at a time?",
      "parentUuid": "eedd3a68_134366b8",
      "range": {
        "startLine": 38,
        "startChar": 51,
        "endLine": 38,
        "endChar": 70
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "baa27a31_efea0bd7",
        "filename": "include/authentication.hpp",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-10-05T12:28:28Z",
      "side": 1,
      "message": "Actually, the current code support maximum 15 bootstrap account. With the name of first one is `bootStrap0`. The redfish host interface does not limit the number of the created bootStrap accounts.\nThe bootStrap account can be used in different applications or system services, limit one bootStrap account will require sharing the bootStrap account in EDK.\n\n```\nCan we just have a known bootstrap user? Initially let\u0027s just call it \"bootstrap\" then if we want to make it configurable we can.[\n```\nFinally, I can understand your idea in this comment. Not only the initial name or configured bootStrap account name. This comment also means we will limit the number of bootStrap account to 1.\nWith that approach, the BMCWeb will use that \"configureabled\" name to identify the bootStrap user.\nSo no need `/etc/bootStrap.conf` file which is listing the name of bootStrap Accounts.\n\nBut as my above opinion, we still need support multiple bootstrap accounts.",
      "parentUuid": "1404b6bc_4936cc69",
      "range": {
        "startLine": 38,
        "startChar": 51,
        "endLine": 38,
        "endChar": 70
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd51c6c8_487ee294",
        "filename": "include/authentication.hpp",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-06T16:59:52Z",
      "side": 1,
      "message": "\u003e The redfish host interface does not limit the number of the created bootStrap accounts.\n\nThis seems like an implementation bug then?  So from the user collection we would see 15 users at all time?  That doesn\u0027t seem user friendly?\n\n\u003e But as my above opinion, we still need support multiple bootstrap accounts.\n\nI\u0027m a little confused how this would happen.  Bootstrap accounts are only allowed to be created during pre-boot environments, right?  Does sbios need more than one account?  Yes, there might be system services, but they would be registered using the normal Redfish URIs, given that TCP will be up at that point, and the one bootstrap credential would be used to bootstrap the rest.\n\nRegardless of how it\u0027s solved, bmcweb can\u0027t be using a blocking system call to the filesystem as an ipc mechanism.  That\u0027s the core of this problem.  I\u0027d also worry about showing 15 users in the list at all times.",
      "parentUuid": "baa27a31_efea0bd7",
      "range": {
        "startLine": 38,
        "startChar": 51,
        "endLine": 38,
        "endChar": 70
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67b7867a_4a022aca",
        "filename": "include/authentication.hpp",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-10-07T06:59:04Z",
      "side": 1,
      "message": "\u003e \u003e The redfish host interface does not limit the number of the created bootStrap accounts.\n\u003e \n\u003e This seems like an implementation bug then?  So from the user collection we would see 15 users at all time?  That doesn\u0027t seem user friendly?\n\nThe bootStrap account just like other accounts, so It will be shown in the WebUI or redfish when we login use administrator account. The administrator can also remove the bootStrap account if they want.\n\n\u003e \n\u003e \u003e But as my above opinion, we still need support multiple bootstrap accounts.\n\u003e \n\u003e I\u0027m a little confused how this would happen.  Bootstrap accounts are only allowed to be created during pre-boot environments, right?  Does sbios need more than one account?  Yes, there might be system services, but they would be registered using the normal Redfish URIs, given that TCP will be up at that point, and the one bootstrap credential would be used to bootstrap the rest.\n\nThis is \"Introduction\" about Redfish host interface in DSP0270 V1.3.3.\n```\nIn many management schemes, it is necessary to provide\nstandardized Redfish-based communication between the host CPU and the Redfish service in the\nmanagement unit. This communication is in addition to the Redfish services available via the external\nnetwork. Implementation of the Redfish host interface is optional for the system designer. If provided,\nthis interface may be used in both the pre-boot (firmware) stage and by drivers and applications within\nthe host operating system and is designed to be available without use of external networking.\n```\nThe redfish host interface is not only be used in pre-boot environments.\nThat why we need support multiple bootStrap accounts.\n\n\u003e \n\u003e Regardless of how it\u0027s solved, bmcweb can\u0027t be using a blocking system call to the filesystem as an ipc mechanism.  That\u0027s the core of this problem.  I\u0027d also worry about showing 15 users in the list at all times.\n\nI plan to use the D-Bus APIs to identify if the account is bootStrap. But it still be blocked by D-Bus request. The BMCWeb need to know the type of account for restriction.\nI checked the current code of BMCWeb, the D-Bus call is async call. So I\u0027m still not sure how to support D-Bus sync call in this case.",
      "parentUuid": "cd51c6c8_487ee294",
      "range": {
        "startLine": 38,
        "startChar": 51,
        "endLine": 38,
        "endChar": 70
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48dccbab_718dca8e",
        "filename": "include/authentication.hpp",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-08T00:52:39Z",
      "side": 1,
      "message": "\u003e \u003e \u003e The redfish host interface does not limit the number of the created bootStrap accounts.\n\u003e \u003e \n\u003e \u003e This seems like an implementation bug then?  So from the user collection we would see 15 users at all time?  That doesn\u0027t seem user friendly?\n\u003e \n\u003e The bootStrap account just like other accounts, so It will be shown in the WebUI or redfish when we login use administrator account. The administrator can also remove the bootStrap account if they want.\n\nThe 15 bootstrap accounts.....?\n\n\u003e \n\u003e \u003e \n\u003e \u003e \u003e But as my above opinion, we still need support multiple bootstrap accounts.\n\u003e \u003e \n\u003e \u003e I\u0027m a little confused how this would happen.  Bootstrap accounts are only allowed to be created during pre-boot environments, right?  Does sbios need more than one account?  Yes, there might be system services, but they would be registered using the normal Redfish URIs, given that TCP will be up at that point, and the one bootstrap credential would be used to bootstrap the rest.\n\u003e \n\u003e This is \"Introduction\" about Redfish host interface in DSP0270 V1.3.3.\n\u003e ```\n\u003e In many management schemes, it is necessary to provide\n\u003e standardized Redfish-based communication between the host CPU and the Redfish service in the\n\u003e management unit. This communication is in addition to the Redfish services available via the external\n\u003e network. Implementation of the Redfish host interface is optional for the system designer. If provided,\n\u003e this interface may be used in both the pre-boot (firmware) stage and by drivers and applications within\n\u003e the host operating system and is designed to be available without use of external networking.\n\u003e ```\n\u003e The redfish host interface is not only be used in pre-boot environments.\n\u003e That why we need support multiple bootStrap accounts.\n\nRight, the host interface isn\u0027t, but the BOOTSTRAP is intended to only be used by preboot, and the bootstrap can be used to set up the initial passwords for hte rest of the services and drivers (usually by a UEFI variable).\n\n\u003e \n\u003e \u003e \n\u003e \u003e Regardless of how it\u0027s solved, bmcweb can\u0027t be using a blocking system call to the filesystem as an ipc mechanism.  That\u0027s the core of this problem.  I\u0027d also worry about showing 15 users in the list at all times.\n\u003e \n\u003e I plan to use the D-Bus APIs to identify if the account is bootStrap. But it still be blocked by D-Bus request. The BMCWeb need to know the type of account for restriction.\n\nDbus requests are async, not blocking.\n\n\u003e I checked the current code of BMCWeb, the D-Bus call is async call. So I\u0027m still not sure how to support D-Bus sync call in this case.\n\nYou don\u0027t get a synchronous call, that\u0027s the point.",
      "parentUuid": "67b7867a_4a022aca",
      "range": {
        "startLine": 38,
        "startChar": 51,
        "endLine": 38,
        "endChar": 70
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0a82061_51cd6ecc",
        "filename": "include/authentication.hpp",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-10-08T01:02:32Z",
      "side": 1,
      "message": "\"In addition to standard credentials, implementations may optionally support auto-generation and delivery of\nHI-only credentials that may be used by the Firmware or OS to authenticate.\n◦ If supported, auto-generated credentials for the Host shall be delivered by using UEFI-based mechanism\ndescribed in a later section of this document.\"\n\nNote, that it says FIRMWARE OR OS for the bootstrap HI-only credentials.\n\n\n\"Services may support provisioning a temporary account for the host interface using IPMI commands.\"\n\nNote it specifies \"A\" temporary account, not multiple.\n\n\nNow, it does also say:\n\n\"If the Get Bootstrap Account Credentials command has been issued and responds with the completion code 00h, a\nbootstrap account shall be added to the manager\u0027s account collection and enabled. If the Get Bootstrap Account\nCredentials command is sent subsequent times and responds with the completion code 00h, a new account shall be\ncreated based on the newly generated credentials. Any existing bootstrap accounts shall remain active.\"\n\n\nSo maybe I\u0027m wrong?\n\n\"Services shall delete all bootstrap accounts:\n• On any reset of the service.\n• On any reset of the host. Implementers may need to provision for the necessary mechanisms in order to detect a\nhost reset, which could be hardware-based, UEFI-based, or a mixture of the two.\"\n\n\nThis makes the implementation more complex.  Maybe we need boostrap accounts to be bootstrap_\u003cuuid\u003e ?",
      "parentUuid": "48dccbab_718dca8e",
      "range": {
        "startLine": 38,
        "startChar": 51,
        "endLine": 38,
        "endChar": 70
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbe7cbc5_1953ebb9",
        "filename": "include/authentication.hpp",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-10-09T03:11:05Z",
      "side": 1,
      "message": "\u003e \"In addition to standard credentials, implementations may optionally support auto-generation and delivery of\n\u003e HI-only credentials that may be used by the Firmware or OS to authenticate.\n\u003e ◦ If supported, auto-generated credentials for the Host shall be delivered by using UEFI-based mechanism\n\u003e described in a later section of this document.\"\n\u003e \n\u003e Note, that it says FIRMWARE OR OS for the bootstrap HI-only credentials.\n\u003e \n\u003e \n\u003e \"Services may support provisioning a temporary account for the host interface using IPMI commands.\"\n\u003e \n\u003e Note it specifies \"A\" temporary account, not multiple.\n\u003e \n\u003e \n\u003e Now, it does also say:\n\u003e \n\u003e \"If the Get Bootstrap Account Credentials command has been issued and responds with the completion code 00h, a\n\u003e bootstrap account shall be added to the manager\u0027s account collection and enabled. If the Get Bootstrap Account\n\u003e Credentials command is sent subsequent times and responds with the completion code 00h, a new account shall be\n\u003e created based on the newly generated credentials. Any existing bootstrap accounts shall remain active.\"\n\u003e \n\u003e \n\u003e So maybe I\u0027m wrong?\n\u003e \n\u003e \"Services shall delete all bootstrap accounts:\n\u003e • On any reset of the service.\n\u003e • On any reset of the host. Implementers may need to provision for the necessary mechanisms in order to detect a\n\u003e host reset, which could be hardware-based, UEFI-based, or a mixture of the two.\"\n\u003e \n\u003e \n\u003e This makes the implementation more complex.  Maybe we need boostrap accounts to be bootstrap_\u003cuuid\u003e ?\n\nAs the current implementation, the first bootStrap account name will always bootstrap0. The other account names will be created randomly.\nAll of boot strap accounts will be removed when the CurrentHostState at object path `/xyz/openbmc_project/state/host0` change to not \"Running\" state.",
      "parentUuid": "b0a82061_51cd6ecc",
      "range": {
        "startLine": 38,
        "startChar": 51,
        "endLine": 38,
        "endChar": 70
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}