{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6aec8b27_b0155951",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-15T20:44:16Z",
      "side": 1,
      "message": "this should be 443, right?",
      "range": {
        "startLine": 22,
        "startChar": 25,
        "endLine": 22,
        "endChar": 28
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88ce7561_1a4499dc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-09-16T07:22:08Z",
      "side": 1,
      "message": "The current BMCWeb server listening on the HTTPS Ports 443  of all BMC internet interfaces (eth0, eth1, usb0). So all of request will come to that server instance (I call it is main BMCWeb server).\nThe key point of this design spec is using on different BMCWeb server instance for Redfish host interface (I call RHI BMCWeb server). That instance will be bound to one specific ethernet device in this case is usb0.\nBecause main BMCWeb server is listing on port 443 of usb0 so the RHI BMCWeb server have to listen on different port.\n\nSound like I missed your idea in using `additional-ports` and `bootstrapedauth` for `additional-auth`. Would you mind to share your thoughts again?",
      "parentUuid": "6aec8b27_b0155951",
      "range": {
        "startLine": 22,
        "startChar": 25,
        "endLine": 22,
        "endChar": 28
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "803d4ec3_b839e579",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-16T16:48:46Z",
      "side": 1,
      "message": "\u003e So all of request will come to that server instance\n\nWe should be able to accept 443 to a specific device, right?  I suspect we\u0027re doing the bind in the wrong order, need to bind the device specific devices first?\n\n\nThe goal should be to identify on the same port.  Redfish doesn\u0027t really let you change the port number in a specification defined way.",
      "parentUuid": "88ce7561_1a4499dc",
      "range": {
        "startLine": 22,
        "startChar": 25,
        "endLine": 22,
        "endChar": 28
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67a9af68_994ed1c5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000945
      },
      "writtenOn": "2025-09-18T08:37:46Z",
      "side": 1,
      "message": "\u003e \u003e So all of request will come to that server instance\n\u003e \n\u003e We should be able to accept 443 to a specific device, right?  I suspect we\u0027re doing the bind in the wrong order, need to bind the device specific devices first?\n\nThe `additional-ports` configuration only affects on the added socket instance, such as `bmcweb_443.socket` if we configure port 443. For the socket instance `bmcweb.socket` it will not effected by this option.\nSo all requests to port 443 will come to both sockets.\nDo we have any wait to limit the request to usb0 at port 443 to only new bmcweb_443.socket?\n\n\u003e \n\u003e \n\u003e The goal should be to identify on the same port.  Redfish doesn\u0027t really let you change the port number in a specification defined way.",
      "parentUuid": "803d4ec3_b839e579",
      "range": {
        "startLine": 22,
        "startChar": 25,
        "endLine": 22,
        "endChar": 28
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73815e2d_9912346d",
        "filename": "http/app.hpp",
        "patchSetId": 5
      },
      "lineNbr": 155,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-15T20:44:16Z",
      "side": 1,
      "message": "Why is this now hardcoded?  This isn\u0027t always correct.  https can be disabled as can auth.",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 155,
        "endChar": 72
      },
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab289e56_ed378412",
        "filename": "http/http_connection.hpp",
        "patchSetId": 5
      },
      "lineNbr": 83,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-15T20:44:16Z",
      "side": 1,
      "message": "We pretty intentionally don\u0027t pass socket name into this class.  Please follow how httpTypeIn is implemented, and implement a similar class.  Please make sure it works with disableAuthentication()",
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fb41cc2_0e43a6a2",
        "filename": "http/http_connection.hpp",
        "patchSetId": 5
      },
      "lineNbr": 944,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-09-15T20:44:16Z",
      "side": 1,
      "message": "Please make sure that you implement \"bootstrap auth\" as part of this option.  I suspect this will need to move to an enum.",
      "revId": "3fbffb31264869fd6a933ccccafa83476984f2f2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}