{
  "comments": [
    {
      "key": {
        "uuid": "feadc0c0_4a64fd31",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 53,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2021-02-14T04:20:32Z",
      "side": 1,
      "message": "I don\u0027t think we should hardcode this to 0. How about id here? i.e. how about vdd_vrm0 here?",
      "revId": "1ac430393c3815673001fba390305fa0163aabb7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc1542c2_62bc54bd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 53,
      "author": {
        "id": 1000338
      },
      "writtenOn": "2021-02-16T05:18:25Z",
      "side": 1,
      "message": "I think Sunny has fixed this in the latest PS based on the comment I gave earlier. This tested section needs to be updated.",
      "parentUuid": "feadc0c0_4a64fd31",
      "revId": "1ac430393c3815673001fba390305fa0163aabb7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88bfe953_c876b1ae",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 55,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2021-02-14T04:20:32Z",
      "side": 1,
      "message": "I am fine with this, but I don\u0027t think this is very useful either. \n\nStorage uses id for both of these.. \nhttps://github.com/openbmc/bmcweb/blob/f23b729676559f539790580930b1ff3b0c05805b/redfish-core/lib/storage.hpp#L175\n\nDoes \"Vdd Vrm0\" make sense? I.e. replace the underscores with spaces?\n\n\nPrettyName isn\u0027t used? I think that would be a great fit here\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/32304979b404c24e32f195d08c667e65b9b34695/xyz/openbmc_project/Inventory/Item.interface.yaml#L5",
      "revId": "1ac430393c3815673001fba390305fa0163aabb7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "104d9e9b_86fc9904",
        "filename": "/COMMIT_MSG",
        "patchSetId": 22
      },
      "lineNbr": 77,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2021-02-14T04:20:32Z",
      "side": 1,
      "message": "How about just \"Assembly\" here so it matches other resources in bmcweb? typically we set Id to the last segment of the URI.",
      "revId": "1ac430393c3815673001fba390305fa0163aabb7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06a36652_db8e8d13",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 22
      },
      "lineNbr": 30,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2021-02-16T17:02:45Z",
      "side": 1,
      "message": "nit You can simplify it to the name of the variable. There is no need for (std::string(dataID). It is copied to callback when only name of the variable is passed",
      "range": {
        "startLine": 30,
        "startChar": 20,
        "endLine": 30,
        "endChar": 45
      },
      "revId": "1ac430393c3815673001fba390305fa0163aabb7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d79c32d_589ecf34",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 22
      },
      "lineNbr": 48,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2021-02-16T17:02:45Z",
      "side": 1,
      "message": "nit No need to name it ec2 unless it increase readability",
      "range": {
        "startLine": 48,
        "startChar": 60,
        "endLine": 48,
        "endChar": 63
      },
      "revId": "1ac430393c3815673001fba390305fa0163aabb7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc0df261_41329e89",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 22
      },
      "lineNbr": 76,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2021-02-16T17:02:45Z",
      "side": 1,
      "message": "Is it ok that every member of \"Assemblies\" array has \"0\" in attribute \"MemberId\"?",
      "range": {
        "startLine": 76,
        "startChar": 46,
        "endLine": 76,
        "endChar": 49
      },
      "revId": "1ac430393c3815673001fba390305fa0163aabb7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c04b576d_a505867e",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 22
      },
      "lineNbr": 91,
      "author": {
        "id": 1000386
      },
      "writtenOn": "2021-02-17T05:27:45Z",
      "side": 1,
      "message": "Can all of them be done in doGet() based on return value?",
      "revId": "1ac430393c3815673001fba390305fa0163aabb7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d626d19_b4d74640",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 22
      },
      "lineNbr": 148,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2021-02-16T17:02:45Z",
      "side": 1,
      "message": "Why it is empty? I guess there should be a name of the interface",
      "range": {
        "startLine": 148,
        "startChar": 69,
        "endLine": 148,
        "endChar": 71
      },
      "revId": "1ac430393c3815673001fba390305fa0163aabb7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5443cf9_5550e965",
        "filename": "redfish-core/lib/assembly.hpp",
        "patchSetId": 22
      },
      "lineNbr": 148,
      "author": {
        "id": 1000338
      },
      "writtenOn": "2021-02-22T05:20:00Z",
      "side": 1,
      "message": "A GetAll with an empty interface parameter works, but of course it does not handle the case where a property name may be repeated across interfaces. I don\u0027t have a strong opinion here, but it looks like there is already code in bmcweb that does this (memory.hpp)",
      "parentUuid": "2d626d19_b4d74640",
      "range": {
        "startLine": 148,
        "startChar": 69,
        "endLine": 148,
        "endChar": 71
      },
      "revId": "1ac430393c3815673001fba390305fa0163aabb7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}