{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "29b8c515_650df946",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-04-07T16:13:41Z",
      "side": 1,
      "message": "I don\u0027t understand why people wouldn\u0027t be using phoshor-state-manager. I personally would rather bmcweb go to D-Bus for this. I think of bmcweb\u0027s Redfish implementation as a D-Bus \u003c-\u003e Redfish translation. Anytime bmcweb goes to systemd directly makes the bmcweb Redfish architecture more complex. It feels like we are putting phosphor-state-manager logic into bmcweb. That said, I guess since people aren\u0027t using phoshor-state-manager or a completing app that could implement the D-Bus for this, this is as good as it gets today maybe. I do want this function into Redfish.\nI personally think https://gerrit.openbmc.org/c/openbmc/bmcweb/+/50318 is a better direction. If people don\u0027t use phosphor-state-manager, they get some default. If  phosphor-state-manager isn\u0027t started, some default is returned.",
      "revId": "c8dfa0eadcbbb1bea61bebf3bf90698509a16596",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8498906d_c4623aff",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-04-10T16:31:00Z",
      "side": 1,
      "message": "\u003e I don\u0027t understand why people wouldn\u0027t be using phoshor-state-manager.\n\nWe are talking about bmc-state-manager here, which happened to get checked into the phosphor-state-manager repository.  Was anyone outside of IBM included in the design process for bmc-state-manager?  If so, can you point them to this review?  If there are folks outside of a single company asking for this, that changes the math a little, and I\u0027m happy to be swayed by community input if bmc-state-manager is desired widely.\n\n\u003e I personally would rather bmcweb go to D-Bus for this.\n\nI don\u0027t understand.  It\u0027s going to dbus, just going to systemd rather than an OpenBMC specific interface.  Doing so reduces the amount of code that OpenBMC has that\u0027s different that normal systems, and doing it this way reduces the bmcweb code as wel.\n\n\u003e I think of bmcweb\u0027s Redfish implementation as a D-Bus \u003c-\u003e Redfish translation. Anytime bmcweb goes to systemd directly makes the bmcweb Redfish architecture more complex.\n\nDisagree here.  There\u0027s less code overall in bmcweb.\n\n\u003e It feels like we are putting phosphor-state-manager logic into bmcweb. That said, I guess since people aren\u0027t using phoshor-state-manager or a completing app that could implement the D-Bus for this, this is as good as it gets today maybe. I do want this function into Redfish.\n\u003e I personally think https://gerrit.openbmc.org/c/openbmc/bmcweb/+/50318 is a better direction. If people don\u0027t use phosphor-state-manager, they get some default. If  phosphor-state-manager isn\u0027t started, some default is returned.\n\nDoes the user facing behavior change with this patch?",
      "parentUuid": "29b8c515_650df946",
      "revId": "c8dfa0eadcbbb1bea61bebf3bf90698509a16596",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c99cdc1_a40a9827",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-04-10T21:00:25Z",
      "side": 1,
      "message": "\u003e We are talking about bmc-state-manager here, which happened to get checked into the phosphor-state-manager repository. Was anyone outside of IBM included in the design process for bmc-state-manager? If so, can you point them to this review? If there are folks outside of a single company asking for this, that changes the math a little, and I\u0027m happy to be swayed by community input if bmc-state-manager is desired widely.\n\n*bmc* state manager dates back to Jan 2017, 14 months before OpenBMC became a Linux Foundation project. When it was created, very few companies were working on the project. Since it has been created, I do see several other companies contributing, e.g. Nuvoton at https://github.com/openbmc/phosphor-state-manager/commit/2bfb1efc4bc7e781224e19c05b51e6675f13a488 and Intel at https://github.com/openbmc/phosphor-dbus-interfaces/commit/e77b423de8831a10b4b071a5c7c87ebec1ffdd91 and https://github.com/openbmc/phosphor-dbus-interfaces/commit/4610bace070eb17c6e4ee015210dac44284c53a7\n\nhttps://github.com/openbmc/phosphor-state-manager/commits/master/bmc_state_manager.cpp\n\n\u003e  don\u0027t understand. It\u0027s going to dbus, just going to systemd rather than an OpenBMC specific interface. Doing so reduces the amount of code that OpenBMC has that\u0027s different that normal systems, and doing it this way reduces the bmcweb code as wel.\n\nThat is a fair point\n\n\u003e Does the user facing behavior change with this patch?\n\nYes, you don\u0027t have states like UpdateInProgress vs https://gerrit.openbmc.org/c/openbmc/bmcweb/+/50318\n\nI added AppaRao since he added the PDI interface for UpdateInProgress",
      "parentUuid": "8498906d_c4623aff",
      "revId": "c8dfa0eadcbbb1bea61bebf3bf90698509a16596",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e282bf1_a9c26dbc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-04-06T17:23:31Z",
      "side": 1,
      "message": "have you now tested?",
      "revId": "c8dfa0eadcbbb1bea61bebf3bf90698509a16596",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "174ed344_66fc4983",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-04-06T16:40:03Z",
      "side": 1,
      "message": "Waiting for Gunnars OK, then this can go in.",
      "revId": "c8dfa0eadcbbb1bea61bebf3bf90698509a16596",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf95f74f_4c00cdfc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-04-07T16:13:41Z",
      "side": 1,
      "message": "Reluctantly +1ed. \nMy performances would be: \n1. https://gerrit.openbmc.org/c/openbmc/bmcweb/+/50318\n2. This patch \n3. Not having this funciton",
      "revId": "c8dfa0eadcbbb1bea61bebf3bf90698509a16596",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}