{
  "comments": [
    {
      "key": {
        "uuid": "83e812cc_901375a1",
        "filename": "http/http_connection.hpp",
        "patchSetId": 36
      },
      "lineNbr": 363,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-03-08T05:25:01Z",
      "side": 1,
      "message": "Please use boost::iequals",
      "range": {
        "startLine": 363,
        "startChar": 20,
        "endLine": 363,
        "endChar": 38
      },
      "revId": "eaa5125e2a71e4963fe8685a5ec61773ec1ace2c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7ce360d_2312b2c4",
        "filename": "http/http_connection.hpp",
        "patchSetId": 36
      },
      "lineNbr": 363,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-08T15:29:02Z",
      "side": 1,
      "message": "I\u0027m not following.  I didn\u0027t realize mime types were supposed to be case insensitive in the standard.  I know the keys are, but I thought the values were case sensitive?\n\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type.\n\nWith that said, this should really parse this string with the proper beast parser.",
      "parentUuid": "83e812cc_901375a1",
      "range": {
        "startLine": 363,
        "startChar": 20,
        "endLine": 363,
        "endChar": 38
      },
      "revId": "eaa5125e2a71e4963fe8685a5ec61773ec1ace2c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9431ef80_bb78a951",
        "filename": "http/http_connection.hpp",
        "patchSetId": 36
      },
      "lineNbr": 363,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-03-18T14:30:50Z",
      "side": 1,
      "message": "I suggested because starts_with can also allow malicious content_type as \"multipart/form-datasomescriptlines\" . It just checks if the string passed starts with the mentioned substring",
      "parentUuid": "f7ce360d_2312b2c4",
      "range": {
        "startLine": 363,
        "startChar": 20,
        "endLine": 363,
        "endChar": 38
      },
      "revId": "eaa5125e2a71e4963fe8685a5ec61773ec1ace2c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "235c3968_06493d6a",
        "filename": "http/http_connection.hpp",
        "patchSetId": 36
      },
      "lineNbr": 376,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-01-19T17:29:18Z",
      "side": 1,
      "message": "One thing I wonder is whether the framework should just pass the error on to the handler.  I imagine if this is a redfish uri, we want to return a redfish error.  If this is a phosphor-rest uri, we want to return a phosphor-rest error.\n\nI wonder how we can propogate that error into the response object without being too invasive.",
      "range": {
        "startLine": 375,
        "startChar": 0,
        "endLine": 376,
        "endChar": 42
      },
      "revId": "eaa5125e2a71e4963fe8685a5ec61773ec1ace2c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad66a0e1_80a1c399",
        "filename": "include/login_routes.hpp",
        "patchSetId": 36
      },
      "lineNbr": 123,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-03-08T05:25:01Z",
      "side": 1,
      "message": "Please use boost::iequals",
      "range": {
        "startLine": 123,
        "startChar": 21,
        "endLine": 123,
        "endChar": 39
      },
      "revId": "eaa5125e2a71e4963fe8685a5ec61773ec1ace2c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "139185d2_194e583f",
        "filename": "include/login_routes.hpp",
        "patchSetId": 36
      },
      "lineNbr": 123,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-08T15:29:02Z",
      "side": 1,
      "message": "Please see previous comment.  I didn\u0027t think MIME types were case insensitive.",
      "parentUuid": "ad66a0e1_80a1c399",
      "range": {
        "startLine": 123,
        "startChar": 21,
        "endLine": 123,
        "endChar": 39
      },
      "revId": "eaa5125e2a71e4963fe8685a5ec61773ec1ace2c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}