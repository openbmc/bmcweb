{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dc7173d8_7a20676f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2025-04-30T18:23:05Z",
      "side": 1,
      "message": "Is there a follow-on commit which shows the benefit of splitting this out? (Since current callers are not needing this I\u0027m assuming this is in preparation for another commit.)",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 2
      },
      "revId": "5e380fdd3bbf04ffc2383e18866dd9accc183b35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79c9e62e_7115e369",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2025-04-30T20:10:45Z",
      "side": 1,
      "message": "The purpose of this commit is to allow json-output generation based on the content of LogEntry.\n\n\n```\n  std::optional\u003cDbusEventLogEntry\u003e optEntry \u003d\n        fillDbusEventLogEntryFromPropertyMap(propertyMap);\n   if( COND(*optEntry) )\n   {\n      Json-output generation\n   }\n```\n\nAt this time, there is no immediate upstream follow-up commits unlike the case of IBM-downstream which will do the conditional json-output",
      "parentUuid": "dc7173d8_7a20676f",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 2
      },
      "revId": "5e380fdd3bbf04ffc2383e18866dd9accc183b35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0af6182f_38e92a7f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-04T18:07:05Z",
      "side": 1,
      "message": "I\u0027m not sure I understand why this is needed.  What does \"conditional json-output\" mean?  Is there a commit you can point me to?\n\nAs written, this is adding code for the same use cases.  That\u0027s fine if we have a feature that we need for this, but we need to articulate the feature.",
      "parentUuid": "79c9e62e_7115e369",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 2
      },
      "revId": "5e380fdd3bbf04ffc2383e18866dd9accc183b35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34122b8e_7ba0b8b7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2025-06-06T10:05:59Z",
      "side": 1,
      "message": "I reworded the commit message to show a possible example (Oem-specific need) to check the condition.",
      "parentUuid": "0af6182f_38e92a7f",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 2
      },
      "revId": "5e380fdd3bbf04ffc2383e18866dd9accc183b35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38cdcbc8_a77a62bc",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1809,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-04T19:52:09Z",
      "side": 1,
      "message": "nit, *entry works just as well and avoids a whole line",
      "range": {
        "startLine": 1809,
        "startChar": 49,
        "endLine": 1809,
        "endChar": 54
      },
      "revId": "5e380fdd3bbf04ffc2383e18866dd9accc183b35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f498fe7d_245870d4",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1809,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2025-06-06T10:05:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "38cdcbc8_a77a62bc",
      "range": {
        "startLine": 1809,
        "startChar": 49,
        "endLine": 1809,
        "endChar": 54
      },
      "revId": "5e380fdd3bbf04ffc2383e18866dd9accc183b35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b12cfbc7_d3e4f17c",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1810,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-04T19:52:09Z",
      "side": 1,
      "message": "This has pushed the lambda over the limit (it was arguably too long before).\n\nPlease break this out into a normal method before this can merge.",
      "range": {
        "startLine": 1798,
        "startChar": 0,
        "endLine": 1810,
        "endChar": 75
      },
      "revId": "5e380fdd3bbf04ffc2383e18866dd9accc183b35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6cf32fa3_f41bce82",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1810,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2025-06-06T10:05:59Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "b12cfbc7_d3e4f17c",
      "range": {
        "startLine": 1798,
        "startChar": 0,
        "endLine": 1810,
        "endChar": 75
      },
      "revId": "5e380fdd3bbf04ffc2383e18866dd9accc183b35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}