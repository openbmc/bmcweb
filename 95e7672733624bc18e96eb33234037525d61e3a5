{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4422102e_237f49bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-24T22:17:33Z",
      "side": 1,
      "message": "nit; otherwise LGTM",
      "revId": "95e7672733624bc18e96eb33234037525d61e3a5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35f6ec00_3de628fd",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 2
      },
      "lineNbr": 1204,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-24T22:17:33Z",
      "side": 1,
      "message": "nit: this can be \n\n```\nif (LogParseError status \u003d ...; status \u003d\u003d xxx) {\n\n} else if (status !\u003d ) {\n\n}\n```\n\nSo we don\u0027t pollute the scope with a |status| declaration.",
      "range": {
        "startLine": 1204,
        "startChar": 16,
        "endLine": 1204,
        "endChar": 29
      },
      "revId": "95e7672733624bc18e96eb33234037525d61e3a5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a251481d_7603510d",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 2
      },
      "lineNbr": 1204,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2022-06-24T22:22:33Z",
      "side": 1,
      "message": "I have been told in the past that that construct doesn\u0027t fit with our preferred style as it makes it less readable.  I\u0027m okay with it and am happy to change to that, but I\u0027d like to hear thoughts from others.  Thanks!",
      "parentUuid": "35f6ec00_3de628fd",
      "range": {
        "startLine": 1204,
        "startChar": 16,
        "endLine": 1204,
        "endChar": 29
      },
      "revId": "95e7672733624bc18e96eb33234037525d61e3a5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc261163_a111ca11",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 2
      },
      "lineNbr": 1204,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-24T22:30:55Z",
      "side": 1,
      "message": "I don\u0027t think what Nan suggested works in this case, because the status variable declaration is limited to the first scope, so the second one wouldn\u0027t have status in scope?  Maybe it works, but it\u0027s not a level of complexity I like to promote as a general rule;  Maybe, if the enum value is only being used in one conditional, and didn\u0027t push the declaration to 2 lines would it make sense and still be readable.  In the processor, this is all getting renamed to registers anyway, so I\u0027d rather the code that looks like everything else and is obviously correct.",
      "parentUuid": "a251481d_7603510d",
      "range": {
        "startLine": 1204,
        "startChar": 16,
        "endLine": 1204,
        "endChar": 29
      },
      "revId": "95e7672733624bc18e96eb33234037525d61e3a5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a61a2766_33841dda",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 2
      },
      "lineNbr": 1204,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-24T22:48:08Z",
      "side": 1,
      "message": "\u003e I don\u0027t think what Nan suggested works in this case, because the status variable declaration is limited to the first scope, so the second one wouldn\u0027t have status in scope?  Maybe it works, but it\u0027s not a level of complexity I like to promote as a general rule;\n\nIt works.\n\nhttps://godbolt.org/z/qPTnf361z\n\n\"The scope of the name introduced by condition, if it is a declaration, is the combined scope of both statements\u0027 bodies:\" \n\n\u003e  Maybe, if the enum value is only being used in one conditional, and didn\u0027t push the declaration to 2 lines would it make sense and still be readable. \n\nGiven that both branches can access the variable, does it make sense now? Why is it not readable?\n\nI don\u0027t invent this style myself. Just reference it from what I learned somewhere else. \n\n\"Use the new if (init; cond) and switch (init; cond) syntax when you need a new variable for use within the if or switch statement that is not needed outside of it. This simplifies the ambient code. Moreover, since the variableâ€™s scope is now small, its name can be shorter, too.\"\n\nhttps://abseil.io/tips/165",
      "parentUuid": "fc261163_a111ca11",
      "range": {
        "startLine": 1204,
        "startChar": 16,
        "endLine": 1204,
        "endChar": 29
      },
      "revId": "95e7672733624bc18e96eb33234037525d61e3a5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "341d50d5_19f41f87",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 2
      },
      "lineNbr": 1204,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-24T23:02:57Z",
      "side": 1,
      "message": "Gotcha, didn\u0027t realize it worked that way;  We haven\u0027t had c++17 for very long, and definitely predates bmcweb (bmcweb was originally written against c++11), so it\u0027s possible that there\u0027s better syntax we could be using but haven\u0027t.  Some of the difference in openbmc versus absl is that we only have 80 character widths, not 120, so almost every time we would use this, it pushes the conditional onto two lines, which is way worse to read.\n\nIn this case, it\u0027s already two lines, so maybe it\u0027s not as bad?\n\nMy opinion here isn\u0027t very strong.  If the submitter thinks it\u0027s a better pattern, I\u0027ll let him make the change, but it\u0027s not something I\u0027m going to generally enforce.",
      "parentUuid": "a61a2766_33841dda",
      "range": {
        "startLine": 1204,
        "startChar": 16,
        "endLine": 1204,
        "endChar": 29
      },
      "revId": "95e7672733624bc18e96eb33234037525d61e3a5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf56b554_43065b32",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 2
      },
      "lineNbr": 1204,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2022-06-27T20:53:11Z",
      "side": 1,
      "message": "I made the change so we could see what it will look like.  I don\u0027t know if it provides much benefit, though.  It will also be interesting to see if clang-tidy hates on me again for that \u0027else\u0027. ðŸ˜Š",
      "parentUuid": "341d50d5_19f41f87",
      "range": {
        "startLine": 1204,
        "startChar": 16,
        "endLine": 1204,
        "endChar": 29
      },
      "revId": "95e7672733624bc18e96eb33234037525d61e3a5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8094f8ab_5dc6a65c",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 2
      },
      "lineNbr": 1284,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-24T22:17:44Z",
      "side": 1,
      "message": "same here",
      "range": {
        "startLine": 1284,
        "startChar": 20,
        "endLine": 1284,
        "endChar": 33
      },
      "revId": "95e7672733624bc18e96eb33234037525d61e3a5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}