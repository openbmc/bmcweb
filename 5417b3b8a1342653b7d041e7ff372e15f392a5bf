{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "10bc9cd2_7c4f3866",
        "filename": "/COMMIT_MSG",
        "patchSetId": 51
      },
      "lineNbr": 15,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-08-10T17:12:26Z",
      "side": 1,
      "message": "Can you expand this? It looks like you are looking for an Inventory.Item.System object and have some assumptions there",
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f362c95c_fbacee8c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 51
      },
      "lineNbr": 15,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-08-25T00:00:05Z",
      "side": 1,
      "message": "I added additional details into the testing section. I am uncertain if this addresses your comment.",
      "parentUuid": "10bc9cd2_7c4f3866",
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a90ba657_29153cdc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 51
      },
      "lineNbr": 15,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-09-07T13:37:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f362c95c_fbacee8c",
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a88cfa3_0cf359d6",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 51
      },
      "lineNbr": 268,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-08-10T14:07:21Z",
      "side": 1,
      "message": "I think we can use `std::find_front()`.\n\n```\n    getLedGroupService(asyncResp, subtreePaths[0],std::bind_front(callback, subtreePaths[0]));\n```",
      "range": {
        "startLine": 265,
        "startChar": 0,
        "endLine": 268,
        "endChar": 7
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b1da89c_40db9a09",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 51
      },
      "lineNbr": 268,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-08-25T00:00:05Z",
      "side": 1,
      "message": "As I mentioned earlier, I prefer not to use bind_front for the callback function to maintain better readability.",
      "parentUuid": "1a88cfa3_0cf359d6",
      "range": {
        "startLine": 265,
        "startChar": 0,
        "endLine": 268,
        "endChar": 7
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca706179_1ea05f2c",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 51
      },
      "lineNbr": 268,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-08-25T12:40:02Z",
      "side": 1,
      "message": "Isn\u0027t always the case that all uses of std::bind_front() in bmcweb are same as like this?\nTake any example in bmcweb and it would be like this case.\nThen, why the other cases are following std::bind_front() but not here?\n\nhttps://github.com/openbmc/bmcweb/blob/8e73b9064fdd414b9a71806a44f0e0f176b5a88d/COMMON_ERRORS.md?plain\u003d1#L332C1-L332C1\n\nIf we follow this, it will end-up to like this case - one line body in lambda which will become a code with std::bind_front().",
      "parentUuid": "6b1da89c_40db9a09",
      "range": {
        "startLine": 265,
        "startChar": 0,
        "endLine": 268,
        "endChar": 7
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8749713f_72d0caef",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 51
      },
      "lineNbr": 268,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-08-25T15:33:49Z",
      "side": 1,
      "message": "How do you do bind_front of callback? Can you give working example or code?",
      "parentUuid": "ca706179_1ea05f2c",
      "range": {
        "startLine": 265,
        "startChar": 0,
        "endLine": 268,
        "endChar": 7
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c85d5997_0ba4a2f4",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 51
      },
      "lineNbr": 268,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-08-25T15:42:52Z",
      "side": 1,
      "message": "std::bind_front() is a wrapper of a specific form of lambda expression - https://en.cppreference.com/w/cpp/utility/functional/bind_front\n\n`std::bind_front(f, bound_args...)(call_args...)` is equivalent to `std::invoke(f, bound_args..., call_args...)`.\n\nSo, \n\n```\n    getLedGroupService(asyncResp, subtreePaths[0],\n                       [callback, subtreePaths](const std::string\u0026 service) {\n        callback(subtreePaths[0], service);\n    });\n\n```\n\nwill be written as\n\n```\n    getLedGroupService(asyncResp, subtreePaths[0], std::bind_front(callback, subtreePaths[0]));\n    \n```",
      "parentUuid": "8749713f_72d0caef",
      "range": {
        "startLine": 265,
        "startChar": 0,
        "endLine": 268,
        "endChar": 7
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd158dc4_42544aef",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 51
      },
      "lineNbr": 268,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-08-25T16:25:44Z",
      "side": 1,
      "message": "Using a lambda provides clearer insight into what we are returning in the callback, which might not be as clear with bind_front. The bind_front approach could be less intuitive for those unfamiliar with its function.",
      "parentUuid": "c85d5997_0ba4a2f4",
      "range": {
        "startLine": 265,
        "startChar": 0,
        "endLine": 268,
        "endChar": 7
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cf881a6_5ea69cd5",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 51
      },
      "lineNbr": 268,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-08-25T16:55:22Z",
      "side": 1,
      "message": "Isn\u0027t still contracting to bmcweb coding style guide - https://github.com/openbmc/bmcweb/blob/master/COMMON_ERRORS.md?plain\u003d1#L332C34-L332C34?\n\nAll of std::bind_front() usages will be like the same wrapping pattern from lambda expression.  \n\nThe first argument of std::bind(func, ...) is always a function that is being called whether it is written, or passed as a parameter. I don\u0027t see a much difference in code clearness point of view, by separating \u0026 writing in a lambda, or passing it as a bind_front().\n\nAnyway, as it is a coding style point, I think this can be voted/decided by the others and maintainer.",
      "parentUuid": "cd158dc4_42544aef",
      "range": {
        "startLine": 265,
        "startChar": 0,
        "endLine": 268,
        "endChar": 7
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "599dc035_f5d2746f",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 51
      },
      "lineNbr": 268,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-09-07T02:45:05Z",
      "side": 1,
      "message": "We haven\u0027t used find_front else where, I am okay if we don\u0027t.\n\nI guess I am okay with this code as is.",
      "parentUuid": "1cf881a6_5ea69cd5",
      "range": {
        "startLine": 265,
        "startChar": 0,
        "endLine": 268,
        "endChar": 7
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec3e8734_21da0c7a",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 51
      },
      "lineNbr": 268,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-09-07T13:37:54Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "599dc035_f5d2746f",
      "range": {
        "startLine": 265,
        "startChar": 0,
        "endLine": 268,
        "endChar": 7
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48669224_19b5d1bc",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 51
      },
      "lineNbr": 268,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-09-07T14:47:48Z",
      "side": 1,
      "message": "Either way is fine with me as long as the others agree.",
      "parentUuid": "ec3e8734_21da0c7a",
      "range": {
        "startLine": 265,
        "startChar": 0,
        "endLine": 268,
        "endChar": 7
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "727547ff_6d781b2d",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 51
      },
      "lineNbr": 286,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-08-10T14:07:21Z",
      "side": 1,
      "message": "This one can also be done using `std::bind_front()`.\n\n```\n   dbus::utility::getAssociatedSubTreePaths(\n        ledGroupAssociatedPath,\n        sdbusplus::message::object_path(\"/xyz/openbmc_project/led/groups\"), 0,\n        ledGroupInterface,\n        std::bind_front(afterGetLedGroupPath, asyncResp, objPath));\n```",
      "range": {
        "startLine": 278,
        "startChar": 0,
        "endLine": 286,
        "endChar": 11
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "193d2b3e_052a2de8",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 51
      },
      "lineNbr": 286,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-08-25T00:00:05Z",
      "side": 1,
      "message": "I prefer not to use bind_front for the callback function to maintain better readability.",
      "parentUuid": "727547ff_6d781b2d",
      "range": {
        "startLine": 278,
        "startChar": 0,
        "endLine": 286,
        "endChar": 11
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "944243ba_b2882337",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 51
      },
      "lineNbr": 306,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-08-10T14:07:21Z",
      "side": 1,
      "message": "Same here to use `std::bind_front()`",
      "range": {
        "startLine": 302,
        "startChar": 0,
        "endLine": 306,
        "endChar": 7
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57264a4b_3973ddaf",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 51
      },
      "lineNbr": 306,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-08-25T00:00:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "944243ba_b2882337",
      "range": {
        "startLine": 302,
        "startChar": 0,
        "endLine": 306,
        "endChar": 7
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "387ca3cd_9ae4c8e6",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 51
      },
      "lineNbr": 327,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-08-10T14:07:21Z",
      "side": 1,
      "message": "Same here to use `std::bind_front()`",
      "range": {
        "startLine": 323,
        "startChar": 0,
        "endLine": 327,
        "endChar": 7
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1376652c_b6fd8d2c",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 51
      },
      "lineNbr": 327,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-08-25T00:00:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "387ca3cd_9ae4c8e6",
      "range": {
        "startLine": 323,
        "startChar": 0,
        "endLine": 327,
        "endChar": 7
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18628620_2ca4ec4c",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 51
      },
      "lineNbr": 581,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-08-10T18:51:37Z",
      "side": 1,
      "message": "Why can\u0027t the Get Location Indicator be here ?\n\ngetLocationIndicatorActive(asyncResp, path);",
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "332a6472_865b343b",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 51
      },
      "lineNbr": 581,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-08-25T00:00:05Z",
      "side": 1,
      "message": "good idea, moved the code.",
      "parentUuid": "18628620_2ca4ec4c",
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be2e9e95_23415852",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 51
      },
      "lineNbr": 1858,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2023-08-10T18:19:50Z",
      "side": 1,
      "message": "Is the BMCWEB_LOG_DEBUG() necessary or desired here, won\u0027t the internalError() below issue a BMCWEB_LOG_CRITICAL which identifies the location of the error, etc? (Same comment for the ones below.)",
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60c8af61_bf89fcea",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 51
      },
      "lineNbr": 1858,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-08-25T00:00:05Z",
      "side": 1,
      "message": "The purpose is to log the ec. This helps debugging, \nE.g. https://gerrit.openbmc.org/c/openbmc/bmcweb/+/63895",
      "parentUuid": "be2e9e95_23415852",
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4158f34_b18c6ab3",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 51
      },
      "lineNbr": 1882,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-08-10T18:51:37Z",
      "side": 1,
      "message": "Aren\u0027t you still forcing a Inventory.Item.System on everyone? \nI am okay with on the Set, if you do but on the GET, I don\u0027t think you should force a Inventory.Item.System as talked about in discord",
      "range": {
        "startLine": 1862,
        "startChar": 0,
        "endLine": 1882,
        "endChar": 5
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f2e83d0_139e02b0",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 51
      },
      "lineNbr": 1882,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-08-25T00:00:05Z",
      "side": 1,
      "message": "Moved the call to getLocationIndicatorActive. This is only called by set function.",
      "parentUuid": "d4158f34_b18c6ab3",
      "range": {
        "startLine": 1862,
        "startChar": 0,
        "endLine": 1882,
        "endChar": 5
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5203303e_639a302f",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 51
      },
      "lineNbr": 1900,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-08-10T17:12:26Z",
      "side": 1,
      "message": "This doesn\u0027t look correct?\nMaybe just remove this?",
      "range": {
        "startLine": 1900,
        "startChar": 14,
        "endLine": 1900,
        "endChar": 27
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eff18af1_99e0a3d1",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 51
      },
      "lineNbr": 1900,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-08-25T00:00:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5203303e_639a302f",
      "range": {
        "startLine": 1900,
        "startChar": 14,
        "endLine": 1900,
        "endChar": 27
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5929adf4_fe382463",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 51
      },
      "lineNbr": 1918,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-08-10T14:07:21Z",
      "side": 1,
      "message": "Use `std::bind_front()`\n\n```\n    dbus::utility::getSubTree(\n        \"/xyz/openbmc_project/inventory\", 0, interfaces,\n        std::bind_front(afterGetSystemSubTree,asyncResp));\n\n```",
      "range": {
        "startLine": 1912,
        "startChar": 0,
        "endLine": 1918,
        "endChar": 11
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38a265f9_04b67e25",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 51
      },
      "lineNbr": 1918,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-08-25T00:00:05Z",
      "side": 1,
      "message": "std::bind_front may not be the suitable option for callback, the lambda captures the necessary variables and provides a cleaner way for callback.",
      "parentUuid": "5929adf4_fe382463",
      "range": {
        "startLine": 1912,
        "startChar": 0,
        "endLine": 1918,
        "endChar": 11
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64ec42f8_4e96fbb9",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 51
      },
      "lineNbr": 3392,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-08-10T14:07:21Z",
      "side": 1,
      "message": "Same here to use `std::bind_front()`",
      "range": {
        "startLine": 3389,
        "startChar": 0,
        "endLine": 3392,
        "endChar": 7
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "681a1778_5f50f931",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 51
      },
      "lineNbr": 3392,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-08-25T00:00:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "64ec42f8_4e96fbb9",
      "range": {
        "startLine": 3389,
        "startChar": 0,
        "endLine": 3392,
        "endChar": 7
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35687e61_bf052137",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 51
      },
      "lineNbr": 3532,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-08-10T14:07:21Z",
      "side": 1,
      "message": "Same here to use `std::bind_front()`",
      "range": {
        "startLine": 3527,
        "startChar": 0,
        "endLine": 3532,
        "endChar": 11
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9589203d_55993966",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 51
      },
      "lineNbr": 3532,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-08-25T00:00:05Z",
      "side": 1,
      "message": "We are not passing all the returned arguments, using std::bind_front to partially apply arguments can actually decrease readability.",
      "parentUuid": "35687e61_bf052137",
      "range": {
        "startLine": 3527,
        "startChar": 0,
        "endLine": 3532,
        "endChar": 11
      },
      "revId": "5417b3b8a1342653b7d041e7ff372e15f392a5bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}