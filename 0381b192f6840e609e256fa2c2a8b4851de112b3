{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5d280ac6_e222b943",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-17T20:40:04Z",
      "side": 1,
      "message": "It also makes Request\u0026 req non-const for no reason that I can see or understand.  Please mention that here along with the reasoning.",
      "revId": "0381b192f6840e609e256fa2c2a8b4851de112b3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ca65ff6_034a8e5c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000907
      },
      "writtenOn": "2021-09-17T21:20:43Z",
      "side": 1,
      "message": "Ooh yes.. i missed that. will add it here",
      "parentUuid": "5d280ac6_e222b943",
      "revId": "0381b192f6840e609e256fa2c2a8b4851de112b3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0ca24db_790deda5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000907
      },
      "writtenOn": "2022-07-10T13:48:11Z",
      "side": 1,
      "message": "Updated commit message for the same",
      "parentUuid": "6ca65ff6_034a8e5c",
      "revId": "0381b192f6840e609e256fa2c2a8b4851de112b3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4aece11_809bc2d9",
        "filename": "http/app.hpp",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-17T20:40:04Z",
      "side": 1,
      "message": "This looks wrong, but I don\u0027t understand why you did it.  At this context I would\u0027ve expected request to be const.  The request is complete at this point, and only needs handled.  It shouldn\u0027t be modified after this point.",
      "range": {
        "startLine": 48,
        "startChar": 23,
        "endLine": 48,
        "endChar": 36
      },
      "revId": "0381b192f6840e609e256fa2c2a8b4851de112b3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6cdd446_dd786ace",
        "filename": "http/app.hpp",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000907
      },
      "writtenOn": "2021-09-17T21:20:43Z",
      "side": 1,
      "message": "The reason i lifted off const here was because we have to assign \"req.userRole \u003d userRole;\"\n\nIts only for this call that the const is removed. It is being retained in other places where changes are not permitted/required.",
      "parentUuid": "d4aece11_809bc2d9",
      "range": {
        "startLine": 48,
        "startChar": 23,
        "endLine": 48,
        "endChar": 36
      },
      "revId": "0381b192f6840e609e256fa2c2a8b4851de112b3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f25ceb16_14faf997",
        "filename": "http/app.hpp",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-03-10T17:14:49Z",
      "side": 1,
      "message": "\u003e The reason i lifted off const here was because we have to assign \"req.userRole \u003d userRole;\"\n\nACK.\n\n\u003e \n\u003e Its only for this call that the const is removed. It is being retained in other places where changes are not permitted/required.",
      "parentUuid": "f6cdd446_dd786ace",
      "range": {
        "startLine": 48,
        "startChar": 23,
        "endLine": 48,
        "endChar": 36
      },
      "revId": "0381b192f6840e609e256fa2c2a8b4851de112b3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd365831_3b79f5ce",
        "filename": "http/app.hpp",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-03-10T17:15:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f25ceb16_14faf997",
      "range": {
        "startLine": 48,
        "startChar": 23,
        "endLine": 48,
        "endChar": 36
      },
      "revId": "0381b192f6840e609e256fa2c2a8b4851de112b3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8da5f7d_b2269672",
        "filename": "http/routing.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1210,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-17T20:40:04Z",
      "side": 1,
      "message": "This has lifetime issues.",
      "range": {
        "startLine": 1210,
        "startChar": 14,
        "endLine": 1210,
        "endChar": 17
      },
      "revId": "0381b192f6840e609e256fa2c2a8b4851de112b3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2dcdf38b_fcccf168",
        "filename": "http/routing.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1210,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-06-16T12:13:50Z",
      "side": 1,
      "message": "Yeah, till the d-bus call finishes, authorization check completes inside call back, Its alive.\n\nAs said below, May be caching the user data locally to bmcweb will improve the performance and reduce the connection keep alive issue. But this commit adds authorization check for upgrade routes and  bring both (normal \u0026 upgrade) routes on to same page.",
      "parentUuid": "a8da5f7d_b2269672",
      "range": {
        "startLine": 1210,
        "startChar": 14,
        "endLine": 1210,
        "endChar": 17
      },
      "revId": "0381b192f6840e609e256fa2c2a8b4851de112b3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89eb4211_93de121c",
        "filename": "http/routing.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1312,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-17T20:40:04Z",
      "side": 1,
      "message": "This code looks copied and pasted from somewhere.",
      "range": {
        "startLine": 1211,
        "startChar": 0,
        "endLine": 1312,
        "endChar": 0
      },
      "revId": "0381b192f6840e609e256fa2c2a8b4851de112b3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "883184d0_701c4ed9",
        "filename": "http/routing.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1312,
      "author": {
        "id": 1000907
      },
      "writtenOn": "2021-09-17T21:20:43Z",
      "side": 1,
      "message": "Yes.. its a direct liftoff from handle() section below. Line 1434 onwards.",
      "parentUuid": "89eb4211_93de121c",
      "range": {
        "startLine": 1211,
        "startChar": 0,
        "endLine": 1312,
        "endChar": 0
      },
      "revId": "0381b192f6840e609e256fa2c2a8b4851de112b3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fee19bd9_b4268422",
        "filename": "http/routing.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1312,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-06-16T12:13:50Z",
      "side": 1,
      "message": "Dheeraj, We can  move all this common code to single API and use it both places.",
      "parentUuid": "883184d0_701c4ed9",
      "range": {
        "startLine": 1211,
        "startChar": 0,
        "endLine": 1312,
        "endChar": 0
      },
      "revId": "0381b192f6840e609e256fa2c2a8b4851de112b3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c7a3f96_51c33901",
        "filename": "http/routing.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1312,
      "author": {
        "id": 1000907
      },
      "writtenOn": "2022-07-10T13:48:11Z",
      "side": 1,
      "message": "Moved the common code to a new function (validatePrivilege).",
      "parentUuid": "fee19bd9_b4268422",
      "range": {
        "startLine": 1211,
        "startChar": 0,
        "endLine": 1312,
        "endChar": 0
      },
      "revId": "0381b192f6840e609e256fa2c2a8b4851de112b3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e512f65_a67e2f3d",
        "filename": "http/routing.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1346,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-17T20:40:04Z",
      "side": 1,
      "message": "This is doing a blocking dbus call for EVERY request.  That\u0027s unacceptable for performance.",
      "range": {
        "startLine": 1344,
        "startChar": 0,
        "endLine": 1346,
        "endChar": 35
      },
      "revId": "0381b192f6840e609e256fa2c2a8b4851de112b3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66feb4da_bb090852",
        "filename": "http/routing.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1346,
      "author": {
        "id": 1000907
      },
      "writtenOn": "2021-09-17T21:20:43Z",
      "side": 1,
      "message": "This could be a performance issue in case of handle() section below which gets called for each query to an URI.\nHere is it only called during upgraded connections.. i.e. either for Websockets or SSE sockets.. which is  only once to establish the connection. and once it is done, it wouldn\u0027t be checking this part right.\n\nSo, i feel it shouldn\u0027t be much of a bottle neck here in case of handleUpgrade().",
      "parentUuid": "3e512f65_a67e2f3d",
      "range": {
        "startLine": 1344,
        "startChar": 0,
        "endLine": 1346,
        "endChar": 35
      },
      "revId": "0381b192f6840e609e256fa2c2a8b4851de112b3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e99d36b6_bd08acab",
        "filename": "http/routing.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1346,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-06-16T12:13:50Z",
      "side": 1,
      "message": "Yeah Agree with Ed, This is blocking call and will impact the overall performance. \n\nBut this d-bus call is made only when establishing websocket connection ( one time). So this won\u0027t introduce much latency. Also Same problem exist even for Normal route handler() (https://github.com/openbmc/bmcweb/blob/master/http/routing.hpp#L1405-L1407).\n\nI believe this can be avoided by caching the information on bmcweb side. So I think we can do it as separate commit to address generic issue.",
      "parentUuid": "66feb4da_bb090852",
      "range": {
        "startLine": 1344,
        "startChar": 0,
        "endLine": 1346,
        "endChar": 35
      },
      "revId": "0381b192f6840e609e256fa2c2a8b4851de112b3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}