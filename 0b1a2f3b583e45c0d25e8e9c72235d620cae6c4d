{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4073642d_863a41aa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-18T17:32:40Z",
      "side": 1,
      "message": "Please also run the redfish service validator as the the documentation asks.",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 6
      },
      "revId": "0b1a2f3b583e45c0d25e8e9c72235d620cae6c4d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d8f46e4_b76c9faa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2021-11-22T18:10:30Z",
      "side": 1,
      "message": "Done.\nReran the service validator.",
      "parentUuid": "4073642d_863a41aa",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 6
      },
      "revId": "0b1a2f3b583e45c0d25e8e9c72235d620cae6c4d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38c35b6c_8a56b275",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-18T19:30:44Z",
      "side": 1,
      "message": "Missing #pragma once, per the coding standard.",
      "revId": "0b1a2f3b583e45c0d25e8e9c72235d620cae6c4d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a742e6ea_2ff21fb3",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2021-11-22T18:10:30Z",
      "side": 1,
      "message": "Added #pragma once.",
      "parentUuid": "38c35b6c_8a56b275",
      "revId": "0b1a2f3b583e45c0d25e8e9c72235d620cae6c4d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60575e79_e2d9f0b0",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 3
      },
      "lineNbr": 3,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2021-11-18T16:32:15Z",
      "side": 1,
      "message": "I don\u0027t see these used",
      "revId": "0b1a2f3b583e45c0d25e8e9c72235d620cae6c4d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48db25d6_ead9877c",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 3
      },
      "lineNbr": 3,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-18T19:30:44Z",
      "side": 1,
      "message": "+1.  Also missing a bunch of includes for the use of objects below.  Please include the relevant headers for the things you use.",
      "parentUuid": "60575e79_e2d9f0b0",
      "revId": "0b1a2f3b583e45c0d25e8e9c72235d620cae6c4d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ed2c116_b1fb1ca9",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 3
      },
      "lineNbr": 3,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2021-11-22T18:10:30Z",
      "side": 1,
      "message": "Removed unused include files.",
      "parentUuid": "48db25d6_ead9877c",
      "revId": "0b1a2f3b583e45c0d25e8e9c72235d620cae6c4d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f496f19_335f80fe",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 3
      },
      "lineNbr": 3,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-02-03T20:13:24Z",
      "side": 1,
      "message": "You seem to have ignored my comment.  You use a number of resources below that you don\u0027t include headers for.   Please include what you use.",
      "parentUuid": "8ed2c116_b1fb1ca9",
      "revId": "0b1a2f3b583e45c0d25e8e9c72235d620cae6c4d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1da3d8c_49493f4d",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 3
      },
      "lineNbr": 3,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-02-05T00:49:50Z",
      "side": 1,
      "message": "It seems bmcweb will still build even if I don\u0027t include any headers and remove all other handles from redfish.hpp, so I added the headers based on what appears in this file.\n\nList of symbols used and include files:\n\n- crow::App comes from \u003capp.hpp\u003e\n- BMCWEB_ROUTE comes from \u003capp.hpp\u003e\n- RuleParameterTraits::privileges comes from \u003crouting.hpp\u003e which is included by \u003capp.hpp\u003e\n- RuleParameterTraits::methods is same as above\n- boost::beast::http::verb::get comes from \u003cboost/beast/http/verb.hpp\u003e, which is included by \u003cprivileges.hpp\u003e, which is included by \u003capp.hpp\u003e\n- crow::Request comes from \u003chttp_request.hpp\u003e which is included by \u003capp.hpp\u003e\n- bmcweb::AsyncResp comes from \u003casync_resp.hpp\u003e which is included by \u003capp.hpp\u003e\n- jsonValue comes from \u003cnlohmann/json.hpp\u003e which is included by \u003chttp_request.hpp\u003e which is in turn included by \u003capp.hpp\u003e\n- And finally a std::string\n\nSo overall it seems I only need \u003capp.hpp\u003e and \u003cstring\u003e for this header file to be self-sufficient, due to the indirect includes that fan out from \u003capp.hpp\u003e.",
      "parentUuid": "4f496f19_335f80fe",
      "revId": "0b1a2f3b583e45c0d25e8e9c72235d620cae6c4d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b51e1c7_80f5f559",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 3
      },
      "lineNbr": 3,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-02-06T03:13:27Z",
      "side": 1,
      "message": "\u003e It seems bmcweb will still build even if I don\u0027t include any headers and remove all other handles from redfish.hpp,\n\nWhether or not it builds today is not the point.  When you don\u0027t include the headers you use, it leads to hard-to-debug issues later if the import order changes or the modules you rely on no longer include things you require.\n\n\u003e so I added the headers based on what appears in this file.\n\u003e \n\u003e List of symbols used and include files:\n\u003e \n\u003e - crow::App comes from \u003capp.hpp\u003e\n\u003e - BMCWEB_ROUTE comes from \u003capp.hpp\u003e\n\u003e - RuleParameterTraits::privileges comes from \u003crouting.hpp\u003e which is included by \u003capp.hpp\u003e\n\nThere is no usages of RuleParameterTraits in this file.  redfish::privileges is provided by privileges.hpp, which you neglect to include here.\n\n\u003e - RuleParameterTraits::methods is same as above\n\u003e - boost::beast::http::verb::get comes from \u003cboost/beast/http/verb.hpp\u003e, which is included by \u003cprivileges.hpp\u003e, which is included by \u003capp.hpp\u003e\n\nWhile technically incorrect, this is something we let slide, because it\u0027s part of the BMCWEB_ROUTE API, so including app.hpp is guaranteed to get you this define, and any change to internal logic would be a breaking API change, which we\u0027d have to fix anyway.\n\n\u003e - crow::Request comes from \u003chttp_request.hpp\u003e which is included by \u003capp.hpp\u003e\n\nYou should be explicitly including http_request.hpp.  This is what is meant by \"include what you use\"\n\n\u003e - bmcweb::AsyncResp comes from \u003casync_resp.hpp\u003e which is included by \u003capp.hpp\u003e\n\nsame, you should be including async_resp.hpp.\n\n\u003e - jsonValue comes from \u003cnlohmann/json.hpp\u003e which is included by \u003chttp_request.hpp\u003e which is in turn included by \u003capp.hpp\u003e\n\nWhich you also should be including.\n\n\u003e - And finally a std::string\n\u003e \n\u003e So overall it seems I only need \u003capp.hpp\u003e and \u003cstring\u003e for this header file to be self-sufficient, due to the indirect includes that fan out from \u003capp.hpp\u003e.\n\nThe whole point of this rule is that when you transiently #include things through other files, it puts a secondary dependency.  Lets say at some point in the future we refactored app.hpp to not directly rely on nlohmann::json (which would happen if we ever got a vitualized httpRequest object).  Now every file that has neglected to #include things would have to be updated.  This has concretely hit us in the past when trying to refactor, which is why we ask for this rule.",
      "parentUuid": "a1da3d8c_49493f4d",
      "revId": "0b1a2f3b583e45c0d25e8e9c72235d620cae6c4d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2212560c_5a6d18a9",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 3
      },
      "lineNbr": 3,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-02-06T03:20:33Z",
      "side": 1,
      "message": "Documentation from the google style guide.  See the part that starts with \"do not rely on transitive inclusions\"\n\nhttps://google.github.io/styleguide/cppguide.html#Include_What_You_Use",
      "parentUuid": "5b51e1c7_80f5f559",
      "revId": "0b1a2f3b583e45c0d25e8e9c72235d620cae6c4d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "81959ec6_5310afc3",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 3
      },
      "lineNbr": 3,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-02-06T08:03:32Z",
      "side": 1,
      "message": "Fixed the reliance on transitive includes.\n\nYes I found TaggedRule inherits RuleParameterTraits, so that\u0027s why I was wondering about routing.hpp.",
      "parentUuid": "2212560c_5a6d18a9",
      "revId": "0b1a2f3b583e45c0d25e8e9c72235d620cae6c4d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05c4028b_faf5c37e",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2021-11-18T16:32:15Z",
      "side": 1,
      "message": "Where is this schema in Redfish?",
      "revId": "0b1a2f3b583e45c0d25e8e9c72235d620cae6c4d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd9b62d8_7cb23bf3",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2021-11-22T18:10:30Z",
      "side": 1,
      "message": "The schemas are still under discussion with DMTF: https://github.com/DMTF/Redfish/pull/4877\n\nThe work-in-progress Schema have been added to the latest version of the patch.\n\nThe schemas may still go through some minor changes (such as: change \"bytes\" to \"percent\", changing the names of certain properties, etc), but the overall structure should not change too much.",
      "parentUuid": "05c4028b_faf5c37e",
      "revId": "0b1a2f3b583e45c0d25e8e9c72235d620cae6c4d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}