{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7a9b9cf4_a10842d7",
        "filename": "redfish-core/include/utils/systems_utils.hpp",
        "patchSetId": 9
      },
      "lineNbr": 194,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-03-11T15:28:10Z",
      "side": 1,
      "message": "Doing 2 dbus calls before we can create any redfish endpoints is going to have some pretty bad performance consequences.  Can you measure the timing of these new APIs in comparison to the old ones please?",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 194,
        "endChar": 11
      },
      "revId": "e42def76306e580d7052ddff1c425b2733693b40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9759e4d_a1c4b4e8",
        "filename": "redfish-core/include/utils/systems_utils.hpp",
        "patchSetId": 9
      },
      "lineNbr": 194,
      "author": {
        "id": 1002065
      },
      "writtenOn": "2025-03-27T15:23:25Z",
      "side": 1,
      "message": "I cannot measure multi-host on real hw. Here are the curl timings in qemu: \n\nroute: /redfish/v1/Systems/{computerSystemId}\n\n```\ncurl-format        | romulus   | yosemite4\n-------------------+-----------+-----------\ntime_namelookup    | 0.000031s | 0.000033s\ntime_connect       | 0.000152s | 0.000213s\ntime_appconnect    | 0.039104s | 0.069695s\ntime_pretransfer   | 0.039131s | 0.069740s\ntime_redirect      | 0.000000s | 0.000000s\ntime_starttransfer | 0.069679s | 0.282222s\n-------------------+-----------+-----------\ntime_total         | 0.070615s | 0.283232s\n```",
      "parentUuid": "7a9b9cf4_a10842d7",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 194,
        "endChar": 11
      },
      "revId": "e42def76306e580d7052ddff1c425b2733693b40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ddaf922_b0f501ab",
        "filename": "redfish-core/include/utils/systems_utils.hpp",
        "patchSetId": 9
      },
      "lineNbr": 194,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-04-28T09:59:07Z",
      "side": 1,
      "message": "@ed@tanous.net\n\nwould it resolve the issue for you if that state was kept in bmcweb as a map?\n\nPossibly by initializing dbus matches on ```InterfacesAdded``` and ```InterfacesRemoved``` for ```xyz.openbmc_project.Inventory.Decorator.ManagedHost```, then doing an initial call to fetch that state?\n\nThat would then be an extra dbus call before bmcweb is fully initialized (in the case of multi-host). I am not sure if this would still fit within the documented performance target.\n\n```\n- Application startup time should be less than 1 second on target hardware\n  (AST2500)\n```\n\nAlternatively the initial call could be made asynchronously to be able to start serving requests which do not need the managed host information and those which do could block for a few milliseconds until that\u0027s available.\n\nKindly confirm which of these (if any) will satisfy the requirements.",
      "parentUuid": "d9759e4d_a1c4b4e8",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 194,
        "endChar": 11
      },
      "revId": "e42def76306e580d7052ddff1c425b2733693b40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "791038b2_eddd08e0",
        "filename": "redfish-core/include/utils/systems_utils.hpp",
        "patchSetId": 9
      },
      "lineNbr": 194,
      "author": {
        "id": 1002065
      },
      "writtenOn": "2025-05-28T13:08:31Z",
      "side": 1,
      "message": "Closing this for now, since we don\u0027t really know about the performance impact on hardware. Also, single-host is not affected by this change.",
      "parentUuid": "4ddaf922_b0f501ab",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 194,
        "endChar": 11
      },
      "revId": "e42def76306e580d7052ddff1c425b2733693b40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a52b66d_24cea703",
        "filename": "redfish-core/include/utils/systems_utils.hpp",
        "patchSetId": 9
      },
      "lineNbr": 194,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-10T20:37:20Z",
      "side": 1,
      "message": "\u003e 0.069679s | 0.282222s\n\nIf I\u0027m reading this right we\u0027re seeing a 3X regression in performance?  That\u0027s not great for one of the most used APIs in the system.\n\n\u003e I cannot measure multi-host on real hw.\n\nLet us know when you have;  If I can help measure for single host, let me know.\n\n\nThis is somewhat implying that the multi-host option really needs to live longer than just a refactor.",
      "parentUuid": "791038b2_eddd08e0",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 194,
        "endChar": 11
      },
      "revId": "e42def76306e580d7052ddff1c425b2733693b40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87fca882_151d2aed",
        "filename": "redfish-core/include/utils/systems_utils.hpp",
        "patchSetId": 9
      },
      "lineNbr": 194,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-11T14:43:05Z",
      "side": 1,
      "message": "Testing on Tyan S8030 with AST2500\n\nAdded the following to my EM config to enable the code path\n\n```\n \"Name\": \"system\",\n    \"Probe\": \"xyz.openbmc_project.FruDevice({\u0027BOARD_MANUFACTURER\u0027: \u0027TYAN\u0027, \u0027BOARD_PRODUCT_NAME\u0027: \u0027S8030*\u0027})\",\n    \"Type\": \"Board\",\n    \"xyz.openbmc_project.Inventory.Decorator.Asset\": {\n        \"Manufacturer\": \"$PRODUCT_MANUFACTURER\",\n        \"Model\": \"$PRODUCT_PRODUCT_NAME\",\n        \"PartNumber\": \"$PRODUCT_PART_NUMBER\",\n        \"SerialNumber\": \"$PRODUCT_SERIAL_NUMBER\"\n    },\n    \"xyz.openbmc_project.Inventory.Decorator.ManagedHost\": {\n        \"HostIndex\": \"1\"\n    }\n```\n\ngives\n```\nroot@s8030-bmc-30303035c0c1:~# busctl call xyz.openbmc_project.ObjectMapper /xyz/openbmc_project/object_mapper xyz.openbmc_project.ObjectMapper GetSubTree sias /xyz/openbmc_project/inventory 0 1 xyz.openbmc_project.Inventory.Decorator.ManagedHost\na{sa{sas}} 1 \"/xyz/openbmc_project/inventory/system/board/system\" 1 \"xyz.openbmc_project.EntityManager\" 4 \"xyz.openbmc_project.AddObject\" \"xyz.openbmc_project.Inventory.Decorator.Asset\" \"xyz.openbmc_project.Inventory.Decorator.ManagedHost\" \"xyz.openbmc_project.Inventory.Item.Board\"\n```\n\nperformance without this patch:\n```\nredfish/v1/Systems/system\ntime_namelookup:  0.056690s\ntime_connect:     0.089798s\ntime_appconnect:  0.230599s\ntime_pretransfer: 0.230640s\ntime_redirect:    0.000000s\ntime_starttransfer: 0.863677s\n-------------------\ntime_total:       0.864107s\n```\n\nperformance with this patch (3 samples):\n```\nredfish/v1/Systems/system\ntime_namelookup:  0.035734s\ntime_connect:     0.061406s\ntime_appconnect:  0.194238s\ntime_pretransfer: 0.194289s\ntime_redirect:    0.000000s\ntime_starttransfer: 0.861888s\n-------------------\ntime_total:       0.887527s\n\nredfish/v1/Systems/system\ntime_namelookup:  0.028830s\ntime_connect:     0.055981s\ntime_appconnect:  0.199217s\ntime_pretransfer: 0.199272s\ntime_redirect:    0.000000s\ntime_starttransfer: 0.911596s\n-------------------\ntime_total:       0.937434s\n\nredfish/v1/Systems/system\ntime_namelookup:  0.029338s\ntime_connect:     0.059559s\ntime_appconnect:  0.197102s\ntime_pretransfer: 0.197221s\ntime_redirect:    0.000000s\ntime_starttransfer: 0.844367s\n-------------------\ntime_total:       0.875859s\n```\n\nAlso had the debug logs enabled to confirm the code path was running\n```\nJun 11 14:03:15 s8030-bmc-30303035c0c1 bmcwebd[23974]: [systems.hpp:3248] requested system \u003d system\nJun 11 14:03:15 s8030-bmc-30303035c0c1 bmcwebd[23974]: [systems_utils.hpp:141] Got index 1 for path /xyz/openbmc_project/inventory/system/board/system\n```\n\n\u003e If I\u0027m reading this right we\u0027re seeing a 3X regression in performance? That\u0027s not great for one of the most used APIs in the system.\n\nI would expect a tiny performance regression due to the mapper call and dbus query which is what i am seeing.\n\nLooking at the calls made for that route, it is clear where the performance is going. Just a small selection here:\n\n- handleComputerSystemGet\n - getComputerSystemIndex\n   - 1 (mapper call) for ManagedHost\n    - 1 (dbus property get) in getManagedHostProperty \n- processComputerSystemGet\n - 1+ getPortStatusAndPath\n - 2+ getSystemLocationIndicatorActive\n - 2+ getIndicatorLedState\n - 1+ getIdlePowerSaver\n - 1+ getHostWatchdogTimer\n - 2+ getPowerMode\n - 1+ getStopBootOnFault\n - 1+ getLastResetTime\n - 1+ getHostState\n - 3+ getBootProperties\n - 1+ getBootProgress\n - 1+ getBootProgressLastStateTime\n - 1+ getPowerRestorePolicy\n - ...\n\nNot sure how much this helps but i think of this in \u0027units\u0027 of performance where each unit is one dbus call. From that perspective i would not be worried about the managed host.",
      "parentUuid": "7a52b66d_24cea703",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 194,
        "endChar": 11
      },
      "revId": "e42def76306e580d7052ddff1c425b2733693b40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1b23a58_5198db79",
        "filename": "redfish-core/include/utils/systems_utils.hpp",
        "patchSetId": 9
      },
      "lineNbr": 194,
      "author": {
        "id": 1002065
      },
      "writtenOn": "2025-06-18T15:06:16Z",
      "side": 1,
      "message": "FYI @alexander.hansen@9elements.com, single-host would have to specify index 0 in order for the dbus object paths to be constructed correctly. Besides that, the current implementation does work without the need for single-host configuring the ManagedHost interface.",
      "parentUuid": "87fca882_151d2aed",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 194,
        "endChar": 11
      },
      "revId": "e42def76306e580d7052ddff1c425b2733693b40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31a288d8_48ec8420",
        "filename": "redfish-core/include/utils/systems_utils.hpp",
        "patchSetId": 9
      },
      "lineNbr": 194,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-06-18T15:23:08Z",
      "side": 1,
      "message": "\u003e Besides that, the current implementation does work without the need for single-host configuring the ManagedHost interface.\n\nYes, i wanted to enter that code path only for benchmarking reasons 😊\n\nSo my configuration may not be correct but hopefully sufficient to enter the code \npath and trigger the relevant DBus calls. Hopefully this does not confuse anyone 👍\n\n\u003e  Can you measure the timing of these new APIs in comparison to the old ones please?\n\n\u003e \u003e I cannot measure multi-host on real hw.\n\n\u003e Let us know when you have; If I can help measure for single host, let me know.\n\n\u003e single-host would have to specify index 0 in order for the dbus object paths to be constructed correctly\n\nOkay, so now we have a way to measure multi-host bmcweb performance on single-host systems on real hardware, right? 😊\n\nEven if i failed at it 😄 by misconfiguration, (Thanks for correcting that 😊)",
      "parentUuid": "e1b23a58_5198db79",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 194,
        "endChar": 11
      },
      "revId": "e42def76306e580d7052ddff1c425b2733693b40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ae826350_11ac5cac",
        "filename": "redfish-core/include/utils/systems_utils.hpp",
        "patchSetId": 9
      },
      "lineNbr": 194,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-07-21T11:46:22Z",
      "side": 1,
      "message": "Since our discord discussion https://discord.com/channels/775381525260664832/1291015132851212330/1395827798303707246\n\ni believe the performance concern should be resolved now.\n\nLet me know if you still think there is any performance regression in the single host code path as a result of this patch.",
      "parentUuid": "31a288d8_48ec8420",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 194,
        "endChar": 11
      },
      "revId": "e42def76306e580d7052ddff1c425b2733693b40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}