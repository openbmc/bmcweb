{
  "comments": [
    {
      "key": {
        "uuid": "3a9ee760_cfd5ff3d",
        "filename": "http/http_connection.hpp",
        "patchSetId": 2
      },
      "lineNbr": 355,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "I don\u0027t think this is a sufficient check to know whether or not we need a dynamic body.  I suspect we nee to use something from the router.",
      "range": {
        "startLine": 352,
        "startChar": 25,
        "endLine": 355,
        "endChar": 56
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d677c6e3_05fa478e",
        "filename": "http/http_response.hpp",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "Looks like debugging info?",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 53,
        "endChar": 0
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a4cddbc_05bb2320",
        "filename": "http/http_response.hpp",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2020-12-08T16:51:21Z",
      "side": 1,
      "message": "Removed. Done.",
      "parentUuid": "d677c6e3_05fa478e",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 53,
        "endChar": 0
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13ee7341_6b60c283",
        "filename": "http/http_response.hpp",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-12-08T17:22:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8a4cddbc_05bb2320",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 53,
        "endChar": 0
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7fd41c6_f168b2ff",
        "filename": "http/http_response.hpp",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "This seems like an odd combination:  A flat static buffer of 1M, combined with a dynamic body;  Wouldn\u0027t you use some sort of dynamic type?",
      "range": {
        "startLine": 169,
        "startChar": 26,
        "endLine": 169,
        "endChar": 44
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad452940_e6fda432",
        "filename": "http/http_response.hpp",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2020-12-08T16:51:21Z",
      "side": 1,
      "message": "unadressed",
      "parentUuid": "b7fd41c6_f168b2ff",
      "range": {
        "startLine": 169,
        "startChar": 26,
        "endLine": 169,
        "endChar": 44
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce3491b4_b548b7bb",
        "filename": "http/http_response.hpp",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-12-08T17:22:41Z",
      "side": 1,
      "message": "please provide suggestions here, what kind of buffer will be better here?\nmulti_buffer?",
      "parentUuid": "ad452940_e6fda432",
      "range": {
        "startLine": 169,
        "startChar": 26,
        "endLine": 169,
        "endChar": 44
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5e2cd92_3329c2e2",
        "filename": "http/http_response.hpp",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-12-08T18:29:22Z",
      "side": 1,
      "message": "Thinking about it more, probably just a much smaller flat_static_buffer would be fine (maybe 4096 bytes)?\n\nTechnically, bmcweb shouldn\u0027t really be buffering anything outside of the TCP/SSL packet sizes, so 1M is giant for this.",
      "parentUuid": "ce3491b4_b548b7bb",
      "range": {
        "startLine": 169,
        "startChar": 26,
        "endLine": 169,
        "endChar": 44
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39199944_3c39498d",
        "filename": "http/http_response.hpp",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-12-08T18:49:55Z",
      "side": 1,
      "message": "Ed\nEven i had same thought initially but observation is \nEvery read on unix socket gets around 178k (when data \u003e 178kB)and calls sendMessage() with this ~178k chunk which will be filled into bufferResponse.\nso we need larger bufferResponse size(\u003e178k) so I used 1M",
      "parentUuid": "f5e2cd92_3329c2e2",
      "range": {
        "startLine": 169,
        "startChar": 26,
        "endLine": 169,
        "endChar": 44
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9680b1f_3439c1be",
        "filename": "http/http_response.hpp",
        "patchSetId": 2
      },
      "lineNbr": 242,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "You\u0027ve invented a dynamic body, but you\u0027re using it like a flat static buffer body.  I wouldn\u0027t not expect a \"dynamic\" response type to have a body() method at all, as the body might be too large to represent in ram.",
      "range": {
        "startLine": 236,
        "startChar": 0,
        "endLine": 242,
        "endChar": 5
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "311dd7e2_7e72dca4",
        "filename": "http/http_response.hpp",
        "patchSetId": 2
      },
      "lineNbr": 291,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "?",
      "range": {
        "startLine": 291,
        "startChar": 0,
        "endLine": 291,
        "endChar": 28
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc56b772_1b70e2f5",
        "filename": "http/http_response.hpp",
        "patchSetId": 2
      },
      "lineNbr": 291,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2020-12-08T16:51:21Z",
      "side": 1,
      "message": "Removed. Done.",
      "parentUuid": "311dd7e2_7e72dca4",
      "range": {
        "startLine": 291,
        "startChar": 0,
        "endLine": 291,
        "endChar": 28
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f20eb206_92d13e34",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "One single, static, ungrouped timer isn\u0027t going to cut it for something like this.  Existing connections use timerQueue, I would expect this to do the same.",
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86f21d2b_878da99c",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-12-09T04:21:47Z",
      "side": 1,
      "message": "removed",
      "parentUuid": "f20eb206_92d13e34",
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b59896d7_3108ddaf",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "Please name this something other than Connection to disambiguate it from http::Connection.  I know it\u0027s protected by the namespace, but I\u0027d like to see the name captured directly in the class name.",
      "range": {
        "startLine": 18,
        "startChar": 7,
        "endLine": 18,
        "endChar": 18
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76f7c2b5_a34025ad",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "Having a timer check in every second to see if the connection is complete is not going to be performance, and leads to bugs if any single operation takes more than a second.  Please stream the data directly, and rely on the DynamicResponse.end() call to single completion.",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 74,
        "endChar": 5
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5959bd21_a21693da",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-11-17T09:00:31Z",
      "side": 1,
      "message": "Basically this function is to keep connection open, otherwise connection is getting closed immediately.\nI did not understand your point \"leads to bugs if any single operation takes more than a second\"\ni have tested system dump offload which takes 2-3 mins to get entire dump.\ni did not notice any issue.\nbut i agree that its better to rely on DynamicResponse.end()\nhow does DynamicResponse.end() can hold connection?",
      "parentUuid": "76f7c2b5_a34025ad",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 74,
        "endChar": 5
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "581510b4_f876544c",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-12-09T04:21:47Z",
      "side": 1,
      "message": "done, modified to rely on DynamicResponse.end() call to single completion.",
      "parentUuid": "5959bd21_a21693da",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 74,
        "endChar": 5
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6c3a650_4f780b1d",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "passing string by const ref is preferred.",
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "629d2678_542dfa94",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-11-24T17:50:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6c3a650_4f780b1d",
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6731f7bb_27ad588c",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "This shouldnt\u0027 be hardcoded in a library function.  Handlers should choose their content-type, which could be anything.",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 84,
        "endChar": 72
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04bf02a7_23e0f2f0",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-11-24T17:50:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6731f7bb_27ad588c",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 84,
        "endChar": 72
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4647852_a3327098",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "I\u0027m pretty sure you want async_write_headers here, as the name of this method is \"sendStreamHEaders\"  async_write will send the beginning of the body as well.",
      "range": {
        "startLine": 88,
        "startChar": 28,
        "endLine": 88,
        "endChar": 39
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdb5932c_4ba95f79",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2020-12-08T16:51:21Z",
      "side": 1,
      "message": "unaddressed?",
      "parentUuid": "c4647852_a3327098",
      "range": {
        "startLine": 88,
        "startChar": 28,
        "endLine": 88,
        "endChar": 39
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e961c2ad_fdd516db",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-12-08T17:22:41Z",
      "side": 1,
      "message": "by the time we write header, i am sure there wont be any data populated in body.\nwith async_write_headers, we need to use a serializer.",
      "parentUuid": "bdb5932c_4ba95f79",
      "range": {
        "startLine": 88,
        "startChar": 28,
        "endLine": 88,
        "endChar": 39
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43221104_0ca3b4b3",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-12-08T18:29:22Z",
      "side": 1,
      "message": "\" i am sure there wont be any data populated in body.\"\nI\u0027d prefer we don\u0027t rely on that.\n\n\n\"we need to use a serializer\"\n\nYes, you do anyway to handle dynamic responses properly.",
      "parentUuid": "e961c2ad_fdd516db",
      "range": {
        "startLine": 88,
        "startChar": 28,
        "endLine": 88,
        "endChar": 39
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4fcb2d50_fe5eb56c",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-12-08T18:49:55Z",
      "side": 1,
      "message": "ok sure. i will use async_write_headers",
      "parentUuid": "43221104_0ca3b4b3",
      "range": {
        "startLine": 88,
        "startChar": 28,
        "endLine": 88,
        "endChar": 39
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a457917_bc0c7ea3",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-12-10T03:51:51Z",
      "side": 1,
      "message": "right now facing some issues using serializer, i am working on this",
      "parentUuid": "4fcb2d50_fe5eb56c",
      "range": {
        "startLine": 88,
        "startChar": 28,
        "endLine": 88,
        "endChar": 39
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3315b8a_7a45a58d",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "Once this has succeeded, we.... do nothing?  That doesn\u0027t seem right.",
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78875a3a_d4ca9cd1",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2020-12-08T16:51:21Z",
      "side": 1,
      "message": "unaddressed?",
      "parentUuid": "b3315b8a_7a45a58d",
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0953d9d7_356bd090",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-12-08T17:22:41Z",
      "side": 1,
      "message": "this function used to send headers. once headers sent successfully, sendMessage function will be used to send further data",
      "parentUuid": "78875a3a_d4ca9cd1",
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01fb7f72_76912323",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "boost::asio::buffer_copy is what you want here.  There\u0027s not need to use an ostream with a static response payload.\n\nhttps://www.boost.org/doc/libs/1_74_0/doc/html/boost_asio/reference/buffer_copy.html",
      "range": {
        "startLine": 109,
        "startChar": 12,
        "endLine": 109,
        "endChar": 75
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "307fdf01_bd478057",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-11-24T17:50:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01fb7f72_76912323",
      "range": {
        "startLine": 109,
        "startChar": 12,
        "endLine": 109,
        "endChar": 75
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c224745d_7b253532",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 110,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2020-11-13T16:57:51Z",
      "side": 1,
      "message": "remove this commented out code",
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9d2dccc_ffc3c2cb",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 110,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-11-24T17:50:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c224745d_7b253532",
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c06834ac_fa1e0314",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 116,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "THis branch.... isn\u0027t needed?",
      "range": {
        "startLine": 113,
        "startChar": 0,
        "endLine": 116,
        "endChar": 9
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4851797_6be0e28f",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 116,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-11-24T17:50:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c06834ac_fa1e0314",
      "range": {
        "startLine": 113,
        "startChar": 0,
        "endLine": 116,
        "endChar": 9
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c23840c9_10240f27",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 131,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "use boost::beast::lowest_layer here, to avoid the constexpr if",
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcd45b8b_77efee5e",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 131,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-11-24T17:50:46Z",
      "side": 1,
      "message": "i am trying what\u0027s the problem constexpr?",
      "parentUuid": "c23840c9_10240f27",
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b17a08f4_dbd3c042",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 131,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-12-09T04:21:47Z",
      "side": 1,
      "message": "addressed in latest patch set",
      "parentUuid": "dcd45b8b_77efee5e",
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4cd340f_a0028952",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 131,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-12-10T03:51:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b17a08f4_dbd3c042",
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e209e5c_4d9b09b7",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "?  This needs checked before you do the write.",
      "range": {
        "startLine": 137,
        "startChar": 8,
        "endLine": 137,
        "endChar": 19
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0318031e_09cc2046",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-11-17T09:00:31Z",
      "side": 1,
      "message": "we are already making sure that doWrite() will be called only after it writes given data using handler function.\nso i think no need to check",
      "parentUuid": "2e209e5c_4d9b09b7",
      "range": {
        "startLine": 137,
        "startChar": 8,
        "endLine": 137,
        "endChar": 19
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "556e3ace_c0864161",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-12-10T04:20:40Z",
      "side": 1,
      "message": "doWrite is called on line 111, and does not check if a write is in progress before it does.",
      "parentUuid": "0318031e_09cc2046",
      "range": {
        "startLine": 137,
        "startChar": 8,
        "endLine": 137,
        "endChar": 19
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f903df91_aa1d82db",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2020-11-13T16:57:51Z",
      "side": 1,
      "message": "if you need this put some text in front of it \"BMCWEB_LOG_DEBUG \u003c\u003c \"Writing size",
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65eab4f4_2386fc48",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-11-24T17:50:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f903df91_aa1d82db",
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a40586fd_d1e67a22",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "errorHandler doesn\u0027t look used?",
      "range": {
        "startLine": 168,
        "startChar": 0,
        "endLine": 168,
        "endChar": 50
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db4813ed_8dfe69e6",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-11-17T09:00:31Z",
      "side": 1,
      "message": "yeah. did not use messageHandler and errorHanlder here, shall i remove?",
      "parentUuid": "a40586fd_d1e67a22",
      "range": {
        "startLine": 168,
        "startChar": 0,
        "endLine": 168,
        "endChar": 50
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88004393_74bdc387",
        "filename": "http/http_stream.hpp",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-12-10T04:20:40Z",
      "side": 1,
      "message": "Do we need to handle errors?",
      "parentUuid": "db4813ed_8dfe69e6",
      "range": {
        "startLine": 168,
        "startChar": 0,
        "endLine": 168,
        "endChar": 50
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "329d8d75_656b7e23",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "Please just inline this.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 42
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3ff208d_a4e4e099",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "Why is the unixSocket called bmcweb?  Shouldn\u0027t it be produced by the dump handler?",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 51
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26ebd0db_5f5aa497",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "Don\u0027t use auto here.  It obfuscates the type.  size_t I believe it what you want here.",
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad702a3b_a9e27d9a",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2020-12-08T16:51:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "26ebd0db_5f5aa497",
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1817dc3f_f7ec13fb",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 187,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "This is going to have problems, as this is shared between all connection objects.\n\nChech the common_errors.md doc here:\nhttps://github.com/openbmc/bmcweb/blob/master/COMMON_ERRORS.md#lack-of-locking-between-subsequent-calls",
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a7ea5a4_e2833433",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 195,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "This needs a way to return a normal response object, like 404, or 500.",
      "range": {
        "startLine": 195,
        "startChar": 0,
        "endLine": 195,
        "endChar": 58
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5178107_503e01aa",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 203,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "String copy.  Use the existing string_view directly.",
      "range": {
        "startLine": 203,
        "startChar": 12,
        "endLine": 203,
        "endChar": 23
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "910a4e1a_d78687b0",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 203,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2020-12-08T16:51:21Z",
      "side": 1,
      "message": "unaddressed",
      "parentUuid": "b5178107_503e01aa",
      "range": {
        "startLine": 203,
        "startChar": 12,
        "endLine": 203,
        "endChar": 23
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "374a5e96_9aa495b8",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 203,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-12-08T17:22:41Z",
      "side": 1,
      "message": "will address",
      "parentUuid": "910a4e1a_d78687b0",
      "range": {
        "startLine": 203,
        "startChar": 12,
        "endLine": 203,
        "endChar": 23
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a7bab00_de314702",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "This needs an error condition, and to return 500.",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 206,
        "endChar": 41
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a0dfc10_b7d566e5",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "Inline below?",
      "range": {
        "startLine": 211,
        "startChar": 11,
        "endLine": 211,
        "endChar": 41
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b35da25d_3f66854b",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 217,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "Why do you unlink the path before you open it?",
      "range": {
        "startLine": 217,
        "startChar": 0,
        "endLine": 217,
        "endChar": 45
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bd93ae7_84a5fbde",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 217,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-12-10T03:51:51Z",
      "side": 1,
      "message": "removed",
      "parentUuid": "b35da25d_3f66854b",
      "range": {
        "startLine": 217,
        "startChar": 0,
        "endLine": 217,
        "endChar": 45
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "086aed90_193b9807",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 224,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "If this isn\u0027t called, then what?  I suspect that you need a rearrange your response objects a bit.",
      "range": {
        "startLine": 224,
        "startChar": 0,
        "endLine": 224,
        "endChar": 46
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b58b3e8d_cd1307e9",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 224,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-12-10T03:51:51Z",
      "side": 1,
      "message": "removed",
      "parentUuid": "086aed90_193b9807",
      "range": {
        "startLine": 224,
        "startChar": 0,
        "endLine": 224,
        "endChar": 46
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0375f25_de8c28f3",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 227,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "reverse this check and return to avoid the added scope.",
      "range": {
        "startLine": 227,
        "startChar": 0,
        "endLine": 227,
        "endChar": 36
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70082cee_607ad6b7",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 229,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "Why unlink?",
      "range": {
        "startLine": 229,
        "startChar": 0,
        "endLine": 229,
        "endChar": 58
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94bb1213_58fa2fea",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 229,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-12-10T03:51:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70082cee_607ad6b7",
      "range": {
        "startLine": 229,
        "startChar": 0,
        "endLine": 229,
        "endChar": 58
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "524c2da6_af544b52",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 273,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "possible nullptr dereference",
      "range": {
        "startLine": 273,
        "startChar": 24,
        "endLine": 273,
        "endChar": 26
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28ef464f_ff60f623",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 275,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "This leaks memory.  Handler isn\u0027t destroyed if this gets hit.",
      "range": {
        "startLine": 275,
        "startChar": 0,
        "endLine": 275,
        "endChar": 23
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0401fcc_3583fe6d",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 278,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "why are we removing the unit socket entirely?",
      "range": {
        "startLine": 278,
        "startChar": 0,
        "endLine": 278,
        "endChar": 57
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e373b4bd_ec6b8dc2",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 278,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-12-10T03:51:51Z",
      "side": 1,
      "message": "yes.but after reversing model back-end will cleanup",
      "parentUuid": "b0401fcc_3583fe6d",
      "range": {
        "startLine": 278,
        "startChar": 0,
        "endLine": 278,
        "endChar": 57
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04f1b8d9_6b12f64d",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 280,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "This should be done in handler itself via RAII.",
      "range": {
        "startLine": 280,
        "startChar": 0,
        "endLine": 280,
        "endChar": 36
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da2dd442_6b9c698f",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 282,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-11-12T19:08:45Z",
      "side": 1,
      "message": "These two lines do the same thing.  Pick one.",
      "range": {
        "startLine": 281,
        "startChar": 0,
        "endLine": 282,
        "endChar": 30
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64337792_c70adb60",
        "filename": "include/dump_offload.hpp",
        "patchSetId": 2
      },
      "lineNbr": 282,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2020-12-10T03:51:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da2dd442_6b9c698f",
      "range": {
        "startLine": 281,
        "startChar": 0,
        "endLine": 282,
        "endChar": 30
      },
      "revId": "dac701847aab8b53ec46f06111aaa8038221a5ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}