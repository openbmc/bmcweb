{
  "comments": [
    {
      "key": {
        "uuid": "41e3c661_c227499b",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-22T22:14:12Z",
      "side": 1,
      "message": "This should be setting internalError if this fails.",
      "range": {
        "startLine": 191,
        "startChar": 23,
        "endLine": 192,
        "endChar": 25
      },
      "revId": "19f8a015d80d8aa4f568750ac091c60a080d4906",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7feed028_29ae40bc",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 1000404
      },
      "writtenOn": "2021-11-24T10:38:44Z",
      "side": 1,
      "message": "There was a similar discussion on PCIeSlot: https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/39970/11/redfish-core/lib/pcie_slots.hpp#180 \n\nThe implementation here was follow the conclusion.",
      "parentUuid": "41e3c661_c227499b",
      "range": {
        "startLine": 191,
        "startChar": 23,
        "endLine": 192,
        "endChar": 25
      },
      "revId": "19f8a015d80d8aa4f568750ac091c60a080d4906",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7664f09_99880c7b",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-11-29T18:00:33Z",
      "side": 1,
      "message": "If we\u0027re getting a dbus interface that\u0027s outside the dbus interface, that needs to be visible to a user (generally in the form of a 500 error).\n\nIf Gunnar disagrees, I\u0027m happy to discuss here.",
      "parentUuid": "7feed028_29ae40bc",
      "range": {
        "startLine": 191,
        "startChar": 23,
        "endLine": 192,
        "endChar": 25
      },
      "revId": "19f8a015d80d8aa4f568750ac091c60a080d4906",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49fd0fed_6b7177cb",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 1000404
      },
      "writtenOn": "2021-12-06T08:40:56Z",
      "side": 1,
      "message": "Hi @Gunnar, do you have any suggestion about this topic?",
      "parentUuid": "b7664f09_99880c7b",
      "range": {
        "startLine": 191,
        "startChar": 23,
        "endLine": 192,
        "endChar": 25
      },
      "revId": "19f8a015d80d8aa4f568750ac091c60a080d4906",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb24cc36_f6b495ff",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2021-12-10T16:05:56Z",
      "side": 1,
      "message": "\"Unknown\" is a value here and the default value. \nSo if you didn\u0027t set this GenerationInUse on D-Bus, you get an internal error here.. \nThat doesn\u0027t sound right. \n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/phosphor-dbus-interfaces/+/46437/6/yaml/xyz/openbmc_project/Inventory/Item/PCIeDevice.interface.yaml#11\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/df55704398ec8fc3cc608206f05a2226f134c786/yaml/xyz/openbmc_project/Inventory/Item/PCIeSlot.interface.yaml#L53\n\nI agree with, \"if we are getting a D-Bus value outside of the D-Bus interface that is an error\". \n\nMaybe you could do something like, if \"Unknown\" leave off but for others set an internal error ?",
      "parentUuid": "49fd0fed_6b7177cb",
      "range": {
        "startLine": 191,
        "startChar": 23,
        "endLine": 192,
        "endChar": 25
      },
      "revId": "19f8a015d80d8aa4f568750ac091c60a080d4906",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb75d677_38f09710",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-10T17:10:38Z",
      "side": 1,
      "message": "Sure, if it\u0027s unknown, we can omit the property, but anything other than unknown or Gen1-5 needs to return an internal error.",
      "parentUuid": "bb24cc36_f6b495ff",
      "range": {
        "startLine": 191,
        "startChar": 23,
        "endLine": 192,
        "endChar": 25
      },
      "revId": "19f8a015d80d8aa4f568750ac091c60a080d4906",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11458de2_8b3f48d2",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-11T18:25:05Z",
      "side": 1,
      "message": "FWIW, as we\u0027re getting more of these, I kind of wonder if we need a simplified macro for \"convert dbus enum to redfish\", where you declare the enums, and their lookups, and the macro/template just does the right thing.\n\nDoing this the binary efficient way seems to be subtle to people.  Something like\n\nstd::string dbus_name;\n\ntranslateDbusToRedfish(res, \"GenerationInUse\", dbusName\n{ \"xyz.openbmc_project.Inventory.Item.PCIeSlot.Generations.Gen1\", \"Gen1\"}\n{\"xyz.openbmc_project.Inventory.Item.PCIeSlot.Generations.Gen2\", \"Gen2\"\n}\n});\n\n\ninternal implementation would try to do the conversion, if it succeeded, putting the enum into the response.  If it failed, setting 500 on the response.\n\nFood for thought on these.",
      "parentUuid": "eb75d677_38f09710",
      "range": {
        "startLine": 191,
        "startChar": 23,
        "endLine": 192,
        "endChar": 25
      },
      "revId": "19f8a015d80d8aa4f568750ac091c60a080d4906",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80832e16_f7574c25",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 1000404
      },
      "writtenOn": "2021-12-13T07:43:01Z",
      "side": 1,
      "message": "Thanks for the explanation. I follow the feedback to modify the code, please let me know if there are any issues. \n\nIn my opinion, it sounds great to have this conversion to do the translation things.",
      "parentUuid": "11458de2_8b3f48d2",
      "range": {
        "startLine": 191,
        "startChar": 23,
        "endLine": 192,
        "endChar": 25
      },
      "revId": "19f8a015d80d8aa4f568750ac091c60a080d4906",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}