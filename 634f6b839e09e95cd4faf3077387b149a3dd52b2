{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "28409e30_0365da81",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-10-04T17:33:15Z",
      "side": 1,
      "message": "do we have a dependency on the library declared to meson?   I see https://github.com/openbmc/bmcweb/blob/master/subprojects/packagefiles/boost-url/meson.build was unreferenced from meson.build here (but wasn\u0027t deleted)\n\nhttps://github.com/openbmc/bmcweb/commit/079360ae6e04d3f2245e00d70f83d15c5cad3630\n\nI not seeing a reference to the library objects like the second box in this link https://mesonbuild.com/Dependencies.html#boost",
      "revId": "634f6b839e09e95cd4faf3077387b149a3dd52b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "211e610b_49092250",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-10-05T00:46:09Z",
      "side": 1,
      "message": "\u003e do we have a dependency on the library declared to meson?\n\nIt wasn\u0027t previously required, because it was header only.  The meson options only need to be specified for non header-only libraries.\n\n\u003e   I see https://github.com/openbmc/bmcweb/blob/master/subprojects/packagefiles/boost-url/meson.build was unreferenced from meson.build here (but wasn\u0027t deleted)\n\nIt\u0027s deleted now.\n\n\u003e \n\u003e https://github.com/openbmc/bmcweb/commit/079360ae6e04d3f2245e00d70f83d15c5cad3630\n\u003e \n\u003e I not seeing a reference to the library objects like the second box in this link https://mesonbuild.com/Dependencies.html#boost\n\nCheck out the latest.",
      "parentUuid": "28409e30_0365da81",
      "revId": "634f6b839e09e95cd4faf3077387b149a3dd52b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cb22325_62356b51",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-10-06T20:35:29Z",
      "side": 1,
      "message": "Ok I guess the url wrap packagefile was leftover from before url became part of boost?   Ack the cleanup.\n\nThis looks reasonable compared to the documentation.\n\nDoes meson upstream need any update to reflect url is a cmake target (even if we just create an issue or emai? to notify them)?",
      "parentUuid": "211e610b_49092250",
      "revId": "634f6b839e09e95cd4faf3077387b149a3dd52b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "acf757db_c663a5b5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-10-06T21:50:48Z",
      "side": 1,
      "message": "\u003e Ok I guess the url wrap packagefile was leftover from before url became part of boost?   Ack the cleanup.\n\nYep.  We never cleaned it up, although the explicit boost-url has been gone for a while now.\n\n\u003e \n\u003e This looks reasonable compared to the documentation.\n\u003e \n\u003e Does meson upstream need any update to reflect url is a cmake target (even if we just create an issue or emai? to notify them)?\n\nwrapdb doesn\u0027t include boost, so I don\u0027t think so.",
      "parentUuid": "9cb22325_62356b51",
      "revId": "634f6b839e09e95cd4faf3077387b149a3dd52b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79796d17_a8b19b2c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-10-09T01:36:49Z",
      "side": 1,
      "message": "I was looking at https://github.com/mesonbuild/meson/blob/master/mesonbuild/dependencies/boost.py\n\nwhere they are looking for abi tagged libraries vs cmake",
      "parentUuid": "acf757db_c663a5b5",
      "revId": "634f6b839e09e95cd4faf3077387b149a3dd52b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce1ef9d4_7aef2380",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-10-09T18:26:07Z",
      "side": 1,
      "message": "\u003e I was looking at https://github.com/mesonbuild/meson/blob/master/mesonbuild/dependencies/boost.py\n\u003e \n\nI\u0027m not sure where that file is used.  In terms of this commit, is there anything in that file that needs to be accounted for?  This commit seemed to work with existing meson in my testing.\n\n\u003e where they are looking for abi tagged libraries vs cmake",
      "parentUuid": "79796d17_a8b19b2c",
      "revId": "634f6b839e09e95cd4faf3077387b149a3dd52b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d41206de_0c0814ef",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-10-10T14:53:36Z",
      "side": 1,
      "message": "Thinking through this, I realize I am mixing build rules and support at multiple levels.\n\nI was looking at the else clause of boost.found(), comparing to meson documentation at [1] and thinking \"this is replacing the boost dependency with a cmake dependency\".  However, looking again today, it is replacing the include only dependency on the downloaded package with the cmake dependency to build the library when the system installed boost doesn\u0027t have the module installed.\n\n[1] https://mesonbuild.com/Dependencies.html#boost\n\nI was inferring when the boost.py file was being used, and thinking about should it automatically invoke cmake from the source.   But after you asking when it is used, I dug a bit deeper and found (1) its invoked from the __init.py__ [2] in the same directory and (2) its purpose is to find and satisfy dependencies for boost that is installed in the system or an alternate system location, and therefore [3] compiling from source is beyond its scope, and the meson build project is not affected.\n\n[2] https://github.com/mesonbuild/meson/blob/3af0632c3d02c552982737580cfac56adb72c8ad/mesonbuild/dependencies/__init__.py#L190\n\nHowever, this does point out we should have some additional yocto integration to build URL as part of our boost packaging.  Without this meson may download the library again and the library would be compiled for each package that needs to use it.\n\nAccording to this stack overflow [3], we have to do this at the meta layer.  Alternately we cand work with yocto to create sub-packages for this library that could be explicitly requested through a standard DEPENDS.\n\n[3] https://stackoverflow.com/questions/69862510/yocto-have-a-dependency-to-a-receipe-and-a-packageconfig\n  \nI\u0027m fine merging this patch as is.  It adds the ability to build the boot URL library standalone from upstream to meet its dependency.  If we don\u0027t encounter any other package needing the URL library, the compile time is shifted and the impact is the extra download.",
      "parentUuid": "ce1ef9d4_7aef2380",
      "revId": "634f6b839e09e95cd4faf3077387b149a3dd52b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3fcbd62_ad01c38a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2023-10-10T15:48:44Z",
      "side": 1,
      "message": "Seeing Andrews reference in discord to https://github.com/openbmc/openbmc/blob/master/meta-phosphor/recipes-support/boost/boost_%25.bbappend I obviously didn\u0027t read https://github.com/openbmc/openbmc/blob/master/poky/meta/recipes-support/boost/boost.inc which has the sub packages",
      "parentUuid": "d41206de_0c0814ef",
      "revId": "634f6b839e09e95cd4faf3077387b149a3dd52b2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}