{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6de83d22_ce282584",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-05-23T22:29:53Z",
      "side": 1,
      "message": "Do you have an example of what the response is for one of the sensors `/redfish/v1/Chassis/BMC/Sensors/{SomeSensorId}`?\n\nIt sounds like the response has an array has already been pre-expanded outside of the query handling flow.  If that\u0027s the case then I think the code is working as intended.",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 30,
        "endChar": 70
      },
      "revId": "09fce01a8cc69b4cdc3470b330166882f82c581b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be9c83fb_14269764",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-05-24T05:41:53Z",
      "side": 1,
      "message": "added, PTAL.",
      "parentUuid": "6de83d22_ce282584",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 30,
        "endChar": 70
      },
      "revId": "09fce01a8cc69b4cdc3470b330166882f82c581b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68fbc98c_7f51e672",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-05-24T16:05:44Z",
      "side": 1,
      "message": "ACK, I understand now and I agree it wasn\u0027t working as intended.  Let me try some $expands combined with aggregation and make sure this doesn\u0027t break any of that",
      "parentUuid": "be9c83fb_14269764",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 30,
        "endChar": 70
      },
      "revId": "09fce01a8cc69b4cdc3470b330166882f82c581b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "154e037c_cf2a97ef",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-05-25T20:42:53Z",
      "side": 1,
      "message": "thanks. üëç\n\nI have updated to a new version. PTAL if you get the chance.",
      "parentUuid": "68fbc98c_7f51e672",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 30,
        "endChar": 70
      },
      "revId": "09fce01a8cc69b4cdc3470b330166882f82c581b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "121501fa_1c2a8fe7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-05-26T02:20:33Z",
      "side": 1,
      "message": "ACK.  This patch looks like a complete revert of https://gerrit.openbmc.org/c/openbmc/bmcweb/+/60727.  That was needed because the previous assumption that we should always expand does not work correctly with Redfish Aggregation.\n\nThrough aggregation we may offload expand to the satellite.  In that case the response when first seen by the normal expand flow will have already been partially expanded.  We just need to expand the parts of the response which came from the aggregating bmc and thus haven\u0027t been expanded.\n\nThat was the purpose of the test sections you removed in this patchset.  I\u0027ll test on an actual machine, but my hunch is for a query like `/redfish/v1/Chassis?$expand\u003d.($levels\u003d1)` in the response you\u0027ll see the local Chassis resources have been expanded one level and the satellite Chassis resources have been expanded two levels.",
      "parentUuid": "154e037c_cf2a97ef",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 30,
        "endChar": 70
      },
      "revId": "09fce01a8cc69b4cdc3470b330166882f82c581b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47ca6973_26e2638c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2023-05-26T19:31:17Z",
      "side": 1,
      "message": "I see why I don\u0027t have impression where we need to care about levels in |findNavigationReferences|.\n\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/60727 seems the root cause why \"/redfish/v1/Chassis/BMC/Sensors?$expand\u003d.($levels\u003d2)\" is broken.\n\n\u003e Through aggregation we may offload expand to the satellite. In that case the response when first seen by the normal expand flow will have already been partially expanded. We just need to expand the parts of the response which came from the aggregating bmc and thus haven\u0027t been expanded.\n\nIs there really a use case where there are leftover information from the satellite bmc? What will break if the assumption is satellite is responsible to expand all the levels.",
      "parentUuid": "121501fa_1c2a8fe7",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 30,
        "endChar": 70
      },
      "revId": "09fce01a8cc69b4cdc3470b330166882f82c581b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9538879_dbd0f776",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-05-30T17:32:38Z",
      "side": 1,
      "message": "We can\u0027t assume the satellite will expand all the levels because there is no guarantee the satellite supports expand.  It\u0027s unlikely we\u0027d have a situation where we expected something like levels\u003d3 and instead only got levels\u003d1.  It is very possible to expect levels\u003dn and we received levels\u003d0.\n\nReverting https://gerrit.openbmc.org/c/openbmc/bmcweb/+/60727 will break all aggregated $expands when the satellite supports $expand.  I think the root issue is we shouldn\u0027t be assuming expand depths since that is incompatible with aggregation.  That commit removed the assumption from the base expand flow, but it did not consider assumptions in the efficient sensors expand flow.",
      "parentUuid": "47ca6973_26e2638c",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 30,
        "endChar": 70
      },
      "revId": "09fce01a8cc69b4cdc3470b330166882f82c581b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84793a04_b8c3d3ec",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-06-03T00:23:50Z",
      "side": 1,
      "message": "I tested Patchset 9 with aggregation and did not see any issues.  From my testing, the following queries involving aggregated resources are all expanded correctly:\n\nredfish/v1/Chassis?$expand\u003d.($levels\u003d1)\nredfish/v1/Chassis/5B247A_AggChassis?$expand\u003d.($levels\u003d1)\nredfish/v1/Chassis/5B247A_AggChassis?$expand\u003d.($levels\u003d2)\nredfish/v1/Chassis/5B247A_AggChassis/Sensors?$expand\u003d.($levels\u003d1)\nredfish/v1/Systems?$expand\u003d.($levels\u003d1)\nredfish/v1/UpdateService?$expand\u003d.($levels\u003d1)\nredfish/v1/UpdateService?$expand\u003d.($levels\u003d2)\n\nI think Patchset 9 is the correct approach.  I don\u0027t have a setup where a Sensor resource contains a navigation link, but I\u0027m assuming Patchset 9 still fixes the original issue of /redfish/v1/Chassis/BMC/Sensors?$expand\u003d.($levels\u003d2) not being expanded correctly.",
      "parentUuid": "a9538879_dbd0f776",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 30,
        "endChar": 70
      },
      "revId": "09fce01a8cc69b4cdc3470b330166882f82c581b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a0cac3e_57e3c32f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-06-03T01:31:13Z",
      "side": 1,
      "message": "Actually it looks like the change introduces a new issue in aggregated sensor expansion.  If I query an aggregated sensor on my system I do see a navigation link\n\ncurl -s \u0027localhost/redfish/v1/Chassis/5B247A_AggChassis/Sensors/temp\u0027\n{\n  ...\n  \"RelatedItem\": [\n    {\n      \"@odata.id\": \"/redfish/v1/Systems/5B247A_system\"\n    }\n  ],\n  ...\n}\n\nHowever, that property is missing from the output of:\n\ncurl -s \u0027localhost/redfish/v1/Chassis/5B247A_AggChassis/Sensors?$expand\u003d.($levels\u003d1)\u0027\n\nas well as some downstream properties under Status.  If do\n\ncurl -s \u0027localhost/redfish/v1/Chassis/5B247A_AggChassis/Sensors/temp?$expand\u003d.($levels\u003d1)\u0027\n\nthen RelatedItem gets expanded like it should.  If I instead call \n\ncurl -s \u0027localhost/redfish/v1/Chassis/5B247A_AggChassis/Sensors?$expand\u003d.($levels\u003d2)\u0027\n\nthen you don\u0027t see RelatedItem in the output and the output is the same as if I did a level 1 expand.\n\nI don\u0027t know if this issue was also present in Patchset 5 or if it was introduced by the cleanup that took place after that patch",
      "parentUuid": "84793a04_b8c3d3ec",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 30,
        "endChar": 70
      },
      "revId": "09fce01a8cc69b4cdc3470b330166882f82c581b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}