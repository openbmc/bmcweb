{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "194444b4_11172d2b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-20T20:58:37Z",
      "side": 1,
      "message": "Why?  parse_registries is meant to be run to update all registries published from dmtf;  Selectively running it might mean that we get one version of one registry, and a different version of another, which we don\u0027t want, and defeats some of the intent of automating this.\n\nPlease add a little more details on what you\u0027re trying to accomplish here.",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 9,
        "endChar": 44
      },
      "revId": "0f97f2a73db9e1e11c40ccf249a66ac4d7fd491c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0d63d31_25a24102",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 9,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-09-20T21:20:42Z",
      "side": 1,
      "message": "Say I am only interested in making changes to Privilege registry and its script during development, the current script doesn\u0027t allow us do so. For example, one day we have 10 schemas, I don\u0027t want to regenerate every schema during every iteration of the development. Is that a fair requirement?\n\nYes, I can make \"all\" by default.",
      "parentUuid": "194444b4_11172d2b",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 9,
        "endChar": 44
      },
      "revId": "0f97f2a73db9e1e11c40ccf249a66ac4d7fd491c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b64ba1cc_70ce74f2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 9,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-09-21T01:02:56Z",
      "side": 1,
      "message": "Done. Added intuition.",
      "parentUuid": "f0d63d31_25a24102",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 9,
        "endChar": 44
      },
      "revId": "0f97f2a73db9e1e11c40ccf249a66ac4d7fd491c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49edc339_2f21bd63",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-21T17:13:58Z",
      "side": 1,
      "message": "\u003e Say I am only interested in making changes to Privilege registry and its script during development,\n\nI read your commit message, and I\u0027m still not really sure why this is helpful.  Part of the intent of what we have is that running the tool should produce the same reproducible output every time, so even if you only care about privilege registry, generating the rest of the files should have no effect, and the actual generation takes a trivial amount of time.\n\nThere\u0027s something I\u0027m missing here, but I\u0027m not sure what it is.\n\nMy worry here is that folks see these command line options, and start running just the registry they care about when a new version comes out, instead of updating us to the complete Redfish pack.  Updating everything is the intent of the script, to keep us consistent to released versions.  This partial update has happened in the past, so this isn\u0027t hypothetical.  In theory, the CI would catch that, but it\u0027s not perfect.",
      "parentUuid": "b64ba1cc_70ce74f2",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 9,
        "endChar": 44
      },
      "revId": "0f97f2a73db9e1e11c40ccf249a66ac4d7fd491c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "918c4af9_cae9338b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 9,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-09-21T17:18:15Z",
      "side": 1,
      "message": "So, if one updates the version in the script but not pass a full list when they manually update the sources, CI will catch that.",
      "parentUuid": "49edc339_2f21bd63",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 9,
        "endChar": 44
      },
      "revId": "0f97f2a73db9e1e11c40ccf249a66ac4d7fd491c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92d05315_d493e077",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-21T17:35:19Z",
      "side": 1,
      "message": "Lets start with \"why is this behavior useful\" then we can back up to \"how do we meet both needs\".\n\nYes, CI _might_ catch it, but it\u0027s imperfect, and there have been times we\u0027ve had to disable it.  Also, having a tool with options that are effectively \"illegal\" if you run, and having it catch in CI isn\u0027t a good developer experience.",
      "parentUuid": "918c4af9_cae9338b",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 9,
        "endChar": 44
      },
      "revId": "0f97f2a73db9e1e11c40ccf249a66ac4d7fd491c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b29bc9c_851f825d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-09-20T19:38:48Z",
      "side": 1,
      "message": "Could we default it to all? I.e. if you run it like it was before, it is the same behavior",
      "revId": "0f97f2a73db9e1e11c40ccf249a66ac4d7fd491c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8e89300_47242587",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-09-20T19:59:09Z",
      "side": 1,
      "message": "I don\u0027t have strong opinion. IMO it\u0027s not a big deal to just add \"--all\". I am not aware of any automation script that we need to change.",
      "parentUuid": "3b29bc9c_851f825d",
      "revId": "0f97f2a73db9e1e11c40ccf249a66ac4d7fd491c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36e5e4f4_2aeb1604",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-20T20:58:37Z",
      "side": 1,
      "message": "https://github.com/openbmc/bmcweb/blob/master/run-ci#L7\n\nWould need to change for sure.  I\u0027m not really sure how this passed CI (maybe it\u0027s not returning the correct exit codes on bad input?)\n\nI\u0027m with gunnar, defaults here should be to just do everything, because that\u0027s the most common operation.  I\u0027d still like to understand why anyone would want to do anything OTHER than all, but lets follow up on the other thread.",
      "parentUuid": "a8e89300_47242587",
      "revId": "0f97f2a73db9e1e11c40ccf249a66ac4d7fd491c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08586f6f_669d7834",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-09-20T21:20:42Z",
      "side": 1,
      "message": "Oh, I don\u0027t know we have that hooked up. I see now https://github.com/openbmc/openbmc-build-scripts/blob/82aaba037aa922a6aa0e118f8cc04531becc42cd/scripts/unit-test.py#L1255\n\nYes, I can make all by default.",
      "parentUuid": "36e5e4f4_2aeb1604",
      "revId": "0f97f2a73db9e1e11c40ccf249a66ac4d7fd491c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83b35ea4_3fdc03c9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-09-21T01:02:56Z",
      "side": 1,
      "message": "See what I have now.",
      "parentUuid": "08586f6f_669d7834",
      "revId": "0f97f2a73db9e1e11c40ccf249a66ac4d7fd491c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbce1da4_65a287d0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-21T15:19:11Z",
      "side": 1,
      "message": "Can you please check and understand how CI was able to pass with the change prior?  Is argument parser not setting a return code on command failures?",
      "parentUuid": "83b35ea4_3fdc03c9",
      "revId": "0f97f2a73db9e1e11c40ccf249a66ac4d7fd491c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87047821_1ffe807f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-09-21T16:43:24Z",
      "side": 1,
      "message": "\u003e Can you please check and understand how CI was able to pass with the change prior?\n\nPatch set 1?\n\nThe previous script does nothing if no arguments are given, thus no diff, thus no CI error.\n\nhttps://github.com/openbmc/bmcweb/blob/master/run-ci#L9",
      "parentUuid": "bbce1da4_65a287d0",
      "revId": "0f97f2a73db9e1e11c40ccf249a66ac4d7fd491c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc013997_d422ae4b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-21T17:08:04Z",
      "side": 1,
      "message": "\u003e \u003e Can you please check and understand how CI was able to pass with the change prior?\n\u003e \n\u003e Patch set 1?\n\u003e \n\u003e The previous script does nothing if no arguments are given, thus no diff, thus no CI error.\n\nRight, and the \"do nothing\" is I think the problem on that patchset, because it does nothing without setting a return code.  With that said, now that the default is to do the old behavior, I think we\u0027re ok.\n\n\u003e \n\u003e https://github.com/openbmc/bmcweb/blob/master/run-ci#L9",
      "parentUuid": "87047821_1ffe807f",
      "revId": "0f97f2a73db9e1e11c40ccf249a66ac4d7fd491c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c51066d_b6a568d3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-09-21T17:09:22Z",
      "side": 1,
      "message": "👍",
      "parentUuid": "dc013997_d422ae4b",
      "revId": "0f97f2a73db9e1e11c40ccf249a66ac4d7fd491c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb655af2_3e613a3c",
        "filename": "scripts/parse_registries.py",
        "patchSetId": 6
      },
      "lineNbr": 224,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-20T21:02:42Z",
      "side": 1,
      "message": "If this goes forward, Could we just make this a list of registries?  Or some kind of parser that allows multiple inputs without having to have each one in-turn.  I\u0027m not sure having each registry have its own -- argument scales beyond the 3 we have today, and I think redfish and swordfish have ~10 potential ones we could add.",
      "range": {
        "startLine": 216,
        "startChar": 0,
        "endLine": 224,
        "endChar": 76
      },
      "revId": "0f97f2a73db9e1e11c40ccf249a66ac4d7fd491c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8add033_76b6696b",
        "filename": "scripts/parse_registries.py",
        "patchSetId": 6
      },
      "lineNbr": 224,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-09-21T01:02:21Z",
      "side": 1,
      "message": "Done. See what I have now. It\u0027s a list.",
      "parentUuid": "fb655af2_3e613a3c",
      "range": {
        "startLine": 216,
        "startChar": 0,
        "endLine": 224,
        "endChar": 76
      },
      "revId": "0f97f2a73db9e1e11c40ccf249a66ac4d7fd491c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8053ab69_df71373b",
        "filename": "scripts/parse_registries.py",
        "patchSetId": 6
      },
      "lineNbr": 227,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-20T21:02:42Z",
      "side": 1,
      "message": "Pretty sure we want default\u003dTrue on everything.  Just running the script with no args should do the old behavior.",
      "range": {
        "startLine": 227,
        "startChar": 16,
        "endLine": 227,
        "endChar": 21
      },
      "revId": "0f97f2a73db9e1e11c40ccf249a66ac4d7fd491c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00181a12_9e47e18e",
        "filename": "scripts/parse_registries.py",
        "patchSetId": 6
      },
      "lineNbr": 227,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-09-21T01:02:21Z",
      "side": 1,
      "message": "This part was not needed and removed",
      "parentUuid": "8053ab69_df71373b",
      "range": {
        "startLine": 227,
        "startChar": 16,
        "endLine": 227,
        "endChar": 21
      },
      "revId": "0f97f2a73db9e1e11c40ccf249a66ac4d7fd491c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}