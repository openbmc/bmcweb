{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8975e012_e84f98d2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-18T17:59:09Z",
      "side": 1,
      "message": "I\u0027m not really interested in maintaining the complexity that this entails of keeping two different naming schemes long term.  It means that for EVERY computersystem route (of which there are many), we\u0027ll need to determine if we\u0027re in single system mode, or double system mode, and for people implementing Redfish code on a single system (which are the majority) it\u0027s highly likely that they break the multi-host case, especially as we go deep into the tree (ie /redfish/v1/Systems/systemN/LogServices/EventLog/Entries/entryN.  If I\u0027m overestimating the complexity here, please let me know.  Realistically, interface-wise, a single system should look the same as having a single node in a multi-node system.\n\nWhat I\u0027d like to see is an analysis of the existing dbus and filesystem paths for host control that are used within the ComputerSystem tree;  Most of them are going to be called \"xyz/openbmc_project/hostN\" and given that Redfish generally uses the last part of that path as the control, we should be able to just change /redfish/v1/Systems/system to /redfish/v1/Systems/hostN without a problem in the long term.  In the short term, I suspect the best strategy would be to simply string replace \"host0\" with \"system\", so that \"system\" always represents the first node, and for any subsequent paths in the tree, \"system\" will be correct (at least in redfish terms) for both multi-node, and non-multi-node, with \"system\" (ie node0) just supporting more features than the rest of the nodes in the interim.\n\nFrom my perspective this accomplishes:\n1. A reasonably self-contained initial patchset where we can add multi-host support without breaking most of the tree, or having routes that are totally invalid and return 500 on multi-node systems.\n2. A transition path to where individual nodes can be made \"multi host aware\" over time, and we can track our progress toward that goal with a simple\n\ngrep BMCWEB_ROUTE(\"/redfish/v1/Systems/system\n\nAs long as that call returns routes, this feature is still not done, and we still have routes we need to migrate to be multi-node aware (ie \"redfish/v1/Systems/\u003cstr\u003e\")\n\n3. Once all the routes have been migrated, we can simply remove the code that replaces host0 with \"system\", the IDs will change, and the tree will still be correct.\n\nThe above is what I have in my mind for a progressing path of this feature, and lets multiple people participate without getting in eachothers way.",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 28,
        "endChar": 27
      },
      "revId": "793a1155b388ac12376be033cb39a61bc72d8c43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2da60d29_7d0470ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1001093
      },
      "writtenOn": "2022-05-10T19:21:57Z",
      "side": 1,
      "message": "Hi All,If possible could you review this latest patch set regarding multi host bmcweb.\nThanks",
      "revId": "793a1155b388ac12376be033cb39a61bc72d8c43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3894a7bf_32437013",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-05-18T17:10:41Z",
      "side": 1,
      "message": "Let us know that the migration plan for other redfish entries would be.\n\n\"/redfish/v1/Systems/system/\" is hardcoded many places. More then in the lib/systems.\n\nFor example:\n\nhttps://github.com/openbmc/bmcweb/blob/565dfb6f9a87e15fa707e6b2c89222c4419e7491/redfish-core/lib/storage.hpp#L31",
      "revId": "793a1155b388ac12376be033cb39a61bc72d8c43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9285c76_7c25c797",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-05-18T17:53:55Z",
      "side": 1,
      "message": "Do you have further commits about how you link sub-resources (e.g., Memory, CPU) to a certain system?",
      "revId": "793a1155b388ac12376be033cb39a61bc72d8c43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c12c7df0_803a6f80",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 13
      },
      "lineNbr": 81,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-05-18T17:50:54Z",
      "side": 1,
      "message": "why do you put these two functions into collection util? Seems specific to ComputerSystem",
      "range": {
        "startLine": 81,
        "startChar": 19,
        "endLine": 81,
        "endChar": 41
      },
      "revId": "793a1155b388ac12376be033cb39a61bc72d8c43",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}