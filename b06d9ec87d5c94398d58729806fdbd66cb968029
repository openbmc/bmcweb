{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "18c6083f_a4df71f4",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 28
      },
      "lineNbr": 194,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2023-05-20T01:20:04Z",
      "side": 1,
      "message": "We could check that hostSocket already exists immediately on connection instead of waiting until this point after two D-Bus calls.",
      "range": {
        "startLine": 190,
        "startChar": 0,
        "endLine": 194,
        "endChar": 5
      },
      "revId": "b06d9ec87d5c94398d58729806fdbd66cb968029",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "293fa8fc_ac5fdc59",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 28
      },
      "lineNbr": 194,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-05-22T19:04:48Z",
      "side": 1,
      "message": "I was planning to do that but but there is possibility that two request came in for same console at the same time and both of them observed hostSocket as null. right? I am trying to protect that case.",
      "parentUuid": "18c6083f_a4df71f4",
      "range": {
        "startLine": 190,
        "startChar": 0,
        "endLine": 194,
        "endChar": 5
      },
      "revId": "b06d9ec87d5c94398d58729806fdbd66cb968029",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08aaa378_1c2dea43",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 28
      },
      "lineNbr": 239,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2023-05-20T01:20:04Z",
      "side": 1,
      "message": "Seems like mutable should not be required here.",
      "range": {
        "startLine": 239,
        "startChar": 59,
        "endLine": 239,
        "endChar": 66
      },
      "revId": "b06d9ec87d5c94398d58729806fdbd66cb968029",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0cc1d61b_91e2ea99",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 28
      },
      "lineNbr": 239,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-05-22T19:04:48Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "08aaa378_1c2dea43",
      "range": {
        "startLine": 239,
        "startChar": 59,
        "endLine": 239,
        "endChar": 66
      },
      "revId": "b06d9ec87d5c94398d58729806fdbd66cb968029",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e9ea805_90339e4b",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 28
      },
      "lineNbr": 279,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2023-05-20T01:20:04Z",
      "side": 1,
      "message": "Not sure I understand the need for an ObjectMapper lookup here. We know exactly the service/object/interface/method we want to call, so why not just try to call it? It will eliminate a D-Bus round trip.",
      "range": {
        "startLine": 274,
        "startChar": 4,
        "endLine": 279,
        "endChar": 11
      },
      "revId": "b06d9ec87d5c94398d58729806fdbd66cb968029",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb5d8b34_c9858e48",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 28
      },
      "lineNbr": 279,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-05-22T01:13:15Z",
      "side": 1,
      "message": "Yeah, that\u0027s probably the best bet given the client is connecting to a specific endpoint. Easy to do the backwards compatibility fixup that way too.\n\nIf we\u0027re trying to enumerate the exposed consoles then the mapper lookup gives us the necessary information.",
      "parentUuid": "7e9ea805_90339e4b",
      "range": {
        "startLine": 274,
        "startChar": 4,
        "endLine": 279,
        "endChar": 11
      },
      "revId": "b06d9ec87d5c94398d58729806fdbd66cb968029",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a056d1ce_7599e7f0",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 28
      },
      "lineNbr": 279,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-05-22T19:04:48Z",
      "side": 1,
      "message": "I am making this extra call to find service name. Are you saying I should use service name like \"xyz.openbmc_project.Console.default\"?",
      "parentUuid": "eb5d8b34_c9858e48",
      "range": {
        "startLine": 274,
        "startChar": 4,
        "endLine": 279,
        "endChar": 11
      },
      "revId": "b06d9ec87d5c94398d58729806fdbd66cb968029",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2c9757a_2fa1eb1d",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 28
      },
      "lineNbr": 279,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-05-22T19:15:35Z",
      "side": 1,
      "message": "Isn\u0027t the service name xyz.openbmc_project.Console ?\n\nI\u0027m ok with avoiding the mapper here.  There\u0027s only one source of consoles.  If we get more, we can add the mapper complexity back.",
      "parentUuid": "a056d1ce_7599e7f0",
      "range": {
        "startLine": 274,
        "startChar": 4,
        "endLine": 279,
        "endChar": 11
      },
      "revId": "b06d9ec87d5c94398d58729806fdbd66cb968029",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}