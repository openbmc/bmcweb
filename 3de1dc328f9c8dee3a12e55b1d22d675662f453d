{
  "comments": [
    {
      "key": {
        "uuid": "36355fb4_f56bac47",
        "filename": "redfish-core/include/utils/telemetry_utils.hpp",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-07-23T10:30:56Z",
      "side": 1,
      "message": "If you change it to const std::string\u0026 here you will be able to remove one overload.",
      "range": {
        "startLine": 35,
        "startChar": 63,
        "endLine": 35,
        "endChar": 78
      },
      "revId": "3de1dc328f9c8dee3a12e55b1d22d675662f453d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bc1e4ef_41085bfc",
        "filename": "redfish-core/include/utils/telemetry_utils.hpp",
        "patchSetId": 6
      },
      "lineNbr": 35,
      "author": {
        "id": 1001026
      },
      "writtenOn": "2021-08-02T16:41:48Z",
      "side": 1,
      "message": "Currently only string literals are passed to this function, so the second overload is not needed.",
      "parentUuid": "36355fb4_f56bac47",
      "range": {
        "startLine": 35,
        "startChar": 63,
        "endLine": 35,
        "endChar": 78
      },
      "revId": "3de1dc328f9c8dee3a12e55b1d22d675662f453d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c265309_bfa1f6a7",
        "filename": "redfish-core/include/utils/telemetry_utils.hpp",
        "patchSetId": 6
      },
      "lineNbr": 40,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-07-23T10:30:56Z",
      "side": 1,
      "message": "There is dedicated method to do it (is_string)\n\nhttps://json.nlohmann.me/doxygen/classnlohmann_1_1basic__json_ab303d17366c26fca12242c7f8def1bb7.html\n\nAnyway better to do something like this:\n\nif (const std::string* value \u003d it-\u003eget_ptr\u003cconst std::string*\u003e()) {\n  res \u003d *value;\n}\n\nBecause get\u003cT\u003e is discouraged in bmcweb, in this case it will be case (type is checked), still using get_if will be consistent with other parts of bmcweb.",
      "range": {
        "startLine": 40,
        "startChar": 12,
        "endLine": 40,
        "endChar": 57
      },
      "revId": "3de1dc328f9c8dee3a12e55b1d22d675662f453d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e82e742b_17be9fba",
        "filename": "redfish-core/include/utils/telemetry_utils.hpp",
        "patchSetId": 6
      },
      "lineNbr": 40,
      "author": {
        "id": 1001026
      },
      "writtenOn": "2021-08-02T16:41:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8c265309_bfa1f6a7",
      "range": {
        "startLine": 40,
        "startChar": 12,
        "endLine": 40,
        "endChar": 57
      },
      "revId": "3de1dc328f9c8dee3a12e55b1d22d675662f453d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e359bd05_7694573a",
        "filename": "redfish-core/lib/metric_report.hpp",
        "patchSetId": 6
      },
      "lineNbr": 73,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-07-23T10:30:56Z",
      "side": 1,
      "message": "This should be moved to line 90, so in case of errors json response won\u0027t contain data.",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 73,
        "endChar": 50
      },
      "revId": "3de1dc328f9c8dee3a12e55b1d22d675662f453d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2eaf1c67_0e6b6c89",
        "filename": "redfish-core/lib/metric_report.hpp",
        "patchSetId": 6
      },
      "lineNbr": 73,
      "author": {
        "id": 1001026
      },
      "writtenOn": "2021-08-02T16:41:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e359bd05_7694573a",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 73,
        "endChar": 50
      },
      "revId": "3de1dc328f9c8dee3a12e55b1d22d675662f453d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}