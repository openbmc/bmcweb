{
  "comments": [
    {
      "key": {
        "uuid": "2a3ddf49_7079d14f",
        "filename": "http/http_response.hpp",
        "patchSetId": 2
      },
      "lineNbr": 151,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2021-02-02T14:31:07Z",
      "side": 1,
      "message": "we can use dynamic response body right?",
      "revId": "981051eaaf62b581ff6878bb747baef87a0d3cf9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1accb857_b24c9d14",
        "filename": "http/http_response.hpp",
        "patchSetId": 2
      },
      "lineNbr": 151,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2021-02-03T05:23:51Z",
      "side": 1,
      "message": "don\u0027t we need to create another response structure for dynamic body type?\nbecoz existing response body is of string type",
      "parentUuid": "2a3ddf49_7079d14f",
      "revId": "981051eaaf62b581ff6878bb747baef87a0d3cf9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4972038f_cc120e76",
        "filename": "http/http_response.hpp",
        "patchSetId": 2
      },
      "lineNbr": 151,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-03T05:39:56Z",
      "side": 1,
      "message": "Your patchset actually gave me the idea that if we had \"done\" callbacks, we wouldn\u0027t need to have the core take ownership of the string, which means we can use buffer body, and have flow control with it, which removes the need for dynamic body, like we do with websockets.  In fact, websockets could use a buffer interface too if we had callbacks when the write was done, which would fix the flow control issues there too.",
      "parentUuid": "1accb857_b24c9d14",
      "revId": "981051eaaf62b581ff6878bb747baef87a0d3cf9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62f02d92_d69296f2",
        "filename": "http/http_response.hpp",
        "patchSetId": 2
      },
      "lineNbr": 151,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2021-02-04T14:40:16Z",
      "side": 1,
      "message": "i agree we can use buffer_body..\ninitially i have tried to use buffer_body type instead of dynamic body but we need to enable chunked encoding for buffer body type as per HTTP 1.1\nits additional overhead and complicated again.\nso i understand that we can achieve same with dynamic_body easily and i feel for our use-case dynamic-body is apt",
      "parentUuid": "4972038f_cc120e76",
      "revId": "981051eaaf62b581ff6878bb747baef87a0d3cf9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1b577b7_e6d2b2f8",
        "filename": "http/http_response.hpp",
        "patchSetId": 2
      },
      "lineNbr": 151,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-04T17:17:16Z",
      "side": 1,
      "message": "\u003e i agree we can use buffer_body..\n\u003e initially i have tried to use buffer_body type instead of dynamic body but we need to enable chunked encoding for buffer body type as per HTTP 1.1\n\u003e its additional overhead and complicated again.\n\u003e so i understand that we can achieve same with dynamic_body easily and i feel for our use-case dynamic-body is apt\n\nI didn\u0027t think buffer body required chunked encoding.  Http1.1 doesn\u0027t require chunked encoding unless I\u0027m missing something.  Agreed that chunked encoding is more complexity than it\u0027s worth.",
      "parentUuid": "62f02d92_d69296f2",
      "revId": "981051eaaf62b581ff6878bb747baef87a0d3cf9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "397be55e_9982afdb",
        "filename": "http/http_response.hpp",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2021-02-03T05:23:51Z",
      "side": 1,
      "message": "i did not understand why do we need to store headers ?\nheaders sent only once before writing data right?",
      "revId": "981051eaaf62b581ff6878bb747baef87a0d3cf9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f0c48ee_98f7caa0",
        "filename": "http/http_response.hpp",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-03T05:39:56Z",
      "side": 1,
      "message": "We\u0027re converting the body to a different type here.  The first call to write will send the headers along with the first payload, so they need to be preserved.  Unfortunately, they\u0027re part of the body, and I wasn\u0027t able to get a fields reference type to work (it\u0027s not allowed).  and the way we organize this, we don\u0027t really know if the API in question is going to call write, until it does, so we can\u0027t send the headers ahead of time before the first call to write.\n\nHopefully that makes sense.",
      "parentUuid": "397be55e_9982afdb",
      "revId": "981051eaaf62b581ff6878bb747baef87a0d3cf9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}