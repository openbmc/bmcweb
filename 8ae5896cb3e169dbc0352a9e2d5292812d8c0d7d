{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "da3e4e3e_478f985a",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 4
      },
      "lineNbr": 804,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-05-24T21:21:44Z",
      "side": 1,
      "message": "Should we use association to link Partition and DIMMs instead?",
      "range": {
        "startLine": 804,
        "startChar": 12,
        "endLine": 804,
        "endChar": 30
      },
      "revId": "8ae5896cb3e169dbc0352a9e2d5292812d8c0d7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8037d7c7_111274b5",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 4
      },
      "lineNbr": 804,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-05-24T22:16:14Z",
      "side": 1,
      "message": "If I understand correctly, \"PersistentMemory\" is about byte-addressible PMEM (or NVDIMM) devices (like Intel Optane DIMM).\n\nSo for regular volatile memory there might not be partition data available? (this is the case on the system I\u0027m testing and it doesn\u0027t seem to feature persistent DIMM)\n\nThe code in this \"getDimmData\" function also seems to populate different information based on whether a memory resource is volatile DIMM or non-volatile DIMM.",
      "parentUuid": "da3e4e3e_478f985a",
      "range": {
        "startLine": 804,
        "startChar": 12,
        "endLine": 804,
        "endChar": 30
      },
      "revId": "8ae5896cb3e169dbc0352a9e2d5292812d8c0d7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e72a157_9861e03f",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 4
      },
      "lineNbr": 804,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-05-25T00:12:24Z",
      "side": 1,
      "message": "I don\u0027t have a full context about the physical devices, but what I meant here is in the original code, if there is a Partition Object whose path contains the specific DIMM, it will be considered as \"Partitions\" property of that DIMM.\n\nSo, does a partition object\u0027s path also end with the same dimm ID?",
      "parentUuid": "8037d7c7_111274b5",
      "range": {
        "startLine": 804,
        "startChar": 12,
        "endLine": 804,
        "endChar": 30
      },
      "revId": "8ae5896cb3e169dbc0352a9e2d5292812d8c0d7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ba3c806_6cf84393",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 4
      },
      "lineNbr": 804,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-05-25T03:06:40Z",
      "side": 1,
      "message": "For the following variables:\n\n1. dimmId passed in to this function\n2. the DIMM ID in a `PersistentMemory`\u0027s partition\u0027s object path\n3. the DIMM ID in a `Inventory.Item.Dimm`\u0027s object path\n4. the LocationCode property of a Dimm inventory\n\nI believe 1, 2, 3 must match while 4 don\u0027t have to agree with the top 3. Because 4 can be set in the SMBIOS, plus DIMM is a form factor, it doesn\u0027t matter if the memory stick is volatile or non-volatile, or a hybrid of volatile or non-volatile. Or in other words, a DIMM is a property of the socket, not the content in it.\n\nThe particular system I\u0027m testing on does not have any PersistentMemory devices. If I find any exceptions of what I claimed above I\u0027ll update here.",
      "parentUuid": "9e72a157_9861e03f",
      "range": {
        "startLine": 804,
        "startChar": 12,
        "endLine": 804,
        "endChar": 30
      },
      "revId": "8ae5896cb3e169dbc0352a9e2d5292812d8c0d7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd96ba64_6505043a",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 4
      },
      "lineNbr": 804,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-05-25T16:17:48Z",
      "side": 1,
      "message": "Please see my another comment.",
      "parentUuid": "7ba3c806_6cf84393",
      "range": {
        "startLine": 804,
        "startChar": 12,
        "endLine": 804,
        "endChar": 30
      },
      "revId": "8ae5896cb3e169dbc0352a9e2d5292812d8c0d7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f0d062e_0437cdef",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 4
      },
      "lineNbr": 804,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-25T16:52:50Z",
      "side": 1,
      "message": "I\u0027m quite confused...... This changeset is literally just fixing a bug, in the recommended way;  I\u0027m not sure what this has to do with associations at all, or why we\u0027re talking about persistent memory (ie nvdimm).\n\nArguably, listing a PersistentMemory.Partition object as a \"Dimm\" is incorrect, but I don\u0027t think has any effect on this patchset, or I\u0027m really missing something.",
      "parentUuid": "dd96ba64_6505043a",
      "range": {
        "startLine": 804,
        "startChar": 12,
        "endLine": 804,
        "endChar": 30
      },
      "revId": "8ae5896cb3e169dbc0352a9e2d5292812d8c0d7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efddfb1d_9918c953",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 4
      },
      "lineNbr": 804,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-05-25T18:03:44Z",
      "side": 1,
      "message": "I am not saying fixing comment error #12 is wrong. I just posted my question about Partitions. This fix will break partitions.\n\nI mention association because that\u0027s how we usually associate /xyz/openbmc_project/Inventory/Item/Partition1 and /xyz/openbmc_project/Inventory/Item/DIMM1, right?\n\nIf we know the existing Partition codes and comments are wrong, then we can delete them, right? Deleting partition codes also makes my change https://gerrit.openbmc.org/c/openbmc/bmcweb/+/53824 easier.",
      "parentUuid": "1f0d062e_0437cdef",
      "range": {
        "startLine": 804,
        "startChar": 12,
        "endLine": 804,
        "endChar": 30
      },
      "revId": "8ae5896cb3e169dbc0352a9e2d5292812d8c0d7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2dbdaa2_dcb6cb2d",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 4
      },
      "lineNbr": 804,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-05-25T18:39:04Z",
      "side": 1,
      "message": "Oh I see, the question is for a path like \"/xyz/openbmc_project/Inventory/Item/Dimm1/Partition1\", `filename()` can only return \"Partition1\".\n\nChecking every level (\"Parititon1\", then \"Dimm1\", then \"Item\", then \"Inventory\", etgc) should work. This would be the intent of the original code. Let me update this change.",
      "parentUuid": "1f0d062e_0437cdef",
      "range": {
        "startLine": 804,
        "startChar": 12,
        "endLine": 804,
        "endChar": 30
      },
      "revId": "8ae5896cb3e169dbc0352a9e2d5292812d8c0d7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ee7b8bc_3fc9b34b",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 4
      },
      "lineNbr": 804,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-25T19:15:24Z",
      "side": 1,
      "message": "\u003e If we know the existing Partition codes and comments are wrong, then we can delete them, right? Deleting partition codes also makes my change\n\nNot generally how that works.  It might be \"wrong\" internally, but give the correct response to the user.  There\u0027s an argument that might be made that OpenBMC doesn\u0027t have anything that implements these interfaces, but that\u0027s a different concern.\n\n\u003e Oh I see, the question is for a path like \"/xyz/openbmc_project/Inventory/Item/Dimm1/Partition1\", `filename()` can only return \"Partition1\".\n\n\nBut returning Partition1 seems like the right response here?  The mapper queried all partitions, we want to enumerate Partition1, not dimm1.",
      "parentUuid": "e2dbdaa2_dcb6cb2d",
      "range": {
        "startLine": 804,
        "startChar": 12,
        "endLine": 804,
        "endChar": 30
      },
      "revId": "8ae5896cb3e169dbc0352a9e2d5292812d8c0d7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2a29c31_40a0b996",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 4
      },
      "lineNbr": 804,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-05-27T22:42:01Z",
      "side": 1,
      "message": "But we want Partition1 and Partition2 to be part of the properties of dimm1.\n\n\n```\n{\n    \"@odata.id\": \"/redfish/v1/Systems/system/Memory/dimm1\",\n    \"@odata.type\": \"#Memory.v1_11_0.Memory\",\n    \"Regions\": [\n        { \n            // from partition1\n            \"MemoryClassification\": \"Volatile\",\n            \"OffsetMiB\": 0,\n            \"PassphraseEnabled\": false,\n            \"RegionId\": \"\",\n            \"SizeMiB\": 1024\n        },\n        { \n            // from partition2\n            \"MemoryClassification\": \"Volatile\",\n            \"OffsetMiB\": 0,\n            \"PassphraseEnabled\": false,\n            \"RegionId\": \"\",\n            \"SizeMiB\": 1024\n        }\n    ],\n}\n```",
      "parentUuid": "8ee7b8bc_3fc9b34b",
      "range": {
        "startLine": 804,
        "startChar": 12,
        "endLine": 804,
        "endChar": 30
      },
      "revId": "8ae5896cb3e169dbc0352a9e2d5292812d8c0d7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8df6433_5deadb0a",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 4
      },
      "lineNbr": 807,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-24T17:20:44Z",
      "side": 1,
      "message": "Common error #12",
      "range": {
        "startLine": 807,
        "startChar": 0,
        "endLine": 807,
        "endChar": 35
      },
      "revId": "8ae5896cb3e169dbc0352a9e2d5292812d8c0d7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bad80ecd_0605d81f",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 4
      },
      "lineNbr": 807,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-05-24T21:23:33Z",
      "side": 1,
      "message": "I thought Sui is trying to solve the existing error (#12) here.",
      "parentUuid": "c8df6433_5deadb0a",
      "range": {
        "startLine": 807,
        "startChar": 0,
        "endLine": 807,
        "endChar": 35
      },
      "revId": "8ae5896cb3e169dbc0352a9e2d5292812d8c0d7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "231313cc_9c8ea33f",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 4
      },
      "lineNbr": 807,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-05-24T22:16:14Z",
      "side": 1,
      "message": "Yeah somehow trying to resolve common error #12 and introduced common error #12 ..\nWill use the matching \"filename()\" method in the object path class.",
      "parentUuid": "bad80ecd_0605d81f",
      "range": {
        "startLine": 807,
        "startChar": 0,
        "endLine": 807,
        "endChar": 35
      },
      "revId": "8ae5896cb3e169dbc0352a9e2d5292812d8c0d7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d08663d_deb79cf5",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 4
      },
      "lineNbr": 807,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-25T14:57:18Z",
      "side": 1,
      "message": "\u003e I thought Sui is trying to solve the existing error (#12) here.\n\nHe was, but still kept the common error in the code.",
      "parentUuid": "231313cc_9c8ea33f",
      "range": {
        "startLine": 807,
        "startChar": 0,
        "endLine": 807,
        "endChar": 35
      },
      "revId": "8ae5896cb3e169dbc0352a9e2d5292812d8c0d7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd8c2204_1343ad1e",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 4
      },
      "lineNbr": 816,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-24T17:20:44Z",
      "side": 1,
      "message": "This relies on a naming convention that we can\u0027t enforce in bmcweb.",
      "range": {
        "startLine": 816,
        "startChar": 0,
        "endLine": 816,
        "endChar": 33
      },
      "revId": "8ae5896cb3e169dbc0352a9e2d5292812d8c0d7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "53ce39cf_bb712a4b",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 4
      },
      "lineNbr": 816,
      "author": {
        "id": 1000500
      },
      "writtenOn": "2022-05-24T22:16:14Z",
      "side": 1,
      "message": "Switched to using sdbusplus::message::object_path::filename to avoid this problem.",
      "parentUuid": "cd8c2204_1343ad1e",
      "range": {
        "startLine": 816,
        "startChar": 0,
        "endLine": 816,
        "endChar": 33
      },
      "revId": "8ae5896cb3e169dbc0352a9e2d5292812d8c0d7d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}