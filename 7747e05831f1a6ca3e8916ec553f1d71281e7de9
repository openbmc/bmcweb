{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "14ebd42c_1b514bbd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-10-31T15:41:11Z",
      "side": 1,
      "message": "What is \"redfish test\"?",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 59,
        "endChar": 27
      },
      "revId": "7747e05831f1a6ca3e8916ec553f1d71281e7de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbb689b1_27608634",
        "filename": "http/app.hpp",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-10-26T06:53:23Z",
      "side": 1,
      "message": "After your changes it is still possible to use BMCWEB_ROUTE? Why new macro was added instead of changing existing one?",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 33,
        "endChar": 31
      },
      "revId": "7747e05831f1a6ca3e8916ec553f1d71281e7de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf35b8e5_e5c4cad6",
        "filename": "http/app.hpp",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-10-26T16:27:35Z",
      "side": 1,
      "message": "Yes, because not every route is a Redfish route. For example, web socket routes.\n\nReviewers should reject BMCWEB_ROUTE for Redfish resources after this change is merged. But non-redfish route can still use BMCWEB_ROUTE",
      "parentUuid": "bbb689b1_27608634",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 33,
        "endChar": 31
      },
      "revId": "7747e05831f1a6ca3e8916ec553f1d71281e7de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d619eff0_95354f9b",
        "filename": "http/app.hpp",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-10-31T15:41:11Z",
      "side": 1,
      "message": "Is there a way to avoid the macro here?  They\u0027re technically disallowed by the coding standard.  The macro on line 27 was only allowed because it predates bmcweb (it came from crow).\n\nPlease follow the coding standard if you\u0027re able.  If you\u0027re not able, please provide documentation as to why (wither in an inline comment or in the commit message).",
      "parentUuid": "cf35b8e5_e5c4cad6",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 33,
        "endChar": 31
      },
      "revId": "7747e05831f1a6ca3e8916ec553f1d71281e7de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7f068c5_5481c0c2",
        "filename": "http/app.hpp",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-11-14T09:29:49Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "d619eff0_95354f9b",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 33,
        "endChar": 31
      },
      "revId": "7747e05831f1a6ca3e8916ec553f1d71281e7de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "558a2b7a_9f5f97ac",
        "filename": "http/routing.hpp",
        "patchSetId": 4
      },
      "lineNbr": 1188,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-10-26T06:53:23Z",
      "side": 1,
      "message": "nit: This is a good place to use auto. If you have to add type on the right side of the expression you don\u0027t need to repeat it on the left side.",
      "range": {
        "startLine": 1188,
        "startChar": 8,
        "endLine": 1188,
        "endChar": 30
      },
      "revId": "7747e05831f1a6ca3e8916ec553f1d71281e7de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3712d4fc_fd737aa1",
        "filename": "http/routing.hpp",
        "patchSetId": 4
      },
      "lineNbr": 1188,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-10-26T16:23:13Z",
      "side": 1,
      "message": "Yes, but I just follow the existing code. I can fix existing in another patch.",
      "parentUuid": "558a2b7a_9f5f97ac",
      "range": {
        "startLine": 1188,
        "startChar": 8,
        "endLine": 1188,
        "endChar": 30
      },
      "revId": "7747e05831f1a6ca3e8916ec553f1d71281e7de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0560da95_9e41f3fa",
        "filename": "http/routing.hpp",
        "patchSetId": 4
      },
      "lineNbr": 1188,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-11-14T09:29:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3712d4fc_fd737aa1",
      "range": {
        "startLine": 1188,
        "startChar": 8,
        "endLine": 1188,
        "endChar": 30
      },
      "revId": "7747e05831f1a6ca3e8916ec553f1d71281e7de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a455ceea_f4f07608",
        "filename": "redfish-core/src/privileges.cpp",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-10-26T06:53:23Z",
      "side": 1,
      "message": "nit: Function above is marked as constexpr. You should be able to make Privileges::mappings also constexpr.",
      "revId": "7747e05831f1a6ca3e8916ec553f1d71281e7de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e310ad9_ea1dc62f",
        "filename": "redfish-core/src/privileges.cpp",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-10-26T16:27:35Z",
      "side": 1,
      "message": "I intentionally made this non-const. Making |mapping| be able to change at runtime is the main idea in https://github.com/openbmc/docs/blob/master/designs/redfish-authorization.md.\n\nThe initialization function was made constexpr since in the design we proposed to implement base privilege registry (base mapping) at compile time. \n\nThe |mapping| object will change at runtime in the following commit\n\nLet me know if it makes sense :)",
      "parentUuid": "a455ceea_f4f07608",
      "revId": "7747e05831f1a6ca3e8916ec553f1d71281e7de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "378cb48f_06b74bcf",
        "filename": "redfish-core/src/privileges.cpp",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-11-14T09:29:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0e310ad9_ea1dc62f",
      "revId": "7747e05831f1a6ca3e8916ec553f1d71281e7de9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}