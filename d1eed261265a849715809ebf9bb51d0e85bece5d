{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "22a1f7be_d6da4081",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-03T20:14:52Z",
      "side": 1,
      "message": "Bunch of minor stuff.  Looking pretty clean!",
      "revId": "d1eed261265a849715809ebf9bb51d0e85bece5d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5c8376b_2140a302",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-03T20:14:42Z",
      "side": 1,
      "message": "I don\u0027t see a usage of this?",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 18
      },
      "revId": "d1eed261265a849715809ebf9bb51d0e85bece5d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90eb69f6_191e50e8",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-03T21:26:34Z",
      "side": 1,
      "message": "Reran IWYU.\n\nWe have to keep this. It says\n\n```\n../redfish-core/include/utils/query_param.hpp should add these lines:\n#include \u003ccompare\u003e                                    // for operator\u003e, comp...\n```\n\nMy guess is we have an operator overload which needs this header.",
      "parentUuid": "c5c8376b_2140a302",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 18
      },
      "revId": "d1eed261265a849715809ebf9bb51d0e85bece5d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83f1e8d6_8fba33a6",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-04T17:21:37Z",
      "side": 1,
      "message": "I still think it\u0027s incorrect if we\u0027re #including it, but there\u0027s no usage, but sure, it\u0027s not that big of a deal.",
      "parentUuid": "90eb69f6_191e50e8",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 18
      },
      "revId": "d1eed261265a849715809ebf9bb51d0e85bece5d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a755cda5_bafed9f5",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 80,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-03T20:14:42Z",
      "side": 1,
      "message": "nit: should we make this match std containers and make this emplace()?",
      "range": {
        "startLine": 80,
        "startChar": 20,
        "endLine": 80,
        "endChar": 36
      },
      "revId": "d1eed261265a849715809ebf9bb51d0e85bece5d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10f4848e_b63846d2",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 80,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-03T21:26:34Z",
      "side": 1,
      "message": "Done. Also simplified the code via std::map::emplace()",
      "parentUuid": "a755cda5_bafed9f5",
      "range": {
        "startLine": 80,
        "startChar": 20,
        "endLine": 80,
        "endChar": 36
      },
      "revId": "d1eed261265a849715809ebf9bb51d0e85bece5d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a280926c_805723c7",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 111,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-03T20:14:42Z",
      "side": 1,
      "message": "would it make sense to use empty() as the same thing as \"isSelected\"?  We could keep the same behavior and drop a bool from the struct.\n\nJust a thought that could make it simpler, not required.",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 111,
        "endChar": 5
      },
      "revId": "d1eed261265a849715809ebf9bb51d0e85bece5d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f781ef7_0c5eb993",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 111,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-03T21:26:34Z",
      "side": 1,
      "message": "Oh, you made a similar comment in previous patchset. I replied but I guess you missed that.\n\nWe do need a boolean to handle cases like properties\u003d{\"/a\", \"/a/b\"}. Where \"a\" has a child but we still need to select \"a\".",
      "parentUuid": "a280926c_805723c7",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 111,
        "endChar": 5
      },
      "revId": "d1eed261265a849715809ebf9bb51d0e85bece5d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "02f6164c_301e71da",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 111,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-04T17:21:37Z",
      "side": 1,
      "message": "AH, I missed that.  ACK.  Makes sense.",
      "parentUuid": "2f781ef7_0c5eb993",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 111,
        "endChar": 5
      },
      "revId": "d1eed261265a849715809ebf9bb51d0e85bece5d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa666eea_eda61de2",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-03T20:14:42Z",
      "side": 1,
      "message": "nit. When declaring a std::map in a c++20 daemon, always fill in the third argument as less\u003c\u003e.  This means that string_view lookups will be possible (even if they aren\u0027t used until the future).\n\nOptionally, you could also make your find() call work with string_view, but up to you.",
      "revId": "d1eed261265a849715809ebf9bb51d0e85bece5d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a308397_7ea73ad8",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-03T21:26:34Z",
      "side": 1,
      "message": "Oh, that\u0027s really cool. I will do that.\n\nThis is aligned with https://stackoverflow.com/questions/35525777/use-of-string-view-for-map-lookup\n\nDone",
      "parentUuid": "fa666eea_eda61de2",
      "revId": "d1eed261265a849715809ebf9bb51d0e85bece5d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b669885_231eefd3",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 157,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-03T20:14:42Z",
      "side": 1,
      "message": "I don\u0027t think you need this conditional;  substr(0, std::string_view::npos) will return to the end of the string to make this code easier to write.",
      "range": {
        "startLine": 156,
        "startChar": 12,
        "endLine": 157,
        "endChar": 13
      },
      "revId": "d1eed261265a849715809ebf9bb51d0e85bece5d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d970bb7_54e09fa2",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 157,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-08-03T21:26:34Z",
      "side": 1,
      "message": "Yes. Realized it. Done",
      "parentUuid": "4b669885_231eefd3",
      "range": {
        "startLine": 156,
        "startChar": 12,
        "endLine": 157,
        "endChar": 13
      },
      "revId": "d1eed261265a849715809ebf9bb51d0e85bece5d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}