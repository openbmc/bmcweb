{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "53985f21_82d461c4",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-03-17T21:59:11Z",
      "side": 1,
      "message": "nit, for a split of two, you generally want to use find.\n\nAlso, I suspect you want to search on \":\", not \" \"",
      "range": {
        "startLine": 199,
        "startChar": 0,
        "endLine": 199,
        "endChar": 72
      },
      "revId": "fb57f264a25f8d14bc3291e05311508b63a4c855",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2a21716_089d4a28",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-03-17T22:47:58Z",
      "side": 1,
      "message": "The entire targeted string is going to be \"Location: /redfish/v1/{something}\".  I also wanted to make sure the split gave me the URI by itself so that I could correctly parse it as a url.",
      "parentUuid": "53985f21_82d461c4",
      "range": {
        "startLine": 199,
        "startChar": 0,
        "endLine": 199,
        "endChar": 72
      },
      "revId": "fb57f264a25f8d14bc3291e05311508b63a4c855",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "943ebf30_e0d2fe47",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-03-21T15:54:39Z",
      "side": 1,
      "message": "yep.  same advice applies.\n\nsize_t npos \u003d strHeader-\u003efind(\u0027 \u0027);\n\n\nAlthough looking at this again, this might be one of the few correct uses of starts_with.\nconstexpr std::string_view location \u003d \"Location: \";\nif (boost::starts_with(*strHeader, location){\n   std::string header \u003d strHeader.substr(location.size();\n   addPrefixToStringItme(header, prefix);\n   *strHeader \u003d location + header;\n}",
      "parentUuid": "f2a21716_089d4a28",
      "range": {
        "startLine": 199,
        "startChar": 0,
        "endLine": 199,
        "endChar": 72
      },
      "revId": "fb57f264a25f8d14bc3291e05311508b63a4c855",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a49312a_3ae4d54f",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-03-27T23:40:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "943ebf30_e0d2fe47",
      "range": {
        "startLine": 199,
        "startChar": 0,
        "endLine": 199,
        "endChar": 72
      },
      "revId": "fb57f264a25f8d14bc3291e05311508b63a4c855",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72d060fa_eb9632de",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 227,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-03-17T21:59:11Z",
      "side": 1,
      "message": "The only place these show up is in TaskService, and we don\u0027t aggregate TaskService?",
      "revId": "fb57f264a25f8d14bc3291e05311508b63a4c855",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4345fea9_9a5ed52b",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 227,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-03-17T22:47:58Z",
      "side": 1,
      "message": "At least from the schema, HttpHeaders appear under /redfish/v1/EventService/Subscriptions/{EventDestinationId}\n/redfish/v1/TaskService/Tasks/{TaskId}\n\nWhile we don\u0027t aggregate TaskService, we do aggregate Tasks",
      "parentUuid": "72d060fa_eb9632de",
      "revId": "fb57f264a25f8d14bc3291e05311508b63a4c855",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91f5350c_030fb388",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 227,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-03-21T15:54:39Z",
      "side": 1,
      "message": "hmmmmm.  I wonder if we should be aggregating tasks.  That ship has probably sailed though.",
      "parentUuid": "4345fea9_9a5ed52b",
      "revId": "fb57f264a25f8d14bc3291e05311508b63a4c855",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b0b6ee10_99d0a74d",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 227,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-03-27T23:40:57Z",
      "side": 1,
      "message": "I think we definitely want to aggregate tasks.  For instance, the LogService.CollectDiagnosticData Actions under LogServices spawn tasks.  If we don\u0027t aggregate tasks then we wouldn\u0027t be able to collect diagnostic dumps from satellite BMCs.",
      "parentUuid": "91f5350c_030fb388",
      "revId": "fb57f264a25f8d14bc3291e05311508b63a4c855",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "041b9074_bd189522",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 228,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-03-17T21:59:11Z",
      "side": 1,
      "message": "This needs to check the odata.type (or the URI, your choice) as well.  There are multiple HttpHeaders properties.",
      "range": {
        "startLine": 228,
        "startChar": 31,
        "endLine": 228,
        "endChar": 42
      },
      "revId": "fb57f264a25f8d14bc3291e05311508b63a4c855",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ebacffd_001e5302",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 228,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-03-17T22:47:58Z",
      "side": 1,
      "message": "In the schema I only see \"HttpHeaders\" being a property of EventDestination, Job, and Task.  If the current response is getting aggregated in the first place then we want to attempt to perform prefix fixing.\n\nIf you\u0027re instead referring to the individual HTTP headers contained by HttpHeaders then addPrefixToHeadersInResp() makes sure that the \"Location\" header is the only one we\u0027d attempt to fix.  This is consistent with how addAggregatedHeaders() only attempts to fix the \"Location\" header.",
      "parentUuid": "041b9074_bd189522",
      "range": {
        "startLine": 228,
        "startChar": 31,
        "endLine": 228,
        "endChar": 42
      },
      "revId": "fb57f264a25f8d14bc3291e05311508b63a4c855",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af050391_76420a85",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 228,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-03-21T15:54:39Z",
      "side": 1,
      "message": "We shouldn\u0027t aggregate EventDestination headers for sure.  Job and task are debatable how an aggregator should handle them.\n\nI\u0027d still like some level of type check here before we mess with the value.",
      "parentUuid": "1ebacffd_001e5302",
      "range": {
        "startLine": 228,
        "startChar": 31,
        "endLine": 228,
        "endChar": 42
      },
      "revId": "fb57f264a25f8d14bc3291e05311508b63a4c855",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "582b72bd_dcbde69c",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 228,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-03-27T23:40:57Z",
      "side": 1,
      "message": "As it currently stands, all of the headers under the \"HttpHeaders\" property are going to be included as part of the response.  We\u0027re just talking about attempting to apply the aggregation prefix if there is a Location header and it is for a Redfish URI of an aggregated resource.\n\nThis makes it consistent with what we would already be returning in the actual Location header thanks to addAggregatedHeaders().  I\u0027m not understanding why we need some sort of type check here.  I feel like we already performed that check at the start of the aggregation flow when it was decided whether or not to aggregate the request.  If we\u0027re processing an aggregated response then we should want to attempt prefix fixing on any Redfish URI.",
      "parentUuid": "af050391_76420a85",
      "range": {
        "startLine": 228,
        "startChar": 31,
        "endLine": 228,
        "endChar": 42
      },
      "revId": "fb57f264a25f8d14bc3291e05311508b63a4c855",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}