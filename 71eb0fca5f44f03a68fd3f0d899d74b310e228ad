{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0c6c18ff_474b5fb5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 50
      },
      "lineNbr": 34,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-08-17T07:51:51Z",
      "side": 1,
      "message": "nit: This test scenarios may be valuable in the future. It would be nice to keep then in form that may be executed or at least under version control file like README.",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bec61d74_d1cff80c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 50
      },
      "lineNbr": 62,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-08-17T07:51:51Z",
      "side": 1,
      "message": "What if one of the components is restarted? For example only bmcweb or only service that stores SNMP subscriptions. If this two additional scenarios will work fine it should prove that there are no synchronization issues.",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 62,
        "endChar": 12
      },
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94d3fb2d_40628ed4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 50
      },
      "lineNbr": 0,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-08-16T17:20:23Z",
      "side": 1,
      "message": "I didn\u0027t review SNMP specific base code but found few issues with implementation which needs fix. Also suggested to move SNMP protocol code to separate file which makes easy for OEM protocol addition(Ex: Kafka) and also other future protocol additions. ",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6167c9a_47877c49",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 167,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-08-16T17:20:23Z",
      "side": 1,
      "message": "BUG: All SNMP subscriptions also stored in bmcweb persistent store as per current implementation. So what if SNMP service is restarted after few SNMP traps addition? Bmcweb EventService will have those newly added entries and SNMP service will not. Who will take care of sync between them in either case( Note you need handle both cases - Only SNMP service restart and only bmcweb service restart  and both of them restarts)",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af93a03f_c2e0daa7",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 167,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2022-08-17T03:45:12Z",
      "side": 1,
      "message": "\u003e Bmcweb EventService will have those newly added entries and SNMP service will not. Who will take care of sync between them in either case\n\nPlease see line 159. When these newly added entries are not Found in the SNMP service, we will delete the subscription in bmcweb EventService.\n\nIn fact, in the implementation of bmcweb SNMP subscriptionï¼Œwe only use the bmc persistent data to store the \"context\" property, which does not exist in the SNMP service. \nSNMP service is the owner of SNMP subscriptions. When we get SNMP subscription properties, we will get them from SNMP service instead of bmcweb EventService. Therefore, it is not necessary to sync between the bmcweb EventService and the SNMP service. We only need the entries in the SNMP service.",
      "parentUuid": "f6167c9a_47877c49",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09dbb505_b1f47bab",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 291,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-08-16T17:20:23Z",
      "side": 1,
      "message": "Can you move All snmpTrap specific code to separate file and minimize the changes in existing eventService. Since SNMP protocol follow different code flow completely, Its good to have it separate file. Also in future if we add more mote protocol support to EventService, No need to touch other protocol data.",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 291,
        "endChar": 1
      },
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f8ae287_8f2de09b",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 583,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-08-16T17:20:23Z",
      "side": 1,
      "message": "Looks like formatting issue. Run clang-format once.",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5fdce9a6_4feaa3e2",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 583,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2022-08-17T03:45:12Z",
      "side": 1,
      "message": "This is the correct format. I have already run clang-format",
      "parentUuid": "1f8ae287_8f2de09b",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1350f1f4_262bd0f9",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 603,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-08-16T17:20:23Z",
      "side": 1,
      "message": "This check should be moved above as there is use of protocol at line 593 before check.",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65858cf0_1c4063ad",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 974,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-08-16T17:20:23Z",
      "side": 1,
      "message": "BUG: what if above dbus call fails due to some reasons? SNMP service will have subscription entry and it will be sending traps but bmcweb event service subscription info is deleted and user will not see it anymore even though traps are being sent.",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70510a96_dc220c13",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 974,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2022-08-17T03:45:12Z",
      "side": 1,
      "message": "\u003e and user will not see it anymore \n\nNo, user will see it. Please see the getSnmpTrapClient function. we get the SNMP subscription entry from dbus instead of bmcweb event service.",
      "parentUuid": "65858cf0_1c4063ad",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}