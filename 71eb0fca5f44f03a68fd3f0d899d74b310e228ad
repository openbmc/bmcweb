{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0c6c18ff_474b5fb5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 50
      },
      "lineNbr": 34,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-08-17T07:51:51Z",
      "side": 1,
      "message": "nit: This test scenarios may be valuable in the future. It would be nice to keep then in form that may be executed or at least under version control file like README.",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0577fb3f_a5d66630",
        "filename": "/COMMIT_MSG",
        "patchSetId": 50
      },
      "lineNbr": 34,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2022-08-17T09:03:31Z",
      "side": 1,
      "message": "Can we put these in redfish-cheatsheet.md: https://github.com/openbmc/docs/blob/master/REDFISH-cheatsheet.md",
      "parentUuid": "0c6c18ff_474b5fb5",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b41cb6b8_cec488e5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 50
      },
      "lineNbr": 34,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-08-18T12:42:27Z",
      "side": 1,
      "message": "Sounds good",
      "parentUuid": "0577fb3f_a5d66630",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f65d730_d15f01e5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 50
      },
      "lineNbr": 34,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2022-11-02T03:33:58Z",
      "side": 1,
      "message": "I added the test cases to REDFISH-cheatsheet.md:\nhttps://gerrit.openbmc.o rg/c/openbmc/docs/+/58402",
      "parentUuid": "b41cb6b8_cec488e5",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bec61d74_d1cff80c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 50
      },
      "lineNbr": 62,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-08-17T07:51:51Z",
      "side": 1,
      "message": "What if one of the components is restarted? For example only bmcweb or only service that stores SNMP subscriptions. If this two additional scenarios will work fine it should prove that there are no synchronization issues.",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 62,
        "endChar": 12
      },
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "472b91b5_fbd2b57a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 50
      },
      "lineNbr": 62,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2022-08-17T09:03:31Z",
      "side": 1,
      "message": "SNMP service is the owner of SNMP subscriptions. Please see this comment: \nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/38599/comments/f6167c9a_47877c49\n\nOnly the entries in SNMP service are useful. We dont need to sync between the bmcweb EventService and the SNMP service.",
      "parentUuid": "bec61d74_d1cff80c",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 62,
        "endChar": 12
      },
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "273c7e61_4d55694d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 50
      },
      "lineNbr": 62,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-08-18T12:42:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "472b91b5_fbd2b57a",
      "range": {
        "startLine": 62,
        "startChar": 0,
        "endLine": 62,
        "endChar": 12
      },
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94d3fb2d_40628ed4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 50
      },
      "lineNbr": 0,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-08-16T17:20:23Z",
      "side": 1,
      "message": "I didn\u0027t review SNMP specific base code but found few issues with implementation which needs fix. Also suggested to move SNMP protocol code to separate file which makes easy for OEM protocol addition(Ex: Kafka) and also other future protocol additions. ",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12a87a45_7d4be13a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 50
      },
      "lineNbr": 0,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2022-11-02T03:33:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "94d3fb2d_40628ed4",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de630cb4_0b575365",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 159,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-08-17T09:30:38Z",
      "side": 1,
      "message": "This also not needed as per https://gerrit.openbmc.org/c/openbmc/bmcweb/+/38599/comments/f6167c9a_47877c49 comment.\n\nIf we are adding data to bmcweb persistent store means, Must need synchronization.",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f094871e_b6ab79bb",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 159,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2022-08-18T01:37:01Z",
      "side": 1,
      "message": "\u003e If we are adding data to bmcweb persistent store means, Must need synchronization.\n\nIs there any document or Spec specifying this？\nThe current code was decided after a long discussion. Please see:\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/38599/comments/11c71e49_c5f3afb7\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/38599/comments/666bcc52_42d14651",
      "parentUuid": "de630cb4_0b575365",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4f84054_0a7a2ead",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 159,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2022-11-02T03:33:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f094871e_b6ab79bb",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6167c9a_47877c49",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 167,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-08-16T17:20:23Z",
      "side": 1,
      "message": "BUG: All SNMP subscriptions also stored in bmcweb persistent store as per current implementation. So what if SNMP service is restarted after few SNMP traps addition? Bmcweb EventService will have those newly added entries and SNMP service will not. Who will take care of sync between them in either case( Note you need handle both cases - Only SNMP service restart and only bmcweb service restart  and both of them restarts)",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af93a03f_c2e0daa7",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 167,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2022-08-17T03:45:12Z",
      "side": 1,
      "message": "\u003e Bmcweb EventService will have those newly added entries and SNMP service will not. Who will take care of sync between them in either case\n\nPlease see line 159. When these newly added entries are not Found in the SNMP service, we will delete the subscription in bmcweb EventService.\n\nIn fact, in the implementation of bmcweb SNMP subscription，we only use the bmc persistent data to store the \"context\" property, which does not exist in the SNMP service. \nSNMP service is the owner of SNMP subscriptions. When we get SNMP subscription properties, we will get them from SNMP service instead of bmcweb EventService. Therefore, it is not necessary to sync between the bmcweb EventService and the SNMP service. We only need the entries in the SNMP service.",
      "parentUuid": "f6167c9a_47877c49",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00f4d541_6e6cc48b",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 167,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-08-17T09:30:38Z",
      "side": 1,
      "message": "\u003e \u003e Bmcweb EventService will have those newly added entries and SNMP service will not. Who will take care of sync between them in either case\n\u003e \n\u003e Please see line 159. When these newly added entries are not Found in the SNMP service, we will delete the subscription in bmcweb EventService.\nNo, That won\u0027t work as expected. Delete subscriptions ( Function call getSnmpTrapClient) as per current logic works only if user tries get individual subscriptions (/redfish/v1/EventService/Subscriptions/snmp\u003cx\u003e ) information. What if user doesn\u0027t get individual snmp subscription and only get subscriptions collections. This code logic won\u0027t work as expected as it stands. \n\u003e \n\u003e In fact, in the implementation of bmcweb SNMP subscription，we only use the bmc persistent data to store the \"context\" property, which does not exist in the SNMP service. \n\u003e SNMP service is the owner of SNMP subscriptions. When we get SNMP subscription properties, we will get them from SNMP service instead of bmcweb EventService. Therefore, it is not necessary to sync between the bmcweb EventService and the SNMP service. We only need the entries in the SNMP service.\n\n - What is use of \"context\" in this SNMP subscription case? If its not forwarded/used by SNMP service, I don\u0027t see a use of storing \"context\".\n - As per your comment above, no need of storing any SNMP data in bmcweb persistent store. bmcweb can always get all live information from SNMP service. So changes to addSubscription() is not needed.",
      "parentUuid": "af93a03f_c2e0daa7",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ba43c5c_f4b9a2e5",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 167,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2022-08-18T01:37:01Z",
      "side": 1,
      "message": "\u003e No, That won\u0027t work as expected. Delete subscriptions ( Function call getSnmpTrapClient) as per current logic works only if user tries get individual subscriptions (/redfish/v1/EventService/Subscriptions/snmp\u003cx\u003e ) information. What if user doesn\u0027t get individual snmp subscription and only get subscriptions collections. This code logic won\u0027t work as expected as it stands. \n\nNo,This code will work as expected. We get SNMP subscriptions from dbus. SNMP subscription from bmcweb persistent store will be filtered out. Please see line 440. \n\n\u003e What is use of \"context\" in this SNMP subscription case? If its not forwarded/used by SNMP service, I don\u0027t see a use of storing \"context\".\n\nThe \"context\" is not necessary for SNMP service, but it is necessary for redfish. Without it, the redfish Validator will fail. Please see this discussion：\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/38599/comments/9407982f_e9c9ef31 \n\n\u003e As per your comment above, no need of storing any SNMP data in bmcweb persistent store. bmcweb can always get all live information from SNMP service. So changes to addSubscription() is not needed.\n\nThat\u0027s what we did. But, for the above reasons, we need save the \"context\" in the bmcweb persistent store",
      "parentUuid": "00f4d541_6e6cc48b",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e26b3511_423670c5",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 167,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-08-18T12:42:27Z",
      "side": 1,
      "message": "I looked at the tested section and it looks like deleting subscription works fine. Testcase 6 performs delete using dbus call which is not visible in event service and get produces correct result. I don\u0027t see any issues.",
      "parentUuid": "9ba43c5c_f4b9a2e5",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c11cb7a_48934530",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 167,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2022-11-02T03:33:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e26b3511_423670c5",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6a98937_1a562421",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 190,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-08-17T09:30:38Z",
      "side": 1,
      "message": "As per https://gerrit.openbmc.org/c/openbmc/bmcweb/+/38599/comments/f6167c9a_47877c49 comment, This is not needed.\n\nIf we are adding data to bmcweb persistent store means, Must need synchronization.",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "adfa3a4a_e8406164",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 190,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2022-08-18T01:37:01Z",
      "side": 1,
      "message": "We need this to save the \"context\" property.\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/38599/comments/9407982f_e9c9ef31 \nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/38599/comments/11c71e49_c5f3afb7\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/38599/comments/666bcc52_42d14651",
      "parentUuid": "b6a98937_1a562421",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e68e31e_4ab16f31",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 190,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2022-11-02T03:33:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "adfa3a4a_e8406164",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09dbb505_b1f47bab",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 291,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-08-16T17:20:23Z",
      "side": 1,
      "message": "Can you move All snmpTrap specific code to separate file and minimize the changes in existing eventService. Since SNMP protocol follow different code flow completely, Its good to have it separate file. Also in future if we add more mote protocol support to EventService, No need to touch other protocol data.",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 291,
        "endChar": 1
      },
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6a3437d_39c3f82d",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 291,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2022-08-17T09:03:31Z",
      "side": 1,
      "message": "\u003e Can you move All snmpTrap specific code to separate file and minimize the changes in existing eventService\n\nI agree with you. I will move those code to separate file.",
      "parentUuid": "09dbb505_b1f47bab",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 291,
        "endChar": 1
      },
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6dfac78d_40b94418",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 291,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-08-17T09:30:38Z",
      "side": 1,
      "message": "Thanks",
      "parentUuid": "e6a3437d_39c3f82d",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 291,
        "endChar": 1
      },
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d000085_8bfea81d",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 291,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2022-11-02T03:33:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6dfac78d_40b94418",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 291,
        "endChar": 1
      },
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f8ae287_8f2de09b",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 583,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-08-16T17:20:23Z",
      "side": 1,
      "message": "Looks like formatting issue. Run clang-format once.",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5fdce9a6_4feaa3e2",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 583,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2022-08-17T03:45:12Z",
      "side": 1,
      "message": "This is the correct format. I have already run clang-format",
      "parentUuid": "1f8ae287_8f2de09b",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7471857a_66515626",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 583,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-08-17T09:30:38Z",
      "side": 1,
      "message": "NIT: Looks like its better to wrap first condition also in ()..\n\nif ((*subscriptionType !\u003d \"RedfishEvent\") \u0026\u0026 (*subscriptionType !\u003d \"SNMPTrap\"))",
      "parentUuid": "5fdce9a6_4feaa3e2",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1350f1f4_262bd0f9",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 603,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-08-16T17:20:23Z",
      "side": 1,
      "message": "This check should be moved above as there is use of protocol at line 593 before check.",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f00d717_e88d15f8",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 603,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2022-11-02T03:33:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1350f1f4_262bd0f9",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65858cf0_1c4063ad",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 974,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-08-16T17:20:23Z",
      "side": 1,
      "message": "BUG: what if above dbus call fails due to some reasons? SNMP service will have subscription entry and it will be sending traps but bmcweb event service subscription info is deleted and user will not see it anymore even though traps are being sent.",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70510a96_dc220c13",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 974,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2022-08-17T03:45:12Z",
      "side": 1,
      "message": "\u003e and user will not see it anymore \n\nNo, user will see it. Please see the getSnmpTrapClient function. we get the SNMP subscription entry from dbus instead of bmcweb event service.",
      "parentUuid": "65858cf0_1c4063ad",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c30a7652_a512f3c9",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 974,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-08-17T09:30:38Z",
      "side": 1,
      "message": "No, That won\u0027t work as expected. Delete subscriptions ( Function call getSnmpTrapClient) as per current logic works only if user tries get individual subscriptions (/redfish/v1/EventService/Subscriptions/snmp\u003cx\u003e ) information. What if user doesn\u0027t get individual snmp subscription and only get subscriptions collections. This code logic won\u0027t work as expected as it stands.",
      "parentUuid": "70510a96_dc220c13",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f08bd8ba_846c60cf",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 974,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2022-08-18T01:37:01Z",
      "side": 1,
      "message": "\u003e What if user doesn\u0027t get individual snmp subscription and only get subscriptions collections. \n\nWe  get SNMP subscriptions from dbus. SNMP subscription from bmcweb persistent store will be filtered out. Please see line 440.",
      "parentUuid": "c30a7652_a512f3c9",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b3cdbc5_73f34af4",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 50
      },
      "lineNbr": 974,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2022-11-02T03:33:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f08bd8ba_846c60cf",
      "revId": "71eb0fca5f44f03a68fd3f0d899d74b310e228ad",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}