{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "778a6756_15e7ea88",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-22T20:05:19Z",
      "side": 1,
      "message": "Please make another attempt at this.  You call out memory, storage, and cpu, then point to the Redfish schema, which doesn\u0027t use these names.\n\nAlso, please format your commit as a paragraph.",
      "range": {
        "startLine": 9,
        "startChar": 23,
        "endLine": 9,
        "endChar": 54
      },
      "revId": "37becd56a931c2d9f5502a0d1fe936a66b542f4b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "968184bc_a6fd12e3",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-22T21:52:02Z",
      "side": 1,
      "message": "Oh.  We shouldn\u0027t directly code this service, right?  We should be using mapper to look up the Metric.Value\u0027s that we\u0027re interested in.",
      "revId": "37becd56a931c2d9f5502a0d1fe936a66b542f4b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f531e427_91a0f848",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-22T20:47:21Z",
      "side": 1,
      "message": "do any of the below need unit tests?",
      "revId": "37becd56a931c2d9f5502a0d1fe936a66b542f4b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9aa442dc_9164cf11",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 6
      },
      "lineNbr": 36,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-22T20:05:19Z",
      "side": 1,
      "message": "Setting the json property to null doesn\u0027t seem right.  If we did that, we\u0027d also have to set and @extended message to note that the property is unavailable.\n\nShould we just set internalError in these cases?  Is there any case where this daemon would expect to set a nonfinite value?",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 36,
        "endChar": 66
      },
      "revId": "37becd56a931c2d9f5502a0d1fe936a66b542f4b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53eea9f4_c317ca55",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-22T20:05:19Z",
      "side": 1,
      "message": "nit, probably want to make this 1024.0 to ensure that it\u0027s a floating point number.",
      "range": {
        "startLine": 39,
        "startChar": 68,
        "endLine": 39,
        "endChar": 72
      },
      "revId": "37becd56a931c2d9f5502a0d1fe936a66b542f4b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c74de48_ce496fe9",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 6
      },
      "lineNbr": 97,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-22T20:05:19Z",
      "side": 1,
      "message": "bmcweb shouldn\u0027t be enforcing a particular precision, as it doesn\u0027t have enough data about the underlying types to know the precision.  That needs to be done in the health daemon, similar to how it\u0027s done for sensors.",
      "range": {
        "startLine": 94,
        "startChar": 0,
        "endLine": 97,
        "endChar": 28
      },
      "revId": "37becd56a931c2d9f5502a0d1fe936a66b542f4b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "652e122d_9edbd4ea",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 6
      },
      "lineNbr": 97,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-22T20:05:19Z",
      "side": 1,
      "message": "std::stod throws if the value isn\u0027t convertible to string, which is disallowed in url response handlers (because there\u0027s always a recovery that can be done locally.)\n\nI suspect as part of removing the precision, this will go away.\n\nhttps://github.com/openbmc/bmcweb/blob/master/COMMON_ERRORS.md#5-using-methods-that-throw-or-not-handling-bad-inputs",
      "range": {
        "startLine": 97,
        "startChar": 8,
        "endLine": 97,
        "endChar": 17
      },
      "revId": "37becd56a931c2d9f5502a0d1fe936a66b542f4b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c9feaf5_1563c667",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 6
      },
      "lineNbr": 252,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-22T20:05:19Z",
      "side": 1,
      "message": "As written, because we\u0027re directly calling a known daemon, as this patch is written that daemon being up and functional is now a hard requirement on these the Redfish interfaces, because I don\u0027t see any handling for if it doesn\u0027t exist.\n\nNormally we would call through the mapper, and if the mapper returns no results, discontinue looking without returning an error to the user.  I\u0027m not sure that makes sense in this case, because we know the one daemon most systems are using for this interface, but we will still need to handle the \"doesn\u0027t exist\" error similarly.\n\nIt seems likely that folks would remove this daemon, that this daemon might start after bmcweb, or that this daemon might crash, so lets handle that case as just not populating the properties.\n\nhttps://github.com/openbmc/bmcweb/blob/master/DBUS_USAGE.md\n\nHas the exact rules that we try to follow.",
      "range": {
        "startLine": 252,
        "startChar": 39,
        "endLine": 252,
        "endChar": 63
      },
      "revId": "37becd56a931c2d9f5502a0d1fe936a66b542f4b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a05d44a_723e0295",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 6
      },
      "lineNbr": 255,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-22T19:40:41Z",
      "side": 1,
      "message": "It\u0027s really unfortunate how these objects were designed, that we have to do 8 Get property calls to return this single resource.  Oh well, not sure we can do anything about it at this point.",
      "revId": "37becd56a931c2d9f5502a0d1fe936a66b542f4b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}