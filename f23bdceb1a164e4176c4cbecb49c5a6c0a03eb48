{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9548af3f_423ab044",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 953,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-13T16:49:57Z",
      "side": 1,
      "message": "I\u0027m confused.  We\u0027re updating the bmc, shouldn\u0027t this just be /xyz/openbmc_project/software/bmc and let the backend sort out what goes where?",
      "range": {
        "startLine": 953,
        "startChar": 13,
        "endLine": 953,
        "endChar": 57
      },
      "revId": "f23bdceb1a164e4176c4cbecb49c5a6c0a03eb48",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b21d5054_8b012355",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 953,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-08-13T19:18:58Z",
      "side": 1,
      "message": "The update interface resides on /xyz/openbmc_project/software/\u003cswId\u003e object path. If target URI uses \u003cswId\u003e we know how to do the mapping in the else part. The if flow is to support BMC target URI of type BMCWEB_REDFISH_MANAGER_URI_NAME for backwards compatibility. There is an  updateable association from /xyz/openbmc_project/software/bmc to /xyz/openbmc_project/software/\u003cswId\u003e, which we are using here.",
      "parentUuid": "9548af3f_423ab044",
      "range": {
        "startLine": 953,
        "startChar": 13,
        "endLine": 953,
        "endChar": 57
      },
      "revId": "f23bdceb1a164e4176c4cbecb49c5a6c0a03eb48",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5439326_54176493",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 953,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-29T00:29:39Z",
      "side": 1,
      "message": "I\u0027m still confused.  \u003cswId\u003e of the bmc is bmc, right?  Why can\u0027t we just update /xyz/openbmc_project/software/bmc?",
      "parentUuid": "b21d5054_8b012355",
      "range": {
        "startLine": 953,
        "startChar": 13,
        "endLine": 953,
        "endChar": 57
      },
      "revId": "f23bdceb1a164e4176c4cbecb49c5a6c0a03eb48",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e26476b_61e75583",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 953,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-08-29T01:05:39Z",
      "side": 1,
      "message": "No, \u003cswid\u003e of BMC is not bmc, its a generated unique id. We cannot use /xyz/openbmc_project/software/bmc because -\n1. BMC can have dual flashes and both of these need to exposed to client.\n2. Moreover, when the client updates an updatable flash (any number of times), the new interfaces (Version, Activation Status, Activation Progress etc) for the new update needs to show on a new /xyz/openbmc_project/software/\u003cswid\u003e path (whereas the previous path will have its own set of interfaces). Once this new update succeeds the previous updateable path will be discarded and an updatable association for this new path will be created to /xyz/openbmc_project/software/bmc.\n\nNOTE: The association lookup flow will only be used for BMC updates in case user provides /redfish/v1/Managers/bmc as TargetURI, otherwise /redfish/v1/UpdateService/FirmwareInventory/\u003cswId\u003e directly maps to /xyz/openbmc_project/software/\u003cswid\u003e without any association lookup. We had to support /redfish/v1/Managers/bmc for backwards compatibility reason.",
      "parentUuid": "f5439326_54176493",
      "range": {
        "startLine": 953,
        "startChar": 13,
        "endLine": 953,
        "endChar": 57
      },
      "revId": "f23bdceb1a164e4176c4cbecb49c5a6c0a03eb48",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "973f7739_3269f1b6",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 953,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-09-13T03:30:28Z",
      "side": 1,
      "message": "Slight correct to my previous comment -\nswid \u003d \u003cDeviceX\u003e\\_\u003cuniqueId\u003e, hence for BMC, its bmc\\_\u003cuniqueId\u003e.\n\nRest all the above apply.",
      "parentUuid": "5e26476b_61e75583",
      "range": {
        "startLine": 953,
        "startChar": 13,
        "endLine": 953,
        "endChar": 57
      },
      "revId": "f23bdceb1a164e4176c4cbecb49c5a6c0a03eb48",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2787787d_c8b080d9",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 953,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-23T15:03:41Z",
      "side": 1,
      "message": "\u003e No, \u003cswid\u003e of BMC is not bmc, its a generated unique id. We cannot use /xyz/openbmc_project/software/bmc because -\n\u003e 1. BMC can have dual flashes and both of these need to exposed to client.\n\nNot sure why this is a problem?  Dual flashes I would expect would be dealt with by the implementation that decides where the update goes.\n\n\u003e 2. Moreover, when the client updates an updatable flash (any number of times), the new interfaces (Version, Activation Status, Activation Progress etc) for the new update needs to show on a new /xyz/openbmc_project/software/\u003cswid\u003e path (whereas the previous path will have its own set of interfaces).\n\nan \"updatable flash\" doesn\u0027t really abstract the implementation away.  from this perspective, the user has asked to update \"the bmc\", regardless of how the internals work, i would expect that the update goes to the bmc.  Maybe there\u0027s staging, and the image goes to other places after that, but the interface itself is \"This bmc\"\n\n\u003e Once this new update succeeds the previous updateable path will be discarded and an updatable association for this new path will be created to /xyz/openbmc_project/software/bmc.\n\nThis is after the reboot?\n\n\u003e \n\u003e NOTE: The association lookup flow will only be used for BMC updates in case user provides /redfish/v1/Managers/bmc as TargetURI, otherwise /redfish/v1/UpdateService/FirmwareInventory/\u003cswId\u003e directly maps to /xyz/openbmc_project/software/\u003cswid\u003e without any association lookup.\n\nUnfortunately using /redfish/v1/Managers/bmc is pretty common.\n\n\u003e We had to support /redfish/v1/Managers/bmc for backwards compatibility reason.",
      "parentUuid": "5e26476b_61e75583",
      "range": {
        "startLine": 953,
        "startChar": 13,
        "endLine": 953,
        "endChar": 57
      },
      "revId": "f23bdceb1a164e4176c4cbecb49c5a6c0a03eb48",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "985a462b_09858972",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 953,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-09-25T01:54:01Z",
      "side": 1,
      "message": "Discussed these issues with @Ed over discord https://discord.com/channels/775381525260664832/1287616510008758283/1288222210393243689 and resolved the concerns. As you asked i have raised the gerrit PR to add the updateable association to PDI https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/74853. Please let me know if there are any other questions. Marking this resolved for now. Thanks",
      "parentUuid": "2787787d_c8b080d9",
      "range": {
        "startLine": 953,
        "startChar": 13,
        "endLine": 953,
        "endChar": 57
      },
      "revId": "f23bdceb1a164e4176c4cbecb49c5a6c0a03eb48",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}