{
  "comments": [
    {
      "key": {
        "uuid": "59cde4a0_5ad09ebd",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 17
      },
      "lineNbr": 105,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2020-05-19T06:51:19Z",
      "side": 1,
      "message": "this is confusing , we wont return an error if it is \u003e200kb right..we only return if it is \u003e500kb correct ?\n\nthen why this statement ? File size exceeds 200KB ?",
      "range": {
        "startLine": 105,
        "startChar": 13,
        "endLine": 105,
        "endChar": 68
      },
      "revId": "64d91daca77b0808f49338f65c2e16eb384954e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22d0fb79_f29a1993",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 17
      },
      "lineNbr": 105,
      "author": {
        "id": 1000401
      },
      "writtenOn": "2020-05-19T16:23:35Z",
      "side": 1,
      "message": "Missed it. Done",
      "parentUuid": "59cde4a0_5ad09ebd",
      "range": {
        "startLine": 105,
        "startChar": 13,
        "endLine": 105,
        "endChar": 68
      },
      "revId": "64d91daca77b0808f49338f65c2e16eb384954e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f27d3a3d_901a5a3a",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 17
      },
      "lineNbr": 171,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2020-06-18T11:33:53Z",
      "side": 1,
      "message": "Invalid Request??",
      "range": {
        "startLine": 171,
        "startChar": 27,
        "endLine": 171,
        "endChar": 48
      },
      "revId": "64d91daca77b0808f49338f65c2e16eb384954e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2572fca3_93767096",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 17
      },
      "lineNbr": 171,
      "author": {
        "id": 1000401
      },
      "writtenOn": "2020-06-18T12:15:41Z",
      "side": 1,
      "message": "If we were to use the error messages from error_messages.hpp file, then I see two other error messages were kind of similar to proprtyValueTypeError: (No Invalid Request)\nmessages::unrecognizedRequestBody(asyncResp-\u003eres);\nmessages::invalidObject\n\nBut seems the above would fit well than the others. What do you think Ratan?",
      "parentUuid": "f27d3a3d_901a5a3a",
      "range": {
        "startLine": 171,
        "startChar": 27,
        "endLine": 171,
        "endChar": 48
      },
      "revId": "64d91daca77b0808f49338f65c2e16eb384954e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1993ed12_1f488c47",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 17
      },
      "lineNbr": 175,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2020-06-18T11:33:53Z",
      "side": 1,
      "message": "You can also have the check for Max save area file size here from line no 102 and once we find it is a valid request then give the req-body to the createMultipartfiles..\n\nSee comment below at line no 200.",
      "revId": "64d91daca77b0808f49338f65c2e16eb384954e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbbdc43e_bd5969bf",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 17
      },
      "lineNbr": 175,
      "author": {
        "id": 1000401
      },
      "writtenOn": "2020-06-18T12:15:41Z",
      "side": 1,
      "message": "I have a doubt here, Ratan.\nThe max size of a save area file should be 500 KB. That will be checked in the above method.\n\nIf we are to have a check here for request body, then I hope it would be wrong (because the req body contains multiple files in it and each one of it must be within the maximum size limit right)",
      "parentUuid": "1993ed12_1f488c47",
      "revId": "64d91daca77b0808f49338f65c2e16eb384954e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36de753d_5f1f3544",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 17
      },
      "lineNbr": 189,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2020-06-18T11:33:53Z",
      "side": 1,
      "message": "Why we are writing on the temporary file??? why can\u0027t we give the (req-\u003e body) to line no 193??",
      "range": {
        "startLine": 183,
        "startChar": 2,
        "endLine": 189,
        "endChar": 20
      },
      "revId": "64d91daca77b0808f49338f65c2e16eb384954e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bace601a_e1b7749b",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 17
      },
      "lineNbr": 189,
      "author": {
        "id": 1000401
      },
      "writtenOn": "2020-06-18T12:15:41Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "36de753d_5f1f3544",
      "range": {
        "startLine": 183,
        "startChar": 2,
        "endLine": 189,
        "endChar": 20
      },
      "revId": "64d91daca77b0808f49338f65c2e16eb384954e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c15bbaa9_d7b645a9",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 17
      },
      "lineNbr": 190,
      "author": {
        "id": 1000206
      },
      "writtenOn": "2020-05-19T06:51:19Z",
      "side": 1,
      "message": "do we need a check here ? to see if file exists ?",
      "range": {
        "startLine": 190,
        "startChar": 3,
        "endLine": 190,
        "endChar": 41
      },
      "revId": "64d91daca77b0808f49338f65c2e16eb384954e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20e72ccf_d27acb3e",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 17
      },
      "lineNbr": 190,
      "author": {
        "id": 1000401
      },
      "writtenOn": "2020-05-19T16:23:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c15bbaa9_d7b645a9",
      "range": {
        "startLine": 190,
        "startChar": 3,
        "endLine": 190,
        "endChar": 41
      },
      "revId": "64d91daca77b0808f49338f65c2e16eb384954e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41eaaec4_189cb2bf",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 17
      },
      "lineNbr": 200,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2020-06-18T11:33:53Z",
      "side": 1,
      "message": "Can we give the req-body here and do all the mimetic business in the createMultipartfiles function??",
      "range": {
        "startLine": 200,
        "startChar": 34,
        "endLine": 200,
        "endChar": 44
      },
      "revId": "64d91daca77b0808f49338f65c2e16eb384954e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f77fa9c_d15ee448",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 17
      },
      "lineNbr": 200,
      "author": {
        "id": 1000401
      },
      "writtenOn": "2020-06-18T12:15:41Z",
      "side": 1,
      "message": "So here, the req body is not directly given. Instead, the mimetic obj is constructed using the input iterators.\n\nWe are just constructing an object here! And then the method is called recursively from within until the end of the file. So all the parsing work is done only in the method above.\n\n\nAs you mentioned in the comment in line 19, yes there is another way around, by not using temp files.",
      "parentUuid": "41eaaec4_189cb2bf",
      "range": {
        "startLine": 200,
        "startChar": 34,
        "endLine": 200,
        "endChar": 44
      },
      "revId": "64d91daca77b0808f49338f65c2e16eb384954e9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}