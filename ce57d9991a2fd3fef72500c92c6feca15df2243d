{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dc846c13_eea6f1f1",
        "filename": "http/http_connection.hpp",
        "patchSetId": 4
      },
      "lineNbr": 625,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-05-22T16:28:28Z",
      "side": 1,
      "message": "how does this work with deadline timer?. I assume this loop will be closed on timer expiry.",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e50d17b_a6a96541",
        "filename": "http/http_connection.hpp",
        "patchSetId": 4
      },
      "lineNbr": 625,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-22T16:35:35Z",
      "side": 1,
      "message": "doWrite restarts the deadline timer, so you get the same behavior as other things, the payload will wait forever for bmcweb itself to respond.",
      "parentUuid": "dc846c13_eea6f1f1",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fd3947a_e6c13700",
        "filename": "http/http_connection.hpp",
        "patchSetId": 4
      },
      "lineNbr": 625,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-22T21:58:49Z",
      "side": 1,
      "message": "was there something else you were hoping for in the context of this patch?",
      "parentUuid": "3e50d17b_a6a96541",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f7d93d6_9d4364ff",
        "filename": "http/http_response.hpp",
        "patchSetId": 4
      },
      "lineNbr": 179,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-05-22T16:28:28Z",
      "side": 1,
      "message": "in dump offload case , we have maximum size limit check. In the case of unix socket are we relaying on deadline timer to report error?",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43179af8_0d950bc8",
        "filename": "http/http_response.hpp",
        "patchSetId": 4
      },
      "lineNbr": 179,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-22T16:37:31Z",
      "side": 1,
      "message": "\u003e we have maximum size limit check\n\nThis size limit was created to prevent crashes due to OOM.  In this model, there\u0027s functionally no limit we need to enforce.  The limits are in the control of the daemon producing the API.",
      "parentUuid": "6f7d93d6_9d4364ff",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}