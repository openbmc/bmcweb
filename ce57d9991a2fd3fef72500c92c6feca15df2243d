{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "20abf2cf_d121b8b2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-05-23T19:56:26Z",
      "side": 1,
      "message": "it is or it\u0027s",
      "range": {
        "startLine": 25,
        "startChar": 13,
        "endLine": 25,
        "endChar": 17
      },
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c69e771d_f1add7f5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 25,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-28T17:04:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "20abf2cf_d121b8b2",
      "range": {
        "startLine": 25,
        "startChar": 13,
        "endLine": 25,
        "endChar": 17
      },
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6da38558_78871e8f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-05-23T19:56:26Z",
      "side": 1,
      "message": "seems reasonable to me",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc846c13_eea6f1f1",
        "filename": "http/http_connection.hpp",
        "patchSetId": 4
      },
      "lineNbr": 625,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-05-22T16:28:28Z",
      "side": 1,
      "message": "how does this work with deadline timer?. I assume this loop will be closed on timer expiry.",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e50d17b_a6a96541",
        "filename": "http/http_connection.hpp",
        "patchSetId": 4
      },
      "lineNbr": 625,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-22T16:35:35Z",
      "side": 1,
      "message": "doWrite restarts the deadline timer, so you get the same behavior as other things, the payload will wait forever for bmcweb itself to respond.",
      "parentUuid": "dc846c13_eea6f1f1",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fd3947a_e6c13700",
        "filename": "http/http_connection.hpp",
        "patchSetId": 4
      },
      "lineNbr": 625,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-22T21:58:49Z",
      "side": 1,
      "message": "was there something else you were hoping for in the context of this patch?",
      "parentUuid": "3e50d17b_a6a96541",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2fcfcf4_7cd61968",
        "filename": "http/http_connection.hpp",
        "patchSetId": 4
      },
      "lineNbr": 625,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-05-23T04:32:05Z",
      "side": 1,
      "message": "I was thinking about the response time deadline we have in bmcweb. Now a demon can make a request to wait indefinitely. But it is also a feature for the system dump use case where we have data in hundreds of MBs. But I assume that the deadline timer will trigger to stop such writes, because these enums are not in play for that huge data writes. So I am thinking about a solution where the indefinite loop due to absence of data should be avoided at the same time stop deadline timer from triggering when huge data transfer is taking place.",
      "parentUuid": "7fd3947a_e6c13700",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27ef32b8_fb21d2a8",
        "filename": "http/http_connection.hpp",
        "patchSetId": 4
      },
      "lineNbr": 625,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-23T04:37:30Z",
      "side": 1,
      "message": "is it something you think should happen in this patch?  Or is it something we can handle later?  My assumption is that dump services shouldn\u0027t deadlock, so if they do, it\u0027s not really a bmcweb failure, and we\u0027ll eventually time out with the TCP socket.",
      "parentUuid": "d2fcfcf4_7cd61968",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9909fb41_cb52333e",
        "filename": "http/http_connection.hpp",
        "patchSetId": 4
      },
      "lineNbr": 625,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-05-23T05:24:11Z",
      "side": 1,
      "message": "I am happy with current patch. Adjusting the deadline timer for large data transfer is something needed in another patchset. And yes the client side time out will break the indefinite loop in other case.",
      "parentUuid": "27ef32b8_fb21d2a8",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9abe08c_d2a9c3b1",
        "filename": "http/http_connection.hpp",
        "patchSetId": 4
      },
      "lineNbr": 625,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-23T14:37:02Z",
      "side": 1,
      "message": "üëç",
      "parentUuid": "9909fb41_cb52333e",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6905ccc3_8d62a0d9",
        "filename": "http/http_connection.hpp",
        "patchSetId": 4
      },
      "lineNbr": 626,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-05-23T09:53:04Z",
      "side": 1,
      "message": "how are we handling connection termination from client side? Either we should read the stream or register waitForerror call back. Otherwise the loop will continue forever right?",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c78014bf_6bfc836c",
        "filename": "http/http_connection.hpp",
        "patchSetId": 4
      },
      "lineNbr": 626,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-23T14:37:02Z",
      "side": 1,
      "message": "\u003e how are we handling connection termination from client side? \n\nIf the client disconnects, the write will fail, with an error indicating that the connection is closed.\n\n\u003e Either we should read the stream or register waitForerror call back. Otherwise the loop will continue forever right?\n\nI don\u0027t think so?  The next time this loop gets any data, it will try to write it to the socket, and see that the socket it closed, right?",
      "parentUuid": "6905ccc3_8d62a0d9",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad7c89be_5cd11b04",
        "filename": "http/http_connection.hpp",
        "patchSetId": 4
      },
      "lineNbr": 626,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-05-23T16:04:17Z",
      "side": 1,
      "message": "yes but if there is no data? I thinking about potential rare case were demon does not write anything to the socket.",
      "parentUuid": "c78014bf_6bfc836c",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2eb6b31_94065a43",
        "filename": "http/http_connection.hpp",
        "patchSetId": 4
      },
      "lineNbr": 626,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-23T16:13:32Z",
      "side": 1,
      "message": "I see what you mean.  Yeah, lets try to get that covered in a future patch, but considering that\u0027s a failure case that doesn\u0027t really involve security (everything here is post-auth), I\u0027m not that worried about it compared to if a client stops reading or writing, which could cause deadlocks for other users under DOS attack conditions.",
      "parentUuid": "ad7c89be_5cd11b04",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3b33f1a_4b383a02",
        "filename": "http/http_connection.hpp",
        "patchSetId": 4
      },
      "lineNbr": 626,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-23T16:35:20Z",
      "side": 1,
      "message": "Said another way, the worst a lack of a timeout could cause here is to fail the request, which would\u0027ve already failed anyway under a timeout.  It\u0027s maybe not ideal (although for large payloads, I don\u0027t know what an appropriate timeout would be), but it\u0027s not a security issue.",
      "parentUuid": "d2eb6b31_94065a43",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93c4b090_2257004a",
        "filename": "http/http_connection.hpp",
        "patchSetId": 4
      },
      "lineNbr": 626,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-05-23T18:04:15Z",
      "side": 1,
      "message": "True, the patch looks fine for me.",
      "parentUuid": "d3b33f1a_4b383a02",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f7d93d6_9d4364ff",
        "filename": "http/http_response.hpp",
        "patchSetId": 4
      },
      "lineNbr": 179,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-05-22T16:28:28Z",
      "side": 1,
      "message": "in dump offload case , we have maximum size limit check. In the case of unix socket are we relaying on deadline timer to report error?",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43179af8_0d950bc8",
        "filename": "http/http_response.hpp",
        "patchSetId": 4
      },
      "lineNbr": 179,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-22T16:37:31Z",
      "side": 1,
      "message": "\u003e we have maximum size limit check\n\nThis size limit was created to prevent crashes due to OOM.  In this model, there\u0027s functionally no limit we need to enforce.  The limits are in the control of the daemon producing the API.",
      "parentUuid": "6f7d93d6_9d4364ff",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6bd5f581_30bc7072",
        "filename": "http/http_response.hpp",
        "patchSetId": 4
      },
      "lineNbr": 179,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-05-23T18:07:05Z",
      "side": 1,
      "message": "Agreed",
      "parentUuid": "43179af8_0d950bc8",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db998e24_cfb9a225",
        "filename": "http/http_response.hpp",
        "patchSetId": 4
      },
      "lineNbr": 306,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-05-23T19:56:26Z",
      "side": 1,
      "message": "#include \u003cfcntl.h\u003e",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c14744a8_0aa5fd21",
        "filename": "http/http_response.hpp",
        "patchSetId": 4
      },
      "lineNbr": 306,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-28T17:04:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db998e24_cfb9a225",
      "revId": "ce57d9991a2fd3fef72500c92c6feca15df2243d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}