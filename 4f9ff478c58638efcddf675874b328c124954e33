{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7478355c_f7045cc8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-26T16:07:33Z",
      "side": 1,
      "message": "Could we just do this?\n\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/74028",
      "revId": "4f9ff478c58638efcddf675874b328c124954e33",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f42080b7_ee1268c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-08-26T16:29:04Z",
      "side": 1,
      "message": "but we are assuming that only password and totp are valid prompts. In general multifactor auth can have more than that. So I don\u0027t see any harm being a bit futuristic here. This will support for all possible prompts required by any pam modules other than google authenticator. Are you worried about the performance ? Even if you prefer hardcoding password and totp, I would prefer delegating the parsing logic to  PamData or PasswordData.",
      "parentUuid": "7478355c_f7045cc8",
      "revId": "4f9ff478c58638efcddf675874b328c124954e33",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ac660df_e73b4a89",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-26T16:36:16Z",
      "side": 1,
      "message": "\u003e but we are assuming that only password and totp are valid prompts.\n\nNot really.  the token key is set to nullopt, so if we ever got it on the password prompt (which seems unlikely) we\u0027d stil return the same error.\n\n\u003e In general multifactor auth can have more than that. So I don\u0027t see any harm being a bit futuristic here.\n\nI do.  Lets make things complicated when we need things to be complicated.  I really suspect there\u0027s less than 10 prompts we could potentially answer assuming we imlemented the whole world of PAM.  That\u0027s not enough to justify trying to create a bunch of dynamic structures.\n\n\u003e This will support for all possible prompts required by any pam modules other than google authenticator.\n\nHow do you know this?  Have you tried all possible prompts?  Is there a reason the prior if/else if tree couldn\u0027t handle all possible prompts?\n\n\u003e Are you worried about the performance ? Even if you prefer hardcoding password and totp, I would prefer delegating the parsing logic to  PamData or PasswordData.\n\nNo, I\u0027m worried about complexity, and strings being built at runtime (which is harder to audit).  Lets write simple code until we prove that we need something.",
      "parentUuid": "f42080b7_ee1268c7",
      "revId": "4f9ff478c58638efcddf675874b328c124954e33",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ddb5623_5f90a9cb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-26T16:37:50Z",
      "side": 1,
      "message": "If we wanted to replace the unordered_map with a std::array\u003cstd::pair\u003ckey, value\u003e\u003e I\u0027d be more ok with that, because the size would be fixed and able to be easily audited.",
      "parentUuid": "4ac660df_e73b4a89",
      "revId": "4f9ff478c58638efcddf675874b328c124954e33",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b803d2b_d2c4d52a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-08-27T04:30:40Z",
      "side": 1,
      "message": "How do you know this? Have you tried all possible prompts? Is there a reason the prior if/else if tree couldn\u0027t handle all possible prompts?\n\nyes, before deciding on google authenticator we explore other options for which the prompts were different. \n\nEven in this case, just to verify TOTP we don\u0027t need password, which is required in  secret key generation flow. \n\nI can change the container to std::array with length of 2. It is not a problem for me.",
      "parentUuid": "2ddb5623_5f90a9cb",
      "revId": "4f9ff478c58638efcddf675874b328c124954e33",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79df6a2a_25e673b6",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-26T16:06:14Z",
      "side": 1,
      "message": "We only have 2 fixed sets of keys, the second of which the key is shared.  Why do we need to convert the underlying data structure to this?  It seems like overkill.",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 14,
        "endChar": 26
      },
      "revId": "4f9ff478c58638efcddf675874b328c124954e33",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9626d083_5bcfaa9b",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-08-27T16:33:23Z",
      "side": 1,
      "message": "We only have 2 fixed sets of keys.\n\nThis assumption is what I was trying to avoid.If you wanted to hardcode it only for two keys, then I  don\u0027t have anything else to say.\n\nIn general \n1) I will never go for the previous solution of miss using reinterpret_cast that wrongly cast a const char* to PasswordData. \n2) Keeping the prompt parsing code inside pamFunctionConversation does not seems to be good design practice. IMO it should go inside PasswordData.\n3) Personally I don\u0027t see any overkill in replacing hard coded if else chain with find_if algorithm. \n4) if we use find_if and key_value pair ,it give extra benefit of supporting MFA with different keys with negligible performance cost.  \n\nAnyway it is maintainers choice to take it or not. We can agree to disagree on the overkill statement above.\n\nOne functional requirement of this patch is the addition of Totp::verify function. Which is a must for google authentication createSecretKey flow. We just need to verify the totp, without password. One extra argument is the new pam module name that does just the totp verification part.",
      "parentUuid": "79df6a2a_25e673b6",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 14,
        "endChar": 26
      },
      "revId": "4f9ff478c58638efcddf675874b328c124954e33",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}