{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7170c8a1_65c36e82",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 2
      },
      "lineNbr": 628,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-05-31T18:55:29Z",
      "side": 1,
      "message": "would prefer a name like \"result\" here",
      "range": {
        "startLine": 628,
        "startChar": 27,
        "endLine": 628,
        "endChar": 28
      },
      "revId": "d64f9cd87395d6a8aa49d879c2ba19225764ca73",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0718533_7dc1deaa",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 2
      },
      "lineNbr": 628,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-05-31T19:08:53Z",
      "side": 1,
      "message": "Your wish is my command.",
      "parentUuid": "7170c8a1_65c36e82",
      "range": {
        "startLine": 628,
        "startChar": 27,
        "endLine": 628,
        "endChar": 28
      },
      "revId": "d64f9cd87395d6a8aa49d879c2ba19225764ca73",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef1cc626_5a083ac5",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 2
      },
      "lineNbr": 635,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-05-31T18:41:35Z",
      "side": 1,
      "message": "This change will prevent the core from the invalid non-digit function name.\nHowever, it still allows the invalid-but-starting-with-digit function id as a preceding number like\n\n```\ncurl -k -X GET https://${bmc}:18080/redfish/v1/Systems/system/PCIeDevices/pcie_card1/PCIeFunctions/1X\n{\n  \"@odata.id\": \"/redfish/v1/Systems/system/PCIeDevices/pcie_card1/PCIeFunctions/1\",\n  \"@odata.type\": \"#PCIeFunction.v1_2_3.PCIeFunction\",\n  \"ClassCode\": \"\",\n  \"DeviceId\": \"\",\n  \"FunctionId\": 1,\n  \"Id\": \"1\",\n  \"Links\": {\n    \"PCIeDevice\": {\n      \"@odata.id\": \"/redfish/v1/Systems/system/PCIeDevices/pcie_card1\"\n    }\n  },\n  \"Name\": \"PCIe Function\",\n  \"RevisionId\": \"\",\n  \"SubsystemId\": \"\",\n  \"SubsystemVendorId\": \"\",\n  \"VendorId\": \"\"\n}%\n```\n\nOR \n\n```\ncurl -k -X GET https://${bmc}:18080/redfish/v1/Systems/system/PCIeDevices/pcie_card1/PCIeFunctions/12X\n{\n  \"@odata.id\": \"/redfish/v1/Systems/system/PCIeDevices/pcie_card1/PCIeFunctions/12\",\n  \"@odata.type\": \"#PCIeFunction.v1_2_3.PCIeFunction\",\n  \"FunctionId\": 12,\n  \"Id\": \"12\",\n  \"Links\": {\n    \"PCIeDevice\": {\n      \"@odata.id\": \"/redfish/v1/Systems/system/PCIeDevices/pcie_card1\"\n    }\n  },\n  \"Name\": \"PCIe Function\"\n}%\n```\n\nSo, validatePCIeFunctionId() would still be needed to cover those cases.",
      "range": {
        "startLine": 627,
        "startChar": 0,
        "endLine": 635,
        "endChar": 5
      },
      "revId": "d64f9cd87395d6a8aa49d879c2ba19225764ca73",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8cc21dc8_73da65c7",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 2
      },
      "lineNbr": 635,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-05-31T19:08:53Z",
      "side": 1,
      "message": "I believe I\u0027ve fixed this case by checking the pointer.  Please look at the new code and let me know if you still see this issue, but I think it\u0027s resolved.",
      "parentUuid": "ef1cc626_5a083ac5",
      "range": {
        "startLine": 627,
        "startChar": 0,
        "endLine": 635,
        "endChar": 5
      },
      "revId": "d64f9cd87395d6a8aa49d879c2ba19225764ca73",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ed6eb75_4ef1b5d1",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 2
      },
      "lineNbr": 635,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-05-31T20:37:18Z",
      "side": 1,
      "message": "Yes, this fixes the non-digit ids (e.g. ABC, 12X etc).\nHowever, the non-existent function ids (e.g. 12, 34, etc) are still reporting as valid.\nI\u0027ve modified https://gerrit.openbmc.org/c/openbmc/bmcweb/+/63850 to address the issue and rebased onto this commit.",
      "parentUuid": "8cc21dc8_73da65c7",
      "range": {
        "startLine": 627,
        "startChar": 0,
        "endLine": 635,
        "endChar": 5
      },
      "revId": "d64f9cd87395d6a8aa49d879c2ba19225764ca73",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}