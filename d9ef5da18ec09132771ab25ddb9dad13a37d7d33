{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3eabd541_fc86f890",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-04-17T17:42:43Z",
      "side": 1,
      "message": "This is going to allow bmcweb to open ANY file path on the system.  Do we need some more checks here to make sure that this file path is sane before we open it?",
      "range": {
        "startLine": 142,
        "startChar": 61,
        "endLine": 142,
        "endChar": 78
      },
      "revId": "d9ef5da18ec09132771ab25ddb9dad13a37d7d33",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "360b0762_2b294157",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-04-20T02:11:55Z",
      "side": 1,
      "message": "I thought it will be automatically tested when socket connection initiated below. I am not sure how else can we check it.",
      "parentUuid": "3eabd541_fc86f890",
      "range": {
        "startLine": 142,
        "startChar": 61,
        "endLine": 142,
        "endChar": 78
      },
      "revId": "d9ef5da18ec09132771ab25ddb9dad13a37d7d33",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "695fd2ea_652a4832",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 2
      },
      "lineNbr": 161,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-04-17T17:42:43Z",
      "side": 1,
      "message": "please prefer to return early, to save horizontal space.\n\nThis should also be closing the connection.",
      "range": {
        "startLine": 161,
        "startChar": 8,
        "endLine": 161,
        "endChar": 26
      },
      "revId": "d9ef5da18ec09132771ab25ddb9dad13a37d7d33",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08fcab89_5d4fe92f",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 2
      },
      "lineNbr": 161,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-04-20T02:11:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "695fd2ea_652a4832",
      "range": {
        "startLine": 161,
        "startChar": 8,
        "endLine": 161,
        "endChar": 26
      },
      "revId": "d9ef5da18ec09132771ab25ddb9dad13a37d7d33",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9706135_33416782",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-04-17T17:42:43Z",
      "side": 1,
      "message": "please read and understand common errors.",
      "range": {
        "startLine": 198,
        "startChar": 34,
        "endLine": 198,
        "endChar": 62
      },
      "revId": "d9ef5da18ec09132771ab25ddb9dad13a37d7d33",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "157d5dad_9c96ca9c",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-04-20T02:11:55Z",
      "side": 1,
      "message": "OK, With depth once change this check is not required. Now I only get single service name. So removing this condition.",
      "parentUuid": "c9706135_33416782",
      "range": {
        "startLine": 198,
        "startChar": 34,
        "endLine": 198,
        "endChar": 62
      },
      "revId": "d9ef5da18ec09132771ab25ddb9dad13a37d7d33",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b49c9b57_38cba38a",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 2
      },
      "lineNbr": 210,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-04-17T17:42:43Z",
      "side": 1,
      "message": "Why is socket name an array of bytes?  string seems like it would be more correct?",
      "range": {
        "startLine": 210,
        "startChar": 28,
        "endLine": 210,
        "endChar": 55
      },
      "revId": "d9ef5da18ec09132771ab25ddb9dad13a37d7d33",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc824953_dfe1ecaa",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 2
      },
      "lineNbr": 210,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-04-20T02:11:55Z",
      "side": 1,
      "message": "I tried string type first but it doesn\u0027t work. Abstract socket name starts with null character and string type depends on the null termination. Hence we need to use it as a byte stream.",
      "parentUuid": "b49c9b57_38cba38a",
      "range": {
        "startLine": 210,
        "startChar": 28,
        "endLine": 210,
        "endChar": 55
      },
      "revId": "d9ef5da18ec09132771ab25ddb9dad13a37d7d33",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "284e3ed4_6045bf2f",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 2
      },
      "lineNbr": 229,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-04-17T17:42:43Z",
      "side": 1,
      "message": "Should be depth 1, right?",
      "range": {
        "startLine": 229,
        "startChar": 40,
        "endLine": 229,
        "endChar": 41
      },
      "revId": "d9ef5da18ec09132771ab25ddb9dad13a37d7d33",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e7e6eba_f629f840",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 2
      },
      "lineNbr": 229,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-04-20T02:11:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "284e3ed4_6045bf2f",
      "range": {
        "startLine": 229,
        "startChar": 40,
        "endLine": 229,
        "endChar": 41
      },
      "revId": "d9ef5da18ec09132771ab25ddb9dad13a37d7d33",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "358b834f_da862f33",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 2
      },
      "lineNbr": 230,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-04-17T17:42:43Z",
      "side": 1,
      "message": "Unsafe capture.  Please follow what the other modules do, by keeping sessions in a singleton object, then looking up by that object when complete.\n\nAs written, if you get\n\nonOpen()\nonClose()\ngetSubTreeReturns()\n\nyour code will seg fault.",
      "range": {
        "startLine": 230,
        "startChar": 10,
        "endLine": 230,
        "endChar": 14
      },
      "revId": "d9ef5da18ec09132771ab25ddb9dad13a37d7d33",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66e24525_c3cb8fa9",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 2
      },
      "lineNbr": 230,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-04-20T02:11:55Z",
      "side": 1,
      "message": "Added check for connection.",
      "parentUuid": "358b834f_da862f33",
      "range": {
        "startLine": 230,
        "startChar": 10,
        "endLine": 230,
        "endChar": 14
      },
      "revId": "d9ef5da18ec09132771ab25ddb9dad13a37d7d33",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ce23860_b5c3abeb",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 2
      },
      "lineNbr": 238,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-04-17T17:42:43Z",
      "side": 1,
      "message": "This route will conflict with every other route in the system.  I\u0027m surprised that any tests passed with this.",
      "range": {
        "startLine": 238,
        "startChar": 24,
        "endLine": 238,
        "endChar": 30
      },
      "revId": "d9ef5da18ec09132771ab25ddb9dad13a37d7d33",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2783df74_458c4363",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 2
      },
      "lineNbr": 238,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-04-20T02:11:55Z",
      "side": 1,
      "message": "yes, I was able to test it fine but it depends on the order of registration. I like the idea of making string /console/\u003cstr\u003e so made the change. We need to change GUI too.",
      "parentUuid": "4ce23860_b5c3abeb",
      "range": {
        "startLine": 238,
        "startChar": 24,
        "endLine": 238,
        "endChar": 30
      },
      "revId": "d9ef5da18ec09132771ab25ddb9dad13a37d7d33",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73d9d3d6_1dabf063",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 2
      },
      "lineNbr": 239,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-04-17T17:42:43Z",
      "side": 1,
      "message": "Given that we\u0027re moving this to its own privilege, please register it as its own privilege, not a Redfish privilege.",
      "range": {
        "startLine": 239,
        "startChar": 22,
        "endLine": 239,
        "endChar": 63
      },
      "revId": "d9ef5da18ec09132771ab25ddb9dad13a37d7d33",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b226e7e_3b2f265f",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 2
      },
      "lineNbr": 239,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-04-20T02:11:55Z",
      "side": 1,
      "message": "I am adding that privilege in the separate drop so I will have to remember during merge.",
      "parentUuid": "73d9d3d6_1dabf063",
      "range": {
        "startLine": 239,
        "startChar": 22,
        "endLine": 239,
        "endChar": 63
      },
      "revId": "d9ef5da18ec09132771ab25ddb9dad13a37d7d33",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}