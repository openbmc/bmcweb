{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "46d6db59_34c81697",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2025-06-26T13:27:47Z",
      "side": 1,
      "message": "How does this differ from https://gerrit.openbmc.org/c/openbmc/bmcweb/+/45125",
      "revId": "97285910ee34af6f25983aa7225998cf5e4671ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c6fed69_16deb020",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2025-06-26T13:28:07Z",
      "side": 1,
      "message": "?",
      "parentUuid": "46d6db59_34c81697",
      "revId": "97285910ee34af6f25983aa7225998cf5e4671ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ce75b4f_91004945",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1002453
      },
      "writtenOn": "2025-06-26T13:52:47Z",
      "side": 1,
      "message": "1. My change tries to find new privilege combinations in Subordinate map (first cycle at diff in parse_registries.py). Others don\u0027t.\n\n2. Different variables naming for aliases in privilege_registry.hpp for new subordinate privileges. I\u0027m not sure who named it better. I tried to describe all subordinate subsequence.\n\n3. My change has no usage of new privileges. Maybe I will push its usage later as another change.",
      "parentUuid": "8c6fed69_16deb020",
      "revId": "97285910ee34af6f25983aa7225998cf5e4671ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd36b303_73e4a1c5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-26T17:41:01Z",
      "side": 1,
      "message": "Ok.... I\u0027ve got some awkward questions here.  Does anyone actually care about the privilege registry for non-admin users?  The only use cases I see most of the time are Admin and Read-Only.  Nobody has tried to sort out the whole problem where Operator Privilege has a lot more permissions than it should.\n\nI really do appreciate the work, but it would be good to know where you\u0027re wanting to go with this.",
      "revId": "97285910ee34af6f25983aa7225998cf5e4671ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d6a285c_146e108b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2025-06-26T17:45:56Z",
      "side": 1,
      "message": "I think - the key question may be - is https://gerrit.openbmc.org/c/openbmc/bmcweb/+/45125 incorrect?\nIf not, I think it would be better to add the review and suggestion to 45125,\n\nFor a given example, https://redfish.dmtf.org/registries/Redfish_1.5.0_PrivilegeRegistry.json \n```\n      {\n            \"Entity\": \"LogEntry\",\n             \"SubordinateOverrides\": [\n               {\n                    \"Targets\": [\n                        \"Chassis\",\n                        \"LogServiceCollection\",\n                        \"LogService\",\n                        \"LogEntryCollection\"\n                    ],\n                    \"OperationMap\": {\n                       \"PATCH\": [\n                            {\n                                \"Privilege\": [\n                                    \"ConfigureComponents\"\n                                ]\n```\n\n- This commit produces\n\n```\nconst static auto\u0026 patchLogEntrySubLogEntryCollectionSubLogServiceSubLogServiceCollectionSubChassis \u003d privilegeSetConfigureComponents;\n```\n\n- commit 45125 produces\n\n```\nconst static auto\u0026 patchLogEntrySubOverChassisLogServiceCollectionLogServiceLogEntryCollection \u003d privilegeSetConfigureComponents;\n```\n\nBasically, the key difference is on the naming - which is reversed each other, and where to put they keyword \"Sub\" (or \"Subover\").\n\nI think it is more natural to name it as in \"Targets\" and put \"Sub\" before \"Targets\" as in the DMTF spec.\n\nI don\u0027t think the spec implies each element in Targets is subordinated each other, but the \"Entry\" is subordinated in the path of \"Targets\".\n\nSo\n\n```\nLogEntry: Subordinates over [ Chassis - LogServiceCollection - LogService -]\nLogEntryCollection```\nrather than \n```\npatchLogEntry Subover LogEntryCollection Subover LogService Subover LogServiceCollection Subover Chassis\n```",
      "parentUuid": "2ce75b4f_91004945",
      "revId": "97285910ee34af6f25983aa7225998cf5e4671ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a9cdd0d_3e9d20f5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1002453
      },
      "writtenOn": "2025-06-27T06:48:21Z",
      "side": 1,
      "message": "Exactly. Operator has lot more permissions. \nI was solving a problem where the operator could change network settings. Operator should not be able to do this because of subordinate privileges according to dmtf privilege registry.\nAnd yes, I saw some discussions about operator role. Someone from dmtf wrote that they were thinking about eliminating this role at all. \nBut this doesn\u0027t solve a problem, when bmcweb ignores subordinate overrides for privileges.\nSo I created a change to parse subordinate overrides, but not to use it for now.",
      "parentUuid": "fd36b303_73e4a1c5",
      "revId": "97285910ee34af6f25983aa7225998cf5e4671ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4a5a33c_ff0ca84e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1002453
      },
      "writtenOn": "2025-06-27T07:12:58Z",
      "side": 1,
      "message": "Seems like 45125 is incorrect. Because it will break as soon as unique combinations of privileges are created in subordinate overrides.\n\n\nI didn\u0027t see 45125 when I pushed my changes, so I don\u0027t know what would be better - to give the suggestion to 45125 or merge this change, because it already contains this fix. Maybe you can quickly merge my change and then and the Author of 45125 will just use them for his purposes ðŸ˜„.\n\n\nAs for naming. Subordinate overrides applies to redfish urls if the path contains all of targets.\nSo, the given example for LogEntry will be applied to \"/redfish/v1/../Chassis/LogServiceCollection/LogService/LogEntryCollection/LogEntry\". It may contain additional keys in the path if I understand dmtf spec correctly. I applied reverse order, because the last part of whole path is Entry, and it is at the beginning of the variable name. \nBut as I said earlier, I\u0027m not sure which naming is better. And I will not strongly defend my position on this issue. If you want to accept my work, I can rename the variables.",
      "parentUuid": "4d6a285c_146e108b",
      "revId": "97285910ee34af6f25983aa7225998cf5e4671ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06bf5522_f4f9d496",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2025-06-27T14:37:11Z",
      "side": 1,
      "message": "\u003eSeems like 45125 is incorrect. Because it will break as soon as unique combinations of privileges are created in subordinate overrides.",
      "parentUuid": "c4a5a33c_ff0ca84e",
      "revId": "97285910ee34af6f25983aa7225998cf5e4671ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ae53227_dabc41cb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2025-06-27T14:37:11Z",
      "side": 1,
      "message": "\u003eSeems like 45125 is incorrect. Because it will break as soon as unique combinations of privileges are created in subordinate overrides.\n\nI\u0027m sure about this. Where is it breaking? -- it would be better to add such comment to 45125.\n\nBTW, the outputs are the same (although the variable names may be different).\n\n\n\u003eI didn\u0027t see 45125 when I pushed my changes, so I don\u0027t know what would be better - to give the suggestion to 45125 or merge this change, because it already contains this fix. Maybe you can quickly merge my change and then and the Author of 45125 will just use them for his purposes \n\n45125 is currently under review. Please add your comment to it and suggest what\u0027s wrong with it.\n\n\u003eAs for naming. Subordinate overrides applies to redfish urls if the path contains all of targets.\n\nAs shown as an example of DMTF spec, the naming scheme is like\n```\n \u003coperation\u003e\u003cEntity\u003e SubOver \u003cTargets\u003e\n```\n\nFor example, it will be like\n```\npatch LogEntry SubOver ChassisLogServiceCollectionLogServiceLogEntryCollection\n```\nwhere operation \u003d patch, Entity\u003d LogEntry, Targets \u003d\n\n```\n       \"Targets\": [\n                        \"Chassis\",\n                        \"LogServiceCollection\",\n                        \"LogService\",\n                        \"LogEntryCollection\"\n                    ],\n\n```\n\nI think it is more natural to the spec, and easier to read (than reversing the target list).",
      "parentUuid": "c4a5a33c_ff0ca84e",
      "revId": "97285910ee34af6f25983aa7225998cf5e4671ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2d0f789_f1533021",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2025-06-27T14:53:43Z",
      "side": 1,
      "message": "IBM doesn\u0027t care about Operator today, although we would support it if the permissions got figured out. Only Admin and ReadOnly today for us. I still think this support (SubordinatePrivileges) is useful.",
      "parentUuid": "3a9cdd0d_3e9d20f5",
      "revId": "97285910ee34af6f25983aa7225998cf5e4671ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "022e4eeb_bfa1fdbe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2025-06-27T14:55:15Z",
      "side": 1,
      "message": "Typically we go with the change that was up for review first unless there is a reason not to. Can you review 45125 ?",
      "parentUuid": "3ae53227_dabc41cb",
      "revId": "97285910ee34af6f25983aa7225998cf5e4671ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "257f13ba_27710403",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1002453
      },
      "writtenOn": "2025-06-27T15:05:04Z",
      "side": 1,
      "message": "My employer cares to this. Someone is using operator role.",
      "parentUuid": "a2d0f789_f1533021",
      "revId": "97285910ee34af6f25983aa7225998cf5e4671ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "925a079c_5ce94eb0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1002453
      },
      "writtenOn": "2025-06-27T15:05:04Z",
      "side": 1,
      "message": "Sounds reasonable. Ok, I\u0027l push a suggestion to 45125.",
      "parentUuid": "3ae53227_dabc41cb",
      "revId": "97285910ee34af6f25983aa7225998cf5e4671ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04bb1a16_8fb01255",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1002453
      },
      "writtenOn": "2025-06-27T15:07:01Z",
      "side": 1,
      "message": "\u003e BTW, the outputs are the same (although the variable names may be different).\n\nYes, because right now Subordinate Override sections do not have unique privileges combinations.",
      "parentUuid": "925a079c_5ce94eb0",
      "revId": "97285910ee34af6f25983aa7225998cf5e4671ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a28ce82_7cbd350a",
        "filename": "scripts/parse_registries.py",
        "patchSetId": 6
      },
      "lineNbr": 631,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2025-06-27T14:37:11Z",
      "side": 1,
      "message": "I\u0027m not sure why L622-L630 is needed, as `privilege_dict` is added in L611-L613?",
      "revId": "97285910ee34af6f25983aa7225998cf5e4671ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fb4b79a_2b1349cf",
        "filename": "scripts/parse_registries.py",
        "patchSetId": 6
      },
      "lineNbr": 631,
      "author": {
        "id": 1002453
      },
      "writtenOn": "2025-06-27T15:05:04Z",
      "side": 1,
      "message": "\u003e I\u0027m not sure why L622-L630 is needed, as privilege_dict is added in L611-L613?\nThere are no guarantees that unique privileges combinations won\u0027t appear in Subordinate Override sections.",
      "parentUuid": "5a28ce82_7cbd350a",
      "revId": "97285910ee34af6f25983aa7225998cf5e4671ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}