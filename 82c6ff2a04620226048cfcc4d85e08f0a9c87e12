{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7d943fed_58c84dc5",
        "filename": "redfish-core/lib/pcie_slots.hpp",
        "patchSetId": 9
      },
      "lineNbr": 277,
      "author": {
        "id": 1000338
      },
      "writtenOn": "2021-09-24T14:07:25Z",
      "side": 1,
      "message": "This could a constexpr or simply specified inline at line 281",
      "range": {
        "startLine": 275,
        "startChar": 0,
        "endLine": 277,
        "endChar": 51
      },
      "revId": "82c6ff2a04620226048cfcc4d85e08f0a9c87e12",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3faac477_c9d35c87",
        "filename": "redfish-core/lib/pcie_slots.hpp",
        "patchSetId": 9
      },
      "lineNbr": 277,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-25T15:32:00Z",
      "side": 1,
      "message": "+1, no need to allocate a string here.",
      "parentUuid": "7d943fed_58c84dc5",
      "range": {
        "startLine": 275,
        "startChar": 0,
        "endLine": 277,
        "endChar": 51
      },
      "revId": "82c6ff2a04620226048cfcc4d85e08f0a9c87e12",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60c08106_757d01b1",
        "filename": "redfish-core/lib/pcie_slots.hpp",
        "patchSetId": 9
      },
      "lineNbr": 277,
      "author": {
        "id": 1001217
      },
      "writtenOn": "2022-03-25T00:12:26Z",
      "side": 1,
      "message": "Made string constexpr and inlined it in the `addLocation` function.",
      "parentUuid": "3faac477_c9d35c87",
      "range": {
        "startLine": 275,
        "startChar": 0,
        "endLine": 277,
        "endChar": 51
      },
      "revId": "82c6ff2a04620226048cfcc4d85e08f0a9c87e12",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29c69d39_649becc0",
        "filename": "redfish-core/lib/pcie_slots.hpp",
        "patchSetId": 9
      },
      "lineNbr": 277,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-25T00:16:59Z",
      "side": 1,
      "message": "Coolio.",
      "parentUuid": "60c08106_757d01b1",
      "range": {
        "startLine": 275,
        "startChar": 0,
        "endLine": 277,
        "endChar": 51
      },
      "revId": "82c6ff2a04620226048cfcc4d85e08f0a9c87e12",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5ada7ac_97897aaa",
        "filename": "redfish-core/lib/pcie_slots.hpp",
        "patchSetId": 9
      },
      "lineNbr": 285,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-25T15:32:00Z",
      "side": 1,
      "message": "This is 8 scopes deep in a lambda, please rearrange to make the code more readable.\n\nSecond off, considering this is looking for location code, can\u0027t we do this at a much higher scope, right after the mapper call on line 333?  Right here you\u0027re assuming that the location interface and the item.PCIe interface exist on the same connection, (because you\u0027re using the same connection name).  You should be getting this information from the mapper instead;  Just add the location interface call to your array on line 338.",
      "range": {
        "startLine": 285,
        "startChar": 0,
        "endLine": 285,
        "endChar": 63
      },
      "revId": "82c6ff2a04620226048cfcc4d85e08f0a9c87e12",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19e236ac_fb1750a5",
        "filename": "redfish-core/lib/pcie_slots.hpp",
        "patchSetId": 9
      },
      "lineNbr": 285,
      "author": {
        "id": 1001217
      },
      "writtenOn": "2022-03-25T00:12:26Z",
      "side": 1,
      "message": "An effort to refactor this logic was made, however I at least have not addressed the second part of your response, Ed can you take another look at this and advise?",
      "parentUuid": "e5ada7ac_97897aaa",
      "range": {
        "startLine": 285,
        "startChar": 0,
        "endLine": 285,
        "endChar": 63
      },
      "revId": "82c6ff2a04620226048cfcc4d85e08f0a9c87e12",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27fd41c0_0cf35343",
        "filename": "redfish-core/lib/pcie_slots.hpp",
        "patchSetId": 9
      },
      "lineNbr": 285,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-25T00:16:59Z",
      "side": 1,
      "message": "One thing at at a time.  https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/39970 needs to merge ahead of this one, and I\u0027d like the priority kept there.  No sense in getting this patchset all cleaned up and reviewed, then having to re-review/rework it once the previous patchset is merged.\n\nWith that said, I looked at the code, and while it\u0027s still very deep in scope, it\u0027s arguably no worse than the code next to it, so it\u0027s probably fine in its current form.  Please plan on making this code more sane (ie not 6 scopes deep) if we plan to add anything more to it beyond this.",
      "parentUuid": "19e236ac_fb1750a5",
      "range": {
        "startLine": 285,
        "startChar": 0,
        "endLine": 285,
        "endChar": 63
      },
      "revId": "82c6ff2a04620226048cfcc4d85e08f0a9c87e12",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cc6288e_b89bb4b0",
        "filename": "redfish-core/lib/pcie_slots.hpp",
        "patchSetId": 9
      },
      "lineNbr": 311,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-25T15:32:00Z",
      "side": 1,
      "message": "This needs range checked before indexing into the array.  The jsonValue could\u0027ve been cleared in between when you located the index and when this lambda ran.",
      "range": {
        "startLine": 311,
        "startChar": 71,
        "endLine": 311,
        "endChar": 78
      },
      "revId": "82c6ff2a04620226048cfcc4d85e08f0a9c87e12",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}