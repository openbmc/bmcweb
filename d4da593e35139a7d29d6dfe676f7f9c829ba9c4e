{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "62e45a57_709ac116",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-23T16:24:31Z",
      "side": 1,
      "message": "Missing DeepOperations?",
      "revId": "d4da593e35139a7d29d6dfe676f7f9c829ba9c4e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93776efb_b5e3118e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-03-23T16:52:34Z",
      "side": 1,
      "message": "Omitting deep operations is legal when the service doesn\u0027t support deep operations according to the spec.\n\n\"Services that support deep PATCH for updating resources shall set the value of the DeepPATCH property in the\nDeepOperations property in the ProtocolFeaturesSupported property within the service root to true .\"\n\nAlso DMTF\u0027s public mockup omits deep operations, https://github.com/DMTF/Redfish/blob/master/mockups/public-bladed/index.json#L7",
      "parentUuid": "62e45a57_709ac116",
      "revId": "d4da593e35139a7d29d6dfe676f7f9c829ba9c4e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb05c247_e840627f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-23T17:21:46Z",
      "side": 1,
      "message": "Omitting all of those properties is legal, my point is we should be consistent: either\n\nA. When we don\u0027t support a feature we omit the property.\nor\nB. When we don\u0027t support a feature, we add the property set to false.\n\nDoes that make sense?\n\nI\u0027m pretty sure that mockup was created before DeepOperations was in the standard.\n\nWith that said, I\u0027m not that worried about DeepOperations.",
      "parentUuid": "93776efb_b5e3118e",
      "revId": "d4da593e35139a7d29d6dfe676f7f9c829ba9c4e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99ffdb23_d600666b",
        "filename": "redfish-core/lib/service_root.hpp",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-23T16:24:31Z",
      "side": 1,
      "message": "kind of a nit, can you declare this as a reference variable so these don\u0027t wrap as bad\n\nnlohmann::json\u0026 features \u003d asyncResp-\u003eres.jsonValue[\"ProtocolFeaturesSupported\"];\n\nfeatures[\"ExpandQuery\"][\"ExpandAll\"] \u003d false;",
      "range": {
        "startLine": 68,
        "startChar": 4,
        "endLine": 68,
        "endChar": 57
      },
      "revId": "d4da593e35139a7d29d6dfe676f7f9c829ba9c4e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d017dcae_dfe73846",
        "filename": "redfish-core/lib/service_root.hpp",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-03-23T17:07:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "99ffdb23_d600666b",
      "range": {
        "startLine": 68,
        "startChar": 4,
        "endLine": 68,
        "endChar": 57
      },
      "revId": "d4da593e35139a7d29d6dfe676f7f9c829ba9c4e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}