{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "99151e60_40b94cb5",
        "filename": "http/server_sent_event.hpp",
        "patchSetId": 21
      },
      "lineNbr": 119,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-03-13T06:48:01Z",
      "side": 1,
      "message": "what was the problem with async_wait?",
      "revId": "00cf5801e0d7b180a3dd8cb0656d7fcb9a890d1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "264b987f_d6706fdf",
        "filename": "http/server_sent_event.hpp",
        "patchSetId": 21
      },
      "lineNbr": 119,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-14T18:00:35Z",
      "side": 1,
      "message": "It didn\u0027t work in my testing, because a test stream doesn\u0027t have async wait.  Doing async_read_some allowed me to not have to wrap\n\nhttps://www.boost.org/doc/libs/develop/libs/beast/doc/html/beast/ref/boost__beast__test__stream.html\n\nIn a separate class to try to simulate all the behaviors of a socket.",
      "parentUuid": "99151e60_40b94cb5",
      "revId": "00cf5801e0d7b180a3dd8cb0656d7fcb9a890d1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "933ea1ca_f87aec30",
        "filename": "http/server_sent_event.hpp",
        "patchSetId": 21
      },
      "lineNbr": 203,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-03-12T06:29:05Z",
      "side": 1,
      "message": "How do we arrive this 10MB buffer limit?",
      "revId": "00cf5801e0d7b180a3dd8cb0656d7fcb9a890d1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "845a59f3_63fb7c14",
        "filename": "http/server_sent_event.hpp",
        "patchSetId": 21
      },
      "lineNbr": 203,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-12T14:13:50Z",
      "side": 1,
      "message": "it’s arbitrary, but higher than we should ever see in practice.",
      "parentUuid": "933ea1ca_f87aec30",
      "revId": "00cf5801e0d7b180a3dd8cb0656d7fcb9a890d1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "814754cf_d1577431",
        "filename": "http/server_sent_event.hpp",
        "patchSetId": 21
      },
      "lineNbr": 203,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-03-13T04:57:35Z",
      "side": 1,
      "message": "yes, right, thinking why 10MB is needed in this case?\nkeep it to 1MB ?",
      "parentUuid": "845a59f3_63fb7c14",
      "revId": "00cf5801e0d7b180a3dd8cb0656d7fcb9a890d1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44c318b9_d9efb2b5",
        "filename": "http/server_sent_event.hpp",
        "patchSetId": 21
      },
      "lineNbr": 203,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-13T05:32:11Z",
      "side": 1,
      "message": "in theory a couple large messages could fill a 1MB buffer.  10mb seemed safer, especially given that there aren’t currently limits.",
      "parentUuid": "814754cf_d1577431",
      "revId": "00cf5801e0d7b180a3dd8cb0656d7fcb9a890d1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42566f0d_fc6d92cc",
        "filename": "http/server_sent_event.hpp",
        "patchSetId": 21
      },
      "lineNbr": 203,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-03-13T06:48:01Z",
      "side": 1,
      "message": "looks like multi_buffer memory will be held till the life time of connection object. So if the multi_buffer allowed to grow to 10MB will not it be considered as memory leak?. Or are you saying that if there is no more data to be sent, the connection will be closed and object will be destroyed? \n\nDo you want to consider using shrink_to_fit after consume?",
      "parentUuid": "44c318b9_d9efb2b5",
      "revId": "00cf5801e0d7b180a3dd8cb0656d7fcb9a890d1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "974242ce_b46467cd",
        "filename": "http/server_sent_event.hpp",
        "patchSetId": 21
      },
      "lineNbr": 203,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-14T18:00:35Z",
      "side": 1,
      "message": "calling shrink_to_fit seems like a good idea.  I don\u0027t think that would be part of this commit, as it\u0027s not changing anything to do with the buffer. Abhilash, do you want to submit that as its own patch?",
      "parentUuid": "42566f0d_fc6d92cc",
      "revId": "00cf5801e0d7b180a3dd8cb0656d7fcb9a890d1a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}