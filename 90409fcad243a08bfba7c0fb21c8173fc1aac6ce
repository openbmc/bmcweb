{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e79a3e34_6737b6fc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-27T20:18:32Z",
      "side": 1,
      "message": "This doesn\u0027t seem right.  The journal isnt\u0027 structured logging.  Triggers are structured.",
      "range": {
        "startLine": 11,
        "startChar": 47,
        "endLine": 12,
        "endChar": 41
      },
      "revId": "90409fcad243a08bfba7c0fb21c8173fc1aac6ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c8204ee_8672b4d6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2025-07-03T09:45:52Z",
      "side": 1,
      "message": "I\u0027m not sure I got this. I thought that journal itself has structured form as well? As per description from freedesktop journald documentation, \"it creates and maintains structured, indexed journals based on logging information that is received from a variety of sources\" (ref.: https://www.freedesktop.org/software/systemd/man/latest/systemd-journald.service.html). Am I missing something?",
      "parentUuid": "e79a3e34_6737b6fc",
      "range": {
        "startLine": 11,
        "startChar": 47,
        "endLine": 12,
        "endChar": 41
      },
      "revId": "90409fcad243a08bfba7c0fb21c8173fc1aac6ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dd47e08_da1284fd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-07-03T14:27:05Z",
      "side": 1,
      "message": "The test you need to run is this:\n1. Set up a trigger.\n2. Cause your system to exceed the trigger threshold\n3. Check the log service you\u0027ve specified for Trigger. TriggerNumericAboveUpperWarning message.\n\nThat will indicate which log service your message is going to, and what should be in this property.  Also keep in mind that this log service is dependent on meson options, so please make sure that you add the appropriate meson options.  If journal messageid logging is disabled, this property shouldn\u0027t show up.",
      "parentUuid": "4c8204ee_8672b4d6",
      "range": {
        "startLine": 11,
        "startChar": 47,
        "endLine": 12,
        "endChar": 41
      },
      "revId": "90409fcad243a08bfba7c0fb21c8173fc1aac6ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5eb8910c_63961662",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2025-07-15T10:41:08Z",
      "side": 1,
      "message": "This is exactly how I\u0027ve tested it prior to opening the review. I\u0027ve appended the commit message with exact steps. To sum up, there are 3 possible trigger action values to set up:\n\n- LogToLogService - upon activation, a journal log will be created by Telemetry service (e.g. Discrete condition \u0027OnChange\u0027 of trigger \u0027TelemetryService/TestTriggerDiscreteOnChange\u0027 is met on sensor: /redfish/v1/Chassis/AVC_Baseboard/Sensors/temperature_Right_DIMM_Bank_Temp, recorded value: 24.187000, timestamp: 2025-07-15T10:10:45.505Z), and a corresponding entry will be added to /redfish/v1/Managers/bmc/LogServices/Journal\n\n- RedfishEvent - activation creates an entry in /redfish/v1/Systems/system/LogServices/EventLog/Entries (example entry might contain \"MessageId\": \"Telemetry.1.0.TriggerDiscreteConditionMet\")\n\n- RedfishMetricReport - activation will initiate creation of a Report specified by one or more MetricReportDefinition objects listed within `Links` property.\n\nThe situation covered by this patch is the first one. Code responsible for creating a journal entry is present here: https://github.com/openbmc/telemetry/blob/7d87668cf590570896bfb33974b06fbdc16bc47b/src/trigger_actions.cpp, LogToJournal::commit. \n\nIf I understand correctly, Your concern is that journal entry doesn\u0027t contain message ID pointing to corresponding entry from Redfish Message Registry (such as TriggerNumericAboveUpperWarning or TriggerDiscreteConditionMet)? I guess this can be corrected on backened by adding a proper field to journal entry, or even reshaping the whole message so that it matches the schema.",
      "parentUuid": "5dd47e08_da1284fd",
      "range": {
        "startLine": 11,
        "startChar": 47,
        "endLine": 12,
        "endChar": 41
      },
      "revId": "90409fcad243a08bfba7c0fb21c8173fc1aac6ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8df326f1_2b6eddd0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-07-15T19:23:47Z",
      "side": 1,
      "message": "\u003e Your concern is that journal entry doesn\u0027t contain message ID pointing to corresponding entry from Redfish Message Registry \n\nCorrect, that and even if we did contain the correct message id, there isn\u0027t mode checks to ensure that we\u0027re in the right mode.",
      "parentUuid": "5eb8910c_63961662",
      "range": {
        "startLine": 11,
        "startChar": 47,
        "endLine": 12,
        "endChar": 41
      },
      "revId": "90409fcad243a08bfba7c0fb21c8173fc1aac6ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e1721a6_7b0ee3ab",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2025-07-17T11:00:34Z",
      "side": 1,
      "message": "My 5 cents:\n\n\u003eI guess this can be corrected on backened by adding a proper field to journal entry, or even reshaping the whole message so that it matches the schema.\n\nOkay, so we don\u0027t follow the Data Model. Per `TriggerActionMessage`:\n```\nTelemetry : Messages from the Telemetry Message Registry.\nâ€¢ This value shall indicate that messages generated in response to a trigger action shall utilize\nmessages from the Telemetry Message Registry. If this property is not supplied or supported, this\nvalue should be used as the default for this trigger\n```\n\nIt seems like we\u0027ve uncovered that implementation on the `openbmc/telemetry` side is lacking. It seems that this property and description was added after `Trigger` schema was implemented, which would explain the discrepancy. To make the implementation proper, we should bump schema to 1.4+ and revisit all journal logs.\n\nFor instance:\nhttps://github.com/openbmc/telemetry/blob/7d87668cf590570896bfb33974b06fbdc16bc47b/src/trigger_actions.cpp#L176 should be rather defined and expressed like TriggerDiscreteConditionMet mandates.\n\nI\u0027m still not clear what the expected format in `LogService` should be. Is it fair to assume that Journal entry, currently like this:\n```\n{\n  \"@odata.id\": \"/redfish/v1/Managers/bmc/LogServices/Journal/Entries/ad02a87606fb4cec92f34f5be3e33301_1617606480490\",\n  \"@odata.type\": \"#LogEntry.v1_9_0.LogEntry\",\n  \"Created\": \"2025-07-17T10:13:39.344178+00:00\",\n  \"EntryType\": \"Oem\",\n  \"Id\": \"ad02a87606fb4cec92f34f5be3e33301_1617606480490\",\n  \"Message\": \"rsyslogd: imjournal: journal files changed, reloading... [v8.2402.0 try https://www.rsyslog.com/e/0 ]\",\n  \"Name\": \"BMC Journal Entry\",\n  \"OemRecordFormat\": \"BMC Journal Entry\",\n  \"Severity\": \"OK\"\n}\n```\n\nshould be replaced with properly formatted `Redfish Event`, as expressed by `redfish/v1/Systems/system/LogServices/EventLog/Entries`, eg:\n```\n{\n  \"@odata.id\": \"/redfish/v1/Systems/system/LogServices/EventLog/Entries/1749736186\",\n  \"@odata.type\": \"#LogEntry.v1_9_0.LogEntry\",\n  \"Created\": \"2025-06-12T13:49:46+00:00\",\n  \"EntryType\": \"Event\",\n  \"Id\": \"1749736186\",\n  \"Message\": \"Invalid username or password attempted on HTTPS.\",\n  \"MessageArgs\": [\n    \"HTTPS\"\n  ],\n  \"MessageId\": \"OpenBMC.0.1.InvalidLoginAttempted\",\n  \"Name\": \"System Event Log Entry\",\n  \"Severity\": \"Warning\"\n}\n```\n?\n\nIf so - what\u0027s the point of having separate implementation? Perhaps what we need to do under the hood is to treat `LogToLogService`  equivalently to `RedfishEvent` , just have extra property to point user to the `redfish/v1/Systems/system/LogServices/EventLog`?",
      "parentUuid": "8df326f1_2b6eddd0",
      "range": {
        "startLine": 11,
        "startChar": 47,
        "endLine": 12,
        "endChar": 41
      },
      "revId": "90409fcad243a08bfba7c0fb21c8173fc1aac6ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "012d637b_776586fd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2025-07-17T13:34:00Z",
      "side": 1,
      "message": "\u003e Also keep in mind that this log service is dependent on meson options, so please make sure that you add the appropriate meson options. If journal messageid logging is disabled, this property shouldn\u0027t show up.\n\nI assume that `redfish-bmc-journal` is the option You had in mind. Did a minor change in code. Could You take a look and specify whether it\u0027s a step in the right direction?",
      "parentUuid": "4e1721a6_7b0ee3ab",
      "range": {
        "startLine": 11,
        "startChar": 47,
        "endLine": 12,
        "endChar": 41
      },
      "revId": "90409fcad243a08bfba7c0fb21c8173fc1aac6ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f65419c5_37612a25",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-07-17T16:48:14Z",
      "side": 1,
      "message": "The code can answer it better than I can.  If the above behavior doesn\u0027t work with the option, then it needs fixed.\n\n\u003e If so - what\u0027s the point of having separate implementation?\n\nSome people didn\u0027t like the implementation that was there.\n\nJournal gives raw access to the journal.  EventLog gives structured access over dbus (which is also in the journal).",
      "parentUuid": "012d637b_776586fd",
      "range": {
        "startLine": 11,
        "startChar": 47,
        "endLine": 12,
        "endChar": 41
      },
      "revId": "90409fcad243a08bfba7c0fb21c8173fc1aac6ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53d6d5f7_21e1a3ae",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2025-07-18T07:53:21Z",
      "side": 1,
      "message": "Maybe we should split the conversation, as what MichaÅ‚ is trying to do (mend current implementation) and I wanted to talk about (if we need journal support at all) are separate things.\n\nIt seems that MichaÅ‚:\n- has invalidated `LogToLogService` action when Journal support is opted-out;\n- hidden `LogService` entry in the same condition;\n\nIt seems like we\u0027ve reached our goal of having implementation consistent with intent of the spec (at least on the Properties side). \n\nLet\u0027s carry message format conversation elsewhere, OK?",
      "parentUuid": "f65419c5_37612a25",
      "range": {
        "startLine": 11,
        "startChar": 47,
        "endLine": 12,
        "endChar": 41
      },
      "revId": "90409fcad243a08bfba7c0fb21c8173fc1aac6ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4bbf43a_15545f14",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-04T16:20:19Z",
      "side": 1,
      "message": "\u003e It seems like we\u0027ve reached our goal of having implementation consistent with intent of the spec (at least on the Properties side).\n\nI don\u0027t see that to be the case, and if we had done that, we need some level of tested statement that shows that we are generating the appropriate message, otherwise we haven\u0027t met the intent of the spec.",
      "parentUuid": "53d6d5f7_21e1a3ae",
      "range": {
        "startLine": 11,
        "startChar": 47,
        "endLine": 12,
        "endChar": 41
      },
      "revId": "90409fcad243a08bfba7c0fb21c8173fc1aac6ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "583ea2f4_1c46fa2d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 14,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-27T20:18:32Z",
      "side": 1,
      "message": "Still doesn\u0027t answer WHY a client would want this.",
      "revId": "90409fcad243a08bfba7c0fb21c8173fc1aac6ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}