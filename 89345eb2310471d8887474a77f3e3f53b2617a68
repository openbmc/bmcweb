{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6251cfab_69fcc5d1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-02-14T21:32:11Z",
      "side": 1,
      "message": "Also have https://gerrit.openbmc.org/c/openbmc/bmcweb/+/60868",
      "revId": "89345eb2310471d8887474a77f3e3f53b2617a68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f79d819f_f9cde9c3",
        "filename": "redfish-core/lib/pcie_slots.hpp",
        "patchSetId": 4
      },
      "lineNbr": 129,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-02-14T20:06:27Z",
      "side": 1,
      "message": "Similar to redfishSlotType handling, this would also have the same issue if *generation \u003d\u003d \"xyz.openbmc_project.Inventory.Item.PCIeSlot.Generations.Unknown\".\n\nSo, this would be better to rewrite as\n\n-       slot[\"PCIeType\"] \u003d *pcieType;\n+       if (*pcieType !\u003d pcie_device::PCIeTypes::Invalid)\n+       {\n+           slot[\"PCIeType\"] \u003d *pcieType;\n+       }",
      "range": {
        "startLine": 129,
        "startChar": 0,
        "endLine": 129,
        "endChar": 37
      },
      "revId": "89345eb2310471d8887474a77f3e3f53b2617a68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1aace62_a7429eb2",
        "filename": "redfish-core/lib/pcie_slots.hpp",
        "patchSetId": 4
      },
      "lineNbr": 129,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2023-02-15T02:24:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f79d819f_f9cde9c3",
      "range": {
        "startLine": 129,
        "startChar": 0,
        "endLine": 129,
        "endChar": 37
      },
      "revId": "89345eb2310471d8887474a77f3e3f53b2617a68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}