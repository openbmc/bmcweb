{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "82621fe4_e57bbdc2",
        "filename": "http/http_connection.hpp",
        "patchSetId": 8
      },
      "lineNbr": 243,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-06-16T22:56:48Z",
      "side": 1,
      "message": "This is undefined behavior.",
      "range": {
        "startLine": 243,
        "startChar": 12,
        "endLine": 243,
        "endChar": 30
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eecc93a3_d12be84e",
        "filename": "http/http_connection.hpp",
        "patchSetId": 8
      },
      "lineNbr": 243,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2021-06-21T16:25:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "82621fe4_e57bbdc2",
      "range": {
        "startLine": 243,
        "startChar": 12,
        "endLine": 243,
        "endChar": 30
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "911425e7_de317ef8",
        "filename": "include/login_routes.hpp",
        "patchSetId": 8
      },
      "lineNbr": 144,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-06-16T22:54:33Z",
      "side": 1,
      "message": "Please abstract this lambda contents into its own method.",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 144,
        "endChar": 48
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77084f68_9bd5cd29",
        "filename": "include/login_routes.hpp",
        "patchSetId": 8
      },
      "lineNbr": 144,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2021-06-21T16:25:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "911425e7_de317ef8",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 144,
        "endChar": 48
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec3762ea_da3d6734",
        "filename": "include/login_routes.hpp",
        "patchSetId": 8
      },
      "lineNbr": 148,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-06-16T22:54:33Z",
      "side": 1,
      "message": "Please don\u0027t use map here;  Use std::vector\u003cstd::pair\u003c\u003e\u003e",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 148,
        "endChar": 76
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f67ba78_7837509b",
        "filename": "include/login_routes.hpp",
        "patchSetId": 8
      },
      "lineNbr": 148,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2021-06-21T16:25:39Z",
      "side": 1,
      "message": "is there any particular reason to avoid std::map?\ncan we use flat_map here?",
      "parentUuid": "ec3762ea_da3d6734",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 148,
        "endChar": 76
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cd88334_47e89323",
        "filename": "include/login_routes.hpp",
        "patchSetId": 8
      },
      "lineNbr": 148,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-06-23T10:39:55Z",
      "side": 1,
      "message": "std::map should be slower than std::vector of pairs, number of elements returned from async_method_call is quite small so sorting and fragmenting memory in this use case won\u0027t bring any benefits. vector of pairs should be faster and more memory efficient.\n\nflat_map is sorted vector of pairs. We if compared to std::vector of pairs we only have extra sorting. Again considering number of elements in that container it may be not worth it from performance point of view (I may be wrong here), still I would say yes we won\u0027t notice the difference between flat_map and vector of pairs while we might notice the difference if std::map is used (mostly because memory allocations).\n\nAnyway I\u0027m not the one to decide here.",
      "parentUuid": "6f67ba78_7837509b",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 148,
        "endChar": 76
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4d6ad46_492b510c",
        "filename": "include/login_routes.hpp",
        "patchSetId": 8
      },
      "lineNbr": 148,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2021-06-28T11:09:57Z",
      "side": 1,
      "message": "modified to use std::vector pair",
      "parentUuid": "3cd88334_47e89323",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 148,
        "endChar": 76
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab93ae14_10ec3f0a",
        "filename": "include/login_routes.hpp",
        "patchSetId": 8
      },
      "lineNbr": 148,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-06-30T21:37:09Z",
      "side": 1,
      "message": "Fixed to use dbus_utilities.",
      "parentUuid": "f4d6ad46_492b510c",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 148,
        "endChar": 76
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1827281_11823abb",
        "filename": "include/login_routes.hpp",
        "patchSetId": 8
      },
      "lineNbr": 154,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-06-16T22:54:33Z",
      "side": 1,
      "message": "Need to set an internalError here?",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 154,
        "endChar": 39
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "359bdb12_d1cf3e82",
        "filename": "include/login_routes.hpp",
        "patchSetId": 8
      },
      "lineNbr": 154,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2021-06-21T16:25:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1827281_11823abb",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 154,
        "endChar": 39
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1007887b_a6bf8492",
        "filename": "include/login_routes.hpp",
        "patchSetId": 8
      },
      "lineNbr": 157,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-06-16T22:54:33Z",
      "side": 1,
      "message": "This seems wrong that we\u0027re taking an opaque object, and parsing for a specific property, and requiring it.  If this is required, it needs to be a direct property on the resource itself, not a map.",
      "range": {
        "startLine": 157,
        "startChar": 0,
        "endLine": 157,
        "endChar": 79
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64d03dd7_e1d69c41",
        "filename": "include/login_routes.hpp",
        "patchSetId": 8
      },
      "lineNbr": 157,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2021-06-21T16:25:39Z",
      "side": 1,
      "message": "GetUserInfo is a D-bus method call with returns  dict[string,variant[string,array[string],boolean]]\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/User/Manager.interface.yaml#L79\n\nso need to look for \"UserPrivilege\" key to get privilege value",
      "parentUuid": "1007887b_a6bf8492",
      "range": {
        "startLine": 157,
        "startChar": 0,
        "endLine": 157,
        "endChar": 79
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0d87816_bd460124",
        "filename": "include/login_routes.hpp",
        "patchSetId": 8
      },
      "lineNbr": 157,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-07-13T03:11:07Z",
      "side": 1,
      "message": "Right, that\u0027s kind of my point, it\u0027s an opaque dictionary API.  If it were a structure with a known struct (and required fields) it generally would be a regular struct, not a dict.  I\u0027m not sure why dict was chosen here, but I\u0027m not sure I want to rely on it in bmcweb, considering that at a type level, the fields can change without warning.\n\nWith that said, I need to do more research and make sure I actually understand the problem here.",
      "parentUuid": "64d03dd7_e1d69c41",
      "range": {
        "startLine": 157,
        "startChar": 0,
        "endLine": 157,
        "endChar": 79
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "442453fb_95be5bdd",
        "filename": "include/login_routes.hpp",
        "patchSetId": 8
      },
      "lineNbr": 157,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2021-07-13T05:08:30Z",
      "side": 1,
      "message": "sure Ed.",
      "parentUuid": "e0d87816_bd460124",
      "range": {
        "startLine": 157,
        "startChar": 0,
        "endLine": 157,
        "endChar": 79
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d34f8ec6_51cfeaf0",
        "filename": "include/login_routes.hpp",
        "patchSetId": 8
      },
      "lineNbr": 157,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-06-30T21:37:09Z",
      "side": 1,
      "message": "Fixed in latest.",
      "parentUuid": "442453fb_95be5bdd",
      "range": {
        "startLine": 157,
        "startChar": 0,
        "endLine": 157,
        "endChar": 79
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "435fe643_88f40dda",
        "filename": "include/login_routes.hpp",
        "patchSetId": 8
      },
      "lineNbr": 158,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-06-16T22:54:33Z",
      "side": 1,
      "message": "Handle your errors here please.",
      "range": {
        "startLine": 158,
        "startChar": 0,
        "endLine": 158,
        "endChar": 63
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c5e9b2c_9136d9b7",
        "filename": "include/login_routes.hpp",
        "patchSetId": 8
      },
      "lineNbr": 158,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2021-06-21T16:25:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "435fe643_88f40dda",
      "range": {
        "startLine": 158,
        "startChar": 0,
        "endLine": 158,
        "endChar": 63
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "715c3138_0f8c3cc1",
        "filename": "redfish-core/lib/redfish_sessions.hpp",
        "patchSetId": 8
      },
      "lineNbr": 195,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-06-16T22:54:33Z",
      "side": 1,
      "message": "Please don\u0027t capture req in a lambda",
      "range": {
        "startLine": 195,
        "startChar": 21,
        "endLine": 195,
        "endChar": 24
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea30f015_8cbba978",
        "filename": "redfish-core/lib/redfish_sessions.hpp",
        "patchSetId": 8
      },
      "lineNbr": 195,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2021-06-21T16:25:39Z",
      "side": 1,
      "message": "this is need for req.ipAddress",
      "parentUuid": "715c3138_0f8c3cc1",
      "range": {
        "startLine": 195,
        "startChar": 21,
        "endLine": 195,
        "endChar": 24
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5decb993_996b5c65",
        "filename": "redfish-core/lib/redfish_sessions.hpp",
        "patchSetId": 8
      },
      "lineNbr": 195,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-06-23T10:39:55Z",
      "side": 1,
      "message": "If you need only ipAddress do it like this:\n\nipAddress \u003d req.ipAddress this way you only capture what you need.",
      "parentUuid": "ea30f015_8cbba978",
      "range": {
        "startLine": 195,
        "startChar": 21,
        "endLine": 195,
        "endChar": 24
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30c3e73f_2a46ca2a",
        "filename": "redfish-core/lib/redfish_sessions.hpp",
        "patchSetId": 8
      },
      "lineNbr": 195,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2021-06-28T11:09:57Z",
      "side": 1,
      "message": "done",
      "parentUuid": "5decb993_996b5c65",
      "range": {
        "startLine": 195,
        "startChar": 21,
        "endLine": 195,
        "endChar": 24
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "177a5275_8a02c6a7",
        "filename": "redfish-core/lib/redfish_sessions.hpp",
        "patchSetId": 8
      },
      "lineNbr": 225,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-06-16T22:54:33Z",
      "side": 1,
      "message": "Why is ldap special here?  From a user perspective, bmcweb should not be concerned about what the backend is, the user manager needs to be providing the correct data.",
      "range": {
        "startLine": 223,
        "startChar": 0,
        "endLine": 225,
        "endChar": 74
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c080c81f_69cf505e",
        "filename": "redfish-core/lib/redfish_sessions.hpp",
        "patchSetId": 8
      },
      "lineNbr": 225,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2021-06-21T16:25:39Z",
      "side": 1,
      "message": "yes. I understand your point, but I could not find other way to do this.\n\nuser manager store user role for all local users (dbus object)\nbut for LDAP users  User-manager doesn\u0027t store user role for each user(user role stored for ldap group)\nand as part of GetUserInfo D-bus call gets role of particular LDAP user.\nthis code is to update cache with particular ldap user role.",
      "parentUuid": "177a5275_8a02c6a7",
      "range": {
        "startLine": 223,
        "startChar": 0,
        "endLine": 225,
        "endChar": 74
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f1cd99e_cf3b100a",
        "filename": "redfish-core/lib/redfish_sessions.hpp",
        "patchSetId": 8
      },
      "lineNbr": 280,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-06-23T10:39:55Z",
      "side": 1,
      "message": "Why not delete it?",
      "range": {
        "startLine": 259,
        "startChar": 0,
        "endLine": 280,
        "endChar": 6
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "edc957bc_d7ef9902",
        "filename": "redfish-core/lib/redfish_sessions.hpp",
        "patchSetId": 8
      },
      "lineNbr": 280,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2021-06-28T11:09:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6f1cd99e_cf3b100a",
      "range": {
        "startLine": 259,
        "startChar": 0,
        "endLine": 280,
        "endChar": 6
      },
      "revId": "511be1755161ffe8c3ac6b2fa3b6f39207a7c4ce",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}