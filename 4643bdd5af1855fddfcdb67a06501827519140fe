{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fbf58ad7_a49149da",
        "filename": ".clang-tidy",
        "patchSetId": 5
      },
      "lineNbr": 337,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-09-28T20:21:02Z",
      "side": 1,
      "message": "Are we sure we want to set both of these?  I could see a common case where a function is heavily commented with block comments (which would in fact improve the readability), but would still fail the check because we\u0027re enforcing line length, not statement count.  \n\nFWIW, the default that tidy sets for StatementThreshold is 800, and doesn\u0027t enforce line count at all.  Why did we decide to enforce actual line count, and not only rely on statement count?  Why did we set statement count to less than half of the defaults?",
      "range": {
        "startLine": 336,
        "startChar": 0,
        "endLine": 337,
        "endChar": 68
      },
      "revId": "4643bdd5af1855fddfcdb67a06501827519140fe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de92d387_04921dc1",
        "filename": ".clang-tidy",
        "patchSetId": 5
      },
      "lineNbr": 341,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-09-28T20:21:02Z",
      "side": 1,
      "message": "Similar ask for the other thresholds.  tidy defaults don\u0027t enable any of these checks, why did we decide they were needed?",
      "revId": "4643bdd5af1855fddfcdb67a06501827519140fe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60d6ff19_aa546c58",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-09-28T17:27:51Z",
      "side": 1,
      "message": "Overall, my comments in the review sound negative, but I do fully support refactoring to make code better.  FWIW, I\u0027ve actively turned on these checks before and used them to guide which functions I should personally refactor (which lead to refactorings like removing black_magic);  The only key for me is that:\n\n1. The rules are documented very clearly.  This is one of the few clang-tidy rules that effects ALL code, not just a specific call or pattern, so we need to be crystal clear about what the rules are, and what the expectation is when the limit is hit, or someone needs to make a modification to a function that doesn\u0027t follow the rules.\n2. We have a reasonable way to ensure that the rules are met for new patchsets.\n3. We have people lined up to actually do the refactoring work to get the codebase to compliance.",
      "revId": "4643bdd5af1855fddfcdb67a06501827519140fe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d876cff2_8cfc348a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2023-09-28T18:20:45Z",
      "side": 1,
      "message": "agreed.",
      "parentUuid": "60d6ff19_aa546c58",
      "revId": "4643bdd5af1855fddfcdb67a06501827519140fe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}