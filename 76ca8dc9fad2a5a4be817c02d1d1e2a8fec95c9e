{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b4edaf06_5f0c61f6",
        "filename": "redfish-core/include/registries.hpp",
        "patchSetId": 11
      },
      "lineNbr": 91,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-07-25T06:33:36Z",
      "side": 1,
      "message": "nit: how about changing while(true) to use break condition\n\nwhile(size_t stringIndex \u003d msg.find(\u0027%\u0027); stringIndex !\u003d std::string::npos) {\n // ...\n}\n\nreturn ret + msg;",
      "range": {
        "startLine": 67,
        "startChar": 4,
        "endLine": 91,
        "endChar": 5
      },
      "revId": "76ca8dc9fad2a5a4be817c02d1d1e2a8fec95c9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a579668f_12100ca4",
        "filename": "redfish-core/include/registries.hpp",
        "patchSetId": 11
      },
      "lineNbr": 91,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-25T15:11:44Z",
      "side": 1,
      "message": "The above doesn\u0027t seem to compile.  I don\u0027t think you can put semicolon separated statements in a while loop.\n\nAlso, for what you wrote, I\u0027d rather use operator +\u003d on the ret object, because it\u0027s already called reserve() for the correct size string, whereas what you wrote will construct a new string.\n\nHappy to make changes to the while loop, I\u0027m just not sure how to accomplish what you\u0027re trying to do.",
      "parentUuid": "b4edaf06_5f0c61f6",
      "range": {
        "startLine": 67,
        "startChar": 4,
        "endLine": 91,
        "endChar": 5
      },
      "revId": "76ca8dc9fad2a5a4be817c02d1d1e2a8fec95c9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3c665a5_f57cc88f",
        "filename": "redfish-core/include/registries.hpp",
        "patchSetId": 11
      },
      "lineNbr": 91,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-25T16:02:16Z",
      "side": 1,
      "message": "I did manage to remove the early break by using a for statement, but it duplicates the msg.find() call unfortunately, because .  I\u0027ve pushed it to see if you find that better.  I\u0027m happy to do either.",
      "parentUuid": "a579668f_12100ca4",
      "range": {
        "startLine": 67,
        "startChar": 4,
        "endLine": 91,
        "endChar": 5
      },
      "revId": "76ca8dc9fad2a5a4be817c02d1d1e2a8fec95c9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ae9c337_40ea21d0",
        "filename": "redfish-core/include/registries.hpp",
        "patchSetId": 11
      },
      "lineNbr": 91,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-25T16:08:45Z",
      "side": 1,
      "message": "\"because the first index needs initialized\" is what that sentence should\u0027ve read.",
      "parentUuid": "b3c665a5_f57cc88f",
      "range": {
        "startLine": 67,
        "startChar": 4,
        "endLine": 91,
        "endChar": 5
      },
      "revId": "76ca8dc9fad2a5a4be817c02d1d1e2a8fec95c9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "543a650a_d6e314ce",
        "filename": "redfish-core/include/registries.hpp",
        "patchSetId": 11
      },
      "lineNbr": 91,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-07-26T07:55:19Z",
      "side": 1,
      "message": "My bad. I assumed that new standard add initializer also to while loop. But it only adds it to [if, for, range for, switch]\n\nEither while(true) or for loop are fine.",
      "parentUuid": "9ae9c337_40ea21d0",
      "range": {
        "startLine": 67,
        "startChar": 4,
        "endLine": 91,
        "endChar": 5
      },
      "revId": "76ca8dc9fad2a5a4be817c02d1d1e2a8fec95c9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}