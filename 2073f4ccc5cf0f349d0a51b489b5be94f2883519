{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "64ee442e_e62bfd0c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-23T21:48:46Z",
      "side": 1,
      "message": "Couple nits, otherwise LGTM",
      "revId": "2073f4ccc5cf0f349d0a51b489b5be94f2883519",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6d1b1c7_1c0e69a4",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1196,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-23T21:48:46Z",
      "side": 1,
      "message": "super nitpick, more informational;  If you want to change it cool.  If not, it\u0027s all good.\n\nIf you have a nlohmann object that you KNOW will be an object in all cases, it\u0027s better to use nlohmann::json::object_t, which avoids a couple branches, and a couple weird cases, like you have on 1203\n\n\nnlohmann::json::empty() has branches of behavior dependent on the type.  null returns true, array checks for array empty, ect.\n\nIf you declare the actual type you need (object_t in this case, or array_t if you want an array) it generates slightly less code, and has better defined behavior.\n\n\nI\u0027m actually working on trying to make object_t the base Response type, but I\u0027m not quite there yet:\n\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/52570",
      "range": {
        "startLine": 1196,
        "startChar": 15,
        "endLine": 1196,
        "endChar": 30
      },
      "revId": "2073f4ccc5cf0f349d0a51b489b5be94f2883519",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0321a4e0_6bc59448",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1196,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2022-06-23T22:19:06Z",
      "side": 1,
      "message": "I got a compilation error when nlohmann::json::object_t was passed to fillEventLogEntryJson().  Will constructing it as an object() work?",
      "parentUuid": "e6d1b1c7_1c0e69a4",
      "range": {
        "startLine": 1196,
        "startChar": 15,
        "endLine": 1196,
        "endChar": 30
      },
      "revId": "2073f4ccc5cf0f349d0a51b489b5be94f2883519",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72ff6e40_0dbdd80a",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1196,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-23T22:25:43Z",
      "side": 1,
      "message": "you\u0027d have to change the prototype of fillEventLogEntryJson to be an object_t as well.",
      "parentUuid": "0321a4e0_6bc59448",
      "range": {
        "startLine": 1196,
        "startChar": 15,
        "endLine": 1196,
        "endChar": 30
      },
      "revId": "2073f4ccc5cf0f349d0a51b489b5be94f2883519",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6e89db3_8e142b66",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1196,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2022-06-23T22:38:38Z",
      "side": 1,
      "message": "That doesn\u0027t work because fillEventLogEntryJson() is also called for single entries where res.jsonValue is passed in: https://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/log_services.hpp#L1279.\n\nShould I update the single entry with a new nlohmann::json::object_t and move that into res.jsonValue?",
      "parentUuid": "72ff6e40_0dbdd80a",
      "range": {
        "startLine": 1196,
        "startChar": 15,
        "endLine": 1196,
        "endChar": 30
      },
      "revId": "2073f4ccc5cf0f349d0a51b489b5be94f2883519",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c98836f_c90bfd8a",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1196,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-23T22:52:36Z",
      "side": 1,
      "message": "Yeah, you got it, just std::move the result into jsonValue.\n\nI wasn\u0027t excepting this to be so much of a change, so you don\u0027t have to do it if you don\u0027t want.",
      "parentUuid": "a6e89db3_8e142b66",
      "range": {
        "startLine": 1196,
        "startChar": 15,
        "endLine": 1196,
        "endChar": 30
      },
      "revId": "2073f4ccc5cf0f349d0a51b489b5be94f2883519",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80a8dce7_cc81a935",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1196,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2022-06-23T23:08:49Z",
      "side": 1,
      "message": "It\u0027s not too bad.  Would it be better to split it into a separate commit, or just go with this?",
      "parentUuid": "9c98836f_c90bfd8a",
      "range": {
        "startLine": 1196,
        "startChar": 15,
        "endLine": 1196,
        "endChar": 30
      },
      "revId": "2073f4ccc5cf0f349d0a51b489b5be94f2883519",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99d00fc4_0a9fc218",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1203,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-23T21:45:11Z",
      "side": 1,
      "message": "Will fillEventLogEntryJson return 0 and bmcLogEntry is still empty?",
      "range": {
        "startLine": 1203,
        "startChar": 20,
        "endLine": 1203,
        "endChar": 31
      },
      "revId": "2073f4ccc5cf0f349d0a51b489b5be94f2883519",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab94be18_4d079a51",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1203,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2022-06-23T22:19:06Z",
      "side": 1,
      "message": "Yes, it returns 0 even if bmcLogEntry is empty.  I believe this is because returning non-zero causes the whole process to abort and return a general error.",
      "parentUuid": "99d00fc4_0a9fc218",
      "range": {
        "startLine": 1203,
        "startChar": 20,
        "endLine": 1203,
        "endChar": 31
      },
      "revId": "2073f4ccc5cf0f349d0a51b489b5be94f2883519",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fa18c49_2cea7aa5",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1223,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-23T21:46:19Z",
      "side": 1,
      "message": "I thought currently we prefer emplace_back.\n\nAlso we can move the object, right?",
      "range": {
        "startLine": 1223,
        "startChar": 30,
        "endLine": 1223,
        "endChar": 39
      },
      "revId": "2073f4ccc5cf0f349d0a51b489b5be94f2883519",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9410a524_6cabb20a",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1223,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-23T21:48:46Z",
      "side": 1,
      "message": "nit, std::move",
      "range": {
        "startLine": 1223,
        "startChar": 40,
        "endLine": 1223,
        "endChar": 51
      },
      "revId": "2073f4ccc5cf0f349d0a51b489b5be94f2883519",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be64014e_1c4332c6",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1223,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2022-06-23T22:19:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9fa18c49_2cea7aa5",
      "range": {
        "startLine": 1223,
        "startChar": 30,
        "endLine": 1223,
        "endChar": 39
      },
      "revId": "2073f4ccc5cf0f349d0a51b489b5be94f2883519",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77e020f2_8d6ac047",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1223,
      "author": {
        "id": 1000276
      },
      "writtenOn": "2022-06-23T22:19:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9410a524_6cabb20a",
      "range": {
        "startLine": 1223,
        "startChar": 40,
        "endLine": 1223,
        "endChar": 51
      },
      "revId": "2073f4ccc5cf0f349d0a51b489b5be94f2883519",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}