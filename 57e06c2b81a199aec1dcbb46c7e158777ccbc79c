{
  "comments": [
    {
      "key": {
        "uuid": "7d213303_e0fe2888",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 26,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-07-13T15:49:59Z",
      "side": 1,
      "message": "Does this have any impact to current systems?  I suspect a number of systems will see the Name field change, which, while it seems appropriate, we should call out explicitly.",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 26,
        "endChar": 51
      },
      "revId": "57e06c2b81a199aec1dcbb46c7e158777ccbc79c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec3b12c0_f2a994a3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 26,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-07-18T07:14:22Z",
      "side": 1,
      "message": "Yeah, this will affect all systems if the PrettyName property is exists already. I will add some comment on this.\n\nMaybe I should add an option to enable this instead of forcing people to update the Name.\n\nI am not exactly sure how this can/will affect other systems, given that the default names are kind of just there with not much detail.",
      "parentUuid": "7d213303_e0fe2888",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 26,
        "endChar": 51
      },
      "revId": "57e06c2b81a199aec1dcbb46c7e158777ccbc79c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c990145f_ce9e31a2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 29,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-07-13T15:49:59Z",
      "side": 1,
      "message": "More testing needed than that.  Ensuring that the names are correct and fall back in the appropriate places is also required.\n\nAlso, we need to measure the performance impact of doing 2 extra dbus calls per API.",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 24
      },
      "revId": "57e06c2b81a199aec1dcbb46c7e158777ccbc79c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5ffe826_07c5cd4e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 29,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-07-18T07:14:22Z",
      "side": 1,
      "message": "I have added some example for the redfish calls for the new change (with and without the PrettyName property).\n\nI also added some timing information on before the after making the bmcweb change. Not sure how useful it is tho.",
      "parentUuid": "c990145f_ce9e31a2",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 24
      },
      "revId": "57e06c2b81a199aec1dcbb46c7e158777ccbc79c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08ea7975_13d962e4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 29,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-10-13T16:24:42Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b5ffe826_07c5cd4e",
      "range": {
        "startLine": 29,
        "startChar": 0,
        "endLine": 29,
        "endChar": 24
      },
      "revId": "57e06c2b81a199aec1dcbb46c7e158777ccbc79c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e8988c3_a0922662",
        "filename": "redfish-core/include/utils/name_utils.hpp",
        "patchSetId": 9
      },
      "lineNbr": 26,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-07-13T15:49:59Z",
      "side": 1,
      "message": "As written, this is going to do an extra dbus call.  Considering most of these APIs already call getSubTree of some form, I suspect we need to reduce the scope of this helper code down.",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 78
      },
      "revId": "57e06c2b81a199aec1dcbb46c7e158777ccbc79c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "196a26e5_f9c1591d",
        "filename": "redfish-core/include/utils/name_utils.hpp",
        "patchSetId": 9
      },
      "lineNbr": 26,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-07-15T02:59:26Z",
      "side": 1,
      "message": "I have it setup that way before. Moved it all in the helper function to make sure all dependences are met.\n\nI\u0027ll add a new getSubTree call for the ones that does not have it already and clean up this one.",
      "parentUuid": "5e8988c3_a0922662",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 78
      },
      "revId": "57e06c2b81a199aec1dcbb46c7e158777ccbc79c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd826e74_d0a32b80",
        "filename": "redfish-core/include/utils/name_utils.hpp",
        "patchSetId": 9
      },
      "lineNbr": 26,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-07-18T07:14:22Z",
      "side": 1,
      "message": "I have cleaned it up a bit more now to remove the extra dbus call.",
      "parentUuid": "196a26e5_f9c1591d",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 78
      },
      "revId": "57e06c2b81a199aec1dcbb46c7e158777ccbc79c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "292d7389_096f4b4e",
        "filename": "redfish-core/include/utils/name_utils.hpp",
        "patchSetId": 9
      },
      "lineNbr": 26,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-10-13T16:24:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd826e74_d0a32b80",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 78
      },
      "revId": "57e06c2b81a199aec1dcbb46c7e158777ccbc79c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f472259_b06c0c7b",
        "filename": "redfish-core/include/utils/name_utils.hpp",
        "patchSetId": 9
      },
      "lineNbr": 34,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-07-13T15:49:59Z",
      "side": 1,
      "message": "Lifetime issue.  name is a pointer, which might be freed by the time this lambda runs.  Generally it\u0027s recommended to parse out what you need into the base elements (strings/int ect), then pass those by value, as you\u0027ve done with path (references automatically turn to values when passed through a lambda).\n\nI suspect this function shouldn\u0027t be accepting a json object at all.  Looking at your usage, a json pointer object MIGHT be called for, but I haven\u0027t looked down that path in depth.\n\n\nAs written, if line 46 (or any of the other errors get hit) the response object is left with something like\n\n\"Name\": null\n\nBecause the value was never filled in.  While this is an error path, it\u0027s not a pattern we want to continue.  Moving to json pointer (which is essentially a fancy json path spec) would fix that by ensuring that the value is only filled in once the method has succeeded.",
      "range": {
        "startLine": 34,
        "startChar": 26,
        "endLine": 34,
        "endChar": 30
      },
      "revId": "57e06c2b81a199aec1dcbb46c7e158777ccbc79c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "722d3983_d35fdffc",
        "filename": "redfish-core/include/utils/name_utils.hpp",
        "patchSetId": 9
      },
      "lineNbr": 34,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-07-15T02:59:26Z",
      "side": 1,
      "message": "oh yes. I didn\u0027t run into that issue when I pass in a reference of a string before.\n\nI did json pointer because different resources have different field to populate. I\u0027ll try to do it in a different way.\n\n---\n\nFor the json pointer, it is something like...\n\n```\nnlohmann::json test;\n\ntest[\"s\"] \u003d \"t\";\nstd::cout \u003c\u003c test[\"s\"] \u003c\u003c std::endl;\nstd::cout \u003c\u003c test[\"/s\"_json_pointer] \u003c\u003c std::endl;\n```\n\nright?\n\nIs is not actually a pointer? so it does not expires? Eitherway, I\u0027ll still update it.",
      "parentUuid": "5f472259_b06c0c7b",
      "range": {
        "startLine": 34,
        "startChar": 26,
        "endLine": 34,
        "endChar": 30
      },
      "revId": "57e06c2b81a199aec1dcbb46c7e158777ccbc79c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "baca7752_68162bf9",
        "filename": "redfish-core/include/utils/name_utils.hpp",
        "patchSetId": 9
      },
      "lineNbr": 34,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-07-18T07:14:22Z",
      "side": 1,
      "message": "I have refactored the code to use `nlohmann::json_pointer\u003cnlohmann::json\u003e` instead now.",
      "parentUuid": "722d3983_d35fdffc",
      "range": {
        "startLine": 34,
        "startChar": 26,
        "endLine": 34,
        "endChar": 30
      },
      "revId": "57e06c2b81a199aec1dcbb46c7e158777ccbc79c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20f68a07_10ff1810",
        "filename": "redfish-core/include/utils/name_utils.hpp",
        "patchSetId": 9
      },
      "lineNbr": 34,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-10-13T16:24:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "baca7752_68162bf9",
      "range": {
        "startLine": 34,
        "startChar": 26,
        "endLine": 34,
        "endChar": 30
      },
      "revId": "57e06c2b81a199aec1dcbb46c7e158777ccbc79c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7999c99e_224e0745",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 9
      },
      "lineNbr": 450,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-07-13T15:49:59Z",
      "side": 1,
      "message": "As mentioned previously, I would\u0027ve expected to be using this call to the mapper to be \"doing the work\" that\u0027s being done in your helper function.  I suspect it already has the information you need, given it\u0027s finding the Item interfaces.",
      "range": {
        "startLine": 450,
        "startChar": 53,
        "endLine": 450,
        "endChar": 63
      },
      "revId": "57e06c2b81a199aec1dcbb46c7e158777ccbc79c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56cad7f3_5a079252",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 9
      },
      "lineNbr": 450,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-07-18T07:14:22Z",
      "side": 1,
      "message": "Done. I have cleaned it up now to remove the extra dbus call.",
      "parentUuid": "7999c99e_224e0745",
      "range": {
        "startLine": 450,
        "startChar": 53,
        "endLine": 450,
        "endChar": 63
      },
      "revId": "57e06c2b81a199aec1dcbb46c7e158777ccbc79c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}