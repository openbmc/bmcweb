{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5e8b4f6d_dc718fe1",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 359,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-11-04T08:27:06Z",
      "side": 1,
      "message": "This code looks like it breaks setting destinations without a port.\n\nIf we\u0027re truly trying to avoid 0, that\u0027s something the snmp daemon needs to verify.\n\nI see the error is already handled here:\nhttps://github.com/openbmc/bmcweb/blob/02ea923f13de196726ac2f022766a6f80bee1c0a/redfish-core/include/snmp_trap_event_clients.hpp#L138\n\nSo it\u0027s not clear why that\u0027s not working in this case.",
      "range": {
        "startLine": 359,
        "startChar": 0,
        "endLine": 359,
        "endChar": 59
      },
      "revId": "b07942e362fd4e33d9aca9860b6341e995543a5d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfe2bb3e_7288a60f",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 359,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-11-04T08:35:42Z",
      "side": 1,
      "message": "\u003e This code looks like it breaks setting destinations without a port.\n\nIf port is 0, this will not hit this if\n\n\u003e I see the error is already handled here:\nhttps://github.com/openbmc/bmcweb/blob/02ea923f13de196726ac2f022766a6f80bee1c0a/redfish-core/include/snmp_trap_event_clients.hpp#L138\n\nIf an incorrect port is passed, the port_number() method will return 0, so the following setPortDefaults method will set the port to the default value, so there will be no error when calling the addSnmpTrapClient method",
      "parentUuid": "5e8b4f6d_dc718fe1",
      "range": {
        "startLine": 359,
        "startChar": 0,
        "endLine": 359,
        "endChar": 59
      },
      "revId": "b07942e362fd4e33d9aca9860b6341e995543a5d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8ce05d6_771808af",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 359,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-11-04T17:33:33Z",
      "side": 1,
      "message": "\u003e If port is 0, this will not hit this if\n\nah, I see that now.\n\nBut the second part is still valid.  Why is the SNMP daemon accepting bad ports over dbus?",
      "parentUuid": "5e8b4f6d_dc718fe1",
      "range": {
        "startLine": 359,
        "startChar": 0,
        "endLine": 359,
        "endChar": 59
      },
      "revId": "b07942e362fd4e33d9aca9860b6341e995543a5d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efa37825_d6b3587b",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 359,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-11-05T01:15:59Z",
      "side": 1,
      "message": "\u003e \u003e If port is 0, this will not hit this if\n\u003e \n\u003e ah, I see that now.\n\u003e \n\u003e But the second part is still valid.  Why is the SNMP daemon accepting bad ports over dbus?\n\nsetPortDefaults will get the port number through the port_number() method.\nIf the port number is wrong or there is no port number, the return value is 0.\nhttps://github.com/openbmc/bmcweb/blob/master/http/utility.hpp#L495\n\nAt this time, a default port number will be set:\nhttps://github.com/openbmc/bmcweb/blob/master/http/utility.hpp#L513",
      "parentUuid": "f8ce05d6_771808af",
      "range": {
        "startLine": 359,
        "startChar": 0,
        "endLine": 359,
        "endChar": 59
      },
      "revId": "b07942e362fd4e33d9aca9860b6341e995543a5d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d11963e_85808ad0",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 359,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-11-05T01:17:43Z",
      "side": 1,
      "message": "Ah, I understand better now.  Do we understand why boost url accepts ports outside of the valid range?",
      "parentUuid": "efa37825_d6b3587b",
      "range": {
        "startLine": 359,
        "startChar": 0,
        "endLine": 359,
        "endChar": 59
      },
      "revId": "b07942e362fd4e33d9aca9860b6341e995543a5d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ef56ab1_89e48e3d",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 359,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-11-05T01:44:32Z",
      "side": 1,
      "message": "Sorry, I haven\u0027t explored this issue in depth, but from testing, if it is an invalid port, has_port will return true, and port_number() will return 0.",
      "parentUuid": "3d11963e_85808ad0",
      "range": {
        "startLine": 359,
        "startChar": 0,
        "endLine": 359,
        "endChar": 59
      },
      "revId": "b07942e362fd4e33d9aca9860b6341e995543a5d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b45147e_806be85c",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 359,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-11-05T02:03:04Z",
      "side": 1,
      "message": "that sounds like a bug in boost url then?",
      "parentUuid": "0ef56ab1_89e48e3d",
      "range": {
        "startLine": 359,
        "startChar": 0,
        "endLine": 359,
        "endChar": 59
      },
      "revId": "b07942e362fd4e33d9aca9860b6341e995543a5d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d930136_65e82673",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 359,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-11-05T02:11:11Z",
      "side": 1,
      "message": "I\u0027m not sure, maybe this is the intentional design of boost::url?",
      "parentUuid": "6b45147e_806be85c",
      "range": {
        "startLine": 359,
        "startChar": 0,
        "endLine": 359,
        "endChar": 59
      },
      "revId": "b07942e362fd4e33d9aca9860b6341e995543a5d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24e8206e_f02b7692",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 359,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-11-05T16:21:09Z",
      "side": 1,
      "message": "I understand now, fine as is.",
      "parentUuid": "4d930136_65e82673",
      "range": {
        "startLine": 359,
        "startChar": 0,
        "endLine": 359,
        "endChar": 59
      },
      "revId": "b07942e362fd4e33d9aca9860b6341e995543a5d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}