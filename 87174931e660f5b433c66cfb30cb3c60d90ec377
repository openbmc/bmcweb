{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7399a60d_f0a821d1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 24
      },
      "lineNbr": 32,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-03-03T23:06:24Z",
      "side": 1,
      "message": "What does this mean?  Presumably step one would be to set up your certificates?  \n\nIdeally lets get the testing laid out in terms of things a user would do:\n\nGET \u003credfish URI\u003e\nPATCH \u003credfish URI\u003e\netc\n\nso that it\u0027s reproducible by others.\n\nThe script we use for that is below.  Maybe we could add a UPN mode to that for testing so we\u0027re not being overly wordy in a commit message?\n\nhttps://github.com/openbmc/bmcweb/blob/master/scripts/generate_auth_certificates.py",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 32,
        "endChar": 61
      },
      "revId": "87174931e660f5b433c66cfb30cb3c60d90ec377",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e840fbd7_62b29585",
        "filename": "/COMMIT_MSG",
        "patchSetId": 24
      },
      "lineNbr": 32,
      "author": {
        "id": 1002382
      },
      "writtenOn": "2025-03-04T16:37:07Z",
      "side": 1,
      "message": "Hi Ed, I put the details of the test steps on the link here https://justpaste.it/adq6g . I forgot to mention to setup the UPN certificate as the first step\n\nI also tried to use the `generate_auth_certificate.py` script, but unfortunately it is not working properly on my end. It failed on `test_mtls_auth` func. Let me know if my test plan is already sufficient. In the meantime, I will try to investigate why the error happens and get back to this later  \n\n---\n- Check UPN field on X509 certificate\n```\n$ sudo openssl x509 -in $THRIFT_TLS_CL_CERT_PATH -text | grep \"UPN\"\n                othername: UPN::obmc.user_malikrafsan\n```\n- Make sure the UPN name exist inside the bmcweb accounts\n```\n$ curl --cert $THRIFT_TLS_CL_CERT_PATH --key $THRIFT_TLS_CL_KEY_PATH https://$HOSTNAME/redfish/v1/AccountService/Accounts | grep \"obmc.user_malikrafsan\"\n      \"@odata.id\": \"/redfish/v1/AccountService/Accounts/obmc.user_malikrafsan\"\n```\n- Change the `CertificateMappingAttribute` to use UPN\n```\n$ curl --data \u0027{\"MultiFactorAuth\": {\"ClientCertificate\": {\"CertificateMappingAttribute\": \"UserPrincipalName\"}}}\u0027 -H \"content-type: application/json\" -X PATCH --cert $\nTHRIFT_TLS_CL_CERT_PATH --key $THRIFT_TLS_CL_CERT_PATH https://$HOSTNAME/redfish/v1/AccountService\n{\n  \"@Message.ExtendedInfo\": [\n    {\n      \"@odata.type\": \"#Message.v1_1_1.Message\",\n      \"Message\": \"The request completed successfully.\",\n      \"MessageArgs\": [],\n      \"MessageId\": \"Base.1.19.Success\",\n      \"MessageSeverity\": \"OK\",\n      \"Resolution\": \"None.\"\n    }\n  ]\n}\n```\n- Make sure we are still able to query the device\n```\n$ curl --cert $THRIFT_TLS_CL_CERT_PATH --key $THRIFT_TLS_CL_KEY_PATH https://$HOSTNAME/redfish/v1/AccountService/Accounts\n{\n  \"@odata.id\": \"/redfish/v1/AccountService/Accounts\",\n  \"@odata.type\": \"#ManagerAccountCollection.ManagerAccountCollection\",\n...\n}\n```",
      "parentUuid": "7399a60d_f0a821d1",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 32,
        "endChar": 61
      },
      "revId": "87174931e660f5b433c66cfb30cb3c60d90ec377",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a24046d1_3d47d862",
        "filename": "/COMMIT_MSG",
        "patchSetId": 24
      },
      "lineNbr": 32,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-03-04T17:41:41Z",
      "side": 1,
      "message": "\u003e details of the test steps on the link here\n\nWe can\u0027t really be linking a personal pastebin in a commit message.  We don\u0027t have to go crazy with the tested section, just enough that someone as an expert in this stuff could replicate what you did. High level tested statements are fine.\n\n\n\n\u003e but unfortunately it is not working properly on my end. It failed on test_mtls_auth func\n\nHave you tried running it a second time?  There\u0027s a known race condition where we don\u0027t wait for the new root cert to be applied and reloaded before bmcweb returns success.  The second time the script generally suceeds.\n\nIf the script is consistently failing on your system, that\u0027s worrying.  Could you maybe back up to prior to this commit and see if it still fails?\n\n\n\u003e Let me know if my test plan is already sufficient\n\nWhat\u0027s in your commit message is still insufficient.  I have no idea what \"Query using UPN certificate\" means without going to pastebin.\n\nLets get the commit message self contained, or scripts added that test this.",
      "parentUuid": "e840fbd7_62b29585",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 32,
        "endChar": 61
      },
      "revId": "87174931e660f5b433c66cfb30cb3c60d90ec377",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9685bf77_e33c79fe",
        "filename": "/COMMIT_MSG",
        "patchSetId": 24
      },
      "lineNbr": 32,
      "author": {
        "id": 1002382
      },
      "writtenOn": "2025-03-07T14:12:27Z",
      "side": 1,
      "message": "Hi Ed, thanks for the guidance and feedback! After some digging, turned out the error that I encountered is because our internal devices are using `Meta` parse mode by default. It is resolved by changing the `CertificateMappingAttribute` to `CommonName` first\n\nWe have extended the existing `generate_auth_certificate.py` script to also test the UPN case. We also have added some code comments and updated the commit message to better explain the UPN format and the testing that we do. \n\nPlease let us know if you have any further feedback",
      "parentUuid": "a24046d1_3d47d862",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 32,
        "endChar": 61
      },
      "revId": "87174931e660f5b433c66cfb30cb3c60d90ec377",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc5bb00e_c56fbd9a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 24
      },
      "lineNbr": 32,
      "author": {
        "id": 1002382
      },
      "writtenOn": "2025-03-11T16:55:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9685bf77_e33c79fe",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 32,
        "endChar": 61
      },
      "revId": "87174931e660f5b433c66cfb30cb3c60d90ec377",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5daf3a9b_7e24f674",
        "filename": "http/mutual_tls.cpp",
        "patchSetId": 24
      },
      "lineNbr": 7,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-03-03T23:03:47Z",
      "side": 1,
      "message": "lets break out the getHostName() method into a utils class now that this call is shared between multiple things (Should go in include/ because it\u0027s not redfish specific).  We shouldn\u0027t need to #include a whole redfish router implementation just to get one method.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 31
      },
      "revId": "87174931e660f5b433c66cfb30cb3c60d90ec377",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0847935b_d43d714b",
        "filename": "http/mutual_tls.cpp",
        "patchSetId": 24
      },
      "lineNbr": 7,
      "author": {
        "id": 1002382
      },
      "writtenOn": "2025-03-04T15:05:06Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "5daf3a9b_7e24f674",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 31
      },
      "revId": "87174931e660f5b433c66cfb30cb3c60d90ec377",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2d19bcd_2130c0ef",
        "filename": "http/mutual_tls.cpp",
        "patchSetId": 24
      },
      "lineNbr": 53,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-03-03T23:10:36Z",
      "side": 1,
      "message": "Don\u0027t pass strings by value/copy please.  For new code pass by string_view",
      "range": {
        "startLine": 53,
        "startChar": 40,
        "endLine": 53,
        "endChar": 51
      },
      "revId": "87174931e660f5b433c66cfb30cb3c60d90ec377",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9118416a_41b6c6ee",
        "filename": "http/mutual_tls.cpp",
        "patchSetId": 24
      },
      "lineNbr": 53,
      "author": {
        "id": 1002382
      },
      "writtenOn": "2025-03-04T15:05:06Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "d2d19bcd_2130c0ef",
      "range": {
        "startLine": 53,
        "startChar": 40,
        "endLine": 53,
        "endChar": 51
      },
      "revId": "87174931e660f5b433c66cfb30cb3c60d90ec377",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12be0cfc_c50e7528",
        "filename": "http/mutual_tls.cpp",
        "patchSetId": 24
      },
      "lineNbr": 55,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-03-03T23:10:36Z",
      "side": 1,
      "message": "Are UPNs required to have an @?  Lets get some references to the UPN parsing rules here.",
      "revId": "87174931e660f5b433c66cfb30cb3c60d90ec377",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e718a47_cab48506",
        "filename": "http/mutual_tls.cpp",
        "patchSetId": 24
      },
      "lineNbr": 55,
      "author": {
        "id": 1002382
      },
      "writtenOn": "2025-03-04T15:05:06Z",
      "side": 1,
      "message": "From the specifications that I attached in previous comments, I believe the UPNs are required to have `@` as the format is following the email format (RFC 822) and explicitly stated to be consisted of 3 parts and one of them is `@`",
      "parentUuid": "12be0cfc_c50e7528",
      "revId": "87174931e660f5b433c66cfb30cb3c60d90ec377",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c98f4579_0f1b6a75",
        "filename": "http/mutual_tls.cpp",
        "patchSetId": 24
      },
      "lineNbr": 172,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-03-03T23:03:47Z",
      "side": 1,
      "message": "nit, we\u0027re in the redfish namespace here.  no need for redfish::",
      "range": {
        "startLine": 172,
        "startChar": 40,
        "endLine": 172,
        "endChar": 49
      },
      "revId": "87174931e660f5b433c66cfb30cb3c60d90ec377",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21cab6e6_7e4a42fb",
        "filename": "http/mutual_tls.cpp",
        "patchSetId": 24
      },
      "lineNbr": 172,
      "author": {
        "id": 1002382
      },
      "writtenOn": "2025-03-04T15:05:06Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "c98f4579_0f1b6a75",
      "range": {
        "startLine": 172,
        "startChar": 40,
        "endLine": 172,
        "endChar": 49
      },
      "revId": "87174931e660f5b433c66cfb30cb3c60d90ec377",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8694cd1b_2355d2c4",
        "filename": "test/http/mutual_tls.cpp",
        "patchSetId": 24
      },
      "lineNbr": 7,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-03-03T23:03:47Z",
      "side": 1,
      "message": "openssl includes need to be in the extern \"C\" call, otherwise static analyzers treat them as c++",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 28
      },
      "revId": "87174931e660f5b433c66cfb30cb3c60d90ec377",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2aa7387f_af7ea68a",
        "filename": "test/http/mutual_tls.cpp",
        "patchSetId": 24
      },
      "lineNbr": 7,
      "author": {
        "id": 1002382
      },
      "writtenOn": "2025-03-04T15:05:06Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "8694cd1b_2355d2c4",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 28
      },
      "revId": "87174931e660f5b433c66cfb30cb3c60d90ec377",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}