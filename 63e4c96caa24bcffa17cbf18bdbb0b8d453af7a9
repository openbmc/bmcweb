{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "44ef2e73_dc097d06",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-15T17:00:20Z",
      "side": 1,
      "message": ".........  Any more details here?  You implemented two properties, but you don\u0027t specify why a user would care, or use these two properties.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 13,
        "endChar": 10
      },
      "revId": "63e4c96caa24bcffa17cbf18bdbb0b8d453af7a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59b1bc2f_7882d11c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 13,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-11-22T21:22:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "44ef2e73_dc097d06",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 13,
        "endChar": 10
      },
      "revId": "63e4c96caa24bcffa17cbf18bdbb0b8d453af7a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d839a03a_8c9ca9be",
        "filename": "redfish-core/lib/port.hpp",
        "patchSetId": 7
      },
      "lineNbr": 75,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-15T17:00:20Z",
      "side": 1,
      "message": "This property is being set on both lines 102 and here.  As written, these two functions are a race if present \u003d\u003d false and functional \u003d\u003d false.  it\u0027s inconsistent which will be written.",
      "range": {
        "startLine": 75,
        "startChar": 59,
        "endLine": 75,
        "endChar": 65
      },
      "revId": "63e4c96caa24bcffa17cbf18bdbb0b8d453af7a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "07b15535_305cb76d",
        "filename": "redfish-core/lib/port.hpp",
        "patchSetId": 7
      },
      "lineNbr": 75,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-11-22T21:22:49Z",
      "side": 1,
      "message": "102 is for `Health` and this is for `State`.\n\n\nIf present \u003d\u003d false and functional \u003d\u003d false, the result will be\n\n```\nL75: asyncResp-\u003eres.jsonValue[\"Status\"][\"State\"] \u003d \"Absent\";\nL102: asyncResp-\u003eres.jsonValue[\"Status\"][\"Health\"] \u003d \"Critical\";\n```",
      "parentUuid": "d839a03a_8c9ca9be",
      "range": {
        "startLine": 75,
        "startChar": 59,
        "endLine": 75,
        "endChar": 65
      },
      "revId": "63e4c96caa24bcffa17cbf18bdbb0b8d453af7a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0fc515e_0c5da2bd",
        "filename": "redfish-core/lib/port.hpp",
        "patchSetId": 7
      },
      "lineNbr": 75,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-11-29T04:05:13Z",
      "side": 1,
      "message": "We do this in several other places in the code e.g. \nhttps://github.com/openbmc/bmcweb/blob/7a696974d7a987e3eb135a6cbad0a4ace8d109d2/redfish-core/lib/fan.hpp#L276\nhttps://github.com/openbmc/bmcweb/blob/7a696974d7a987e3eb135a6cbad0a4ace8d109d2/redfish-core/lib/fan.hpp#L251",
      "parentUuid": "07b15535_305cb76d",
      "range": {
        "startLine": 75,
        "startChar": 59,
        "endLine": 75,
        "endChar": 65
      },
      "revId": "63e4c96caa24bcffa17cbf18bdbb0b8d453af7a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49161914_f8522dd4",
        "filename": "redfish-core/lib/port.hpp",
        "patchSetId": 7
      },
      "lineNbr": 76,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-15T17:00:20Z",
      "side": 1,
      "message": "Non trivial lambda.  This is a documented anti-pattern.",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 76,
        "endChar": 9
      },
      "revId": "63e4c96caa24bcffa17cbf18bdbb0b8d453af7a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ff5c14d_a17bb7e0",
        "filename": "redfish-core/lib/port.hpp",
        "patchSetId": 7
      },
      "lineNbr": 76,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-11-22T21:22:49Z",
      "side": 1,
      "message": "Refactored.",
      "parentUuid": "49161914_f8522dd4",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 76,
        "endChar": 9
      },
      "revId": "63e4c96caa24bcffa17cbf18bdbb0b8d453af7a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f10f600e_7c3bd0e8",
        "filename": "redfish-core/lib/port.hpp",
        "patchSetId": 7
      },
      "lineNbr": 76,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-11-29T04:05:13Z",
      "side": 1,
      "message": "I am good with this being refactored but at https://github.com/openbmc/bmcweb/blob/7a696974d7a987e3eb135a6cbad0a4ace8d109d2/COMMON_ERRORS.md#14-very-long-lambda-callbacks \n\"keep the lambda length less than 10 lines\"\nThese seem right on the edge",
      "parentUuid": "1ff5c14d_a17bb7e0",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 76,
        "endChar": 9
      },
      "revId": "63e4c96caa24bcffa17cbf18bdbb0b8d453af7a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ac2229e_649973ea",
        "filename": "redfish-core/lib/port.hpp",
        "patchSetId": 7
      },
      "lineNbr": 88,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-15T17:00:20Z",
      "side": 1,
      "message": "Why const bool?",
      "range": {
        "startLine": 88,
        "startChar": 20,
        "endLine": 88,
        "endChar": 25
      },
      "revId": "63e4c96caa24bcffa17cbf18bdbb0b8d453af7a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e79b01bf_dd027b2c",
        "filename": "redfish-core/lib/port.hpp",
        "patchSetId": 7
      },
      "lineNbr": 88,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-11-22T21:22:49Z",
      "side": 1,
      "message": "There are several places that use `const bool` for this kind of the functions.\nBut I agree that `const` is not needed for this basic types.\nI changed to `bool`.",
      "parentUuid": "1ac2229e_649973ea",
      "range": {
        "startLine": 88,
        "startChar": 20,
        "endLine": 88,
        "endChar": 25
      },
      "revId": "63e4c96caa24bcffa17cbf18bdbb0b8d453af7a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2470b7fe_da8450cf",
        "filename": "redfish-core/lib/port.hpp",
        "patchSetId": 7
      },
      "lineNbr": 103,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-15T17:00:20Z",
      "side": 1,
      "message": "Same here.  non trivial lambda",
      "revId": "63e4c96caa24bcffa17cbf18bdbb0b8d453af7a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98c3a4b4_d855ff8e",
        "filename": "redfish-core/lib/port.hpp",
        "patchSetId": 7
      },
      "lineNbr": 103,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-11-22T21:22:49Z",
      "side": 1,
      "message": "Refactored.",
      "parentUuid": "2470b7fe_da8450cf",
      "revId": "63e4c96caa24bcffa17cbf18bdbb0b8d453af7a9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}