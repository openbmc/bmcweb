{
  "comments": [
    {
      "key": {
        "uuid": "d04ae222_0f03d39c",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 4
      },
      "lineNbr": 366,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2020-04-30T17:40:33Z",
      "side": 1,
      "message": "cant this be a static assert?",
      "range": {
        "startLine": 362,
        "startChar": 7,
        "endLine": 366,
        "endChar": 9
      },
      "revId": "38728214d62121b5d0dd98103f0eeda5b8b032d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa917c70_db564455",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 4
      },
      "lineNbr": 366,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2020-04-30T17:44:21Z",
      "side": 1,
      "message": "Also, isn\u0027t this std::is_void_v\u003cT\u003e ? https://en.cppreference.com/w/cpp/types/is_void",
      "parentUuid": "d04ae222_0f03d39c",
      "range": {
        "startLine": 362,
        "startChar": 7,
        "endLine": 366,
        "endChar": 9
      },
      "revId": "38728214d62121b5d0dd98103f0eeda5b8b032d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0bc73d1_9ed07b9c",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 4
      },
      "lineNbr": 366,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-05-04T07:56:36Z",
      "side": 1,
      "message": "std::function is not constexpr so you are not able to use in static_assert.\nstd::is_void is useless because compiler see that convert function requires return type that is acceptable by attribute object (line 376). I can add this as an extra hint for developer",
      "parentUuid": "fa917c70_db564455",
      "range": {
        "startLine": 362,
        "startChar": 7,
        "endLine": 366,
        "endChar": 9
      },
      "revId": "38728214d62121b5d0dd98103f0eeda5b8b032d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8c621af_7f30f1d6",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 4
      },
      "lineNbr": 366,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2020-05-04T16:22:32Z",
      "side": 1,
      "message": "You can use constexpr to make the static assert like this https://github.com/openbmc/dbus-sensors/blob/10306bd5032fda014628487665d8000c0db49177/include/Utils.hpp#L132",
      "parentUuid": "b0bc73d1_9ed07b9c",
      "range": {
        "startLine": 362,
        "startChar": 7,
        "endLine": 366,
        "endChar": 9
      },
      "revId": "38728214d62121b5d0dd98103f0eeda5b8b032d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acebf687_044d2ff2",
        "filename": "redfish-core/lib/metric_report.hpp",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2020-05-04T07:09:11Z",
      "side": 1,
      "message": "Are there parameters the same as in async_method_call in function below?\n\nWe could think of some helper function which will look like this:\n\nconst auto GET_SUB_TREE_PATHS \u003d SomeStructName(\"xyz.openbmc_project.ObjectMapper\",\n            \"/xyz/openbmc_project/object_mapper\",\n            \"xyz.openbmc_project.ObjectMapper\", \"GetSubTreePaths\",\n            \"/xyz/openbmc_project/MonitoringService/Reports/TelemetryService\");\n\nasyncDbusCall([asyncRect] { /* code of lambda */ }, GET_SUB_TREE_PATHS, 1, interfaces);\n\nAnd const getSubTreePaths could be easy to reuse.",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 83,
        "endChar": 27
      },
      "revId": "38728214d62121b5d0dd98103f0eeda5b8b032d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a49ff0f8_3675eaec",
        "filename": "redfish-core/lib/metric_report.hpp",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-05-04T14:19:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "acebf687_044d2ff2",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 83,
        "endChar": 27
      },
      "revId": "38728214d62121b5d0dd98103f0eeda5b8b032d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f020649c_e87a3dd5",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2020-04-30T17:40:33Z",
      "side": 1,
      "message": "put trailing slash on all paths so trailing slash matches as well",
      "range": {
        "startLine": 33,
        "startChar": 48,
        "endLine": 33,
        "endChar": 71
      },
      "revId": "38728214d62121b5d0dd98103f0eeda5b8b032d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9aca417_e9928073",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-05-04T14:19:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f020649c_e87a3dd5",
      "range": {
        "startLine": 33,
        "startChar": 48,
        "endLine": 33,
        "endChar": 71
      },
      "revId": "38728214d62121b5d0dd98103f0eeda5b8b032d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "552139f6_a404efca",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2020-05-04T07:09:11Z",
      "side": 1,
      "message": "This looks like it is duplication in other classes. This could be const.\n\nentryPrivileges \u003d ENTRY_PRIVILEGES;",
      "revId": "38728214d62121b5d0dd98103f0eeda5b8b032d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bb1587b_fcddea0a",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 4
      },
      "lineNbr": 35,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-05-04T14:19:42Z",
      "side": 1,
      "message": "Privileges for TelemetryService, MetricDefinitionReport and MetricReport are the same because they have not been defined in Privilege Registry map yet.\nhttps://redfish.dmtf.org/registries/Redfish_1.0.4_PrivilegeRegistry.json\nThose privileges might change in the future.\nI can only placed them as a global const value, because it is a flat_map. I am not able to make it as a static class variable. Is it ok to keep TelemetryPrivilegeRegistry as global in header?",
      "parentUuid": "552139f6_a404efca",
      "revId": "38728214d62121b5d0dd98103f0eeda5b8b032d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}