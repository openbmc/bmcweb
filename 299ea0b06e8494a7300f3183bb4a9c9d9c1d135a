{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a0386bcb_31a83030",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-19T03:58:52Z",
      "side": 1,
      "message": "There\u0027s no strong typing here.  async_method_call is a template that accepts any variety of inputs, and more than once changes like this have caused issues.  Please test as the developing guide asks for.",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 62
      },
      "revId": "299ea0b06e8494a7300f3183bb4a9c9d9c1d135a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73899b39_d6d75810",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-21T18:00:27Z",
      "side": 1,
      "message": "I can run real test for sure. But why aren\u0027t there strong types?\n\nI understand the arguments in lambda function of async_method_call doesn\u0027t have strong types. But I didn\u0027t change that at all. If it works previously, it shall still work.\n\nGiven the arguments of lambda function don\u0027t change and this commit changes only types derives from these arguments, as long as code compiles, nothing changes, right?",
      "parentUuid": "a0386bcb_31a83030",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 62
      },
      "revId": "299ea0b06e8494a7300f3183bb4a9c9d9c1d135a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "566116f3_506cc9d8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-21T22:54:56Z",
      "side": 1,
      "message": "FYI, I added Validator test results.\n\nBut I still want to know if the string type makes sense here.",
      "parentUuid": "73899b39_d6d75810",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 62
      },
      "revId": "299ea0b06e8494a7300f3183bb4a9c9d9c1d135a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc3bd249_34e2c0a3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-22T15:04:50Z",
      "side": 1,
      "message": "I guess that\u0027s a fair point, you didn\u0027t actually change the async_method_calls\n\n\nfor example, in your code, you changed to:\n\nfor (const auto\u0026 [path, connectionNames] : subtree)\n\nThere have been cases where, if \u0026 is left off the \"const auto\u0026\" it makes a copy, but you\u0027re right, there are stronger guarantees than I thought there were.",
      "parentUuid": "566116f3_506cc9d8",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 62
      },
      "revId": "299ea0b06e8494a7300f3183bb4a9c9d9c1d135a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d38c6cc6_cb104952",
        "filename": "redfish-core/lib/storage.hpp",
        "patchSetId": 3
      },
      "lineNbr": 528,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-19T03:58:52Z",
      "side": 1,
      "message": "Does this type need changed as well to\n\ndbus::utility::MapperServiceMap::value_type",
      "range": {
        "startLine": 525,
        "startChar": 20,
        "endLine": 528,
        "endChar": 68
      },
      "revId": "299ea0b06e8494a7300f3183bb4a9c9d9c1d135a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19fb620e_0b3adb21",
        "filename": "redfish-core/lib/storage.hpp",
        "patchSetId": 3
      },
      "lineNbr": 528,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-21T18:17:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d38c6cc6_cb104952",
      "range": {
        "startLine": 525,
        "startChar": 20,
        "endLine": 528,
        "endChar": 68
      },
      "revId": "299ea0b06e8494a7300f3183bb4a9c9d9c1d135a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78f71312_ae77734b",
        "filename": "redfish-core/lib/storage.hpp",
        "patchSetId": 3
      },
      "lineNbr": 615,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-06-21T16:49:10Z",
      "side": 1,
      "message": "I was under the impression explicit types where preferred when the auto type is not obvious. \n\nIf that is not the case, or the guidance has changed, I will also change, and use auto.",
      "range": {
        "startLine": 615,
        "startChar": 19,
        "endLine": 615,
        "endChar": 23
      },
      "revId": "299ea0b06e8494a7300f3183bb4a9c9d9c1d135a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e5fc814_572e6b46",
        "filename": "redfish-core/lib/storage.hpp",
        "patchSetId": 3
      },
      "lineNbr": 615,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-21T17:56:33Z",
      "side": 1,
      "message": "Not for ranged based loops AFAIK.",
      "parentUuid": "78f71312_ae77734b",
      "range": {
        "startLine": 615,
        "startChar": 19,
        "endLine": 615,
        "endChar": 23
      },
      "revId": "299ea0b06e8494a7300f3183bb4a9c9d9c1d135a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}