{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b9877270_cf8d206c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-28T22:08:20Z",
      "side": 1,
      "message": "Redfish service validator.  Testing also needs done for both modes of log service (the one that uses this code, and the one that doesn\u0027t).",
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f659d3b8_5c35555a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1002230
      },
      "writtenOn": "2025-03-10T17:11:15Z",
      "side": 1,
      "message": "I ran the validator.\n\nI assume [this option](https://github.com/openbmc/bmcweb/blob/1940677a35870b51eaffc50406609124668743d0/meson.options#L121) is responsible for the mode you\u0027re referring to. I disabled it on my machine, rebuilt the image and ran validator, it produced same results.\nThe other mode uses fillEventLogEntryJson function I did not touch, to generate response.",
      "parentUuid": "b9877270_cf8d206c",
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4d3186a_451803ea",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-03-11T02:58:49Z",
      "side": 1,
      "message": "\u003e I ran the validator.\n\u003e \n\u003e I assume [this option](https://github.com/openbmc/bmcweb/blob/1940677a35870b51eaffc50406609124668743d0/meson.options#L121) is responsible for the mode you\u0027re referring to. I disabled it on my machine, rebuilt the image and ran validator, it produced same results.\n\nThat\u0027s surprising, considering that the registries available should change based on whether or not the option is enabled.  Maybe take a deeper look?\n\n\u003e The other mode uses fillEventLogEntryJson function I did not touch, to generate response.",
      "parentUuid": "f659d3b8_5c35555a",
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d912bf9_1ddf215b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1002230
      },
      "writtenOn": "2025-03-13T13:42:15Z",
      "side": 1,
      "message": "I think we confuse 2 options. BMCWEB_REDFISH_DBUS_LOG switches a source of the logs from FS to DBus. So, when BMCWEB_REDFISH_DBUS_LOG is disabled this function not in use in any case. The other switch we\u0027re talking about, is related to mapping, and does not affect anything if BMCWEB_REDFISH_DBUS_LOG is disabled.",
      "parentUuid": "f4d3186a_451803ea",
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17818658_d6179a95",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-25T22:59:28Z",
      "side": 1,
      "message": "lots of new capabilities here which is great to see, but we need to make sure we\u0027re consolidating into the common registry handling code we already have rather than just writing new stuff.  I see lots of helpers that have been replaced with \"new\" not necessarily better versions.  Please make sure you\u0027re looking through the existing registry flows and reusing where appropriate.",
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b0ddd201_f712c8a1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1002230
      },
      "writtenOn": "2025-03-10T17:11:15Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "17818658_d6179a95",
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3be0a25_a53db208",
        "filename": "include/dbus_utility.hpp",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-25T22:55:37Z",
      "side": 1,
      "message": "std::vector\u003cstd::pair\u003cstd::string, std::string\u003e\u003e\n\nto follow the existing pattern of allowing callers to do their own sort/ordering.",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 61,
        "endChar": 48
      },
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4833015e_e35aa091",
        "filename": "include/dbus_utility.hpp",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1002230
      },
      "writtenOn": "2025-02-26T12:47:04Z",
      "side": 1,
      "message": "I actually tried that, and it did not work. The type is being used by https://github.com/openbmc/sdbusplus/blob/e029082701db95ab6aa4cf89bbe9092445e9fd39/include/sdbusplus/unpack_properties.hpp#L32 and it fails if it\u0027s not a map.",
      "parentUuid": "c3be0a25_a53db208",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 61,
        "endChar": 48
      },
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "167dea12_e57533f5",
        "filename": "include/dbus_utility.hpp",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-28T22:08:20Z",
      "side": 1,
      "message": "Can you give more indication as to what \"fails\" means?  I would\u0027ve expected that to work, and as you can see from further up in this file we do it in a lot of other places in this variant\n\nstd::vector\u003cstd::pair\u003csdbusplus::message::object_path, std::string\u003e\u003e\n\nmaybe there\u0027s something subtly different here, but I\u0027d like to understand it.",
      "parentUuid": "4833015e_e35aa091",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 61,
        "endChar": 48
      },
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb3ceead_5cd8c49a",
        "filename": "include/dbus_utility.hpp",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1002230
      },
      "writtenOn": "2025-03-05T10:33:48Z",
      "side": 1,
      "message": "It cannot unpack properties as it cannot find appropriate container/structure. Here is the error I get without this line: https://gist.github.com/ifel/7aeec33afd7f030d8dc03b29abf775b4",
      "parentUuid": "167dea12_e57533f5",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 61,
        "endChar": 48
      },
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48315f5c_4a6e39ed",
        "filename": "redfish-core/include/utils/dbus_event_log_entry.hpp",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-25T22:55:37Z",
      "side": 1,
      "message": "This type looks incorrect compared to:\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/0e78828ce927548b4dd679e06fdaf2f294983289/yaml/xyz/openbmc_project/Logging/Event.interface.yaml#L30",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 46
      },
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "340abd50_70c0a5a9",
        "filename": "redfish-core/include/utils/dbus_event_log_entry.hpp",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1002230
      },
      "writtenOn": "2025-02-26T12:47:04Z",
      "side": 1,
      "message": "No, it is not. The interface you refer to is the Event - something, we want to convert this thing to an present to the client. It\u0027s defined in https://github.com/openbmc/bmcweb/blob/master/redfish-core/include/event_logs_object_type.hpp#L18 and its AdditionalData type is indeed std::vector\u003cstd::string\u003e.\n\nThis structure though, represents what we receive from DBus and its interface is defined here:\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Logging/Entry.interface.yaml#L34\n\nAnd this is the reason I added this type to the include/dbus_utility.hpp.",
      "parentUuid": "48315f5c_4a6e39ed",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 46
      },
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9fffe6ea_b9aa633b",
        "filename": "redfish-core/include/utils/dbus_event_log_entry.hpp",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-28T22:08:20Z",
      "side": 1,
      "message": "Closing this out:\nhttps://github.com/openbmc/phosphor-dbus-interfaces/commit/25b1bcba49c71ffa0ca70a32ae696e25795843a0\n\nI wasn\u0027t aware this change had been made.\n\nYes, you are right, I linked event.",
      "parentUuid": "340abd50_70c0a5a9",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 46
      },
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "601470cc_fa4670be",
        "filename": "redfish-core/include/utils/dbus_registries_utils.hpp",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-25T22:55:37Z",
      "side": 1,
      "message": "Nothing about this is used as a pair.  Please make this an appropriate struct, with names for messageId, and args, to make it more clear which each is.",
      "range": {
        "startLine": 7,
        "startChar": 14,
        "endLine": 7,
        "endChar": 61
      },
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8bbf13d_30a0318a",
        "filename": "redfish-core/include/utils/dbus_registries_utils.hpp",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1002230
      },
      "writtenOn": "2025-03-05T10:33:48Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "601470cc_fa4670be",
      "range": {
        "startLine": 7,
        "startChar": 14,
        "endLine": 7,
        "endChar": 61
      },
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6dfb5388_a5d7f1f3",
        "filename": "redfish-core/include/utils/dbus_registries_utils.hpp",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 1002230
      },
      "writtenOn": "2025-03-10T17:11:15Z",
      "side": 1,
      "message": "It\u0027s changed, now it\u0027s redfish::dbus_registries_map::MappedInfo.",
      "parentUuid": "f8bbf13d_30a0318a",
      "range": {
        "startLine": 7,
        "startChar": 14,
        "endLine": 7,
        "endChar": 61
      },
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0146b4c_dc85a633",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 2
      },
      "lineNbr": 1455,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-25T22:55:37Z",
      "side": 1,
      "message": "If you\u0027re going to make this now use a registry, this code now needs to use getMessage and fillMessageArgs to fill in the message from the registry.",
      "range": {
        "startLine": 1455,
        "startChar": 0,
        "endLine": 1455,
        "endChar": 47
      },
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b76a1086_a2359e1f",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 2
      },
      "lineNbr": 1455,
      "author": {
        "id": 1002230
      },
      "writtenOn": "2025-03-10T17:11:15Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "f0146b4c_dc85a633",
      "range": {
        "startLine": 1455,
        "startChar": 0,
        "endLine": 1455,
        "endChar": 47
      },
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f3e5aa3_983c7820",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 2
      },
      "lineNbr": 1474,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-25T22:55:37Z",
      "side": 1,
      "message": "A given LogService instance needs to either support MessageId or not, so this branch shouldn\u0027t be made on a per-log basis.  This leaves us with a couple of options for moving forward.\n\n1. Make a new LogService URI for log entires that have a MessageId\n2. Require that messages have a MessageId, and omit them from Redfish if they don\u0027t have one.\n3. Make a meson option to decide #2\n\n1 Seems really ugly. Probably 2 or 3?",
      "range": {
        "startLine": 1474,
        "startChar": 8,
        "endLine": 1474,
        "endChar": 29
      },
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ae652a9_2d25fbc6",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 2
      },
      "lineNbr": 1474,
      "author": {
        "id": 1002230
      },
      "writtenOn": "2025-03-05T21:03:31Z",
      "side": 1,
      "message": "Technically speaking, it has to have MessageId populated as the type is being built here is Event, and for that case the spec says \"If the entry type is Event, this property contains a Redfish Specification-defined MessageId property of the event.\", so you are right.\n\n1 seems really ugly indeed. 2 sounds the right thing as this function always produces invalid objects because it never populates MessageId. However, this may/will break existing use cases. I will dig into callers and see what is/can be affected before publishing changes I made earlier today to address this comment and the one above.\n3 looks probably the best option short term, but long term I would prefer users to start using proper objects.\n\nA concern I have here is - BMCs do not/may not have decent telemetry, so, admins/users will not be able determine that some entires are being dropped. I propose to make an option, if it\u0027s enabled and MessageId cannot be determined, instead of dropping such entries, produce an entry with OpenBMC.InvalidMessageId or similar message Id, put the DBus event name to args. I briefly checked standard registries, but did not find anything suitable, so we might need to add one to the Openbmc one. What do you think?",
      "parentUuid": "8f3e5aa3_983c7820",
      "range": {
        "startLine": 1474,
        "startChar": 8,
        "endLine": 1474,
        "endChar": 29
      },
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7be5345_6456fed4",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 2
      },
      "lineNbr": 1474,
      "author": {
        "id": 1002230
      },
      "writtenOn": "2025-03-10T17:11:15Z",
      "side": 1,
      "message": "I\u0027ve published an update, with meson option that controls the behavior, i.e. option #3.\nBut still, dropping messages is a concern.",
      "parentUuid": "2ae652a9_2d25fbc6",
      "range": {
        "startLine": 1474,
        "startChar": 8,
        "endLine": 1474,
        "endChar": 29
      },
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "231e9b0b_21eb3f96",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 2
      },
      "lineNbr": 1474,
      "author": {
        "id": 1002230
      },
      "writtenOn": "2025-03-13T13:42:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7be5345_6456fed4",
      "range": {
        "startLine": 1474,
        "startChar": 8,
        "endLine": 1474,
        "endChar": 29
      },
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f10914ae_a2c58681",
        "filename": "redfish-core/src/dbus_log_watcher.cpp",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-25T22:55:37Z",
      "side": 1,
      "message": "can some of this code be combined between the two cases?  They\u0027re ultimately generating the same json now, from the same request (a json properties map).",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 57,
        "endChar": 36
      },
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "528e712f_31cd26dd",
        "filename": "redfish-core/src/dbus_log_watcher.cpp",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 1002230
      },
      "writtenOn": "2025-03-05T10:33:48Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "f10914ae_a2c58681",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 57,
        "endChar": 36
      },
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9c0d287_9a560dfa",
        "filename": "redfish-core/src/utils/dbus_registries_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-25T22:55:37Z",
      "side": 1,
      "message": "nit, prefer to return early in the case of error and avoid the extra branch else condition",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 22,
        "endChar": 5
      },
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6813f9ed_45333603",
        "filename": "redfish-core/src/utils/dbus_registries_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1002230
      },
      "writtenOn": "2025-02-26T18:49:17Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "f9c0d287_9a560dfa",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 22,
        "endChar": 5
      },
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "310baf56_4f22a716",
        "filename": "redfish-core/src/utils/dbus_registries_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-25T22:55:37Z",
      "side": 1,
      "message": "Please restructure this to make it readable. We\u0027re in the redfish namespace here, so that can be omitted.",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 28,
        "endChar": 67
      },
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "acbee714_ee36bf22",
        "filename": "redfish-core/src/utils/dbus_registries_utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1002230
      },
      "writtenOn": "2025-03-05T10:33:48Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "310baf56_4f22a716",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 28,
        "endChar": 67
      },
      "revId": "6f1696201f7f3f169aa39d69c52deae5e9e4e1f4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}