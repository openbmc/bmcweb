{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5db3eaaa_82cb5302",
        "filename": "redfish-core/include/aggregation_utils.hpp",
        "patchSetId": 48
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-12-28T20:05:05Z",
      "side": 1,
      "message": "Nit, please explicitly declare a type (probably string_view).  Letting the compiler pick is mediocre, and leads to other issues.",
      "range": {
        "startLine": 17,
        "startChar": 15,
        "endLine": 17,
        "endChar": 20
      },
      "revId": "49538dc828aa4694065314aef0a590ca7cdd6682",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "705879e2_7f677d9f",
        "filename": "redfish-core/include/aggregation_utils.hpp",
        "patchSetId": 48
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-12-28T20:09:08Z",
      "side": 1,
      "message": "One other super interesting thing that boost::url added recently is static_url\n\nhttps://www.boost.org/doc/libs/1_81_0/libs/url/doc/html/url/ref/boost__urls__static_url.html\n\nWhich MIGHT be constexpr constructable?  And would give us exactly the type we want, rather than having to convert from string_view.  Food for thought, not required, but would certainly be better.",
      "parentUuid": "5db3eaaa_82cb5302",
      "range": {
        "startLine": 17,
        "startChar": 15,
        "endLine": 17,
        "endChar": 20
      },
      "revId": "49538dc828aa4694065314aef0a590ca7cdd6682",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b9df54a_13b4c94f",
        "filename": "redfish-core/include/aggregation_utils.hpp",
        "patchSetId": 48
      },
      "lineNbr": 17,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-01-04T00:53:12Z",
      "side": 1,
      "message": "I should be able to explicitly declare a type.  I\u0027ll play around and see if static_url can be used.  static_url is supposed to be declared with a fixed buffer size so I need to see how that plays with std::array.",
      "parentUuid": "705879e2_7f677d9f",
      "range": {
        "startLine": 17,
        "startChar": 15,
        "endLine": 17,
        "endChar": 20
      },
      "revId": "49538dc828aa4694065314aef0a590ca7cdd6682",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21ee11ca_eecafbb2",
        "filename": "redfish-core/include/aggregation_utils.hpp",
        "patchSetId": 48
      },
      "lineNbr": 17,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-01-05T02:56:32Z",
      "side": 1,
      "message": "I tried and I don\u0027t think it\u0027s possible because boost::urls::static_url is not a literal.  Maybe there\u0027s a way I can get it to work, but I don\u0027t think it\u0027s worth it.  This array is only used in string comparisons as part of binary search so I don\u0027t see a benefit in storing the URIs as static_url rather than string_view.\n\nI now explicitly declare this as an array of string_view.",
      "parentUuid": "1b9df54a_13b4c94f",
      "range": {
        "startLine": 17,
        "startChar": 15,
        "endLine": 17,
        "endChar": 20
      },
      "revId": "49538dc828aa4694065314aef0a590ca7cdd6682",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c99bd787_6624da31",
        "filename": "redfish-core/include/aggregation_utils.hpp",
        "patchSetId": 48
      },
      "lineNbr": 18,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-12-28T20:05:05Z",
      "side": 1,
      "message": "Should we drop /redfish/v1 on all these?  Seems redundant.",
      "range": {
        "startLine": 18,
        "startChar": 5,
        "endLine": 18,
        "endChar": 17
      },
      "revId": "49538dc828aa4694065314aef0a590ca7cdd6682",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1a58af5_4ff454e3",
        "filename": "redfish-core/include/aggregation_utils.hpp",
        "patchSetId": 48
      },
      "lineNbr": 18,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-01-04T00:53:12Z",
      "side": 1,
      "message": "I did that to make parsing easier.  If I remove \"/redfish/v1\" then I\u0027ll have to do additional checks to make sure they begin with \"/redfish/v1\" before then going into the search logic.\n\nIt\u0027s probably still worth doing though to save space and make the lookup quicker.  I\u0027ll give it a try.",
      "parentUuid": "c99bd787_6624da31",
      "range": {
        "startLine": 18,
        "startChar": 5,
        "endLine": 18,
        "endChar": 17
      },
      "revId": "49538dc828aa4694065314aef0a590ca7cdd6682",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94831745_65a41384",
        "filename": "redfish-core/include/aggregation_utils.hpp",
        "patchSetId": 48
      },
      "lineNbr": 18,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-01-05T02:56:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f1a58af5_4ff454e3",
      "range": {
        "startLine": 18,
        "startChar": 5,
        "endLine": 18,
        "endChar": 17
      },
      "revId": "49538dc828aa4694065314aef0a590ca7cdd6682",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5459c747_d31e20f7",
        "filename": "scripts/generate_schema_collections.py",
        "patchSetId": 48
      },
      "lineNbr": 23,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-12-28T20:05:05Z",
      "side": 1,
      "message": "At some point we really need to deduplicate this warning.  oh well, problem for another day.",
      "revId": "49538dc828aa4694065314aef0a590ca7cdd6682",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c370bfca_61f84914",
        "filename": "scripts/generate_schema_collections.py",
        "patchSetId": 48
      },
      "lineNbr": 126,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-12-28T20:05:05Z",
      "side": 1,
      "message": "nit, nav_name in [\"JsonSchemas\", \"accountService\"...]",
      "range": {
        "startLine": 124,
        "startChar": 0,
        "endLine": 126,
        "endChar": 41
      },
      "revId": "49538dc828aa4694065314aef0a590ca7cdd6682",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0573620_c6a3ba06",
        "filename": "scripts/generate_schema_collections.py",
        "patchSetId": 48
      },
      "lineNbr": 126,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-01-05T02:56:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c370bfca_61f84914",
      "range": {
        "startLine": 124,
        "startChar": 0,
        "endLine": 126,
        "endChar": 41
      },
      "revId": "49538dc828aa4694065314aef0a590ca7cdd6682",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e053b41_0eafe470",
        "filename": "scripts/generate_schema_collections.py",
        "patchSetId": 48
      },
      "lineNbr": 283,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-12-28T20:05:05Z",
      "side": 1,
      "message": "Pretty sure this can\u0027t run on its own, given that the higher level script deletes the old unused schema files?",
      "range": {
        "startLine": 281,
        "startChar": 0,
        "endLine": 283,
        "endChar": 0
      },
      "revId": "49538dc828aa4694065314aef0a590ca7cdd6682",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83b62dc0_8b51eb4d",
        "filename": "scripts/generate_schema_collections.py",
        "patchSetId": 48
      },
      "lineNbr": 283,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-01-04T00:53:12Z",
      "side": 1,
      "message": "Yeah this script is really dependent on being called by update_schemas.py and realistically shouldn\u0027t be run by itself.  I\u0027ll make that change.",
      "parentUuid": "3e053b41_0eafe470",
      "range": {
        "startLine": 281,
        "startChar": 0,
        "endLine": 283,
        "endChar": 0
      },
      "revId": "49538dc828aa4694065314aef0a590ca7cdd6682",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc1d92fc_fd04037f",
        "filename": "scripts/generate_schema_collections.py",
        "patchSetId": 48
      },
      "lineNbr": 283,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-01-05T02:56:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "83b62dc0_8b51eb4d",
      "range": {
        "startLine": 281,
        "startChar": 0,
        "endLine": 283,
        "endChar": 0
      },
      "revId": "49538dc828aa4694065314aef0a590ca7cdd6682",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}