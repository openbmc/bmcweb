{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3cf1f5c2_c72cc30b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-06T16:58:34Z",
      "side": 1,
      "message": "Can you please write up better what the root cause is here, and how to reproduce?   \n Because we\u0027re commenting out a boost function, please include the links to the line of code within boost beast that\u0027s the problem.  The fix in the patch doesn\u0027t make any sense, although we have replaced prepare_payload in Request::preparePayload, I suspect we might need to do something similar here?",
      "revId": "7e5604b6d80a28b236d3216ae827fa501e86313f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a52cca8_b6707f3f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-06T20:08:13Z",
      "side": 1,
      "message": "FOr reference, this is the function we have:\nhttps://github.com/openbmc/bmcweb/blob/d5c0172e0335df05db2eaae3dae2c7d3def56089/http/http_response.hpp#L171",
      "parentUuid": "3cf1f5c2_c72cc30b",
      "revId": "7e5604b6d80a28b236d3216ae827fa501e86313f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18307039_42e132ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001264
      },
      "writtenOn": "2024-08-08T17:39:56Z",
      "side": 1,
      "message": "Hi Ed,\nWe was testing on redfish aggregation feature and notice that http client has 50% failed rate to send request to satellite controller (1 success then follow 1 fail).\n\nWe check the request data send from BMC (client side) by Wireshark, and find out the end of request data repeated final chunk [0x00 0x0d 0x0a 0x0d 0x0a] twice, and satellite controller (server side) close the socket due to the extra final chunk sent form BMC.\n\nThe test flow as below:\nBMC --- RF AGGR Req (v) --\u003e SAT \nBMC \u003c-- RF AGGR Res (v) --- SAT (response success)\nBMC \u003c-- Close Socket ------ SAT (extra final chunk)\nBMC --- RF AGGR Req (x) --\u003e SAT (BMC send failed, broken pipe)\n\n\nSo far we have tested two methods that can avoid the this problem.\n\n1. don\u0027t assign body and call prepare_payload() when data is empty.\n[Patchset 1]\nSo far we not sure why calling prepare_payload() with empty body will causing extra final chunk, this may require digging deeper into the `chunked(true)` function of the boost easter library.\n\n2. add into bmcweb::HttpBody\nPlease have a check with link here [https://github.com/boostorg/beast/blob/848e20680fb374532a0c5816b79b38532e6da775/include/boost/beast/http/impl/message.hpp#L362-L375]\nWith static bmcweb:HttpBosy::size() implementation, the `n` will not be null, and then `chunked(false)` will be called.\nAnd we check the request data with this method, it doesn\u0027t contains extra final chunk, and redfish aggregation works successfully.\n\n\n\n\nI\u0027m wondering which approach seems more appropriate?",
      "parentUuid": "8a52cca8_b6707f3f",
      "revId": "7e5604b6d80a28b236d3216ae827fa501e86313f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a16c5987_77a690bd",
        "filename": "http/http_client.hpp",
        "patchSetId": 1
      },
      "lineNbr": 742,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-06T16:58:34Z",
      "side": 1,
      "message": "If data.empty() is true, this line will have no effect, right?",
      "revId": "7e5604b6d80a28b236d3216ae827fa501e86313f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "672a3cdb_8a010194",
        "filename": "http/http_client.hpp",
        "patchSetId": 1
      },
      "lineNbr": 743,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-06T16:58:34Z",
      "side": 1,
      "message": "Why does prepare_payload send the wrong response if body().str() is empty?",
      "revId": "7e5604b6d80a28b236d3216ae827fa501e86313f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}