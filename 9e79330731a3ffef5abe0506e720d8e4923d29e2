{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "36dedc46_d9d375a9",
        "filename": "include/event_service_store.hpp",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-10-22T17:25:48Z",
      "side": 1,
      "message": "why did this method need to change?  this method takes no ownership, so returning by value seems reasonable.\n\nthe struct can be put into a shared pointer later if required.",
      "revId": "9e79330731a3ffef5abe0506e720d8e4923d29e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77430290_e6b3b44b",
        "filename": "include/event_service_store.hpp",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-10-22T18:42:54Z",
      "side": 1,
      "message": "Ultimately the `UserSubscription` object from `fromJson()` is going to used as a `shared_ptr\u003cUserSubscription\u003e` object as a part of `Subscription` and also for `subscriptionsMap[]` and `subscriptionsConfigMap[]`.\n\nIf it returns a UserSubscription (or optional\u003c\u003e) object, it will need to be passed again to create a shared_ptr\u003cUserSubscription\u003e in Subscription constructor or subscriptionsMap.\n\nSo, I think it may be more efficient to create it as a shared_ptr once here,  and share the pointer for Subscription, subscriptionsMap, and subscriptionsConfigMap.",
      "parentUuid": "36dedc46_d9d375a9",
      "revId": "9e79330731a3ffef5abe0506e720d8e4923d29e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8def4019_14d8695f",
        "filename": "include/event_service_store.hpp",
        "patchSetId": 3
      },
      "lineNbr": 332,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-10-22T17:25:48Z",
      "side": 1,
      "message": "same here.  this function takes no ownership of user sub.  why is it passing an owning object?",
      "revId": "9e79330731a3ffef5abe0506e720d8e4923d29e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa6e291a_8308f437",
        "filename": "include/event_service_store.hpp",
        "patchSetId": 3
      },
      "lineNbr": 332,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-10-22T18:42:54Z",
      "side": 1,
      "message": "As `UserSubscription` data is used in both `subscriptionsMap[]` and `subscriptionsConfigMap[]`, it would be more efficient by replacing the matching `subscriptionsConfigMap[id].second` with `userSub` (shared_ptr), and it can avoid the copy of the content of the userSubscription.",
      "parentUuid": "8def4019_14d8695f",
      "revId": "9e79330731a3ffef5abe0506e720d8e4923d29e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13e7efea_673aa353",
        "filename": "redfish-core/include/event_service_manager.hpp",
        "patchSetId": 3
      },
      "lineNbr": 277,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-10-22T17:25:48Z",
      "side": 1,
      "message": "why was this added?  sse connections donâ€™t have user params, so if this is now a pointer, presumably sse connections should be nullptr?",
      "revId": "9e79330731a3ffef5abe0506e720d8e4923d29e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "485d6e76_7821d723",
        "filename": "redfish-core/include/event_service_manager.hpp",
        "patchSetId": 3
      },
      "lineNbr": 277,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-10-22T18:42:54Z",
      "side": 1,
      "message": "SSE subscription also uses UserSubscription data for its parameters - https://github.com/openbmc/bmcweb/blob/29d7ca982d61f3cb83e98e44e585d42f2f1b803c/redfish-core/lib/eventservice_sse.hpp#L50\n\nSo, UserSubscription object would still be needed.",
      "parentUuid": "13e7efea_673aa353",
      "revId": "9e79330731a3ffef5abe0506e720d8e4923d29e2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}