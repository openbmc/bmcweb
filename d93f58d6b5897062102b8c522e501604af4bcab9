{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1bbf27d8_26df68ff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 84
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-03-13T19:35:36Z",
      "side": 1,
      "message": "Some minor changes needed, then this looks fine.",
      "revId": "d93f58d6b5897062102b8c522e501604af4bcab9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e35daa8b_5863ded7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 84
      },
      "lineNbr": 0,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-03-13T22:22:08Z",
      "side": 1,
      "message": "Thanks for reviewing. I will work on resolving other issues.",
      "revId": "d93f58d6b5897062102b8c522e501604af4bcab9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c99c85f7_6dd5bdd5",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 84
      },
      "lineNbr": 1234,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-03-13T19:35:36Z",
      "side": 1,
      "message": "This whole error handling clause looks incorrect.  The old one looks closer to correct, please let me know what you were trying to accomplish here, and we can get this code block corrected, but as written, it effectively ignores all errors, which doesn\u0027t seem like what you intended.",
      "range": {
        "startLine": 1229,
        "startChar": 0,
        "endLine": 1234,
        "endChar": 13
      },
      "revId": "d93f58d6b5897062102b8c522e501604af4bcab9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7681775e_96f76f05",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 84
      },
      "lineNbr": 1234,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-03-13T22:22:08Z",
      "side": 1,
      "message": "Based on my understanding, if the AutoReboot property is not present, the getProperty function returns EBADR. \nThe function will continue retrieving other properties even if the AutoReboot property is not present. However, if any other error occurs, the function will fail with an internal error.",
      "parentUuid": "c99c85f7_6dd5bdd5",
      "range": {
        "startLine": 1229,
        "startChar": 0,
        "endLine": 1234,
        "endChar": 13
      },
      "revId": "d93f58d6b5897062102b8c522e501604af4bcab9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b846ae0c_fc631408",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 84
      },
      "lineNbr": 1234,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-03-15T20:02:07Z",
      "side": 1,
      "message": "If we get a  EBADR shouldn\u0027t we leave this property off? but just no error. \nHow do you know what the value of autoRebootEnabled is, if it can\u0027t be found?\n\nHow about \n```\n    if (ec)\n    {\n        if (ec.value() \u003d\u003d EBADR)\n        {\n            // No AutoReboot proeprty\n            return;\n        }\n        BMCWEB_LOG_ERROR \u003c\u003c \"D-Bus responses error: \" \u003c\u003c ec;\n        messages::internalError(asyncResp-\u003eres);\n        return;\n    }\n\n```\n\nfrom like \n\nhttps://github.com/openbmc/bmcweb/blob/5e7e2dc585dc7a7e62d2b648b541e7f50c39ea5d/redfish-core/lib/pcie_slots.hpp#L158 and several other places",
      "parentUuid": "7681775e_96f76f05",
      "range": {
        "startLine": 1229,
        "startChar": 0,
        "endLine": 1234,
        "endChar": 13
      },
      "revId": "d93f58d6b5897062102b8c522e501604af4bcab9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}