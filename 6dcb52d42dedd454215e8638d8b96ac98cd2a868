{
  "comments": [
    {
      "key": {
        "uuid": "b25de17f_14c345da",
        "filename": "redfish-core/include/event_service_manager.hpp",
        "patchSetId": 13
      },
      "lineNbr": 1382,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-01-25T12:08:45Z",
      "side": 1,
      "message": "You can use sdbusplus::unpackProperties when unpacking from variant\n\nhttps://github.com/openbmc/sdbusplus/blob/master/include/sdbusplus/unpack_properties.hpp",
      "range": {
        "startLine": 1373,
        "startChar": 0,
        "endLine": 1382,
        "endChar": 17
      },
      "revId": "6dcb52d42dedd454215e8638d8b96ac98cd2a868",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cf770bc_6db8de7b",
        "filename": "redfish-core/include/event_service_manager.hpp",
        "patchSetId": 13
      },
      "lineNbr": 1382,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-01-25T16:10:47Z",
      "side": 1,
      "message": "unpackProperties looks like it throws exceptions on failure, and doesn\u0027t include a return code or error_code variant, so it doesn\u0027t seem like it fits very well as-is with the bmcweb coding style, but it seems like it\u0027d be easy to modify it to work well here.",
      "parentUuid": "b25de17f_14c345da",
      "range": {
        "startLine": 1373,
        "startChar": 0,
        "endLine": 1382,
        "endChar": 17
      },
      "revId": "6dcb52d42dedd454215e8638d8b96ac98cd2a868",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "716620d4_b8d39a56",
        "filename": "redfish-core/include/event_service_manager.hpp",
        "patchSetId": 13
      },
      "lineNbr": 1382,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-01-26T08:37:49Z",
      "side": 1,
      "message": "It is thrown when either property is missing or have incorrect type in both cases this is caused when interface on dbus missmatch your expectations. There is detailed message if needed. Assumption is that used will catch exception and convert it to proper error code.",
      "parentUuid": "1cf770bc_6db8de7b",
      "range": {
        "startLine": 1373,
        "startChar": 0,
        "endLine": 1382,
        "endChar": 17
      },
      "revId": "6dcb52d42dedd454215e8638d8b96ac98cd2a868",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71eac879_cae0ca34",
        "filename": "redfish-core/include/event_service_manager.hpp",
        "patchSetId": 13
      },
      "lineNbr": 1382,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-03-03T14:34:43Z",
      "side": 1,
      "message": "@Ed Tanous, just a reminder. Please respond.",
      "parentUuid": "716620d4_b8d39a56",
      "range": {
        "startLine": 1373,
        "startChar": 0,
        "endLine": 1382,
        "endChar": 17
      },
      "revId": "6dcb52d42dedd454215e8638d8b96ac98cd2a868",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e4f1f08_1b525b5f",
        "filename": "redfish-core/include/event_service_manager.hpp",
        "patchSetId": 13
      },
      "lineNbr": 1382,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-06T02:40:00Z",
      "side": 1,
      "message": "We\u0027ve had bad luck in bmcweb with expecting people to catch exceptions.  Almost every crash we\u0027ve had around bad data has been some form of uncaught exception, or calling a method that nobody realized threw, or forgetting to catch a particular exception type.  Unfortunately, this crashes bmcweb, as we need to make sure that things are cleaned up, and we don\u0027t end up with DOS vectors and leaked memory or descriptors because of the failures.\n\nI\u0027m not a huge fan of adding exceptions for this case, even if there were a way to do it safely, the rules around it aren\u0027t consistent enough for us to trust in a security context, also, it makes code much harder to review.",
      "parentUuid": "71eac879_cae0ca34",
      "range": {
        "startLine": 1373,
        "startChar": 0,
        "endLine": 1382,
        "endChar": 17
      },
      "revId": "6dcb52d42dedd454215e8638d8b96ac98cd2a868",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "632f0b9c_6a0b310e",
        "filename": "redfish-core/include/event_service_manager.hpp",
        "patchSetId": 13
      },
      "lineNbr": 1382,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-03-08T08:12:39Z",
      "side": 1,
      "message": "Ok, I understand your point of view. It is hard to replace exception with error_code. Exception class contains information which property was incorrect and reason either name was not found or type was not matched.\n\nIf used in dbus context it will ether never throws or always throws if someone test their code one test will be enough to test it.\n\nIf this doesn\u0027t convince you I can propose one more overload to sdbusplus (overload which throws can be helpful when debugging or just in any other code which doesn\u0027t avoid exceptions).\n\nbool unpackProperties(std::nothrow_t, Container, args...) noexcept;\nor\nbool unpackPropertiesNoThrow(Container, args...) noexcept;\nor\nstd::optional\u003cExceptionClass\u003e unpackProperties(std::nothrow_t, Container, args...) noexcept;\nor\nstd::optional\u003cExceptionClass\u003e unpackPropertiesNoThrow(Container, args...) noexcept;\nor whatever you prefer.\n\nStill I would like to keep both of them. In case the no throw version return false, we can get much more information what was wrong from exception class. Even if openBmc will only use no throw version modern C++ advices to use exceptions. Well of course we have to keep in mind that instead of using at on vector we should rather check for size and use [], but this exception will ether never happen or always in case of logic_error (unpackProperties parameters doesn\u0027t match with what is actually on dbus).",
      "parentUuid": "9e4f1f08_1b525b5f",
      "range": {
        "startLine": 1373,
        "startChar": 0,
        "endLine": 1382,
        "endChar": 17
      },
      "revId": "6dcb52d42dedd454215e8638d8b96ac98cd2a868",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd35f492_c724877c",
        "filename": "redfish-core/include/event_service_manager.hpp",
        "patchSetId": 13
      },
      "lineNbr": 1382,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-03-24T14:03:35Z",
      "side": 1,
      "message": "There is also one more option, there can be two functions in different namespace:\n\nnamespace throwing {\n\n}\n\nnamespace nonthrowing {\n\n}\n\none of them can be inline, also version with exception is more useful in unit tests",
      "parentUuid": "632f0b9c_6a0b310e",
      "range": {
        "startLine": 1373,
        "startChar": 0,
        "endLine": 1382,
        "endChar": 17
      },
      "revId": "6dcb52d42dedd454215e8638d8b96ac98cd2a868",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}