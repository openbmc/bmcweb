{
  "comments": [
    {
      "key": {
        "uuid": "6d9c9e02_b4c8fccc",
        "filename": "redfish-core/lib/trigger.hpp",
        "patchSetId": 5
      },
      "lineNbr": 200,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-11-17T08:01:41Z",
      "side": 1,
      "message": "Personally I am ok with it, but it\u0027s something that is not common in bmcweb. I think that maintainers would prefer it like this:\n\nconst bool* discrete \u003d nullptr;\nconst std::string\u0026 name \u003d nullptr;\n\nfor (const auto\u0026 [property, valueVariant] : ret) {\n  if (property \u003d\u003d \"Discrete\") {\n    discrete \u003d std::get_if\u003cbool\u003e(\u0026valueVariant);\n  } else if (property \u003d\u003d \"Name\") {\n    name \u003d std::get_if\u003cstd::string\u003e(\u0026valueVariant);\n  }\n}\n\nif (!discrete || !name) {\n  BMCWEB_LOG_ERROR \u003c\u003c \"Property type mismatch or property is missing\";\n  messages::internalError(asyncResp-\u003eres);\n  return;\n}\n\nSo you handle all parameters here then you can call helpers like getMetricProperties with value that is already verified:\ninline std::vector\u003cstd::string\u003e getMetricProperties(const TriggerSensorsParams\u0026 params);",
      "revId": "78239f08972a0c4873d40b3d021e8d94679497b5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46eae7cc_e711539c",
        "filename": "redfish-core/lib/trigger.hpp",
        "patchSetId": 5
      },
      "lineNbr": 200,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2021-11-17T10:02:46Z",
      "side": 1,
      "message": "The code you have included in the comment represents the old way of extracting data from the variant. I have suggested something new which in my opinion is more compact, easier to read and robust. If you do not mind I would wait for comments from the others and if after all restoring the old method will be confirmed as a must here I will sadly comply.",
      "parentUuid": "6d9c9e02_b4c8fccc",
      "revId": "78239f08972a0c4873d40b3d021e8d94679497b5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8da3048_eddb9836",
        "filename": "redfish-core/lib/trigger.hpp",
        "patchSetId": 5
      },
      "lineNbr": 200,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-11-17T13:52:56Z",
      "side": 1,
      "message": "There is existing solution which could be used:\nhttps://github.com/openbmc/sdbusplus/blob/master/example/get-all-properties.cpp\n\nIn this example throwing version of unpackProperties is used, recently there was added non throwing version and you could use it instead if you want to propose something more compact.",
      "parentUuid": "46eae7cc_e711539c",
      "revId": "78239f08972a0c4873d40b3d021e8d94679497b5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfde51d6_ac1e18b3",
        "filename": "redfish-core/lib/trigger.hpp",
        "patchSetId": 5
      },
      "lineNbr": 200,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-11-17T14:05:23Z",
      "side": 1,
      "message": "After seeing how bmcweb is maintained I would like to suggest something that in my opinion has changes of being accepted.\n\nThere need to be separate commit which doesn\u0027t introduce new functionality it just changes old usage with new usage in couple of places. Once it gets positive feedback all other usages in whole bmcweb needs to be replaced with new approach (As far I understand currently in bmcweb that\u0027s the only way to change existing style to new one). As an addition binary size needs to be measure before and after this change.",
      "parentUuid": "a8da3048_eddb9836",
      "revId": "78239f08972a0c4873d40b3d021e8d94679497b5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ff417fd_95e9b031",
        "filename": "redfish-core/lib/trigger.hpp",
        "patchSetId": 5
      },
      "lineNbr": 200,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2021-11-25T11:06:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dfde51d6_ac1e18b3",
      "revId": "78239f08972a0c4873d40b3d021e8d94679497b5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ffdad41_c92415cd",
        "filename": "redfish-core/lib/trigger.hpp",
        "patchSetId": 5
      },
      "lineNbr": 212,
      "author": {
        "id": 1001026
      },
      "writtenOn": "2021-11-17T13:05:42Z",
      "side": 1,
      "message": "We should use \"Name\" property from dbus here.",
      "range": {
        "startLine": 212,
        "startChar": 39,
        "endLine": 212,
        "endChar": 42
      },
      "revId": "78239f08972a0c4873d40b3d021e8d94679497b5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4faae706_3c9618a4",
        "filename": "redfish-core/lib/trigger.hpp",
        "patchSetId": 5
      },
      "lineNbr": 212,
      "author": {
        "id": 1001148
      },
      "writtenOn": "2021-11-25T11:06:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ffdad41_c92415cd",
      "range": {
        "startLine": 212,
        "startChar": 39,
        "endLine": 212,
        "endChar": 42
      },
      "revId": "78239f08972a0c4873d40b3d021e8d94679497b5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}