{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4e22793d_1f6cf00b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 21,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-08-15T20:08:33Z",
      "side": 1,
      "message": "nit, do you mean 404?",
      "range": {
        "startLine": 21,
        "startChar": 30,
        "endLine": 21,
        "endChar": 33
      },
      "revId": "66f32a95f4bced0afabc9748aee51f6e22f7385f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19787b00_a77e7c25",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 21,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-15T22:10:46Z",
      "side": 1,
      "message": "I\u0027m not sure if this is a typo on my part or not.  At one point I had the 405 and 404 handling in a single patch, but I broken them up a little, so that might explain it.  Let me reload on my system and retest and make sure this is a typo.",
      "parentUuid": "4e22793d_1f6cf00b",
      "range": {
        "startLine": 21,
        "startChar": 30,
        "endLine": 21,
        "endChar": 33
      },
      "revId": "66f32a95f4bced0afabc9748aee51f6e22f7385f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7470077a_7e6b8b81",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 21,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-08-16T15:39:37Z",
      "side": 1,
      "message": "Sorry, this message was supposed to get sent alongside my response from yesterday.  I should have highlighted the status as well as the error code since it should be either \"404 Not found\" or \"405 Method Not Allowed\".  \n\nWhen I tried on my machine I saw 404.",
      "parentUuid": "19787b00_a77e7c25",
      "range": {
        "startLine": 21,
        "startChar": 30,
        "endLine": 21,
        "endChar": 33
      },
      "revId": "66f32a95f4bced0afabc9748aee51f6e22f7385f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d5f96f7_0bf5a88f",
        "filename": "http/routing.hpp",
        "patchSetId": 8
      },
      "lineNbr": 1336,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-08-15T20:08:33Z",
      "side": 1,
      "message": "I\u0027m not sure in what context this code gets used.  Won\u0027t we always find a real route or a 404 route?  Or does this catch unsupported methods for known routes like PATCH to /redfish/v1?",
      "range": {
        "startLine": 1322,
        "startChar": 8,
        "endLine": 1336,
        "endChar": 9
      },
      "revId": "66f32a95f4bced0afabc9748aee51f6e22f7385f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8efc8495_94419edd",
        "filename": "http/routing.hpp",
        "patchSetId": 8
      },
      "lineNbr": 1336,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-15T22:10:46Z",
      "side": 1,
      "message": "\u003e I\u0027m not sure in what context this code gets used.  Won\u0027t we always find a real route or a 404 route?\n\u003e  Or does this catch unsupported methods for known routes like PATCH to /redfish/v1?\n\n\nNot every tree declares a 404 route, so this is used in the case where we can\u0027t find either, which is most of the tree that isn\u0027t redfish right now.\n\nYes, for the moment it catches 405 as well, but that\u0027s getting changed in the next patch for custom 405 handlers",
      "parentUuid": "7d5f96f7_0bf5a88f",
      "range": {
        "startLine": 1322,
        "startChar": 8,
        "endLine": 1336,
        "endChar": 9
      },
      "revId": "66f32a95f4bced0afabc9748aee51f6e22f7385f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf03914d_395cb4ac",
        "filename": "http/routing.hpp",
        "patchSetId": 8
      },
      "lineNbr": 1336,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-08-15T22:25:24Z",
      "side": 1,
      "message": "I tried testing on my machine and I saw where query.hpp gets reached when a request of any type is sent to any route that is not supported at all:\nPOST /redfish/v1/Fake\nGET /redfish/v1/Fake\n\nThis is the behavior I want for Redfish Aggregation purposes.\n\nA PATCH request to /redfish/v1 did not hit query.hpp.  My guess is this check is the exit point for unsupported methods to recognized endpoints, but I don\u0027t know if there\u0027s a separate exit point for that situation.",
      "parentUuid": "8efc8495_94419edd",
      "range": {
        "startLine": 1322,
        "startChar": 8,
        "endLine": 1336,
        "endChar": 9
      },
      "revId": "66f32a95f4bced0afabc9748aee51f6e22f7385f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79dfaa49_b7d76a55",
        "filename": "http/routing.hpp",
        "patchSetId": 8
      },
      "lineNbr": 1336,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-16T16:28:25Z",
      "side": 1,
      "message": "In theory, the next patch in the series gives you the PATCH behavior you want (I think).",
      "parentUuid": "bf03914d_395cb4ac",
      "range": {
        "startLine": 1322,
        "startChar": 8,
        "endLine": 1336,
        "endChar": 9
      },
      "revId": "66f32a95f4bced0afabc9748aee51f6e22f7385f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "832e1aae_77fe7949",
        "filename": "http/routing.hpp",
        "patchSetId": 8
      },
      "lineNbr": 1336,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-08-16T16:46:09Z",
      "side": 1,
      "message": "I want unsupported method and URI combinations to hit the redfish404 endpoint so that they can reach the aggregation hook that will be in query.hpp.\n\nThe only combination that exits early is when BMCWeb supports an endpoint, but not the provided method.  That\u0027s why POST /redfish/v1/Fake reaches query.hpp, but PATCH /redfish/v1 bails early.  We support /redfish/v1, but PATCH requests are not valid methods for that endpoint.\n\nI haven\u0027t yet run into a scenario in BMCWeb where we support an endpoint without also supporting all of the methods as required by the spec.",
      "parentUuid": "79dfaa49_b7d76a55",
      "range": {
        "startLine": 1322,
        "startChar": 8,
        "endLine": 1336,
        "endChar": 9
      },
      "revId": "66f32a95f4bced0afabc9748aee51f6e22f7385f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}