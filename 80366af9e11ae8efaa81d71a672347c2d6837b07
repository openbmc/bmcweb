{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "25bed17b_888720fa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 55,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-09-12T19:11:12Z",
      "side": 1,
      "message": "What system was this tested on?  It uses an incorrect association that I don\u0027t see implemented in entity-manager, which would be the only thing capable of publishing a fan-\u003esensor association.  In addition, it\u0027s posting the wrong parameter to Redfish, which I would\u0027ve really expected someone to see if they had actually tried this code.  I\u0027m not sure how this test could\u0027ve passed with the code as written, unless maybe you were doing a unit test?\n\nHelp me understand please.  This appears as if it hasn\u0027t actually been tested, which I\u0027m sure wasn\u0027t your intent.",
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2b92b0d_df8fac17",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 55,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-09-14T21:46:10Z",
      "side": 1,
      "message": "Thank you for your review. I tested on the Rainier system. Fan associations are implemented in phosphor-hwmon based on what we define in associations.json.\n\nRegarding the Redfish parameters, I understand that there may have been some confusion. Initially, I misunderstood the Redfish schema definition. I believed that \u0027Reading\u0027 represented the current sensor value, while \u0027SpeedRPM\u0027 indicated the fan speed set. As FanSpeed\u0027 could be adjusted by changing the \u0027Target\u0027 value of \u0027xyz.openbmc_project.Control.FanSpeed.\n\n```xyz.openbmc_project.Control.FanSpeed                  interface -         -                                        -\n.Target                                               property  t         10400                                    emits-change writable\nxyz.openbmc_project.Sensor.Value                      interface -         -                                        -\n.MaxValue                                             property  d         inf                                      emits-change writable\n.MinValue                                             property  d         -inf                                     emits-change writable\n.Unit                                                 property  s         \"xyz.openbmc_project.Sensor.Value.Uni... emits-change writable\n.Value                                                property  d         10445                                    emits-change writable```\n\n\nFollowing an internal discussion with Matt Spinler and Gunner, I plan to remove the \u0027Reading\u0027 parameter, as it seems uncertain how to retrieve this value. I will correct the \u0027SpeedRPM\u0027 to the sensor value.",
      "parentUuid": "25bed17b_888720fa",
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bdd54da4_e88da29b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 55,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-09-15T16:29:42Z",
      "side": 1,
      "message": "Fan sensor associations are defined in associations.json file.\nhttps://github.com/openbmc/openbmc/blob/master/meta-ibm/recipes-phosphor/inventory/phosphor-inventory-manager/associations.json#L94\n\nFan associations are implemented in phosphor-hwmon based on what we define in associations.json.\n\nLatest patch is tested in Witherspoon.",
      "parentUuid": "c2b92b0d_df8fac17",
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3921b289_8d4b80c8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 55,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-09-18T16:37:44Z",
      "side": 1,
      "message": "Might be good to mention this was tested on Witherspoon in the commit msg. You could also add this link to the associations file. Up to you",
      "parentUuid": "bdd54da4_e88da29b",
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad650f74_4872aa56",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 55,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-09-19T04:14:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3921b289_8d4b80c8",
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "186cc44a_fe8b9b32",
        "filename": "redfish-core/lib/fan.hpp",
        "patchSetId": 21
      },
      "lineNbr": 381,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-09-12T19:11:12Z",
      "side": 1,
      "message": "Need to handle null cases, similar to the existing sensor code.",
      "range": {
        "startLine": 381,
        "startChar": 0,
        "endLine": 381,
        "endChar": 58
      },
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "306f231e_2122ad70",
        "filename": "redfish-core/lib/fan.hpp",
        "patchSetId": 21
      },
      "lineNbr": 381,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-09-15T16:29:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "186cc44a_fe8b9b32",
      "range": {
        "startLine": 381,
        "startChar": 0,
        "endLine": 381,
        "endChar": 58
      },
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09a95a32_43e4a0b5",
        "filename": "redfish-core/lib/fan.hpp",
        "patchSetId": 21
      },
      "lineNbr": 381,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-09-18T16:37:44Z",
      "side": 1,
      "message": "@Ed are you talking about https://github.com/openbmc/bmcweb/blob/e1bf8bb6a843a2a53d74d74f410b5fe053c2d222/redfish-core/lib/sensors.hpp#L934 ?\n\n```\n            if (!std::isfinite(*doubleValue))\n            {\n                if (valueName \u003d\u003d \"Value\")\n                {\n                    // Readings are allowed to be NAN for unavailable;  coerce\n                    // them to null in the json response.\n                    sensorJson[key] \u003d nullptr;\n                    continue;\n                }\n```",
      "parentUuid": "306f231e_2122ad70",
      "range": {
        "startLine": 381,
        "startChar": 0,
        "endLine": 381,
        "endChar": 58
      },
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d124f67_7c520787",
        "filename": "redfish-core/lib/fan.hpp",
        "patchSetId": 21
      },
      "lineNbr": 381,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-09-18T17:13:55Z",
      "side": 1,
      "message": "Yep, similar to what gunnar posted.  I see a \u003c 0.0 check, which is not what I asked for.  This comment isn\u0027t done.",
      "parentUuid": "09a95a32_43e4a0b5",
      "range": {
        "startLine": 381,
        "startChar": 0,
        "endLine": 381,
        "endChar": 58
      },
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06a5261e_0490d241",
        "filename": "redfish-core/lib/fan.hpp",
        "patchSetId": 21
      },
      "lineNbr": 381,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-09-19T04:14:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d124f67_7c520787",
      "range": {
        "startLine": 381,
        "startChar": 0,
        "endLine": 381,
        "endChar": 58
      },
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85e715cb_60f7d7e5",
        "filename": "redfish-core/lib/fan.hpp",
        "patchSetId": 21
      },
      "lineNbr": 381,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-09-19T15:51:03Z",
      "side": 1,
      "message": "We just leave it off if it is null? \nThat is different than https://github.com/openbmc/bmcweb/blob/e1bf8bb6a843a2a53d74d74f410b5fe053c2d222/redfish-core/lib/sensors.hpp#L934 but I think that is fine for this commit but can you put that in the commit msg and/or a comment in the code",
      "parentUuid": "06a5261e_0490d241",
      "range": {
        "startLine": 381,
        "startChar": 0,
        "endLine": 381,
        "endChar": 58
      },
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15f2ab49_73f9d501",
        "filename": "redfish-core/lib/fan.hpp",
        "patchSetId": 21
      },
      "lineNbr": 381,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-09-19T16:45:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85e715cb_60f7d7e5",
      "range": {
        "startLine": 381,
        "startChar": 0,
        "endLine": 381,
        "endChar": 58
      },
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a6ee56a_d8c303f3",
        "filename": "redfish-core/lib/fan.hpp",
        "patchSetId": 21
      },
      "lineNbr": 381,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-09-19T16:50:15Z",
      "side": 1,
      "message": "\u003e but I think that is fine for this commit\n\nI don\u0027t, and the more important thing is that this commit completely ignored the existing sensor code that handles this already.  This was discussed with DMTF on how to handle, and what\u0027s in the sensor subsystem is what they said.  I don\u0027t want to lose that, because we already lost it once in the other discussion for sensors.\n\nAlso, it\u0027s a trivial thing to add.  I\u0027m not sure why it\u0027s that difficult to look at the old code.",
      "parentUuid": "15f2ab49_73f9d501",
      "range": {
        "startLine": 381,
        "startChar": 0,
        "endLine": 381,
        "endChar": 58
      },
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f62a4f6_77d13752",
        "filename": "redfish-core/lib/fan.hpp",
        "patchSetId": 21
      },
      "lineNbr": 381,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-09-19T18:06:29Z",
      "side": 1,
      "message": "I was not aware that these changes were made following a discussion. I simply followed the approach we typically use for other properties in bmcweb. I will make the necessary changes.",
      "parentUuid": "5a6ee56a_d8c303f3",
      "range": {
        "startLine": 381,
        "startChar": 0,
        "endLine": 381,
        "endChar": 58
      },
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e5d47d8_a4fb6a72",
        "filename": "redfish-core/lib/fan.hpp",
        "patchSetId": 21
      },
      "lineNbr": 381,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-12-04T20:49:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f62a4f6_77d13752",
      "range": {
        "startLine": 381,
        "startChar": 0,
        "endLine": 381,
        "endChar": 58
      },
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5879b53_b185bcdb",
        "filename": "redfish-core/lib/fan.hpp",
        "patchSetId": 21
      },
      "lineNbr": 391,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-09-12T19:11:12Z",
      "side": 1,
      "message": "Target, is different than SpeedRPM.  SpeedRPM is the current reading, Target is the target.  Surely this would\u0027ve shown in your testing that SpeedRPM showed no noise when you ran your tests?",
      "range": {
        "startLine": 391,
        "startChar": 49,
        "endLine": 391,
        "endChar": 55
      },
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa44f909_2ca0ef55",
        "filename": "redfish-core/lib/fan.hpp",
        "patchSetId": 21
      },
      "lineNbr": 391,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-09-15T16:29:42Z",
      "side": 1,
      "message": "I see that the sensor’s code “Reading” is being set to the “Value” of the sensor.\nI misunderstood the SpeedRPM, but I have now corrected the code.",
      "parentUuid": "f5879b53_b185bcdb",
      "range": {
        "startLine": 391,
        "startChar": 49,
        "endLine": 391,
        "endChar": 55
      },
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be40fa46_1ffb756c",
        "filename": "redfish-core/lib/fan.hpp",
        "patchSetId": 21
      },
      "lineNbr": 461,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-09-12T19:11:12Z",
      "side": 1,
      "message": "This association doesn\u0027t exist anywhere that I see;  I don\u0027t understand how this code could\u0027ve worked as written.",
      "range": {
        "startLine": 461,
        "startChar": 41,
        "endLine": 461,
        "endChar": 48
      },
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "44303843_b768b1e2",
        "filename": "redfish-core/lib/fan.hpp",
        "patchSetId": 21
      },
      "lineNbr": 461,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-09-15T16:29:42Z",
      "side": 1,
      "message": "These associations are defined in associations.json file. \nhttps://github.com/openbmc/openbmc/blob/master/meta-ibm/recipes-phosphor/inventory/phosphor-inventory-manager/associations.json#L94",
      "parentUuid": "be40fa46_1ffb756c",
      "range": {
        "startLine": 461,
        "startChar": 41,
        "endLine": 461,
        "endChar": 48
      },
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f72a601_bee2ff9d",
        "filename": "redfish-core/lib/fan.hpp",
        "patchSetId": 21
      },
      "lineNbr": 461,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-09-19T16:59:32Z",
      "side": 1,
      "message": "Why was this resolved?  One systems association does not mean it\u0027s correct.  Also, generally the association we\u0027ve used is \"all_sensors\" so I\u0027m a little surprised phosphor-inventory-manager accepted that.\n\nGiven that a fan very likely has multiple sensors of various classes, just looking for the first related sensor doesn\u0027t work.",
      "parentUuid": "44303843_b768b1e2",
      "range": {
        "startLine": 461,
        "startChar": 41,
        "endLine": 461,
        "endChar": 48
      },
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64c96d1f_0d3049ce",
        "filename": "redfish-core/lib/fan.hpp",
        "patchSetId": 21
      },
      "lineNbr": 461,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-09-19T21:59:57Z",
      "side": 1,
      "message": "There are other systems also have similar associations,\nhttps://grok.openbmc.org/xref/openbmc/openbmc/meta-quanta/meta-gbs/recipes-phosphor/inventory/phosphor-inventory-manager/associations.json?r\u003db4ebad6c#286",
      "parentUuid": "6f72a601_bee2ff9d",
      "range": {
        "startLine": 461,
        "startChar": 41,
        "endLine": 461,
        "endChar": 48
      },
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc0f49c7_2386d266",
        "filename": "redfish-core/lib/fan.hpp",
        "patchSetId": 21
      },
      "lineNbr": 461,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-09-19T21:59:57Z",
      "side": 1,
      "message": "There are other systems that have similar associations. \n\nhttps://grok.openbmc.org/xref/openbmc/openbmc/meta-quanta/meta-gbs/recipes-phosphor/inventory/phosphor-inventory-manager/associations.json?r\u003db4ebad6c#286\n\nhttps://grok.openbmc.org/xref/openbmc/openbmc/meta-inspur/meta-fp5280g2/recipes-phosphor/inventory/phosphor-inventory-manager/associations.json?r\u003dc0060a74#108\n\nI will make changes to the code to filter the list of sensors that have \u0027fan_tach\u0027 in the path and pass it to addFanSensorsSpeedPercent. This approach aligns with what we\u0027ve done in the sensor code. Please let me know if it is not necessary in this code if fans will have only sensors in \u0027fan_tach\u0027.\n\nhttps://grok.openbmc.org/xref/openbmc/bmcweb/redfish-core/lib/sensors.hpp?r\u003d80f79a40#2581",
      "parentUuid": "6f72a601_bee2ff9d",
      "range": {
        "startLine": 461,
        "startChar": 41,
        "endLine": 461,
        "endChar": 48
      },
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bdd8ef40_bcf91e6a",
        "filename": "redfish-core/lib/fan.hpp",
        "patchSetId": 21
      },
      "lineNbr": 461,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-09-19T22:47:02Z",
      "side": 1,
      "message": "\u003e There are other systems also have similar associations,\n\nCool, that doesn\u0027t make them correct.\n\n\n\u003e I will make changes to the code to filter the list of sensors that have \u0027fan_tach\u0027 in the path and pass it to addFanSensorsSpeedPercent\n\nand how will you determine the first fan tach from the second for dual rotor fans?  Or do you intend to not support dual rotor fans (in which case, the code needs to explicitly handle that case).\n\n\u003e This approach aligns with what we\u0027ve done in the sensor code.\n\nThe sensor code relies on an all_sensors association, which I don\u0027t see that you\u0027ve talked about changing, or even documenting the new association.\n\n\nI have no idea why you linked the line of code that\u0027s creating the URI from the type....  Given that you don\u0027t have an odata.id for this property, it\u0027s unrelated.",
      "parentUuid": "bc0f49c7_2386d266",
      "range": {
        "startLine": 461,
        "startChar": 41,
        "endLine": 461,
        "endChar": 48
      },
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e44ab57c_fe7efbd6",
        "filename": "redfish-core/lib/fan.hpp",
        "patchSetId": 21
      },
      "lineNbr": 461,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-09-21T14:06:01Z",
      "side": 1,
      "message": "\u003e The sensor code relies on an all_sensors association, which I don\u0027t see that you\u0027ve talked about changing, or even documenting the new association.\n\nall_sensors is for the chassis to sensors. \nsensors is for a low level inventory item (like fan) to a sensor \nhttps://github.com/openbmc/docs/blob/717d273cf8bceac3868a278aeb34d19e8d74c1b3/architecture/sensor-architecture.md?plain\u003d1#L66\n\n\u003e and how will you determine the first fan tach from the second for dual rotor fans? Or do you intend to not support dual rotor fans (in which case, the code needs to explicitly handle that case).\n\nDo you need new associations here? \nFor a single rotor, I could see where you only put it out if you have 1 assocation but for dual rotor, how do you know which is primary and which is secondary?\n\nDo you need a primaryRPMsensor and secondaryRPMsenosr?\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Inventory/Item/Fan.interface.yaml#L4",
      "parentUuid": "bdd8ef40_bcf91e6a",
      "range": {
        "startLine": 461,
        "startChar": 41,
        "endLine": 461,
        "endChar": 48
      },
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "923c730e_d1ea84b0",
        "filename": "redfish-core/lib/fan.hpp",
        "patchSetId": 21
      },
      "lineNbr": 461,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-12-04T20:49:07Z",
      "side": 1,
      "message": "New PDI \u0027xyz.openbmc_project.Common.Priority\u0027 interface is implemented  to specify the priority of the sensosors in the following commits:\n    \nhttps://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/66779\nhttps://gerrit.openbmc.org/c/openbmc/phosphor-hwmon/+/67170",
      "parentUuid": "e44ab57c_fe7efbd6",
      "range": {
        "startLine": 461,
        "startChar": 41,
        "endLine": 461,
        "endChar": 48
      },
      "revId": "80366af9e11ae8efaa81d71a672347c2d6837b07",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}