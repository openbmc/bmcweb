{
  "comments": [
    {
      "key": {
        "uuid": "2d2b4318_a9fca8f3",
        "filename": "redfish-core/include/redfish.hpp",
        "patchSetId": 29
      },
      "lineNbr": 145,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-24T15:59:41Z",
      "side": 1,
      "message": "Do we need a separate router API for SubProcessors? is there any advantage? \nCannot we use the requestRoutesProcessor()?",
      "range": {
        "startLine": 144,
        "startChar": 8,
        "endLine": 145,
        "endChar": 44
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2736c1a_61a7e182",
        "filename": "redfish-core/include/redfish.hpp",
        "patchSetId": 29
      },
      "lineNbr": 145,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T02:50:35Z",
      "side": 1,
      "message": "NO\nBecause their URLs are not the same",
      "parentUuid": "2d2b4318_a9fca8f3",
      "range": {
        "startLine": 144,
        "startChar": 8,
        "endLine": 145,
        "endChar": 44
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2172cfa7_9095feba",
        "filename": "redfish-core/include/redfish.hpp",
        "patchSetId": 29
      },
      "lineNbr": 145,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-25T07:23:16Z",
      "side": 1,
      "message": "I think the added macro `BMCWEB_ROUTE` can be added into `requestRoutesProcessor` - Looks the URL is sub URL of Processor URL. \nI am not much experts in bmcweb design on the router part - I like to see @Ed and @Gunnar thoughts on this.",
      "parentUuid": "c2736c1a_61a7e182",
      "range": {
        "startLine": 144,
        "startChar": 8,
        "endLine": 145,
        "endChar": 44
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2e44c78_059b73b8",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 827,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-24T15:59:41Z",
      "side": 1,
      "message": "Why capturing the \"service\" into lambda? Looks this is not used inside the lambda",
      "range": {
        "startLine": 827,
        "startChar": 9,
        "endLine": 827,
        "endChar": 16
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96fc8ad2_cb54525b",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 827,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T02:50:35Z",
      "side": 1,
      "message": "Yeah, removed",
      "parentUuid": "f2e44c78_059b73b8",
      "range": {
        "startLine": 827,
        "startChar": 9,
        "endLine": 827,
        "endChar": 16
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ecc7442_687f5083",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 827,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T09:03:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "96fc8ad2_cb54525b",
      "range": {
        "startLine": 827,
        "startChar": 9,
        "endLine": 827,
        "endChar": 16
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2be7f548_29928ad2",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 917,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-24T15:59:41Z",
      "side": 1,
      "message": "I think you need to find out the dbus service which will host the given core id instead of using the processor dbus service because it may break if the core object is hosted by another service than the processor service.",
      "range": {
        "startLine": 917,
        "startChar": 8,
        "endLine": 917,
        "endChar": 15
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53d65b28_3cc3bbc0",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 917,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T02:50:35Z",
      "side": 1,
      "message": "In fact, service is equivalent to `xyz.openbmc_project.Inventory.Manager`",
      "parentUuid": "2be7f548_29928ad2",
      "range": {
        "startLine": 917,
        "startChar": 8,
        "endLine": 917,
        "endChar": 15
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "093baffc_c01eecdf",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 917,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-25T07:23:16Z",
      "side": 1,
      "message": "Not really, Let\u0027s consider the following case from another vendor perspective.\n\n- BMC xyz.openbmc_project.Inventory.Manager or xyz.openbmc_project.EntityManager can host processor objects before booting the host to get some information about the host processors.\n\n- The core objects can be hosted by other Managers for example PLDM based on Host PDR (like IBM systems) which will send when doing the power on so the service will be xyz.openbmc_project.PLDM for core and xyz.openbmc_project.Inventory.Manager for Processors - FYR https://gerrit.openbmc-project.xyz/c/openbmc/pldm/+/42619",
      "parentUuid": "53d65b28_3cc3bbc0",
      "range": {
        "startLine": 917,
        "startChar": 8,
        "endLine": 917,
        "endChar": 15
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6a9f746_712dae04",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 917,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T09:03:49Z",
      "side": 1,
      "message": "Okay, I see\nBut this problem is everywhere, I want to push a new patch to fix it.",
      "parentUuid": "093baffc_c01eecdf",
      "range": {
        "startLine": 917,
        "startChar": 8,
        "endLine": 917,
        "endChar": 15
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da2b30b2_f3b25a8c",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 917,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-25T11:35:57Z",
      "side": 1,
      "message": "It will be great if we fixed it in the same patch since this patch intended to implement Core objects in Redfish so I would prefer to change in the same patch itself rather than fixing this patch comment in the new patch. \n\nI guess we need to make the below changes.\n- Introduce outer crow call by using the `GetObject` method with the given core object paths and then use that service name in this line. (The current crow call will be inner crow)\n\nSeeing any issue with this? or Different thoughts?",
      "parentUuid": "e6a9f746_712dae04",
      "range": {
        "startLine": 917,
        "startChar": 8,
        "endLine": 917,
        "endChar": 15
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23e2bd54_4fccd115",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 953,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-24T15:59:41Z",
      "side": 1,
      "message": "Same as LN 1006 comment.",
      "range": {
        "startLine": 951,
        "startChar": 16,
        "endLine": 953,
        "endChar": 32
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6daaa30a_1df6a157",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 953,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T02:50:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "23e2bd54_4fccd115",
      "range": {
        "startLine": 951,
        "startChar": 16,
        "endLine": 953,
        "endChar": 32
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "123aa20f_46a523f1",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 960,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-24T15:59:41Z",
      "side": 1,
      "message": "- Why looping through all the dbus service which is implemented the processors interface?\n- More then one dbus service will implement the processor interfaces in the BMC stack?",
      "range": {
        "startLine": 960,
        "startChar": 16,
        "endLine": 960,
        "endChar": 57
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9e1ac42_1c26d3e7",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 960,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T02:50:35Z",
      "side": 1,
      "message": "No, we only run the for loop once.\nIn fact, We just cater to this structure(`std::vector`).\n\nI can add `break` in the for loop.",
      "parentUuid": "123aa20f_46a523f1",
      "range": {
        "startLine": 960,
        "startChar": 16,
        "endLine": 960,
        "endChar": 57
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8b3fdbc_cfacca4e",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 960,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-25T07:23:16Z",
      "side": 1,
      "message": "I am not sure adding `break` will help us. For example, if more than one service hosting processors object then how we can decide which one need to use? - This code will always use the **first** service which is present in the services vector.\n\n- If we are ~~not~~ allowing the same object to host by more than one service in the OpenBMC then we should throw an error from bmcweb if something happened in the backend.\n- If we are allowing the same object to host by more than one service in the OpenBMC then we should decide which one need to use.",
      "parentUuid": "c9e1ac42_1c26d3e7",
      "range": {
        "startLine": 960,
        "startChar": 16,
        "endLine": 960,
        "endChar": 57
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "902cb68f_e0804f56",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 960,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T09:03:49Z",
      "side": 1,
      "message": "Yeah, Please see L: 917\n\nWill push a new patch to fix it.",
      "parentUuid": "d8b3fdbc_cfacca4e",
      "range": {
        "startLine": 960,
        "startChar": 16,
        "endLine": 960,
        "endChar": 57
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5b12a5b_bc4d183e",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 960,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-25T11:35:57Z",
      "side": 1,
      "message": "- I guess this is not related to LN 917 comment - That\u0027s for core but, this is for the processor.\n- I think, We need to check and throw an error if more than one service implementing processors(AFAIK, In OpenBMC we are not allowing more than one service to host the same objects - You can check others on this.)",
      "parentUuid": "902cb68f_e0804f56",
      "range": {
        "startLine": 960,
        "startChar": 16,
        "endLine": 960,
        "endChar": 57
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f10811a_1f655ae2",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 977,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-24T15:59:41Z",
      "side": 1,
      "message": "Can you use `processorInterfaces` (https://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/processor.hpp#L44) instead of hardcoding here?",
      "range": {
        "startLine": 975,
        "startChar": 8,
        "endLine": 977,
        "endChar": 61
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "411e0b6e_8f7b6313",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 977,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T02:50:35Z",
      "side": 1,
      "message": "Yeah.\nTHB, this patch is a long time, When I write this function, the `processorInterfaces` interface has not been implemented yet 😊\n\nDone.",
      "parentUuid": "3f10811a_1f655ae2",
      "range": {
        "startLine": 975,
        "startChar": 8,
        "endLine": 977,
        "endChar": 61
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d902578_dd9a6896",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 977,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T09:03:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "411e0b6e_8f7b6313",
      "range": {
        "startLine": 975,
        "startChar": 8,
        "endLine": 977,
        "endChar": 61
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "348fdeb0_b3f1f0fd",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1006,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-24T15:59:41Z",
      "side": 1,
      "message": "JS: I think you can avoid path and leaf variables\n- path\n\n\u003e if (sdbusplus::message::object_path(cpuPath).filename() !\u003d processorId)\n\n- leaf\n  - are we really get empty() since you used starting path as `/xyz/openbmc_project/inventory` so worst case we will get `inventory` right, if the given processor interfaces are not found in the inventory?",
      "range": {
        "startLine": 1005,
        "startChar": 16,
        "endLine": 1006,
        "endChar": 51
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "607bae27_9f3db8ee",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1006,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T02:50:35Z",
      "side": 1,
      "message": "okay, agree with you.\nDone",
      "parentUuid": "348fdeb0_b3f1f0fd",
      "range": {
        "startLine": 1005,
        "startChar": 16,
        "endLine": 1006,
        "endChar": 51
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbe14cf2_371fc4d3",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1006,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T09:03:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "607bae27_9f3db8ee",
      "range": {
        "startLine": 1005,
        "startChar": 16,
        "endLine": 1006,
        "endChar": 51
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ca8c190_d50fbaf9",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1043,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-24T15:59:41Z",
      "side": 1,
      "message": "I think you can achieve this by passing the appropriate interfaces in the inner crow call?",
      "range": {
        "startLine": 1042,
        "startChar": 28,
        "endLine": 1043,
        "endChar": 71
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e147ab6b_6bfaedd9",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1043,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T02:50:35Z",
      "side": 1,
      "message": "See: L 1066",
      "parentUuid": "7ca8c190_d50fbaf9",
      "range": {
        "startLine": 1042,
        "startChar": 28,
        "endLine": 1043,
        "endChar": 71
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c0f4a39_59533fb1",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1043,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-25T07:23:16Z",
      "side": 1,
      "message": "Added the comment in the same at last on this i.e if association endpoints start with `core` then that subtree path may be considered as SubProcessors. - I think we should get the subtree path based on the required interfaces rather than doing string manipulation when we don\u0027t have a guarantee on that.",
      "parentUuid": "e147ab6b_6bfaedd9",
      "range": {
        "startLine": 1042,
        "startChar": 28,
        "endLine": 1043,
        "endChar": 71
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4208c3ab_9763bf84",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1043,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T09:03:49Z",
      "side": 1,
      "message": "The same as L: 1066",
      "parentUuid": "1c0f4a39_59533fb1",
      "range": {
        "startLine": 1042,
        "startChar": 28,
        "endLine": 1043,
        "endChar": 71
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "314cf129_510eb34c",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1043,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-25T11:35:57Z",
      "side": 1,
      "message": "I guess I am trying to say, If we fixed LN 1066 comment then this check is not required since we will get only core objects from the respective processor subtree path.",
      "parentUuid": "4208c3ab_9763bf84",
      "range": {
        "startLine": 1042,
        "startChar": 28,
        "endLine": 1043,
        "endChar": 71
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc044423_58ba51c7",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1049,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-24T15:59:41Z",
      "side": 1,
      "message": "JS: I think you can avoid path variable\n\n\u003e std::string leaf{sdbusplus::message::object_path(corePath).filename()};",
      "range": {
        "startLine": 1048,
        "startChar": 28,
        "endLine": 1049,
        "endChar": 63
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca9b8ef1_e0b45946",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1049,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T02:50:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc044423_58ba51c7",
      "range": {
        "startLine": 1048,
        "startChar": 28,
        "endLine": 1049,
        "endChar": 63
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb3e9079_69d289f4",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1056,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-24T15:59:41Z",
      "side": 1,
      "message": "Do we really face this case?",
      "range": {
        "startLine": 1050,
        "startChar": 1,
        "endLine": 1056,
        "endChar": 29
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "653f006a_b569e71b",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1056,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T02:50:35Z",
      "side": 1,
      "message": "Removed",
      "parentUuid": "cb3e9079_69d289f4",
      "range": {
        "startLine": 1050,
        "startChar": 1,
        "endLine": 1056,
        "endChar": 29
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a96fd0a_52391acd",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1056,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T09:03:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "653f006a_b569e71b",
      "range": {
        "startLine": 1050,
        "startChar": 1,
        "endLine": 1056,
        "endChar": 29
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c305bf4_41a4fc6a",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1066,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-24T15:59:41Z",
      "side": 1,
      "message": "- Looks you are trying to get the Core inventory item so can use the appropriate interface i.e \"xyz.openbmc_project.Inventory.Item.CpuCore\"?\n\n- I think if we have added the association in the given processor object then, I guess that endpoints will be considered as \"SubProcessors\" right? so, I think we need to filter out by using the appropriate interfaces.",
      "range": {
        "startLine": 1066,
        "startChar": 32,
        "endLine": 1066,
        "endChar": 60
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c852ca8a_4482b996",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1066,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T02:50:35Z",
      "side": 1,
      "message": "\u003e Looks you are trying to get the Core inventory item so can use the appropriate interface i.e \"xyz.openbmc_project.Inventory.Item.CpuCore\"?\n\nCurrently, we are unable to obtain this interface.\n\n\u003e I think if we have added the association in the given processor object then, I guess that endpoints will be considered as \"SubProcessors\" right? so, I think we need to filter out by using the appropriate interfaces\n\nNo, for example:\nIf we association 10 cores in cpu0, when Power On, if only 8 cores are valid, but at this time, we get 10 cores instead of 8 cores, right?",
      "parentUuid": "4c305bf4_41a4fc6a",
      "range": {
        "startLine": 1066,
        "startChar": 32,
        "endLine": 1066,
        "endChar": 60
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14c9556c_24586a0d",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1066,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-25T07:23:16Z",
      "side": 1,
      "message": "\u003e Currently, we are unable to obtain this interface.\n\nSorry, Not getting, why we are unable to obtain this interface. - are you saying, \"adding the core interfaces won\u0027t get core objects path alone\"?\n\n\u003e No, for example:\nIf we association 10 cores in cpu0, when Power On, if only 8 cores are valid, but at this time, we get 10 cores instead of 8 cores, right?\n\nI guess it depends on how you want to add? Whether all present core or only active core of the respective processor.\n\nBut, I guess I am trying to point out something else - I will try with the case which I am trying to convey.\n\nLet\u0027s consider we are adding the association in processor object to get the associated core (maybe anything) or other applications adding the association in them object to point the processor objects so, either the forward or reverse endpoints will get added under the processor objects so, we will see that endpoints in SubProcessors collection when hitting this code but, it added as per Association (https://github.com/openbmc/docs/blob/master/architecture/object-mapper.md#associations) design and it is not the Subprocessors\n\n(I am considering the added association endpoints if starts with \"core\", not the core objects so, I guess we should add the core interfaces to filter out from processors subtree paths)",
      "parentUuid": "c852ca8a_4482b996",
      "range": {
        "startLine": 1066,
        "startChar": 32,
        "endLine": 1066,
        "endChar": 60
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e7d23ee_9ba118b6",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1066,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T09:03:49Z",
      "side": 1,
      "message": "Okay, I think we can update it after association.json is updated.\nRight now, can we keep it?",
      "parentUuid": "14c9556c_24586a0d",
      "range": {
        "startLine": 1066,
        "startChar": 32,
        "endLine": 1066,
        "endChar": 60
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b452190b_376d72ed",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1066,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-25T11:35:57Z",
      "side": 1,
      "message": "I guess it will be small changes if you agree to do that.\n```\n// Interfaces which imply a D-Bus object represents a Processor Core\nconstexpr std::array\u003cconst char*, 1\u003e procCoreInterfaces \u003d {\n    \"xyz.openbmc_project.Inventory.Item.CpuCore\"};\n \ncpuPath, 0, procCoreInterfaces);\n\n```\n\nBy using this, we will get only core objects.\n\nOR seeing any issue with this?",
      "parentUuid": "6e7d23ee_9ba118b6",
      "range": {
        "startLine": 1066,
        "startChar": 32,
        "endLine": 1066,
        "endChar": 60
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43fc2725_0d56d111",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1072,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-24T15:59:41Z",
      "side": 1,
      "message": "Do you no need to throw the error if the given processor id is not present in the retrieved inventory processors objects?",
      "range": {
        "startLine": 1069,
        "startChar": 12,
        "endLine": 1072,
        "endChar": 76
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f893f646_e2956c71",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1072,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T02:50:35Z",
      "side": 1,
      "message": "It is my mistake, removed comment",
      "parentUuid": "43fc2725_0d56d111",
      "range": {
        "startLine": 1069,
        "startChar": 12,
        "endLine": 1072,
        "endChar": 76
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5360be5_87fb3d4d",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1072,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T09:03:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f893f646_e2956c71",
      "range": {
        "startLine": 1069,
        "startChar": 12,
        "endLine": 1072,
        "endChar": 76
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9918920b_1bd53d9f",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1076,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-24T15:59:41Z",
      "side": 1,
      "message": "Just Suggestion(JS): It will be great if you used some constexpr for this and change it everywhere (I mean, wherever using ObjectMapper in this header file) so that we can have more control if we need to change in the future.",
      "range": {
        "startLine": 1074,
        "startChar": 8,
        "endLine": 1076,
        "endChar": 42
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6dfe74e9_34b7e7b8",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1076,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T02:50:35Z",
      "side": 1,
      "message": "Yeah, this is a legacy problem and has nothing to do with the functionality of this patch, so I think I can update it in a new patch.",
      "parentUuid": "9918920b_1bd53d9f",
      "range": {
        "startLine": 1074,
        "startChar": 8,
        "endLine": 1076,
        "endChar": 42
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58c46c6a_4844d05b",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1076,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T09:03:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6dfe74e9_34b7e7b8",
      "range": {
        "startLine": 1074,
        "startChar": 8,
        "endLine": 1076,
        "endChar": 42
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62cf1437_daecde58",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1080,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-24T15:59:41Z",
      "side": 1,
      "message": "Can you use `processorInterfaces` (https://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/processor.hpp#L44) instead of hardcoding here?",
      "range": {
        "startLine": 1078,
        "startChar": 8,
        "endLine": 1080,
        "endChar": 61
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67baf4f4_3b196e29",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1080,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T02:50:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "62cf1437_daecde58",
      "range": {
        "startLine": 1078,
        "startChar": 8,
        "endLine": 1080,
        "endChar": 61
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d16646cd_cdfece2b",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1560,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-24T15:59:41Z",
      "side": 1,
      "message": "- I think Redfish saying SubProcessors can be Processor schema so any ProcessorType (Accelerator, Core, CPU, Thread, GPU, FPGA, etc) is possible so, how we can decide Redfish client tried to get the Subprocessors of Core?\n  - is it something we need to handle by looking at the implemented Subprocessors collection in bmcweb? so that it will be easy to extend future if somebody coming with another Subprocessors Type?",
      "range": {
        "startLine": 1560,
        "startChar": 25,
        "endLine": 1560,
        "endChar": 42
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "159e9a5c_8182324c",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1560,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T02:50:35Z",
      "side": 1,
      "message": "Currently we only need to implement the CPU type for processorType.\nMaybe I am not sure, @Gunnar, what do you think?",
      "parentUuid": "d16646cd_cdfece2b",
      "range": {
        "startLine": 1560,
        "startChar": 25,
        "endLine": 1560,
        "endChar": 42
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eee2c16f_a1bd0dd9",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1570,
      "author": {
        "id": 1000427
      },
      "writtenOn": "2021-08-24T15:59:41Z",
      "side": 1,
      "message": "Looks like you are using more than one place, can we use some constexpr? Or is it possible to use the different versions?",
      "range": {
        "startLine": 1570,
        "startChar": 22,
        "endLine": 1570,
        "endChar": 49
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdd5f34e_326022c9",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1570,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T02:50:35Z",
      "side": 1,
      "message": "This is a legacy problem, I think I can update it in the new patch.",
      "parentUuid": "eee2c16f_a1bd0dd9",
      "range": {
        "startLine": 1570,
        "startChar": 22,
        "endLine": 1570,
        "endChar": 49
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2d8401d_bf49b311",
        "filename": "redfish-core/lib/processor.hpp",
        "patchSetId": 29
      },
      "lineNbr": 1570,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-08-25T09:03:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "cdd5f34e_326022c9",
      "range": {
        "startLine": 1570,
        "startChar": 22,
        "endLine": 1570,
        "endChar": 49
      },
      "revId": "e339475c7d3cfea425332612125320df4d44b183",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}