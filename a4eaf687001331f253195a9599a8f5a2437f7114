{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e3eb9d19_c2995785",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 27,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-03-28T20:29:47Z",
      "side": 1,
      "message": "We will have to get this running in CI so we can catch breaks like this.",
      "range": {
        "startLine": 27,
        "startChar": 8,
        "endLine": 27,
        "endChar": 35
      },
      "revId": "a4eaf687001331f253195a9599a8f5a2437f7114",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89b65f0e_5c08ec54",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 27,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-03-28T20:29:47Z",
      "side": 1,
      "message": "the SSE fails are fixed by https://gerrit.openbmc.org/c/openbmc/bmcweb/+/70294?",
      "range": {
        "startLine": 27,
        "startChar": 55,
        "endLine": 27,
        "endChar": 59
      },
      "revId": "a4eaf687001331f253195a9599a8f5a2437f7114",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82ce5636_784557ce",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 27,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-28T22:56:10Z",
      "side": 1,
      "message": "Most of them.  There\u0027s still one failure that I haven\u0027t tracked down.  It seems to be one of those essoteric things where redfish expects a normal GET of the SSE handler to return 200, not 404.\n\nProbably just some statement in the spec that the original folks missed.  Shouldn\u0027t effect real users at all.",
      "parentUuid": "89b65f0e_5c08ec54",
      "range": {
        "startLine": 27,
        "startChar": 55,
        "endLine": 27,
        "endChar": 59
      },
      "revId": "a4eaf687001331f253195a9599a8f5a2437f7114",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d458e19b_03601bb9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 27,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-28T22:56:10Z",
      "side": 1,
      "message": "Yes, ideally we should.  I know I\u0027ve asked before.",
      "parentUuid": "e3eb9d19_c2995785",
      "range": {
        "startLine": 27,
        "startChar": 8,
        "endLine": 27,
        "endChar": 35
      },
      "revId": "a4eaf687001331f253195a9599a8f5a2437f7114",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc6f9603_fa27ad9e",
        "filename": "http/http_response.hpp",
        "patchSetId": 8
      },
      "lineNbr": 189,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-03-29T04:11:48Z",
      "side": 1,
      "message": "who calls clear method? Is this just a test case scenario?  doesn\u0027t the destructor of response do the job? Once the redfish request is completed the response object is destructed right? Then what is the problem in handling next read? I hope concurrent execution of two redfish request for same file should work.\nIf destructor is not doing the job then we must call clear method from destructor too.",
      "revId": "a4eaf687001331f253195a9599a8f5a2437f7114",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}