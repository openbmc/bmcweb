{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3e614d63_859f8033",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T02:02:01Z",
      "side": 1,
      "message": "There\u0027s lots of these includes that I\u0027m not understanding why IWYU is suggesting them, but I don\u0027t really want to go through and document all of them.  Lets see if we can understand the \"weird\" ones.",
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6744f4ca_018c73da",
        "filename": "http/ut/router_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T02:03:05Z",
      "side": 1,
      "message": "For things like gtest, that are used across the project, does iwyu have a way to avoid having all the boilerplate spread throughout the project?",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 45
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9edb8eef_56fa762c",
        "filename": "http/ut/router_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-07T23:02:24Z",
      "side": 1,
      "message": "It provides an option to fix it in the headers that sources include, https://github.com/include-what-you-use/include-what-you-use/blob/master/docs/IWYUPragmas.md#iwyu-pragma-private.\n\nI am not aware of other options. See https://github.com/include-what-you-use/include-what-you-use#how-to-correct-iwyu-mistakes",
      "parentUuid": "6744f4ca_018c73da",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 45
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c2166d7_4a7d5453",
        "filename": "http/ut/router_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T23:22:20Z",
      "side": 1,
      "message": "For gtest, considering that gtest.h is the public API, should we be doing:\n\n#include \u003cgtest/gtest.h\u003e // IWYU pragma: keep\n\n\n// IWYU pragma: no_include \u003cgtest/gtest-message.h\u003e\n// IWYU pragma: no_include \u003cgtest/gtest-test-part.h\u003e\n\non these?\n\nOr maybe we should define a gtest_local.h to avoid the boilerplate?",
      "parentUuid": "9edb8eef_56fa762c",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 45
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "915be3b5_b0d25446",
        "filename": "http/ut/router_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-11T01:20:51Z",
      "side": 1,
      "message": "I prefer just using IWYU pragma. Done.",
      "parentUuid": "5c2166d7_4a7d5453",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 45
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80c130d8_35243327",
        "filename": "http/ut/router_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-11T17:23:43Z",
      "side": 1,
      "message": "My suggestion used IWYU pragma, so I don\u0027t quite understand your answer.  I\u0027m suggesting that we shouldn\u0027t include headers that the test harness documentation itself (gtest in this case) doesn\u0027t recommend.",
      "parentUuid": "915be3b5_b0d25446",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 45
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca6c556f_00d18be9",
        "filename": "http/ut/router_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-11T19:21:40Z",
      "side": 1,
      "message": "\u003e I\u0027m suggesting that we shouldn\u0027t include headers that the test harness documentation itself (gtest in this case) doesn\u0027t recommend.\n\nThat\u0027s what we do now, right? \n\n\u003e I prefer just using IWYU pragma. Done.\n\nThis is for \n\n```\n#include \u003cgtest/gtest.h\u003e // IWYU pragma: keep\n\n\n// IWYU pragma: no_include \u003cgtest/gtest-message.h\u003e\n// IWYU pragma: no_include \u003cgtest/gtest-test-part.h\u003e\n\non these?\n\nOr maybe we should define a gtest_local.h to avoid the boilerplate?\n```\n\nI was saying I went with the first option.",
      "parentUuid": "80c130d8_35243327",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 45
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb564c45_06fb710f",
        "filename": "http/ut/router_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T01:57:09Z",
      "side": 1,
      "message": "why quotes here instead of \u003c",
      "range": {
        "startLine": 23,
        "startChar": 27,
        "endLine": 23,
        "endChar": 28
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6df1e8da_96ef9713",
        "filename": "http/ut/router_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-07T23:02:24Z",
      "side": 1,
      "message": "iwyu uses quotes.",
      "parentUuid": "cb564c45_06fb710f",
      "range": {
        "startLine": 23,
        "startChar": 27,
        "endLine": 23,
        "endChar": 28
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e19c341_b5be2298",
        "filename": "http/ut/router_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T23:22:20Z",
      "side": 1,
      "message": "but the line below it uses \u003c, so maybe iwyu is inconsistent?  Could this be made to be \u003c  ?",
      "parentUuid": "6df1e8da_96ef9713",
      "range": {
        "startLine": 23,
        "startChar": 27,
        "endLine": 23,
        "endChar": 28
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c1c7c30_85d7ca8c",
        "filename": "http/ut/router_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-11T01:20:51Z",
      "side": 1,
      "message": "I made \"gtest/gtest_pred_impl.h\" consistent to \"\" which is what iwyu includes.\n\nI don\u0027t know why it\u0027s \"\" in the first place.",
      "parentUuid": "7e19c341_b5be2298",
      "range": {
        "startLine": 23,
        "startChar": 27,
        "endLine": 23,
        "endChar": 28
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a83ec29f_c9bd5c19",
        "filename": "http/ut/router_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-11T17:23:43Z",
      "side": 1,
      "message": "Should we figure out why before we check this in?",
      "parentUuid": "1c1c7c30_85d7ca8c",
      "range": {
        "startLine": 23,
        "startChar": 27,
        "endLine": 23,
        "endChar": 28
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed307b01_9213ed7c",
        "filename": "http/ut/router_test.cpp",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-11T19:21:40Z",
      "side": 1,
      "message": "No, I didn\u0027t look into why it includes \"gtest/gtest_pred_impl.h\". Is that blocking us getting this clean up in?",
      "parentUuid": "a83ec29f_c9bd5c19",
      "range": {
        "startLine": 23,
        "startChar": 27,
        "endLine": 23,
        "endChar": 28
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd995e84_be4af4ac",
        "filename": "include/openbmc_dbus_rest.hpp",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T02:02:01Z",
      "side": 1,
      "message": "?  This doesn\u0027t seem like something we should include directly?  I don\u0027t use any allocator traits below?",
      "range": {
        "startLine": 21,
        "startChar": 14,
        "endLine": 21,
        "endChar": 28
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c499b465_5dee2b66",
        "filename": "include/openbmc_dbus_rest.hpp",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-07T23:02:24Z",
      "side": 1,
      "message": "same to the other thread. Do we need a reason for each header?",
      "parentUuid": "bd995e84_be4af4ac",
      "range": {
        "startLine": 21,
        "startChar": 14,
        "endLine": 21,
        "endChar": 28
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0482b2fb_05187674",
        "filename": "include/openbmc_dbus_rest.hpp",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T23:22:20Z",
      "side": 1,
      "message": "No, we don\u0027t need a reason for each header, but we generally shouldn\u0027t be including gcc specific headers, because the coding standard says to avoid implementation specific headers, so I\u0027d like to at least understand it.  I suspect this is a case where we need another pragma.",
      "parentUuid": "bd995e84_be4af4ac",
      "range": {
        "startLine": 21,
        "startChar": 14,
        "endLine": 21,
        "endChar": 28
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b07599a_d9c1ee0a",
        "filename": "include/openbmc_dbus_rest.hpp",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-11T01:20:51Z",
      "side": 1,
      "message": "https://github.com/include-what-you-use/include-what-you-use/issues/166\n\nI have muted it.",
      "parentUuid": "0482b2fb_05187674",
      "range": {
        "startLine": 21,
        "startChar": 14,
        "endLine": 21,
        "endChar": 28
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e16086c_d3a389d1",
        "filename": "include/openbmc_dbus_rest.hpp",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T02:02:01Z",
      "side": 1,
      "message": "Any idea what these are used for?  I didn\u0027t think we had any direct sd-bus usage that we need to include (we don\u0027t list an sd-bus dependency directly).",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 23,
        "endChar": 27
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0326b60_70367897",
        "filename": "include/openbmc_dbus_rest.hpp",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-07T23:02:24Z",
      "side": 1,
      "message": "iwyu will provide an explanation though, I didn\u0027t actually check every header it includes. Do we need to worry about including these extra header?",
      "parentUuid": "0e16086c_d3a389d1",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 23,
        "endChar": 27
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d94a782f_64fad62b",
        "filename": "include/openbmc_dbus_rest.hpp",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T23:22:20Z",
      "side": 1,
      "message": "Yes, we do, because in the ideal case, we should be entirely using sdbusplus abstractions, and shouldn\u0027t be using sd-bus.h directly.  I don\u0027t see any sd-bus.h usages in this file, that\u0027s why I question it.\n\nAs stated in the commit message IWYU has false positives, and to my eye, this looks like one of them.  I could be wrong, but if it\u0027s just a matter of rerunning the results, it would be good to know.",
      "parentUuid": "d0326b60_70367897",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 23,
        "endChar": 27
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c5646c9_7256416b",
        "filename": "include/openbmc_dbus_rest.hpp",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-07-08T00:17:26Z",
      "side": 1,
      "message": "sd-bus.h:\nsd_bus_error\n\nsd-bus-protocol.h:\nSD_BUS_TYPE_ARRAY, SD_BUS_TYPE_VARIANT, SD_BUS_TYPE_STRUCT, SD_BUS_TYPE_DICT_ENTRY",
      "parentUuid": "d94a782f_64fad62b",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 23,
        "endChar": 27
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f1da386_335d894f",
        "filename": "include/openbmc_dbus_rest.hpp",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-08T03:53:26Z",
      "side": 1,
      "message": "Ack\n\nI didn\u0027t realize we used those types directly in here, but I guess we did.",
      "parentUuid": "3c5646c9_7256416b",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 23,
        "endChar": 27
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8378a154_e38c80be",
        "filename": "include/openbmc_dbus_rest.hpp",
        "patchSetId": 5
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T02:02:01Z",
      "side": 1,
      "message": "I think we can remove this now that we\u0027re using the more specific includes.",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 37
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b64563ff_9f2a73fb",
        "filename": "include/openbmc_dbus_rest.hpp",
        "patchSetId": 5
      },
      "lineNbr": 28,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-11T01:20:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8378a154_e38c80be",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 37
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aedb5f37_bb3d5f3c",
        "filename": "include/openbmc_dbus_rest.hpp",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T02:02:01Z",
      "side": 1,
      "message": "This is another one I don\u0027t understand.  We don\u0027t use type_index?",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 49
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f446861e_478446e8",
        "filename": "include/openbmc_dbus_rest.hpp",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-07-08T00:17:26Z",
      "side": 1,
      "message": "I suspect this is implicitly used when you compare to boost objects\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/55138/5/include/openbmc_dbus_rest.hpp#501",
      "parentUuid": "aedb5f37_bb3d5f3c",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 49
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2555f2dc_0b0349c0",
        "filename": "include/openbmc_dbus_rest.hpp",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-08T03:53:26Z",
      "side": 1,
      "message": "But if it\u0027s used within the boost object..... the boost object should be the thing #including it, not us, right?",
      "parentUuid": "f446861e_478446e8",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 49
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "abda0a8c_e08045f3",
        "filename": "include/openbmc_dbus_rest.hpp",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-11T01:20:51Z",
      "side": 1,
      "message": "../include/openbmc_dbus_rest.hpp should add these lines:\n#include \u003cboost/type_index/type_index_facade.hpp\u003e     // for operator\u003d\u003d\n\nBriefly reading from https://www.boost.org/doc/libs/1_79_0/doc/html/boost_typeindex_header_reference.html#header.boost.type_index.type_index_facade_hpp, seems to me it\u0027s valid to include this header and it\u0027s private. I also didn\u0027t find an issue about this header in iwyu.\n\nI kept it. Please reopen if this doesn\u0027t make sense.",
      "parentUuid": "2555f2dc_0b0349c0",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 49
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29269b0c_22cf210b",
        "filename": "include/openbmc_dbus_rest.hpp",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-11T17:23:43Z",
      "side": 1,
      "message": "operator\u003d\u003d in what namespace?  I\u0027d like to understand this before this checks in.  If we don\u0027t understand the changes being made, we won\u0027t be able to enforce that they\u0027re correct on future code reviews, thats why this is important.",
      "parentUuid": "abda0a8c_e08045f3",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 49
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30ad074b_9038ba44",
        "filename": "include/openbmc_dbus_rest.hpp",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T02:02:01Z",
      "side": 1,
      "message": "Nothing in the below throws exceptions.",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 20
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de17a522_6ffe5773",
        "filename": "include/openbmc_dbus_rest.hpp",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-07-08T00:17:26Z",
      "side": 1,
      "message": "I assume it is the try catch blocks\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/55138/5/include/openbmc_dbus_rest.hpp#279\n\nThe the catch blocks can be deleted, because findRemainingObjectsForEnumerate does not throw.",
      "parentUuid": "30ad074b_9038ba44",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 20
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "058cf095_5f74d3a7",
        "filename": "include/openbmc_dbus_rest.hpp",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-08T03:53:26Z",
      "side": 1,
      "message": "\u003e The the catch blocks can be deleted, because findRemainingObjectsForEnumerate does not throw.\n\nIt actually can, and if you remove the try catch blocks, clang-tidy-bugprone-exception-escape will fail.  I\u0027ve never been able to figure out why it throws, because you\u0027re right, the code doesn\u0027t look like it should.\n\n\u003e I assume it is the try catch blocks\n\nTry catch blocks are part of the language, they shouldn\u0027t need to #include \u003cexception\u003e to use.\n\nhttps://en.cppreference.com/w/cpp/header/exception\n\nThat\u0027s everything in \u003cexception\u003e, and it\u0027s possible i missed something, but nothing from that file looks like its in here?",
      "parentUuid": "de17a522_6ffe5773",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 20
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6695d98b_f85bb056",
        "filename": "include/openbmc_dbus_rest.hpp",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-11T01:20:51Z",
      "side": 1,
      "message": "IWYU said\n\n```\n../include/openbmc_dbus_rest.hpp should add these lines:\n#include \u003cexception\u003e                                  // for exception\n```\n\nBut there\u0027s no exception reference. This seems to me yet another false positive.\n\nMuted for now.",
      "parentUuid": "058cf095_5f74d3a7",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 20
      },
      "revId": "cbd7832c563a78a91d72b98fb46a374e3acc77d8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}