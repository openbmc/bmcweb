{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f04480c7_71bc154f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-16T16:05:01Z",
      "side": 1,
      "message": "Can we quote the owasp session management document in this somewhere?  https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html\n\nJust saying \"this is a security concern\" doesn\u0027t really document what the concern is.",
      "range": {
        "startLine": 10,
        "startChar": 42,
        "endLine": 10,
        "endChar": 68
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d67e3d92_9a258b1e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-05-16T17:05:29Z",
      "side": 1,
      "message": "updated commit message, as per owasp session management\nany change to an account attribute like password, all old sessions of that account needs to be destroyed, then users will have to login again",
      "parentUuid": "f04480c7_71bc154f",
      "range": {
        "startLine": 10,
        "startChar": 42,
        "endLine": 10,
        "endChar": 68
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7bff0c9c_08d18d8b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-05-16T17:05:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d67e3d92_9a258b1e",
      "range": {
        "startLine": 10,
        "startChar": 42,
        "endLine": 10,
        "endChar": 68
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de565b84_2ada3025",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2024-05-16T18:41:40Z",
      "side": 1,
      "message": "Is this the reference you are looking for? https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#renew-the-session-id-after-any-privilege-level-change section \"Session ID Life Cycle\" / \"Renew the Session ID After Any Privilege Level Change\" (excerpts):\n\u003e The session ID must be renewed or regenerated by the web application....  Common scenarios to consider include; password changes, ...",
      "parentUuid": "7bff0c9c_08d18d8b",
      "range": {
        "startLine": 10,
        "startChar": 42,
        "endLine": 10,
        "endChar": 68
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce82ac53_30a869a0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2024-05-16T18:49:39Z",
      "side": 1,
      "message": "One scenario this will help is:\n1. BMC user suspects their password is compromised or disclosed to an adversary.\n2. BMC user changes their password.\n\nWithout this fix, changing the password may prevent future login by an adversary, but does not remove any of that adversary\u0027s current sessions.  This is needed especially if the user is no an admin (and therefor cannot inspect or remove sessions).  With this fix, changing the password will simultaneously log off adversaries and prevent them from logging in again (with the same password).",
      "parentUuid": "de565b84_2ada3025",
      "range": {
        "startLine": 10,
        "startChar": 42,
        "endLine": 10,
        "endChar": 68
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "417efcfd_3f61b544",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 1118,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-16T16:05:01Z",
      "side": 1,
      "message": "For a user changing their own password this is going to cause things like the webui to fail.  Could we add a check to verify that the user password being changed wasn\u0027t THIS user?  Alternatively, we could remove all but the session currently being used.  If it\u0027s this user, obviously they already have the password, so removing it doesn\u0027t accomplish anything from a security perspective.",
      "range": {
        "startLine": 1118,
        "startChar": 46,
        "endLine": 1118,
        "endChar": 54
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2dd6777_56079a84",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 1118,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-05-16T16:30:42Z",
      "side": 1,
      "message": "suppose if BMC has admin user, I think it should be able to update its own password, I think we can\u0027t add check there.\n\nI think GUI can pop up a warning before allowing change password and set expectation that change password looses current session and expected to re-login with new password.",
      "parentUuid": "417efcfd_3f61b544",
      "range": {
        "startLine": 1118,
        "startChar": 46,
        "endLine": 1118,
        "endChar": 54
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a9f322e_5a8853ff",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 1118,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-05-16T16:32:22Z",
      "side": 1,
      "message": "removing all user session of that user whose password is changed looks cleaner way.\notherwise bmc still have that one session which was created with old password.",
      "parentUuid": "d2dd6777_56079a84",
      "range": {
        "startLine": 1118,
        "startChar": 46,
        "endLine": 1118,
        "endChar": 54
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "909d4db7_3e6c0d83",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 1118,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-16T16:36:11Z",
      "side": 1,
      "message": "\u003e I think GUI can pop up a warning before allowing change password and set expectation that change password looses current session and expected to re-login with new password.\n\nFrom a user experience, this is worse than what we have.  Yes, an admin user should be able to change its password, we just SHOULDN\u0027T invalidate the session this password was changed from, to keep the user experience.\n\n\n\u003e removing all user session of that user whose password is changed looks cleaner way.\n\nIn terms of code or in terms of what the user sees?\n\n\u003e otherwise bmc still have that one session which was created with old password.\n\nWhy is this a problem?  That session clearly has the new password, because it\u0027s the one that changed it.",
      "parentUuid": "9a9f322e_5a8853ff",
      "range": {
        "startLine": 1118,
        "startChar": 46,
        "endLine": 1118,
        "endChar": 54
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60aca222_413dc49f",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 1118,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-05-16T17:21:48Z",
      "side": 1,
      "message": "as per OWASP session management, The session ID must be renewed or regenerated by the web application after any privilege level or password change within the associated user session and old session IDs must be destroyed.\n\nif we are keep one current session, does not it break the owasp session management guidelines?",
      "parentUuid": "909d4db7_3e6c0d83",
      "range": {
        "startLine": 1118,
        "startChar": 46,
        "endLine": 1118,
        "endChar": 54
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12a68912_023b593c",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 1118,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2024-05-16T18:35:20Z",
      "side": 1,
      "message": "I understand OWASP recommendation is intended to produce secure implementations,  but art the same time this seems overly prescriptive.  Can we have an exception for the user session which is performing the password change?  I think just about every website allows a user to change their password without logging them off.  Will this lead to security vulnerabilities in the future?  Maybe, but I do not foresee any.\n\nI recommended the following technical solution.  Pass the current sessionId (req.session.uniqueId?) into removeSessionsByUsernameExceptNotMySession(username, sessionId) so this will delete sessions as before, but will skip over indicated session.",
      "parentUuid": "60aca222_413dc49f",
      "range": {
        "startLine": 1118,
        "startChar": 46,
        "endLine": 1118,
        "endChar": 54
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbab9352_cfbf0c7e",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 1118,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-16T18:44:46Z",
      "side": 1,
      "message": "\u003e \n\u003e if we are keep one current session, does not it break the owasp session management guidelines?\n\nFirst of all, thank you for rooting your argument in a security authority.  It really helps when we discuss this kind of stuff to make arguments that quote standards that have thought through this a significant amount.\n\n\n\nMy understanding is that it doesn\u0027t break owasp, because functionally if you\u0027ve changed the password, you\u0027ve already re-proved that you know the new password, and that the existing session still holds the secrets.  If an administrator wanted to remove their session after their password change, they could trivially do so, which means that clients could theoretically implement the a full \"reset my local session\" if they wanted.  I think giving users the option is important for now, as Redfish doesn\u0027t have a way to return \"Here\u0027s your new session\" in the password change event, so if we wanted this \"net\" behavior, we would implement a flow that on password change, the UI would create a new session, and invalidate its old one, thus meeting both the letter of the law, and what users expect.\n\n\n\u003e I recommended the following technical solution.\n\nYep, this works for me.",
      "parentUuid": "60aca222_413dc49f",
      "range": {
        "startLine": 1118,
        "startChar": 46,
        "endLine": 1118,
        "endChar": 54
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d39ec9b3_c8c5e61c",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 1118,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-05-16T19:56:08Z",
      "side": 1,
      "message": "I think this should be done for more than just user\u0027s password \n\n\"The session ID must be renewed or regenerated by the web application after any privilege level change within the associated user session. \n\nCommon scenarios to consider include; password changes, permission changes, or switching from a regular user role to an administrator role within the web application. \n\"",
      "parentUuid": "cbab9352_cfbf0c7e",
      "range": {
        "startLine": 1118,
        "startChar": 46,
        "endLine": 1118,
        "endChar": 54
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5e282bb_2bd208e8",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 1118,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-16T20:03:41Z",
      "side": 1,
      "message": "\u003e I think this should be done for more than just user\u0027s password \n\u003e \n\nAgreed, but lets try to keep this review focused on what\u0027s in the patchset, and contained to the point where we can get it reviewed/tested/on master without having to boil the ocean.\n\nYou\u0027re 1000% right that this doesn\u0027t completely get us fully to what owasp says, but I certainly think it gets us closer.",
      "parentUuid": "d39ec9b3_c8c5e61c",
      "range": {
        "startLine": 1118,
        "startChar": 46,
        "endLine": 1118,
        "endChar": 54
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b1733de_25ea64fc",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 1118,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-05-16T22:25:23Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "f5e282bb_2bd208e8",
      "range": {
        "startLine": 1118,
        "startChar": 46,
        "endLine": 1118,
        "endChar": 54
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}