{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f04480c7_71bc154f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-16T16:05:01Z",
      "side": 1,
      "message": "Can we quote the owasp session management document in this somewhere?  https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html\n\nJust saying \"this is a security concern\" doesn\u0027t really document what the concern is.",
      "range": {
        "startLine": 10,
        "startChar": 42,
        "endLine": 10,
        "endChar": 68
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d67e3d92_9a258b1e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-05-16T17:05:29Z",
      "side": 1,
      "message": "updated commit message, as per owasp session management\nany change to an account attribute like password, all old sessions of that account needs to be destroyed, then users will have to login again",
      "parentUuid": "f04480c7_71bc154f",
      "range": {
        "startLine": 10,
        "startChar": 42,
        "endLine": 10,
        "endChar": 68
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7bff0c9c_08d18d8b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-05-16T17:05:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d67e3d92_9a258b1e",
      "range": {
        "startLine": 10,
        "startChar": 42,
        "endLine": 10,
        "endChar": 68
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "417efcfd_3f61b544",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 1118,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-16T16:05:01Z",
      "side": 1,
      "message": "For a user changing their own password this is going to cause things like the webui to fail.  Could we add a check to verify that the user password being changed wasn\u0027t THIS user?  Alternatively, we could remove all but the session currently being used.  If it\u0027s this user, obviously they already have the password, so removing it doesn\u0027t accomplish anything from a security perspective.",
      "range": {
        "startLine": 1118,
        "startChar": 46,
        "endLine": 1118,
        "endChar": 54
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2dd6777_56079a84",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 1118,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-05-16T16:30:42Z",
      "side": 1,
      "message": "suppose if BMC has admin user, I think it should be able to update its own password, I think we can\u0027t add check there.\n\nI think GUI can pop up a warning before allowing change password and set expectation that change password looses current session and expected to re-login with new password.",
      "parentUuid": "417efcfd_3f61b544",
      "range": {
        "startLine": 1118,
        "startChar": 46,
        "endLine": 1118,
        "endChar": 54
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a9f322e_5a8853ff",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 1118,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-05-16T16:32:22Z",
      "side": 1,
      "message": "removing all user session of that user whose password is changed looks cleaner way.\notherwise bmc still have that one session which was created with old password.",
      "parentUuid": "d2dd6777_56079a84",
      "range": {
        "startLine": 1118,
        "startChar": 46,
        "endLine": 1118,
        "endChar": 54
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "909d4db7_3e6c0d83",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 1118,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-16T16:36:11Z",
      "side": 1,
      "message": "\u003e I think GUI can pop up a warning before allowing change password and set expectation that change password looses current session and expected to re-login with new password.\n\nFrom a user experience, this is worse than what we have.  Yes, an admin user should be able to change its password, we just SHOULDN\u0027T invalidate the session this password was changed from, to keep the user experience.\n\n\n\u003e removing all user session of that user whose password is changed looks cleaner way.\n\nIn terms of code or in terms of what the user sees?\n\n\u003e otherwise bmc still have that one session which was created with old password.\n\nWhy is this a problem?  That session clearly has the new password, because it\u0027s the one that changed it.",
      "parentUuid": "9a9f322e_5a8853ff",
      "range": {
        "startLine": 1118,
        "startChar": 46,
        "endLine": 1118,
        "endChar": 54
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60aca222_413dc49f",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 1118,
      "author": {
        "id": 1000350
      },
      "writtenOn": "2024-05-16T17:21:48Z",
      "side": 1,
      "message": "as per OWASP session management, The session ID must be renewed or regenerated by the web application after any privilege level or password change within the associated user session and old session IDs must be destroyed.\n\nif we are keep one current session, does not it break the owasp session management guidelines?",
      "parentUuid": "909d4db7_3e6c0d83",
      "range": {
        "startLine": 1118,
        "startChar": 46,
        "endLine": 1118,
        "endChar": 54
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12a68912_023b593c",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 3
      },
      "lineNbr": 1118,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2024-05-16T18:35:20Z",
      "side": 1,
      "message": "I understand OWASP recommendation is intended to produce secure implementations,  but art the same time this seems overly prescriptive.  Can we have an exception for the user session which is performing the password change?  I think just about every website allows a user to change their password without logging them off.  Will this lead to security vulnerabilities in the future?  Maybe, but I do not foresee any.\n\nI recommended the following technical solution.  Pass the current sessionId (req.session.uniqueId?) into removeSessionsByUsernameExceptNotMySession(username, sessionId) so this will delete sessions as before, but will skip over indicated session.",
      "parentUuid": "60aca222_413dc49f",
      "range": {
        "startLine": 1118,
        "startChar": 46,
        "endLine": 1118,
        "endChar": 54
      },
      "revId": "c318f43861cb6f0095a3dc3d1cfeacddf68e5266",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}