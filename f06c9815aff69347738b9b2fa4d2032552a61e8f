{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c20cf8bf_0c3eb34e",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 2
      },
      "lineNbr": 707,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-21T14:48:48Z",
      "side": 1,
      "message": "nit, please use .string() here to avoid walking the whole URL.",
      "range": {
        "startLine": 707,
        "startChar": 53,
        "endLine": 707,
        "endChar": 58
      },
      "revId": "f06c9815aff69347738b9b2fa4d2032552a61e8f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70cd6d73_47581f94",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 2
      },
      "lineNbr": 707,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-06-21T15:49:31Z",
      "side": 1,
      "message": "addHeader() only accepts std::string_view for value, but boost::url.string() returns boost::string_view, there is no way to convert it to std::string_view except calling the constructor. And overloading addHeader() with boost::string_view also fails as compiler cannot tell which overload to use when argument is \"string literal\".\n\nAny suggestions will be appreciated.",
      "parentUuid": "c20cf8bf_0c3eb34e",
      "range": {
        "startLine": 707,
        "startChar": 53,
        "endLine": 707,
        "endChar": 58
      },
      "revId": "f06c9815aff69347738b9b2fa4d2032552a61e8f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ab8006d_561da06c",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 2
      },
      "lineNbr": 707,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-06-22T03:36:14Z",
      "side": 1,
      "message": "Uses std::string_view(certURL.data(), certURL.size()) instead\n\nActually certURL.data() and certURL.c_str() returns the same pointer, but size of the std::string_view should be specified.",
      "parentUuid": "70cd6d73_47581f94",
      "range": {
        "startLine": 707,
        "startChar": 53,
        "endLine": 707,
        "endChar": 58
      },
      "revId": "f06c9815aff69347738b9b2fa4d2032552a61e8f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a10b488d_8e184efd",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 2
      },
      "lineNbr": 707,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-27T19:21:46Z",
      "side": 1,
      "message": "\u003e Uses std::string_view(certURL.data(), certURL.size()) instead\n\nThat works as well.\n\n\u003e \n\u003e Actually certURL.data() and certURL.c_str() returns the same pointer, but size of the std::string_view should be specified.\n\nCorrect.  If you use c_str(), it requires walking the string, and allows the possibility of null character injection attacks.\n\nThanks for making the change.",
      "parentUuid": "4ab8006d_561da06c",
      "range": {
        "startLine": 707,
        "startChar": 53,
        "endLine": 707,
        "endChar": 58
      },
      "revId": "f06c9815aff69347738b9b2fa4d2032552a61e8f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}