{
  "comments": [
    {
      "key": {
        "uuid": "32b22b3e_e8619212",
        "filename": "/COMMIT_MSG",
        "patchSetId": 76
      },
      "lineNbr": 7,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-21T16:04:07Z",
      "side": 1,
      "message": "Please wrap your commit messages 50/72.",
      "revId": "51f9f1cb6212b7e6abe1392c114b3b64d3ab275e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1862b1b4_501dd8fc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 76
      },
      "lineNbr": 7,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-05-27T07:38:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "32b22b3e_e8619212",
      "revId": "51f9f1cb6212b7e6abe1392c114b3b64d3ab275e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7aaa163_d90dbe2a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 76
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-21T16:04:07Z",
      "side": 1,
      "message": "Can we talk a little more about what changes a user would expect here?  We\u0027ve added 3 new endpoints.  How are these meant to be used?  Why do these add value?",
      "range": {
        "startLine": 12,
        "startChar": 12,
        "endLine": 13,
        "endChar": 21
      },
      "revId": "51f9f1cb6212b7e6abe1392c114b3b64d3ab275e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "076f023e_722e08c8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 76
      },
      "lineNbr": 13,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-05-27T07:38:21Z",
      "side": 1,
      "message": "This new endpoints were added per your request.\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/41131/2/redfish-core/lib/sensors.hpp#99\n\nThere is no additional change related to this endpoints, we just list them here as an example. Also in review in the link there was same discussion and there is no impact to the user.",
      "parentUuid": "f7aaa163_d90dbe2a",
      "range": {
        "startLine": 12,
        "startChar": 12,
        "endLine": 13,
        "endChar": 21
      },
      "revId": "51f9f1cb6212b7e6abe1392c114b3b64d3ab275e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51837ca6_6b3d6e8d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 76
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-27T16:08:07Z",
      "side": 1,
      "message": "\u003e This new endpoints were added per your request.\n\nI\u0027m talking specifically about the API.  Regardless of whether I requested it, there should be some details in the commit message.\n\n\u003e \n\u003e https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/41131/2/redfish-core/lib/sensors.hpp#99\n\u003e \n\u003e There is no additional change related to this endpoints,\n\nThere might be a language boundary here.  By \"endpoint\" I mean \"new uri handler in the redfish tree\" of which there are definitely changes in this patchset.\n\n\u003e we just list them here as an example. Also in review in the link there was same discussion and there is no impact to the user.\n\nConsidering we\u0027ve added new URIs, there\u0027s SOME impact to the user, in that they\u0027ll see the new functionality you\u0027ve added.",
      "parentUuid": "076f023e_722e08c8",
      "range": {
        "startLine": 12,
        "startChar": 12,
        "endLine": 13,
        "endChar": 21
      },
      "revId": "51f9f1cb6212b7e6abe1392c114b3b64d3ab275e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0d4c1d4_32d7fa60",
        "filename": "/COMMIT_MSG",
        "patchSetId": 76
      },
      "lineNbr": 13,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-05-28T11:40:51Z",
      "side": 1,
      "message": "MetricDefinition depends on code in sensors.hpp and have generic mechanism. Only change is there if user want to list sensors supported by telemetry service they will be available under redfish/v1/TelemetryService/MetricDefinitions.\n\nIs that what you meant? Is adding this information in the commit message will be enough?",
      "parentUuid": "51837ca6_6b3d6e8d",
      "range": {
        "startLine": 12,
        "startChar": 12,
        "endLine": 13,
        "endChar": 21
      },
      "revId": "51f9f1cb6212b7e6abe1392c114b3b64d3ab275e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6af8fd95_44b339fc",
        "filename": "redfish-core/lib/metric_definition.hpp",
        "patchSetId": 76
      },
      "lineNbr": 201,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-21T16:13:36Z",
      "side": 1,
      "message": "This is going to return the wrong thing, even if it returns the right error code, it might be returning some properties filled.",
      "range": {
        "startLine": 197,
        "startChar": 0,
        "endLine": 201,
        "endChar": 13
      },
      "revId": "51f9f1cb6212b7e6abe1392c114b3b64d3ab275e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7de5fdc3_260806c3",
        "filename": "redfish-core/lib/metric_definition.hpp",
        "patchSetId": 76
      },
      "lineNbr": 201,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-05-27T07:38:21Z",
      "side": 1,
      "message": "Thanks for comment, while digging into sensors.hpp I found a way to verify if page exist before we perform any additional operations.",
      "parentUuid": "6af8fd95_44b339fc",
      "range": {
        "startLine": 197,
        "startChar": 0,
        "endLine": 201,
        "endChar": 13
      },
      "revId": "51f9f1cb6212b7e6abe1392c114b3b64d3ab275e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3cb09047_e81054a5",
        "filename": "redfish-core/lib/metric_definition.hpp",
        "patchSetId": 76
      },
      "lineNbr": 231,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-21T16:13:36Z",
      "side": 1,
      "message": "Why does this need to get the chassis names first?  Wouldn\u0027t we get all the sensors first, then associate them back to their chassis?  It seems odd we would do it in the reverse.\n\nI suspect if we invert this flow, the finalizer class will no longer be needed, as we can simply use the mapper response to listing the sensor to drive the 404 behavior.",
      "range": {
        "startLine": 231,
        "startChar": 12,
        "endLine": 231,
        "endChar": 63
      },
      "revId": "51f9f1cb6212b7e6abe1392c114b3b64d3ab275e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7835e2b_df01cc9f",
        "filename": "redfish-core/lib/metric_definition.hpp",
        "patchSetId": 76
      },
      "lineNbr": 231,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-05-27T07:38:21Z",
      "side": 1,
      "message": "I analyzed the code in sensors.hpp and this mapping function needs chassis name as parameter. Without rewriting sensors.hpp this is only way to retrieve this mapping.\n\nWhile looking at it I found a way to remove finalizer callback, that should make it simpler.",
      "parentUuid": "3cb09047_e81054a5",
      "range": {
        "startLine": 231,
        "startChar": 12,
        "endLine": 231,
        "endChar": 63
      },
      "revId": "51f9f1cb6212b7e6abe1392c114b3b64d3ab275e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91badab2_e7fc2afc",
        "filename": "redfish-core/lib/metric_definition.hpp",
        "patchSetId": 76
      },
      "lineNbr": 231,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-27T16:08:07Z",
      "side": 1,
      "message": "\u003e I analyzed the code in sensors.hpp and this mapping function needs chassis name as parameter. Without rewriting sensors.hpp this is only way to retrieve this mapping.\n\nThis doesn\u0027t seem true;  The mapper should be able to give you the mapping based on the \"all_sensors\" association.\n\n\u003e \n\u003e While looking at it I found a way to remove finalizer callback, that should make it simpler.\n\nThat helps, but I\u0027d still like to see us doing a single mapper call here.",
      "parentUuid": "a7835e2b_df01cc9f",
      "range": {
        "startLine": 231,
        "startChar": 12,
        "endLine": 231,
        "endChar": 63
      },
      "revId": "51f9f1cb6212b7e6abe1392c114b3b64d3ab275e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbb7057e_1a4408ce",
        "filename": "redfish-core/lib/metric_definition.hpp",
        "patchSetId": 76
      },
      "lineNbr": 231,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-05-28T11:40:51Z",
      "side": 1,
      "message": "I could not find anything that would not require to rewrite sensors.hpp. If you know solution could you provide example?",
      "parentUuid": "91badab2_e7fc2afc",
      "range": {
        "startLine": 231,
        "startChar": 12,
        "endLine": 231,
        "endChar": 63
      },
      "revId": "51f9f1cb6212b7e6abe1392c114b3b64d3ab275e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd3ad781_cb274c38",
        "filename": "redfish-core/lib/metric_definition.hpp",
        "patchSetId": 76
      },
      "lineNbr": 231,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2021-05-28T11:47:20Z",
      "side": 1,
      "message": "I asked how to make it look better on discord, but so far there was no answer.",
      "parentUuid": "bbb7057e_1a4408ce",
      "range": {
        "startLine": 231,
        "startChar": 12,
        "endLine": 231,
        "endChar": 63
      },
      "revId": "51f9f1cb6212b7e6abe1392c114b3b64d3ab275e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f97c4015_44a700fa",
        "filename": "redfish-core/lib/metric_definition.hpp",
        "patchSetId": 76
      },
      "lineNbr": 231,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2021-06-02T07:42:11Z",
      "side": 1,
      "message": "Ed\n\nAs name implies - MetricProperty needs to be valid Redfish URI to metric property :-). This put a requirement on TelemetryService implementation to be able to handle sensors on URI (\"JSON\")-level. In other words - we need a way to map each D-Bus sensor path to it\u0027s respective Redfish URI.\n\nCurrent flow is the following:\n\u003e get all nodes on Redfish which may expose sensors\n\u003e\u003e query nodes using retrieveUriToDbusMap for each node(chassis)\\subnode(power|thermal|sensors)\n\u003e\u003e\u003e retrieveUriToDbusMap calls \u0027GET\u0027 on requested node, creates JSON with sensors, which is then used to extract Metric Redfish URIs\n\nReversing the implementation around (start with sensors, get URIs) would require major rework of sensors.hpp, so there would exist a function which assigns unique URI for each sensor. With current implementation it\u0027s not feasible, as big part of metrics in Power and Thermal have URI/ID assigned based on it\u0027s index in the response JSON array. I\u0027m not saying it can\u0027t be done, however it would require rewriting big parts of sensors.hpp which is already quite convoluted. I suppose this effort should be separated from the Redfish sensors \u0027client\u0027 (TelemetryService).\n\nHOWEVER, if your comment was mostly suggesting \u0027limit querying to chassises with sensors, based on verifying their all_sensors associations\u0027 - I believe it\u0027s a valid optimization ;)",
      "parentUuid": "bd3ad781_cb274c38",
      "range": {
        "startLine": 231,
        "startChar": 12,
        "endLine": 231,
        "endChar": 63
      },
      "revId": "51f9f1cb6212b7e6abe1392c114b3b64d3ab275e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}