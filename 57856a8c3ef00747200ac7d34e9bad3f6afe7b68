{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f1666ca1_4f970560",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-02-14T00:47:19Z",
      "side": 1,
      "message": "First round of comments.",
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b081159_9456c9f7",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 917,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-02-14T00:47:19Z",
      "side": 1,
      "message": "Please use the named \"result\" versions of these, unless you\u0027re doing 2XX level comparisons.  As written, I have to remember what 429 means ðŸ˜Š",
      "range": {
        "startLine": 911,
        "startChar": 0,
        "endLine": 917,
        "endChar": 9
      },
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc210567_71a007bb",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 917,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-02-14T17:16:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b081159_9456c9f7",
      "range": {
        "startLine": 911,
        "startChar": 0,
        "endLine": 917,
        "endChar": 9
      },
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eafb691e_581c048e",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 924,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-02-14T01:39:56Z",
      "side": 1,
      "message": "TODO: Do I need to explicitly copy over the return code?",
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79681cbc_e5535a8e",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 924,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-02-14T17:16:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eafb691e_581c048e",
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e20142d_bab4dce2",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 931,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-02-14T00:47:19Z",
      "side": 1,
      "message": "icompare, and needs to handle both forms of content-type.\u0027\n\nThis is the perfect time to inform you that I\u0027m adding a helper function that does this correctly for you ðŸ˜Š\n\nIf it does what you need, please just use it:\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/59941/9/http/parsing.hpp#18",
      "range": {
        "startLine": 931,
        "startChar": 0,
        "endLine": 931,
        "endChar": 70
      },
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71099963_68e49ae4",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 931,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-02-14T01:39:56Z",
      "side": 1,
      "message": "Thanks I can at least copy the same idea.  I don\u0027t think I want to call the function directly because it calls parse() and then discards the json.  I need to operate on the json so I\u0027d have to call parse() again.",
      "parentUuid": "9e20142d_bab4dce2",
      "range": {
        "startLine": 931,
        "startChar": 0,
        "endLine": 931,
        "endChar": 70
      },
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e90bfac8_2b12f38f",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 931,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-02-14T17:16:27Z",
      "side": 1,
      "message": "Disregard that, I see it returns the json as the second argument.  I can use it directly and should likely do the same for all of the processX() functions.",
      "parentUuid": "71099963_68e49ae4",
      "range": {
        "startLine": 931,
        "startChar": 0,
        "endLine": 931,
        "endChar": 70
      },
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dabf0fa_8a8b480b",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 931,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-02-15T02:18:31Z",
      "side": 1,
      "message": "Actually I can\u0027t use it because it\u0027s designed for parsing requests and I need to parse a response.  Even if it could handle responses, it\u0027d be a bit awkward to use in the short term.  We need to take 3 different actions depending on:\n1) It\u0027s not an application/json\n2) It\u0027s an application/json, but we failed to parse\n3) It\u0027s an application/json and we parsed it\n\nThat helper function only has two exit routes until BMCWEB_INSECURE_IGNORE_CONTENT_TYPE is disabled by default.  Until then we\u0027d have to derive if scenario 1) occurred.\n\nI\u0027m leaning towards copying the icompare portion for now.",
      "parentUuid": "e90bfac8_2b12f38f",
      "range": {
        "startLine": 931,
        "startChar": 0,
        "endLine": 931,
        "endChar": 70
      },
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "955ce777_4e7ff419",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 953,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-02-14T00:47:19Z",
      "side": 1,
      "message": "huh?  What form is this?",
      "range": {
        "startLine": 953,
        "startChar": 52,
        "endLine": 953,
        "endChar": 78
      },
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7dd24c8_f1470eb2",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 953,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-02-14T01:39:56Z",
      "side": 1,
      "message": "I was trying to convey this from the JSON response.\n\n{\n    \"\u003cproperty\u003e\": {\n        \"@odata.id\":  \"\u003cURI\u003e\"\n    }\n}\n\nMaybe it would\u0027ve been more appropriate to say \u003cproperty\u003e.@odata.id \u003d \u003cURI\u003e ?",
      "parentUuid": "955ce777_4e7ff419",
      "range": {
        "startLine": 953,
        "startChar": 52,
        "endLine": 953,
        "endChar": 78
      },
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96a2d6bd_c1363669",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 953,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-02-14T17:16:27Z",
      "side": 1,
      "message": "I\u0027ve added additional clarification to the comment.",
      "parentUuid": "a7dd24c8_f1470eb2",
      "range": {
        "startLine": 953,
        "startChar": 52,
        "endLine": 953,
        "endChar": 78
      },
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f3029f6_0c0084ea",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 959,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-02-14T00:47:19Z",
      "side": 1,
      "message": "nit, log an error here?  if we\u0027re getting non-json-object responses from the satellite, it\u0027s arguably an error.",
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed320d4b_3d2ee8db",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 959,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-02-14T01:39:56Z",
      "side": 1,
      "message": "Logging an error is fair",
      "parentUuid": "8f3029f6_0c0084ea",
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "203962ea_b788f4b5",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 959,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-02-14T17:16:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ed320d4b_3d2ee8db",
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "756cfbb1_0293ba9f",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 970,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-02-14T00:47:19Z",
      "side": 1,
      "message": "nit, prefer to return early to save scopes.\n\nAlso, I\u0027m not quite understanding this check.  you\u0027re checking .second, which means you\u0027re matching against the form\n\n{\n  \"thing\": {\n     \"@odata.id\": \u003cmy id\u003e\n  }\n}\n\nWhich doesn\u0027t seem right to me, or I\"m not understanding the case where it\u0027s useful.",
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "589e9d38_3c2937cc",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 970,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-02-14T01:39:56Z",
      "side": 1,
      "message": "It\u0027s situations like querying the service root.  The response would look something like:\n\n{\n{\n\"Fabrics\": {\n\"@odata.id\": \"/redfish/v1/Fabrics\"\n},\n\"Tasks\": {\n\"@odata.id\": \"/redfish/v1/TaskService\"\n}\n}\n\nLet\u0027s say the aggregator did not for some reason support Fabrics and TaskService.  We\u0027d want to include both of those in the overall response.  I have to find the actual URI since that\u0027s what let\u0027s me know if it\u0027s a top level collection or up tree from a top level collection.  I also need to know the initial property because I have to include that as well in the overall response.",
      "parentUuid": "756cfbb1_0293ba9f",
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e806ba64_edf98502",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 980,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-02-14T00:47:19Z",
      "side": 1,
      "message": "nit, another place you can save horizontal space.",
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7a6f875_68bc5b0f",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 980,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-02-14T01:39:56Z",
      "side": 1,
      "message": "ACK, I\u0027ll change that",
      "parentUuid": "e806ba64_edf98502",
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f74be03_c4bbfdb4",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 980,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-02-14T17:16:27Z",
      "side": 1,
      "message": "I broke out some of the nested ifs",
      "parentUuid": "e7a6f875_68bc5b0f",
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1de7952_c1ea3609",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 989,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-02-14T00:47:19Z",
      "side": 1,
      "message": "OH man.  This pattern has burned us so many times.  I get why you did it, but can you please be more specific about ONLY clearing the thing you expect to be there, rather than clearing the whole response?  Ideally we\u0027d follow the design of never needing to delete, but that\u0027s a hard one in this case, and might need integrated with AsyncResp to do.\n\nalso, when you do this, I think this removes the need for the addedLinks variable, which seems to read as just a check to make sure you haven\u0027t cleared data that\u0027s already been posted.",
      "range": {
        "startLine": 987,
        "startChar": 32,
        "endLine": 989,
        "endChar": 65
      },
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6930f4b1_33891731",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1022,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-02-14T00:47:19Z",
      "side": 1,
      "message": "All of these should be using the pattern of \n\nit \u003d find(\"key\")\nif (it !\u003d thing.end()){\n     *it now points at value.\n}\n\nDoing it the way you did duplicates the key string a few times, and complicates the solution.",
      "range": {
        "startLine": 1005,
        "startChar": 0,
        "endLine": 1022,
        "endChar": 17
      },
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d2272f2_4a5633c2",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1022,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-02-14T01:39:56Z",
      "side": 1,
      "message": "ACK, I\u0027ll fix that",
      "parentUuid": "6930f4b1_33891731",
      "range": {
        "startLine": 1005,
        "startChar": 0,
        "endLine": 1022,
        "endChar": 17
      },
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "616c62cc_7623d2f8",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1022,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-02-15T01:47:10Z",
      "side": 1,
      "message": "Done although I had to create a new iterator each time because it had to be const.",
      "parentUuid": "2d2272f2_4a5633c2",
      "range": {
        "startLine": 1005,
        "startChar": 0,
        "endLine": 1022,
        "endChar": 17
      },
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca6ab706_0ec43cd8",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1029,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-02-14T00:47:19Z",
      "side": 1,
      "message": "I don\u0027t think this is an error in all cases, for example, the AdditionalDataUri property?  I\u0027m ok with not handling it for now, but lets leave a comment for now that this is incorrect and needs fixed.",
      "range": {
        "startLine": 1029,
        "startChar": 0,
        "endLine": 1029,
        "endChar": 58
      },
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea71cec0_588c5f6f",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1029,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-02-14T01:39:56Z",
      "side": 1,
      "message": "I think it would be in the sense that we are only parsing responses from URIs which are uptree from top level collections.  If something like /redfish/v1 or /redfish/v1/UpdateService on a satellite did not return a json then the aggregator can\u0027t do anything with it anyway.\n\nAdditionalDataURI should appear under a resource which is part of a top level collection so it should never show up when parsing a response as part of processContainsSubordinateResponse().",
      "parentUuid": "ca6ab706_0ec43cd8",
      "range": {
        "startLine": 1029,
        "startChar": 0,
        "endLine": 1029,
        "endChar": 58
      },
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04655893_52559f22",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1039,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-02-14T00:47:19Z",
      "side": 1,
      "message": "There\u0027s more valid responses than this?",
      "range": {
        "startLine": 1030,
        "startChar": 0,
        "endLine": 1039,
        "endChar": 13
      },
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85d74956_91edc913",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1039,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-02-14T01:39:56Z",
      "side": 1,
      "message": "200 is really the only valid response for this.  However, 429 and 502 are dummy responses generated by the aggregated when we didn\u0027t successfully forward the responses because either the request buffer was full so we dropped the request (429) or we exhausted the retry policy (502).\n\nThis also matches the handling we use for processCollectionResponse().  There is a lot of similarity in how we process collection responses and responses that are uptree from a top level collection.\n\nIn both instances it may be fine to just simplify it to !200.",
      "parentUuid": "04655893_52559f22",
      "range": {
        "startLine": 1030,
        "startChar": 0,
        "endLine": 1039,
        "endChar": 13
      },
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1e6b60e_8b68d5d6",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1039,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2023-02-14T17:16:27Z",
      "side": 1,
      "message": "I removed the additional checks for 429 and 502 at the end of the processX() functions.  They shouldn\u0027t be needed since there is also a check at the start of those functions for these response codes.",
      "parentUuid": "85d74956_91edc913",
      "range": {
        "startLine": 1030,
        "startChar": 0,
        "endLine": 1039,
        "endChar": 13
      },
      "revId": "57856a8c3ef00747200ac7d34e9bad3f6afe7b68",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}