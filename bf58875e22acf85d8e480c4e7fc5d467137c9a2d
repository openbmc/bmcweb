{
  "comments": [
    {
      "key": {
        "uuid": "46bcef01_4adb0163",
        "filename": "redfish-core/include/utils/location_utils.hpp",
        "patchSetId": 15
      },
      "lineNbr": 33,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-07-20T00:20:15Z",
      "side": 1,
      "message": "This has lifetime issues if the connection closes before the callback is complete (well, it could).\n\nPlease pass in a json key name or a json pointer by value instead of using a raw pointer here.  You already kind of do that with location and locationName.  This would effectively be combining them into a single value.",
      "range": {
        "startLine": 33,
        "startChar": 24,
        "endLine": 33,
        "endChar": 39
      },
      "revId": "bf58875e22acf85d8e480c4e7fc5d467137c9a2d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "685143c7_ab27e6e0",
        "filename": "redfish-core/include/utils/location_utils.hpp",
        "patchSetId": 15
      },
      "lineNbr": 49,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-07-20T00:20:15Z",
      "side": 1,
      "message": "Please take a look at how we generally do these conversions.  Building a map just to use it once is inefficient in both runtime and code size.  A simple if/else ladder compiles much smaller and is more efficient.",
      "range": {
        "startLine": 49,
        "startChar": 16,
        "endLine": 49,
        "endChar": 38
      },
      "revId": "bf58875e22acf85d8e480c4e7fc5d467137c9a2d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "def40c90_a0a42d69",
        "filename": "redfish-core/include/utils/location_utils.hpp",
        "patchSetId": 15
      },
      "lineNbr": 56,
      "author": {
        "id": 1000632
      },
      "writtenOn": "2021-07-23T21:48:12Z",
      "side": 1,
      "message": "https://github.com/openbmc/bmcweb/blob/02bdd9672c7619cc1e11fe3daed8e3ec092b207b/redfish-core/lib/processor.hpp#L621\n\nThis is repeated?",
      "range": {
        "startLine": 55,
        "startChar": 16,
        "endLine": 56,
        "endChar": 30
      },
      "revId": "bf58875e22acf85d8e480c4e7fc5d467137c9a2d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11eee953_c5629f56",
        "filename": "redfish-core/include/utils/location_utils.hpp",
        "patchSetId": 15
      },
      "lineNbr": 123,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-07-20T00:20:15Z",
      "side": 1,
      "message": "Need to handle the case where no path matches?",
      "revId": "bf58875e22acf85d8e480c4e7fc5d467137c9a2d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea86204b_95f9b8f8",
        "filename": "redfish-core/include/utils/location_utils.hpp",
        "patchSetId": 15
      },
      "lineNbr": 128,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-07-20T00:20:15Z",
      "side": 1,
      "message": "Please combine this mapper call such that all interfaces don\u0027t need to do 2 calls to the mapper to effect this utility function.",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 128,
        "endChar": 57
      },
      "revId": "bf58875e22acf85d8e480c4e7fc5d467137c9a2d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}