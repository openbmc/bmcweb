{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "baf6c1c4_47644237",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-07-24T16:45:37Z",
      "side": 1,
      "message": "Please follow https://cbea.ms/git-commit/ and wrap at 72. \n\n    Separate subject from body with a blank line\n    Limit the subject line to 50 characters\n    Capitalize the subject line\n    Do not end the subject line with a period\n    Use the imperative mood in the subject line\n    Wrap the body at 72 characters\n    Use the body to explain what and why vs. how",
      "revId": "abcf354e17a99e7da4ea77ed9a4cd7f17bc6d73a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "679ca01d_36ce51de",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-07-24T16:45:37Z",
      "side": 1,
      "message": "Why is an absent fan Critical? \nIt should have a State of Absent..",
      "revId": "abcf354e17a99e7da4ea77ed9a4cd7f17bc6d73a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f14f79e4_d9462f21",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1002110
      },
      "writtenOn": "2024-07-24T16:48:58Z",
      "side": 1,
      "message": "The state is indeed absent, the health is critical. These are two separate fields in the Status.",
      "parentUuid": "679ca01d_36ce51de",
      "revId": "abcf354e17a99e7da4ea77ed9a4cd7f17bc6d73a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6347e33c_aebb6512",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-07-23T16:35:06Z",
      "side": 1,
      "message": "I\u0027m not really understanding what the problem is here.\n\nNot all fans support the Functional interface.  Some errors are expected when trying to read that interface for systems that don\u0027t support fan health.\n\nAs written, we would now break those systems by setting the fan to critical if the health was unsupported.\n\n\nThis commit also misses that in the path there\u0027s already a 500 internal error handler, so it needs to comment as to why the client in question is ignoring the error code.  Given that error code, I wouldn\u0027t expect the client to parse any key from the response.",
      "revId": "abcf354e17a99e7da4ea77ed9a4cd7f17bc6d73a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf373f3f_a157279d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002110
      },
      "writtenOn": "2024-07-23T16:44:16Z",
      "side": 1,
      "message": "The health values in the enum are ok, warning and critical. If the fan is absent, the health value is defaulted to OK which would be incorrect/confusing. That was the original issue. \n\nPerhaps a better fix is to default the health status to critical and update it to OK in the getFanHealth?",
      "parentUuid": "6347e33c_aebb6512",
      "revId": "abcf354e17a99e7da4ea77ed9a4cd7f17bc6d73a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "246f32a3_cbcfd969",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-07-23T16:48:08Z",
      "side": 1,
      "message": "\u003e The health values in the enum are ok, warning and critical. If the fan is absent, the health value is defaulted to OK which would be incorrect/confusing. That was the original issue. \n\nThat sounds like a problem in your fan backend, if its reporting a fan as functional when it\u0027s absent.  I asked this in the bug you filed, but which system did you test this on?\n\n\u003e \n\u003e Perhaps a better fix is to default the health status to critical and update it to OK in the getFanHealth?\n\nNope, that would break fan backends that don\u0027t support functional.",
      "parentUuid": "cf373f3f_a157279d",
      "revId": "abcf354e17a99e7da4ea77ed9a4cd7f17bc6d73a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a9baf2f_76f70511",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002110
      },
      "writtenOn": "2024-07-23T17:45:14Z",
      "side": 1,
      "message": "Per the spec, it is indeed reporting the fan as absent, the issue is in the health status, not in the state status.\n\nThe State is being reported as absent in the fan backend.\nThe health, I believe, is sending an error in the dbus call. Since the error in the dbus call does not update the health value, the default value of Ok is what is reported back in this case.",
      "parentUuid": "246f32a3_cbcfd969",
      "revId": "abcf354e17a99e7da4ea77ed9a4cd7f17bc6d73a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da98b9bb_c87d7d8f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-07-23T20:45:07Z",
      "side": 1,
      "message": "\u003e which system did you test this on?\n\nRepeating my question.  Which system did you test this on?",
      "parentUuid": "4a9baf2f_76f70511",
      "revId": "abcf354e17a99e7da4ea77ed9a4cd7f17bc6d73a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7313c90_b4cc8db9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-07-24T16:48:28Z",
      "side": 1,
      "message": "To add here.. Going to need more why this is needed.. \"which would be incorrect/confusing\". Why is an absent fan confusing to have an \"Ok\"? You already have the State saying absent.. \nThere is other resources that follow this, Processors, Pcie Slot, etc. Should an empty PCIe Slot also be Critical? \nWe could ask Redfish here.",
      "parentUuid": "da98b9bb_c87d7d8f",
      "revId": "abcf354e17a99e7da4ea77ed9a4cd7f17bc6d73a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1abc72e7_e5efd734",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002110
      },
      "writtenOn": "2024-07-24T16:56:46Z",
      "side": 1,
      "message": "True. This originally came from reports from our testers that \"uh, the fan is missing/absent in the slot, then why is the health being shown as OK on the webui-vue which is confusing cos the health of an absent fan can\u0027t be ok.\"  \n\nThinking more about this, this should either be \"as designed\" in the backend considering that the possible values for health can be ok, warning and critical and none of them really are possible if the state of the fan is absent.\n\nHaven\u0027t really thought of the best solution yet, but this PR should indeed not be the correct way to solve it.\n\nThanks to Ed and you for the learnings I did get here though, this is my first month on OpenBMC, have learned more about different backends + this webserver and responsibilities of each component in openbmc, thanks to this one code review!",
      "parentUuid": "f7313c90_b4cc8db9",
      "revId": "abcf354e17a99e7da4ea77ed9a4cd7f17bc6d73a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f082e8b_ad0a4926",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-07-24T17:12:33Z",
      "side": 1,
      "message": "Given I\u0027ve asked the platform question several times in multiple forums, and you seem to have ignored it in all, I\u0027m going to assume you\u0027re not answering my question because you\u0027re testing on a non-upstream platform using a fork.\n\nTo be clear, thats is fine, and we\u0027re happy that you\u0027re finding the code useful, but it means that we can\u0027t really help you triage your bug.  FWIW, this is why we have a checkbox on the bug form to make sure that the bug wasn\u0027t being reported against a fork.\n\nWhatever your fan control daemon is probably isn\u0027t obeying the dbus interfaces if you\u0027re seeing this bug.  Given that\u0027s platform specific, there\u0027s not a lot of help we can give you.\n\nAs far as this change goes, bmcweb on master appears to be working as designed, and is setting \"OK\" for fan daemons that don\u0027t support the functional interface.",
      "parentUuid": "1abc72e7_e5efd734",
      "revId": "abcf354e17a99e7da4ea77ed9a4cd7f17bc6d73a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b251e2ed_760c9166",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1002110
      },
      "writtenOn": "2024-07-24T20:20:21Z",
      "side": 1,
      "message": "Your assumption is indeed correct when it comes to the platform, it is not an upstream platform. I\u0027m in the midst of setting up qemu to reproduce some issues (not this particular one since this is on the backend and hardware dependent, but the other one I reported regarding the operator priv being allowed to modify n/w settings, for example), hence the delay in answering your question to include the platform in the bug descriptions. I\u0027ll have to dig in deeper on this fan issue, I\u0027ll close this PR for now so get it off your inbox, and will send a comment if I find anything on my end.",
      "parentUuid": "4f082e8b_ad0a4926",
      "revId": "abcf354e17a99e7da4ea77ed9a4cd7f17bc6d73a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf8649d8_8a7864b1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-07-24T20:40:26Z",
      "side": 1,
      "message": "👍.  Still happy to help if there\u0027s something out there.  I get that people have forks, and they\u0027ve innovated (read, replaced components) in areas, I just can\u0027t be in a position of debugging non-public code for the authors, it would take effort away from community efforts to do so.\n\nThis really looks like you\u0027ve replaced the fan control daemon, and the one you\u0027ve replaced it with isn\u0027t implementing the interfaces properly.",
      "parentUuid": "b251e2ed_760c9166",
      "revId": "abcf354e17a99e7da4ea77ed9a4cd7f17bc6d73a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6740fe69_c426c9e9",
        "filename": "redfish-core/lib/fan.hpp",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 1002110
      },
      "writtenOn": "2024-07-23T15:45:55Z",
      "side": 1,
      "message": "The health is being defaulted to OK here: https://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/fan.hpp#L228\n\nThis resulted in health being set to OK when there was an error in retrieving the property in this method that is called later on (https://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/fan.hpp#L369)",
      "revId": "abcf354e17a99e7da4ea77ed9a4cd7f17bc6d73a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd604827_149fa977",
        "filename": "redfish-core/lib/fan.hpp",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-07-24T16:45:37Z",
      "side": 1,
      "message": "This should for sure be in the if (ec.value() !\u003d EBADR), otherwise if you don\u0027t have this interface, you get a default of Critical..",
      "parentUuid": "6740fe69_c426c9e9",
      "revId": "abcf354e17a99e7da4ea77ed9a4cd7f17bc6d73a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}