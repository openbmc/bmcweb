{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9c4bacb5_da35869a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-19T16:13:08Z",
      "side": 1,
      "message": "You may also want to ask about getting added to the CLA list.  I don\u0027t know who the current Google CLA owner is these days.  Maybe @Carson knows?\n\nI\u0027ve triggered CI manually for this patch for the moment.",
      "revId": "0252f115d91a203f10d076cf41ad4fe6b9c19ae8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "200b8447_1ef506d5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-19T18:02:16Z",
      "side": 1,
      "message": "Would doing something like this:\nhttps://github.com/openbmc/bmcweb/commit/6e544fb40201c53dd6377c62e37df71d24586bac\n\nGet us the same result without manual string parsing?  It seems to pass unit tests, but I remember there being subtleties here.  @Carson?",
      "revId": "0252f115d91a203f10d076cf41ad4fe6b9c19ae8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec358008_d898ee54",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2024-08-19T18:33:37Z",
      "side": 1,
      "message": "There were subtleties that prevented us from using the existing URI helper functions.  That\u0027s why we needed this new search function.\n\nI recall issues around handling trailing \u0027/\u0027 and then also for a given URI we had to determine if it was for any of these 3 cases:\n1. Aggregated resource\n2. Top level collection\n3. Uptree from top level collection\n\nIt turns out there was a testing gap for the last entry in the Collections array when also using query params.\n\nI tried to have pretty good coverage in the unit tests.  Your suggestion passes the unit tests so I\u0027m good with doing that version instead.",
      "parentUuid": "200b8447_1ef506d5",
      "revId": "0252f115d91a203f10d076cf41ad4fe6b9c19ae8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56e71021_da599b90",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2024-08-19T18:33:37Z",
      "side": 1,
      "message": "I\u0027m not sure, but my guess would be benjaminfair@google.com",
      "parentUuid": "9c4bacb5_da35869a",
      "revId": "0252f115d91a203f10d076cf41ad4fe6b9c19ae8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7fcf209_ea1d2589",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-19T18:40:17Z",
      "side": 1,
      "message": "That was my recollection as well.  I wasn\u0027t sure if there was something that wasn\u0027t covered by unit tests, but they seemed pretty good.  I know we had subtleties around segments_ref and segments_view that got hairy, and I know boost url changes some of those when it was included in \"real\" boost, but I think that patchset covers all the cases.\n\nif Joonwon is good with that too, lets get this patchset updated and we should be good to go.",
      "parentUuid": "ec358008_d898ee54",
      "revId": "0252f115d91a203f10d076cf41ad4fe6b9c19ae8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f05e70de_dea872b4",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-19T16:12:11Z",
      "side": 1,
      "message": "We parse the url into a proper object on line 86, which implements support for handling the query param using a proper parser (rather than using find, which can be error prone, and might not implement the URL parsing spec properly).\n\nIs there any way we can just move the line 81 to after we parse the URI, and operate on parsedUrl-\u003esegments.last() instead?  That would ensure that we\u0027re still parsing the URL properly.",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 64,
        "endChar": 63
      },
      "revId": "0252f115d91a203f10d076cf41ad4fe6b9c19ae8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}