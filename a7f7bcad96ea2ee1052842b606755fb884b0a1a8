{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3eedb496_698f0c36",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 26
      },
      "lineNbr": 164,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-06-29T14:06:39Z",
      "side": 1,
      "message": "Should we define these like below?\n\n```\n    std::string* generation \u003d nullptr;\n    size_t* lanes \u003d nullptr;\n    std::string* slotType \u003d nullptr;\n```   \n\nAnd then check them after calling `unpackPropertiesNoThrow()` to see whether they are obtained.\n```\nif(generation \u003d\u003d nullptr) \n```",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 164,
        "endChar": 25
      },
      "revId": "a7f7bcad96ea2ee1052842b606755fb884b0a1a8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "599cfe33_14562d92",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 26
      },
      "lineNbr": 164,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-06-29T16:14:40Z",
      "side": 1,
      "message": "Ed made this change, I don\u0027t see anything wrong.\nIf the \"Lanes\" property is not present, its default value of 0 will be returned, which is the correct value..",
      "parentUuid": "3eedb496_698f0c36",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 164,
        "endChar": 25
      },
      "revId": "a7f7bcad96ea2ee1052842b606755fb884b0a1a8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f1af76f_e422570d",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 26
      },
      "lineNbr": 164,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-06-29T17:20:18Z",
      "side": 1,
      "message": "I think a default value of 0 for Lanes is reasonable..",
      "parentUuid": "599cfe33_14562d92",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 164,
        "endChar": 25
      },
      "revId": "a7f7bcad96ea2ee1052842b606755fb884b0a1a8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae2cf1f9_8177af9e",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 26
      },
      "lineNbr": 164,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-06-29T17:22:46Z",
      "side": 1,
      "message": "\u003e Should we define these like below?\n\nWe shouldn\u0027t.  Each of these fields is required on the interface, therefore we need to actually require them in the API.  The way I wrote it is the way I would expect an interface to be read that doesn\u0027t have multiple versions required.\n\n0 is just a placeholder to initialize the value to (as is required by the coding standard).  Unless the dbus service publishes zero, it will never be seen by a user.",
      "parentUuid": "1f1af76f_e422570d",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 164,
        "endChar": 25
      },
      "revId": "a7f7bcad96ea2ee1052842b606755fb884b0a1a8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55fcb31b_6adfddd3",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 26
      },
      "lineNbr": 164,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-06-29T19:45:51Z",
      "side": 1,
      "message": "I have tested it, and it is working as expected. We are returning whatever the D-Bus service publishes.\n\n```\ncurl -k https://${bmc}/redfish/v1/Systems/system/PCIeDevices/pcie_card8\n{\n  \"@odata.id\": \"/redfish/v1/Systems/system/PCIeDevices/pcie_card8\",\n  \"@odata.type\": \"#PCIeDevice.v1_9_0.PCIeDevice\",\n  \"Id\": \"pcie_card8\",\n  \"Manufacturer\": \"\",\n  \"Model\": \"6B87\",\n  \"Name\": \"PCIe Device\",\n  \"PCIeFunctions\": {\n    \"@odata.id\": \"/redfish/v1/Systems/system/PCIeDevices/pcie_card8/PCIeFunctions\"\n  },\n  \"PCIeInterface\": {\n    \"LanesInUse\": -1\n  },\n  \"PartNumber\": \"03FL194\",\n  \"SerialNumber\": \"Y131UF09S00J\",\n  \"Slot\": {\n    \"Lanes\": 10,\n    \"SlotType\": \"FullLength\"\n  },\n  \"SparePartNumber\": \"03FL195\",\n  \"Status\": {\n    \"Health\": \"OK\",\n    \"State\": \"Enabled\"\n  }\n}\n```",
      "parentUuid": "ae2cf1f9_8177af9e",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 164,
        "endChar": 25
      },
      "revId": "a7f7bcad96ea2ee1052842b606755fb884b0a1a8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52c39d0a_35e723f1",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 26
      },
      "lineNbr": 164,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-06-30T14:02:47Z",
      "side": 1,
      "message": "I\u0027m fine with the this style -- I think probably because those fields are already required and the default values are making sense.\nHowever, in case when some optional fields are used, I think those arguments may need to be defined as pointers (to check whether those fields are present or not).",
      "parentUuid": "55fcb31b_6adfddd3",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 164,
        "endChar": 25
      },
      "revId": "a7f7bcad96ea2ee1052842b606755fb884b0a1a8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06d053e1_ca565241",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 26
      },
      "lineNbr": 193,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2023-06-29T14:06:39Z",
      "side": 1,
      "message": "For example, if we use `size_t* lines \u003d nullptr` above,\n\n```\nif(lanes !\u003d nullptr)\n{\n   res.jsonValue[\"Slot\"][\"Lanes\"] \u003d *lanes;\n}\n```",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 193,
        "endChar": 43
      },
      "revId": "a7f7bcad96ea2ee1052842b606755fb884b0a1a8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78a8f474_0b52c2aa",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 26
      },
      "lineNbr": 193,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-06-29T19:49:53Z",
      "side": 1,
      "message": "As explained above, if the xyz.openbmc_project.Inventory.Item.PCIeSlot exists, then all properties should have a value. In this case, we return whatever the D-Bus service publishes.",
      "parentUuid": "06d053e1_ca565241",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 193,
        "endChar": 43
      },
      "revId": "a7f7bcad96ea2ee1052842b606755fb884b0a1a8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}