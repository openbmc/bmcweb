{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "42965f35_fa2c781a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-02-03T20:06:32Z",
      "side": 1,
      "message": "This is a 5 minute timer between updates to the status API.  Considering that for a progress API, I would expect updates every 10 seconds or so, 5 minutes seems like more than enough, and the bug likely lies in your implementation of firmware update.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 47
      },
      "revId": "115a152a556e95173384fb617102fe82ca99ff45",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3123eab_2b45184d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1001642
      },
      "writtenOn": "2023-02-16T10:13:43Z",
      "side": 1,
      "message": "since we are updating SPI region in IFWI full flash which is using blocking call and it is 64MB file, so its taking more than 5 minutes and so the increase in timeout value.",
      "parentUuid": "42965f35_fa2c781a",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 47
      },
      "revId": "115a152a556e95173384fb617102fe82ca99ff45",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fc7b9b6_0550e0ec",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-02-28T00:26:32Z",
      "side": 1,
      "message": "\u003e  is using blocking call \n\nSo don\u0027t use a blocking call in the dbus handling thread?  That\u0027s a well trodden pattern in openbmc to use async calls, or spin long calls into their own thread.",
      "parentUuid": "e3123eab_2b45184d",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 47
      },
      "revId": "115a152a556e95173384fb617102fe82ca99ff45",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "782a9287_b4531562",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1001642
      },
      "writtenOn": "2023-03-07T09:55:11Z",
      "side": 1,
      "message": "The TaskIdKeepAlive Timeout is made configurable now, So that it can be updated depending upon the OEM\u0027s Firmware update capabilities.",
      "parentUuid": "8fc7b9b6_0550e0ec",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 47
      },
      "revId": "115a152a556e95173384fb617102fe82ca99ff45",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b38fc0e9_dc02191c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-03-07T16:16:40Z",
      "side": 1,
      "message": "please fix your backend implementation.  updates should be sent at 10-30 second intervals.  5 minutes is a very long time to wait for updates, and should be fine as a default for anyone with conforming implemntations.",
      "parentUuid": "782a9287_b4531562",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 47
      },
      "revId": "115a152a556e95173384fb617102fe82ca99ff45",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "406227e0_4f53ba48",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2023-03-07T17:39:27Z",
      "side": 1,
      "message": "Agree Ed. Ideally this TaskID timer should be in 10-60 seconds interval. But unfortunely the current value is 5 Minutes which is too high.\n\nFrom Intel also, our current implementation is not updating the TaskID status periodically especially in large file updates. So we are working internally in changing implementation to periodically update taskID with status/percentage.\n\nCurrent commit makes the upload taskid keep alive timeout configurable via meson options. It makes a way for OEM\u0027s to finetune this numbers depending on the OEM specific configurations and implementation.",
      "parentUuid": "b38fc0e9_dc02191c",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 47
      },
      "revId": "115a152a556e95173384fb617102fe82ca99ff45",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b69d4d3f_2ca8f629",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-03-07T21:22:43Z",
      "side": 1,
      "message": "\u003e Agree Ed. Ideally this TaskID timer should be in 10-60 seconds interval. But unfortunely the current value is 5 Minutes which is too high.\n\u003e \n\u003e From Intel also, our current implementation is not updating the TaskID status periodically especially in large file updates. So we are working internally in changing implementation to periodically update taskID with status/percentage.\n\u003e \n\u003e Current commit makes the upload taskid keep alive timeout configurable via meson options. It makes a way for OEM\u0027s to finetune this numbers depending on the OEM specific configurations and implementation.\n\nGiven that we know this is the incorrect solution, and is largely just working around a bug in another component, I don\u0027t want to take on maintenance of a per-OEM option for this, especially given that component is in an Intel fork, and not part of openbmc/openbmc where it could be simply fixed.\n\nIf there are 3 or more companies that think this is the right solution in the long run, I\u0027m happy to discuss, but until that happens, this isn\u0027t something I think we want on master.\n\nThank you for the submission though.  Certainly an interesting problem.",
      "parentUuid": "406227e0_4f53ba48",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 47
      },
      "revId": "115a152a556e95173384fb617102fe82ca99ff45",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9feb8233_59d410da",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2023-03-14T11:08:20Z",
      "side": 1,
      "message": "1) This commit makes the taskID keepalive timeout as configurable value. So that OEM\u0027s can configure the value depending on processor speed. Also default value is set to 5 minutes, which doesn\u0027t change existing flow.\n\n2) From design point of view, Leaving OEM\u0027s internal implementation, This enables to keep bmcweb design to be able to configure the keep alive timeout to lower(as default) which is ideal design as you also mentioned above.\n\nConsidering above two points ( No change in existing flow, and enhances the design to configure ideal), Can we move with code change?",
      "parentUuid": "b69d4d3f_2ca8f629",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 47
      },
      "revId": "115a152a556e95173384fb617102fe82ca99ff45",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99d98672_01a5d0ea",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-03-14T15:44:26Z",
      "side": 1,
      "message": "\u003e 1) This commit makes the taskID keepalive timeout as configurable value. So that OEM\u0027s can configure the value depending on processor speed. Also default value is set to 5 minutes, which doesn\u0027t change existing flow.\n\nyep.  I think we’re on the same page as what this patchset is proposing.\n\n\u003e \n\u003e 2) From design point of view, Leaving OEM\u0027s internal implementation, This enables to keep bmcweb design to be able to configure the keep alive timeout to lower(as default) which is ideal design as you also mentioned above.\n\nno, I did not mention this as ideal.  applications implementing the interface in a reasonable way, with incremental updates is the ideal.\n\n\u003e \n\u003e Considering above two points ( No change in existing flow, and enhances the design to configure ideal), Can we move with code change?\n\nno.  as written, it is proposing an incorrect and user hostile dbus interface with no incremental updates.  the right fix is to fix the backend, and considering this is oem, that would mean this can easily stay as a patch until the oem firmware update is upstreamed, but even then, my recommendation is to please fix the backend.  I’m not interesting in maintaining complexity in configuration values that only exist because of oem backends that have odd behavior that could easily be fixed.",
      "parentUuid": "9feb8233_59d410da",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 47
      },
      "revId": "115a152a556e95173384fb617102fe82ca99ff45",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7f7163a_455380c2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-02-03T20:06:32Z",
      "side": 1,
      "message": "I have no idea what an \"IFWI full flash\" is;  Can you please document the actual test you performed, which generally involves some sort of redfish command.",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 63
      },
      "revId": "115a152a556e95173384fb617102fe82ca99ff45",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fab1e71e_ce324c39",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 13,
      "author": {
        "id": 1001642
      },
      "writtenOn": "2023-02-16T10:13:43Z",
      "side": 1,
      "message": "his feature is to support the BIOS/Host SPI chip full flash without dependency on external hardware.",
      "parentUuid": "d7f7163a_455380c2",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 63
      },
      "revId": "115a152a556e95173384fb617102fe82ca99ff45",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1da287ea_72913a7d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1001642
      },
      "writtenOn": "2023-02-03T10:27:51Z",
      "side": 1,
      "message": "Fixed the comment.",
      "revId": "115a152a556e95173384fb617102fe82ca99ff45",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}