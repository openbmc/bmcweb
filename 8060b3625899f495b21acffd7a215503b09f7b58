{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1a212117_50fb1298",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-07-10T02:17:22Z",
      "side": 1,
      "message": "I feel this goes against what we have been doing in bmcweb with mostly avoiding auto.. Do you feel strongly we want this? this is enforced by clang-tidy and the impact to the code here is low so I could be convinced but it feels counter to other feedack.",
      "revId": "8060b3625899f495b21acffd7a215503b09f7b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "918c0dc1_42573c98",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-07-10T19:53:26Z",
      "side": 1,
      "message": "I don\u0027t know when I\u0027ve ever really enforced that we need to use auto on BOTH sides of an argument.  The thing I generally comment on is some variation of\n\nauto foo \u003d myOpaqueMethodCall();\n\nWhere it\u0027s not obvious in that context what the return type is, and more importantly, if myOpaqueMethodCall() changes from say uint64_t, to int64_t, there\u0027s no change to the call site that would make us check if that transform was safe.\n\nThis is only really changing stuff like\n\nFoo foo \u003d static_cast\u003cFoo\u003e(myFoo);\n\nWhich, auto seems perfrectly fine.  Foo is already declared on the line, and there\u0027s no way that static_cast will ever change to return Bar, without that line changing.",
      "parentUuid": "1a212117_50fb1298",
      "revId": "8060b3625899f495b21acffd7a215503b09f7b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ca11661b_5409acbe",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-07-10T20:51:17Z",
      "side": 1,
      "message": "Still slightly concerned we might end up with more auto here because this change:\nauto foo \u003d myOpaqueMethodCall();\n\nbut ðŸ¤·, this probably better matches other OpenBMC repos, clang-tidy enforces, I don\u0027t have much of an opinion",
      "parentUuid": "918c0dc1_42573c98",
      "revId": "8060b3625899f495b21acffd7a215503b09f7b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "236979a3_7e5780c6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-07-10T20:51:43Z",
      "side": 1,
      "message": "Maybe leave open for a few more days, see if anyone else cares either way",
      "parentUuid": "ca11661b_5409acbe",
      "revId": "8060b3625899f495b21acffd7a215503b09f7b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab92483c_91e2479c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-07-10T20:53:40Z",
      "side": 1,
      "message": "Yeah, I have the same worry.  \"Don\u0027t use auto\" is a lot easier advice to tell people than \"Only use auto where appropriate\".",
      "parentUuid": "236979a3_7e5780c6",
      "revId": "8060b3625899f495b21acffd7a215503b09f7b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "154a5289_4bf8e947",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2025-08-19T19:07:29Z",
      "side": 1,
      "message": "I am still in the \"Don\u0027t use auto\" is a lot easier to tell people than \"only use auto in these cases\".. But ðŸ¤·, in 2 years, my opinion is about the same.. If you want this, I am good.",
      "parentUuid": "ab92483c_91e2479c",
      "revId": "8060b3625899f495b21acffd7a215503b09f7b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97332dd5_f1a31f02",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-19T19:23:59Z",
      "side": 1,
      "message": "Other option is we could apply these changes and just not enforce?  I do really wish there was a readability for checking for.\n\nauto x \u003d foo();\n\nIdk, I\u0027m on the fence here two, which probably means I should just drop it.",
      "parentUuid": "154a5289_4bf8e947",
      "revId": "8060b3625899f495b21acffd7a215503b09f7b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aeabf41c_754ed0bf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2025-08-28T20:12:52Z",
      "side": 1,
      "message": "I think if we decide to go with these changes, we should just enforce them but I don\u0027t care much. I am fine with doing nothing here (my slightest preference but I don\u0027t care much), changing and enforcing (my 2nd), and then just changing.",
      "parentUuid": "97332dd5_f1a31f02",
      "revId": "8060b3625899f495b21acffd7a215503b09f7b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd320164_e3f3aad5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000163
      },
      "writtenOn": "2024-05-03T18:15:33Z",
      "side": 1,
      "message": "I agree that this is one of those places where auto is welcome. Having the type twice in the line is verbose, and in all of these instances, the type is very clear based on the casted type.",
      "revId": "8060b3625899f495b21acffd7a215503b09f7b58",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}