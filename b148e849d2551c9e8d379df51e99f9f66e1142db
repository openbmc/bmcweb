{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "07665594_c9e746e7",
        "filename": "http/http_body.hpp",
        "patchSetId": 14
      },
      "lineNbr": 265,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-29T22:48:48Z",
      "side": 1,
      "message": "Why do we need to do something different here?",
      "revId": "b148e849d2551c9e8d379df51e99f9f66e1142db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c403ff50_ab458d4c",
        "filename": "http/http_body.hpp",
        "patchSetId": 14
      },
      "lineNbr": 265,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-06-11T19:12:54Z",
      "side": 1,
      "message": "hdr, multipartParser can be stored directly because their types are the same for requests and responses.\nboost::beast::http::header\u003cfalse, Fields\u003e (response) has no method() member, while the \u003ctrue\u003e (request) version does.\n\nUsing the small lambda gives us a deferred, type-safe way to obtain the verb only when it actually exists.",
      "parentUuid": "07665594_c9e746e7",
      "revId": "b148e849d2551c9e8d379df51e99f9f66e1142db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23c00bc8_c8e79234",
        "filename": "http/http_body.hpp",
        "patchSetId": 14
      },
      "lineNbr": 265,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-07-01T16:10:38Z",
      "side": 1,
      "message": "Lets avoid the lambda.  We can do this in the actual get method function rather than registering an extra callback.",
      "parentUuid": "c403ff50_ab458d4c",
      "revId": "b148e849d2551c9e8d379df51e99f9f66e1142db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74276b6e_ebe9b54c",
        "filename": "http/http_body.hpp",
        "patchSetId": 14
      },
      "lineNbr": 265,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-07-01T20:36:16Z",
      "side": 1,
      "message": "Ed, could you please elaborate on the suggestion ?\n\nWe can\u0027t directly call method() in init() - it would fail to compile for responses.\nAny other solution which I can think would not look clean.",
      "parentUuid": "23c00bc8_c8e79234",
      "revId": "b148e849d2551c9e8d379df51e99f9f66e1142db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86c50ec8_18289c72",
        "filename": "http/http_body.hpp",
        "patchSetId": 14
      },
      "lineNbr": 265,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-07-03T15:41:49Z",
      "side": 1,
      "message": "making this a normal member method seems like it would be a lot cleaner?  We shouldn\u0027t have to register a secondary callback.",
      "parentUuid": "74276b6e_ebe9b54c",
      "revId": "b148e849d2551c9e8d379df51e99f9f66e1142db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f2a6da6_95777cc7",
        "filename": "http/http_body.hpp",
        "patchSetId": 14
      },
      "lineNbr": 265,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-07-03T16:19:58Z",
      "side": 1,
      "message": "I see, this is a template.  Lets just remove the method check for now.",
      "parentUuid": "86c50ec8_18289c72",
      "revId": "b148e849d2551c9e8d379df51e99f9f66e1142db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c415247_2a0c1db4",
        "filename": "http/http_body.hpp",
        "patchSetId": 14
      },
      "lineNbr": 290,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-29T22:48:48Z",
      "side": 1,
      "message": "should just use to_string",
      "range": {
        "startLine": 290,
        "startChar": 20,
        "endLine": 290,
        "endChar": 41
      },
      "revId": "b148e849d2551c9e8d379df51e99f9f66e1142db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "623489df_53caad5c",
        "filename": "http/http_body.hpp",
        "patchSetId": 14
      },
      "lineNbr": 290,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-06-17T20:09:50Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "9c415247_2a0c1db4",
      "range": {
        "startLine": 290,
        "startChar": 20,
        "endLine": 290,
        "endChar": 41
      },
      "revId": "b148e849d2551c9e8d379df51e99f9f66e1142db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca7b3971_ac935097",
        "filename": "include/multipart_parser.hpp",
        "patchSetId": 14
      },
      "lineNbr": 65,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-29T22:48:48Z",
      "side": 1,
      "message": "Remove.  Default is to init the first class.",
      "range": {
        "startLine": 65,
        "startChar": 61,
        "endLine": 65,
        "endChar": 76
      },
      "revId": "b148e849d2551c9e8d379df51e99f9f66e1142db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6656a4ec_0fc5f9ec",
        "filename": "include/multipart_parser.hpp",
        "patchSetId": 14
      },
      "lineNbr": 65,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-06-17T20:09:50Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "ca7b3971_ac935097",
      "range": {
        "startLine": 65,
        "startChar": 61,
        "endLine": 65,
        "endChar": 76
      },
      "revId": "b148e849d2551c9e8d379df51e99f9f66e1142db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43d2121f_4be4f448",
        "filename": "include/multipart_parser.hpp",
        "patchSetId": 14
      },
      "lineNbr": 388,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-29T22:48:48Z",
      "side": 1,
      "message": "This should not be something done on every write.  It should be done in one spot somewhere in init.",
      "range": {
        "startLine": 388,
        "startChar": 0,
        "endLine": 388,
        "endChar": 57
      },
      "revId": "b148e849d2551c9e8d379df51e99f9f66e1142db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfa3f1a4_17fca5d9",
        "filename": "include/multipart_parser.hpp",
        "patchSetId": 14
      },
      "lineNbr": 388,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-06-17T20:09:50Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "43d2121f_4be4f448",
      "range": {
        "startLine": 388,
        "startChar": 0,
        "endLine": 388,
        "endChar": 57
      },
      "revId": "b148e849d2551c9e8d379df51e99f9f66e1142db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac7888e9_fdfb489f",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 14
      },
      "lineNbr": 629,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-29T22:48:48Z",
      "side": 1,
      "message": "????",
      "range": {
        "startLine": 629,
        "startChar": 0,
        "endLine": 629,
        "endChar": 41
      },
      "revId": "b148e849d2551c9e8d379df51e99f9f66e1142db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d45b83a_82556e95",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 14
      },
      "lineNbr": 629,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-06-17T20:09:50Z",
      "side": 1,
      "message": "Removed this check as it was redundant",
      "parentUuid": "ac7888e9_fdfb489f",
      "range": {
        "startLine": 629,
        "startChar": 0,
        "endLine": 629,
        "endChar": 41
      },
      "revId": "b148e849d2551c9e8d379df51e99f9f66e1142db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e45dd39_1bf35139",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 14
      },
      "lineNbr": 729,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-29T22:48:48Z",
      "side": 1,
      "message": "Please abstract this function into multiple.  This was arguably too long before, it\u0027s definitely too long after your change.",
      "revId": "b148e849d2551c9e8d379df51e99f9f66e1142db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "183b094a_aa440740",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 14
      },
      "lineNbr": 729,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-06-11T19:12:54Z",
      "side": 1,
      "message": "let me make this change",
      "parentUuid": "3e45dd39_1bf35139",
      "revId": "b148e849d2551c9e8d379df51e99f9f66e1142db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3aa4e543_f5f1bed4",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 14
      },
      "lineNbr": 729,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-06-17T20:09:50Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "183b094a_aa440740",
      "revId": "b148e849d2551c9e8d379df51e99f9f66e1142db",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}