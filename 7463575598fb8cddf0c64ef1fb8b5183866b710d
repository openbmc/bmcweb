{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6c6c2610_e6092341",
        "filename": "/COMMIT_MSG",
        "patchSetId": 18
      },
      "lineNbr": 12,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "Please wrap your commits 50/72 please.\n\nAlso, more details needed here.  What is external storer?  Why is it useful?  What value does this patch add?",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 12,
        "endChar": 26
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23731785_52b8229e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 18
      },
      "lineNbr": 12,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "Fixed. Added some more text, and links to explanatory documents for the interested reader.",
      "parentUuid": "6c6c2610_e6092341",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 12,
        "endChar": 26
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "991d7400_a781158d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 18
      },
      "lineNbr": 14,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "More details here please.  What tests did you run?  How did the result change as a result of this patch?  Did you run unit or functional tests?  Where are the tests checked in?",
      "range": {
        "startLine": 14,
        "startChar": 9,
        "endLine": 14,
        "endChar": 27
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea67d29d_36f95524",
        "filename": "/COMMIT_MSG",
        "patchSetId": 18
      },
      "lineNbr": 14,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "That, I want to ask you about: where\u0027s a good place to store tangentially related helper scripts and such for testing? I have a shell script that issues some \"curl\" calls to populate ExternalStorer before running the Redfish Validator on it, and was wondering where I should keep that script. I put it in a GitHub Gist for now, and updated the commit message accordingly.",
      "parentUuid": "991d7400_a781158d",
      "range": {
        "startLine": 14,
        "startChar": 9,
        "endLine": 14,
        "endChar": 27
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1cbc08b9_483bca14",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 18
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "This is looking like a great start!  Can\u0027t wait to see where you go with it.",
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6a67586_3d3498b6",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 75,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "We generally don\u0027t use auto in this codebase, and we try to avoid declaring things at global scope that only have one use.  I suspect both these variables can just be inlined.",
      "range": {
        "startLine": 75,
        "startChar": 10,
        "endLine": 75,
        "endChar": 14
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09ff9c0d_818e6ed3",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 75,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "Updated. I changed these to std::string but then they can\u0027t be constexpr which is a really weird limitation of C++. Hopefully just const is OK.\n\nI forgot about \"inline\", good idea, this opens up some recent C++ syntax extensions which make global constants easier to use.",
      "parentUuid": "c6a67586_3d3498b6",
      "range": {
        "startLine": 75,
        "startChar": 10,
        "endLine": 75,
        "endChar": 14
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c69a59b_6bd8f89a",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 79,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "Please come up with another pattern for this that doesn\u0027t involve a non-const global variable, which in general is an anti-pattern.  Generally this would be done by passing the path prefix into the functions that need it from the calling scope.",
      "range": {
        "startLine": 79,
        "startChar": 25,
        "endLine": 79,
        "endChar": 70
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47f222a7_36466bb4",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 79,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "Done. I moved pathPrefix into the class itself, so it\u0027s not longer a global. Added a function, for use by testing only, that can change it when necessary.",
      "parentUuid": "4c69a59b_6bd8f89a",
      "range": {
        "startLine": 79,
        "startChar": 25,
        "endLine": 79,
        "endChar": 70
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54103341_5677745d",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 83,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "nit, we don\u0027t need to have comments about things that don\u0027t exist.",
      "range": {
        "startLine": 82,
        "startChar": 0,
        "endLine": 83,
        "endChar": 60
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e015e7d9_d2d97d23",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 83,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "It\u0027s still useful. Reworded it a little.",
      "parentUuid": "54103341_5677745d",
      "range": {
        "startLine": 82,
        "startChar": 0,
        "endLine": 83,
        "endChar": 60
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac09a092_10f5cf24",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 86,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "considering that there are no inherited classes for this, I suspect you want private here.",
      "range": {
        "startLine": 86,
        "startChar": 2,
        "endLine": 86,
        "endChar": 11
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0aaa809f_02b2b043",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 86,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "No objection. I\u0027ve traditionally used public and protected, never private, just in case somebody wants to subclass them later.",
      "parentUuid": "ac09a092_10f5cf24",
      "range": {
        "startLine": 86,
        "startChar": 2,
        "endLine": 86,
        "endChar": 11
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1119cdf_0928a0e9",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 91,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "Any reason these just can\u0027t use boost::urls::url?  it seems odd that we would avoid those classes, as they give us escaping of requests.",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 91,
        "endChar": 26
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "726de10f_e257f623",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 91,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "These are not full URL\u0027s, but rather, they are substrings that are later used to aasemble URL\u0027s. So, using a URL string wrapper class, that maintains a complete and fully-formed URL, won\u0027t work here.\n\nI will change the variable names, though, as this is misleading.",
      "parentUuid": "b1119cdf_0928a0e9",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 91,
        "endChar": 26
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6a0e8de_57aa644b",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 98,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "please avoid one character variable names.",
      "range": {
        "startLine": 97,
        "startChar": 9,
        "endLine": 98,
        "endChar": 42
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d857bd78_3b87a3b9",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 98,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "Hmm, even in the trivial and idiomatic usage of stuffing function-parameter variables into the initializers of an empty-body constructor?\n\nI agree with you as for other places, but for this, and for other places (such as \"i\" as a trivial loop index), one-character variable names are acceptable.",
      "parentUuid": "c6a0e8de_57aa644b",
      "range": {
        "startLine": 97,
        "startChar": 9,
        "endLine": 98,
        "endChar": 42
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c3b0a51_31c83ae1",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 123,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "There\u0027s no need to forward declare these unless you\u0027re going to put your implementations in a cpp file.  Please remove.",
      "range": {
        "startLine": 102,
        "startChar": 0,
        "endLine": 123,
        "endChar": 0
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49f18b5a_c7ee9986",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 123,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "They are nicely grouped together, so the relation between them can be easily seen here. And, declaring them here allows an indentation level to be saved throughout the definition.\n\nI was also going to ask you something, why is bmcweb essentially one big compilation unit? There are many hpp files without corresponding cpp files. The entire lib directory is all headers. Is there a reason for this? Typically I would write pairs of hpp/cpp files for any new feature I would add, but that seems to not be followed in bmcweb, for a reason I don\u0027t know.",
      "parentUuid": "5c3b0a51_31c83ae1",
      "range": {
        "startLine": 102,
        "startChar": 0,
        "endLine": 123,
        "endChar": 0
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24e53cdc_218a506e",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 125,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "nit, we generally omit the void.",
      "range": {
        "startLine": 125,
        "startChar": 43,
        "endLine": 125,
        "endChar": 47
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f65438c7_4b59b1c9",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 125,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "I don\u0027t want to omit the void, it makes it more clear that the function takes no parameters.",
      "parentUuid": "24e53cdc_218a506e",
      "range": {
        "startLine": 125,
        "startChar": 43,
        "endLine": 125,
        "endChar": 47
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eafeff79_8b039fa8",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 134,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "Should this be std::filesystem::path?",
      "range": {
        "startLine": 134,
        "startChar": 18,
        "endLine": 134,
        "endChar": 35
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46053237_f799eaad",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 134,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "in all cases this is used, this out parameter is constructed directly before this read.  Could we return by std::optional\u003cnlohman::json\u003e to make the API easier to use?",
      "range": {
        "startLine": 134,
        "startChar": 45,
        "endLine": 134,
        "endChar": 70
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd8f4e94_42266ea3",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 134,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "Good suggestion. I also can consolidate some post-checks (such as valid JSON) into the function.",
      "parentUuid": "46053237_f799eaad",
      "range": {
        "startLine": 134,
        "startChar": 45,
        "endLine": 134,
        "endChar": 70
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59bc2aad_6dce01c8",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 134,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "Good suggestion, I changed the functions that take filenames to take std::filesystem::path instead of just a generic string.",
      "parentUuid": "eafeff79_8b039fa8",
      "range": {
        "startLine": 134,
        "startChar": 18,
        "endLine": 134,
        "endChar": 35
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ade95bf8_d816c251",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 138,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "you need to check for errors on this.  generally you would  check for input.good()",
      "range": {
        "startLine": 138,
        "startChar": 0,
        "endLine": 138,
        "endChar": 25
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0ac486c_d9ddf8db",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 138,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "It\u0027s already checked, later in the function. I can add an extra check as an earlier sanity check, though.",
      "parentUuid": "ade95bf8_d816c251",
      "range": {
        "startLine": 138,
        "startChar": 0,
        "endLine": 138,
        "endChar": 25
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3822018_6017b08e",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 151,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "This code block doesn\u0027t look quite right.  I would\u0027ve expected to not have to close() input directly (just rely on raii)",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 151,
        "endChar": 23
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3806b340_8f745687",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 151,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "Refactored it. Also consolidated some common post-parsing checks that were repeated by the callers.\n\nWe need close() because that\u0027s the last chance for the system to provide an error back to us, if caching or other reason prevents immediate error upon read() or write().",
      "parentUuid": "d3822018_6017b08e",
      "range": {
        "startLine": 143,
        "startChar": 0,
        "endLine": 151,
        "endChar": 23
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7eabee0c_e8cd4abb",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 154,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "nit: lets leave this comment out, because these calls technically do \"block\" in the engineering sense, they just don\u0027t block on IO.  This subtlety isn\u0027t the most important to this code.",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 154,
        "endChar": 65
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "81f7deb1_fea0334e",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 154,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "OK, removed it. Since the base directory location is now changeable at runtime (for testing purposes), there\u0027s no more guarantee it\u0027s on tmpfs, anyway.",
      "parentUuid": "7eabee0c_e8cd4abb",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 154,
        "endChar": 65
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f375ba03_e7c8a57e",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 167,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "same as above, I suspect there\u0027s no reason to expliticly close the file, we can just return true and raii will clean up the rest.",
      "range": {
        "startLine": 164,
        "startChar": 0,
        "endLine": 167,
        "endChar": 25
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2efd5def_6e7b98e5",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 167,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "Refactored output, similarly to input. Also catching the file size in the optional return, which will be good for future storage capacity enforcement.",
      "parentUuid": "f375ba03_e7c8a57e",
      "range": {
        "startLine": 164,
        "startChar": 0,
        "endLine": 167,
        "endChar": 25
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fac99a2_9d8ace90",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 171,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "like we talked about previously, there are other places that have these same requirements around file name validation.  Please reuse that code instead of creating new code.",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 171,
        "endChar": 46
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fdc09a4b_d213a854",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 171,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "I found only one other place, and it was unusable out of the box, because it was buried within another function. Refactored to separate: https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/52462\n\nAlso, don\u0027t we want to enforce file length limits as well? The other code did not do that.",
      "parentUuid": "5fac99a2_9d8ace90",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 171,
        "endChar": 46
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d19e33f6_d1e105ca",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 217,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "nit, extra parens.",
      "range": {
        "startLine": 217,
        "startChar": 9,
        "endLine": 217,
        "endChar": 10
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a30f805f_7f3b35ea",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 217,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "I actually like the style of using parens inside the !() expression. It makes sure the ! operator applies to the intended expression as a whole. I\u0027ve been bitten in previous situations where it did not. It\u0027s also idiomatic.\n\nIt would be nice if C++ had a syntax \"if not\" or \"unless\" to make it visually neater than using the 3 layers of parens, though, but it\u0027s also an easily recognizable idiom.",
      "parentUuid": "d19e33f6_d1e105ca",
      "range": {
        "startLine": 217,
        "startChar": 9,
        "endLine": 217,
        "endChar": 10
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7b24aee_1e89f0da",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 223,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "Would std::find be of use here?",
      "range": {
        "startLine": 223,
        "startChar": 0,
        "endLine": 223,
        "endChar": 41
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0fc0ef5_730c230a",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 223,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "as we do with other bmcweb code, please explicitly list the type here.",
      "range": {
        "startLine": 223,
        "startChar": 15,
        "endLine": 223,
        "endChar": 19
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b4ab70e_5a49ec16",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 223,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "Rewritten to use find, no need to declare any type.",
      "parentUuid": "f0fc0ef5_730c230a",
      "range": {
        "startLine": 223,
        "startChar": 15,
        "endLine": 223,
        "endChar": 19
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e16cf304_ec2ca477",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 223,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "Thanks for that suggestion, done.",
      "parentUuid": "d7b24aee_1e89f0da",
      "range": {
        "startLine": 223,
        "startChar": 0,
        "endLine": 223,
        "endChar": 41
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "245e0fb9_204ed9e4",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 241,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "this operation throws if Id is not of type string.  Please use get_ptr as we do elsewhere in bmcweb.\n\nAlso, as a general pattern please prefer to return early in these cases, ie\n\nreturn id\n\nbecause it avoids the extra indent for the continuing code.",
      "range": {
        "startLine": 241,
        "startChar": 0,
        "endLine": 241,
        "endChar": 29
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "214bda33_0c2cc9a3",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 241,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "Thanks, good catch for checking that it\u0027s a string.",
      "parentUuid": "245e0fb9_204ed9e4",
      "range": {
        "startLine": 241,
        "startChar": 0,
        "endLine": 241,
        "endChar": 29
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f920379_3da0d113",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 254,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "can we call this something other than \"trim\" considering the naming conflict with string trimming operations?  Maybe something like \"removeUnusedFields\"",
      "range": {
        "startLine": 254,
        "startChar": 5,
        "endLine": 254,
        "endChar": 11
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d8944cf_4cc0b901",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 254,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "Considering you assume this to be a nlohmann object, you probably want to pass by nlohmann::json::object_t\u0026.  Doing that will also validate at a higher scope that it\u0027s an object type.",
      "range": {
        "startLine": 254,
        "startChar": 12,
        "endLine": 254,
        "endChar": 26
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be900a9d_f27ea43b",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 254,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "OK, renamed them.",
      "parentUuid": "2f920379_3da0d113",
      "range": {
        "startLine": 254,
        "startChar": 5,
        "endLine": 254,
        "endChar": 11
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91f46588_00211199",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 254,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "I don\u0027t want to do a type conversion here, or introduce a child type of nlohmann:json that would require a downcast. Good catch about assuming it\u0027s an object, though. I added a check to be sure it\u0027s an object.",
      "parentUuid": "3d8944cf_4cc0b901",
      "range": {
        "startLine": 254,
        "startChar": 12,
        "endLine": 254,
        "endChar": 26
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d58bccee_58f8d979",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 271,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "nit: same as above, lets stick with something other than \"trim\"",
      "range": {
        "startLine": 271,
        "startChar": 5,
        "endLine": 271,
        "endChar": 8
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9fed9c8_361cc533",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 271,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "Renamed it to \"strip\" which has a similar meaning to \"trim\".",
      "parentUuid": "d58bccee_58f8d979",
      "range": {
        "startLine": 271,
        "startChar": 5,
        "endLine": 271,
        "endChar": 8
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfe1967e_33cfd615",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 288,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "considering this can fail, does it need to return an error?",
      "range": {
        "startLine": 288,
        "startChar": 0,
        "endLine": 288,
        "endChar": 5
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3677d431_0a6be55b",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 288,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "The route handlers can\u0027t fail. They return void, by definition. They will always succeed, from the point of view of completing the HTTP transaction. If something goes wrong from the user\u0027s point of view, a HTTP error code will be included within the reply. However, from the function\u0027s point of view, it will always be a successful execution.",
      "parentUuid": "cfe1967e_33cfd615",
      "range": {
        "startLine": 288,
        "startChar": 0,
        "endLine": 288,
        "endChar": 5
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21a660e2_78510c04",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 300,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "nit, extra parens.",
      "range": {
        "startLine": 300,
        "startChar": 9,
        "endLine": 300,
        "endChar": 10
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0430d5bc_63ff4685",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 300,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "Same comment as elsewhere.",
      "parentUuid": "21a660e2_78510c04",
      "range": {
        "startLine": 300,
        "startChar": 9,
        "endLine": 300,
        "endChar": 10
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f7a67c2_bcf77418",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 331,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "I\u0027m not quite understanding how the above works, but it could just be because my coffee hasn\u0027t kicked in yet.  Will revisit on future review.",
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4ba4661_e72702f3",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 331,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "Take a look at the API document. It\u0027s possible to customize both the outer layer of the GET response (without the \"Members\" suffix), and the inner layer (with the \"Members\" suffix). To tell the layers apart, I accept a nested JSON dictionary in the POST command.",
      "parentUuid": "5f7a67c2_bcf77418",
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f1debc0_0c5e1a14",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 333,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "nit, extra parens.  Happens a lot in this file.  I will stop mentioning it in this review, but it would be great if you could fix all of them.",
      "range": {
        "startLine": 333,
        "startChar": 9,
        "endLine": 333,
        "endChar": 10
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "702abe48_937045f6",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 333,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "Hmm, I still like the parens, I mentioned that in another comment.",
      "parentUuid": "4f1debc0_0c5e1a14",
      "range": {
        "startLine": 333,
        "startChar": 9,
        "endLine": 333,
        "endChar": 10
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c9a4476_995f387b",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 337,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "Please take a look at the string in this message, and realize that it\u0027s user facing.  \"CreateInstance\" isn\u0027t something known to the user, so it shouldn\u0027t be returned in an error message.",
      "range": {
        "startLine": 337,
        "startChar": 0,
        "endLine": 337,
        "endChar": 56
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51dc0921_e26c170b",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 337,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "OK, I changed it to \"POST\", because the action is a HTTP POST operation.",
      "parentUuid": "0c9a4476_995f387b",
      "range": {
        "startLine": 337,
        "startChar": 0,
        "endLine": 337,
        "endChar": 56
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae461462_aaecf30b",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 341,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "Please avoid auto for these, it makes it very difficult to track what types are being used.  With that said, in this case, it looks to be a std::string, when it should be using the URL type.  There are a couple places where urls are used as strings.  Please fix all of them.",
      "range": {
        "startLine": 341,
        "startChar": 4,
        "endLine": 341,
        "endChar": 8
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "11261fcd_647ff7ad",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 341,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "Can the URL type be used, even if it\u0027s not a complete URL? Maybe the filesystem path type would be more appropriate, since what I need to track is the portion of the URL that looks like a filesystem path.",
      "parentUuid": "ae461462_aaecf30b",
      "range": {
        "startLine": 341,
        "startChar": 4,
        "endLine": 341,
        "endChar": 8
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74c59929_bc4d8c32",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 346,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "common error #5",
      "range": {
        "startLine": 346,
        "startChar": 8,
        "endLine": 346,
        "endChar": 30
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "391d63fc_9be8e7e9",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 346,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "Yep, fixed all of these.",
      "parentUuid": "74c59929_bc4d8c32",
      "range": {
        "startLine": 346,
        "startChar": 8,
        "endLine": 346,
        "endChar": 30
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cae6cfba_66830f0a",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 350,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "Please take a look at what each of these parameters mean, and correct them to produce the correct error message.  As written, this doesn\u0027t look right.",
      "range": {
        "startLine": 349,
        "startChar": 65,
        "endLine": 350,
        "endChar": 51
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "baf8702c_c5da0386",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 350,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "What should the \"type\" be? I\u0027m guessing it\u0027s \"String\". Changed it accordingly.\n\nIn general, what\u0027s the best way to shoehorn an error message into the vocabulary of the error messages registry? I have to pick the closest match to what I want to say, and in this case, it has too many substitutions and I\u0027m not sure what to put in for all of the substitutions.",
      "parentUuid": "cae6cfba_66830f0a",
      "range": {
        "startLine": 349,
        "startChar": 65,
        "endLine": 350,
        "endChar": 51
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c92a4187_3f83bcee",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 354,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "in this case, please convert your types to use std::filesystem::path.  It is generally safer and handles conversions like these in a cleaner way.  There are a number of places that need changed, I will only mention this one.",
      "range": {
        "startLine": 354,
        "startChar": 4,
        "endLine": 354,
        "endChar": 8
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d771761_c07651c2",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 354,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "I went through and changed many std::string usages, for filesystem things, to use std::filesystem::path instead.",
      "parentUuid": "c92a4187_3f83bcee",
      "range": {
        "startLine": 354,
        "startChar": 4,
        "endLine": 354,
        "endChar": 8
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cee1402_1ae09b15",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 385,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "The redfish specification you\u0027re meeting here (ie message) does not allow for a Location field in the body.",
      "range": {
        "startLine": 385,
        "startChar": 55,
        "endLine": 385,
        "endChar": 64
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55439a9a_2c9fb560",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 385,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "OK, I looked more at the Message schema. It looks like I can safely put it in MessageArgs.",
      "parentUuid": "1cee1402_1ae09b15",
      "range": {
        "startLine": 385,
        "startChar": 55,
        "endLine": 385,
        "endChar": 64
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1968bbe9_045e2917",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 390,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "Why is this declared outside the class?  Please declare inside the class, or in a cpp file.",
      "range": {
        "startLine": 390,
        "startChar": 5,
        "endLine": 390,
        "endChar": 11
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5efb3a15_6b48152a",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 390,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "None of the other files in this directory are cpp files, so I don\u0027t want to rock the boat by introducing a cpp file.\n\nHaving the prototypes together makes them easier to read as a related group, and it also saves an indentation level globally. I don\u0027t think it makes any difference in the resulting code whether the definition is outside the class or not, as the declaration is the same.",
      "parentUuid": "1968bbe9_045e2917",
      "range": {
        "startLine": 390,
        "startChar": 5,
        "endLine": 390,
        "endChar": 11
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "938a746c_66d3c121",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 412,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "like I said above, here would use get_ptr\u003cnlohmann::json::object_t\u003e rather than is_object, to avoid a duplicated object lookup.",
      "range": {
        "startLine": 412,
        "startChar": 18,
        "endLine": 412,
        "endChar": 27
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d4a95bf_be08c89e",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 412,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "Hmm, is it an object lookup? The is_object() function is just a simple check of type, and it\u0027s O(1).",
      "parentUuid": "938a746c_66d3c121",
      "range": {
        "startLine": 412,
        "startChar": 18,
        "endLine": 412,
        "endChar": 27
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "689a63de_c87aa4c4",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 429,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "I mentioned this above about the other logging call, this has the same issue.  CreateEntry is not user facing.",
      "range": {
        "startLine": 429,
        "startChar": 66,
        "endLine": 429,
        "endChar": 77
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01d1fedb_e657c053",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 429,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "Changed it to \"POST\", as above.",
      "parentUuid": "689a63de_c87aa4c4",
      "range": {
        "startLine": 429,
        "startChar": 66,
        "endLine": 429,
        "endChar": 77
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd21478d_512dda44",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 439,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "common error #5",
      "range": {
        "startLine": 439,
        "startChar": 34,
        "endLine": 439,
        "endChar": 38
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4231641e_17d372cf",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 439,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "Yep, fixed all of these.",
      "parentUuid": "cd21478d_512dda44",
      "range": {
        "startLine": 439,
        "startChar": 34,
        "endLine": 439,
        "endChar": 38
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4024048f_e55beae6",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 472,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "CreateInstance and CreateMiddle duplicate a lot of code between them.  Can any of it be deduplicated?",
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf7a8328_a4bdd24e",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 472,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "I think so. I will look through and see what commonality I can pull out.",
      "parentUuid": "4024048f_e55beae6",
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4db6250_4de9c170",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 496,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "common error #5.  Lots of your filesystem calls seem to have ignored this error, I will stop mentioning it, but please check all of them.",
      "range": {
        "startLine": 496,
        "startChar": 0,
        "endLine": 496,
        "endChar": 41
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57b8022e_6563d59e",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 496,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-04T06:43:55Z",
      "side": 1,
      "message": "Good catch. I went through all std::filesystem functions and made sure to use the error-checking version of each.\n\nIs there a way to tell the compiler you don\u0027t want to accidentally use a throwing function, and to make it a compilation error/warning to call anything that could throw?",
      "parentUuid": "b4db6250_4de9c170",
      "range": {
        "startLine": 496,
        "startChar": 0,
        "endLine": 496,
        "endChar": 41
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b166b0e1_309056f5",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 513,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "Should we have more validation than this?  Something like ends_with .json to make sure that we\u0027re looking at json typed files?",
      "range": {
        "startLine": 513,
        "startChar": 0,
        "endLine": 513,
        "endChar": 38
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f71ebdb_72223188",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 513,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "That\u0027s something I want to ask you about. I also mentioned it in chat. Do we want to use the bare identifier for the filename, as the code does now, or do we want to append the \".json\" suffix to all filenames?",
      "parentUuid": "b166b0e1_309056f5",
      "range": {
        "startLine": 513,
        "startChar": 0,
        "endLine": 513,
        "endChar": 38
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b109e07a_3a824a7f",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 610,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "nit, this code would be a lot easier to read if you constructed url on the line prior to setting these.",
      "range": {
        "startLine": 610,
        "startChar": 0,
        "endLine": 610,
        "endChar": 42
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0d6779d_6f15dd4e",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 610,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "Fair enough. Because both have \"+ suffix\" operations applied to them, I had it grouped with \"path\" earlier, but it\u0027s fine either way.",
      "parentUuid": "b109e07a_3a824a7f",
      "range": {
        "startLine": 610,
        "startChar": 0,
        "endLine": 610,
        "endChar": 42
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb0c79cd_5d1acbe2",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 619,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "std::move()",
      "range": {
        "startLine": 619,
        "startChar": 31,
        "endLine": 619,
        "endChar": 38
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1254941a_d2e262f4",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 619,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "eb0c79cd_5d1acbe2",
      "range": {
        "startLine": 619,
        "startChar": 31,
        "endLine": 619,
        "endChar": 38
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3663cfdb_469fcf1e",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 771,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "std::move() please",
      "range": {
        "startLine": 771,
        "startChar": 31,
        "endLine": 771,
        "endChar": 38
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc6fce2a_bee1fbf5",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 771,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "Ack (and line 815 too)",
      "parentUuid": "3663cfdb_469fcf1e",
      "range": {
        "startLine": 771,
        "startChar": 31,
        "endLine": 771,
        "endChar": 38
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f604119d_b0547935",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 792,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "I suspect that Hook should be in the redfish namespace, and shouldn\u0027t have its own external_storer namespace.",
      "range": {
        "startLine": 792,
        "startChar": 0,
        "endLine": 792,
        "endChar": 30
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dbaa5bc8_1d963ee5",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 792,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "It makes sense to have external_storer be its own namespace, as there are other things in it, not just the Hook object. Also, it follows the model elsewhere, of having each major feature nicely isolated into its own namespace. I don\u0027t want to lump everything into the Redfish namespace, as that defeats one of the best purposes for having namespaces.",
      "parentUuid": "f604119d_b0547935",
      "range": {
        "startLine": 792,
        "startChar": 0,
        "endLine": 792,
        "endChar": 30
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c25b2101_471b20ef",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 810,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "This is very.... very hardcoded to one specific node;  Do you have ideas on how to generalize this for the problem of storing arbitrary members within the redfish tree?  Even LogServices shows up at multiple locations, so as written, this can only write to one.  Another thing to be aware of is that the \"system\" keyword is in the process of being removed as a hardcode, and move to more generic things.\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/52075",
      "range": {
        "startLine": 809,
        "startChar": 0,
        "endLine": 810,
        "endChar": 38
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73fc28cf_51aafe5f",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 810,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "That other change is a great example of the idea of what I\u0027m doing here. It can be made more generic later, as bmcweb is enhanced to allow this. I\u0027m still working within the constraints of having BMCWEB_ROUTE() only allowing static strings as route matchers.\n\nFor this particular location, if there are multiple systems in the future instead of just \"system\", a unique ExternalStorer hook object can easily be instantiated for each of those systems. Just change the argument in the constructor accordingly, and have each of the systems contain the hook object, instead of having the hook object be a global singleton. That\u0027s my plan for how to generalize it more in the near future.",
      "parentUuid": "c25b2101_471b20ef",
      "range": {
        "startLine": 809,
        "startChar": 0,
        "endLine": 810,
        "endChar": 38
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "769e7334_f5f29d5c",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 812,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "Why were they duplicated?",
      "range": {
        "startLine": 812,
        "startChar": 29,
        "endLine": 812,
        "endChar": 68
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d929920a_92700909",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 812,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "They were already used as components of longer path strings within the log_services.hpp file. I didn\u0027t want to rock the boat by doing a bigger refactor, to split the strings up, in case the ExternalStorer design was rejected earlier. So, I made my change to LogServices as surgical as possible.",
      "parentUuid": "769e7334_f5f29d5c",
      "range": {
        "startLine": 812,
        "startChar": 29,
        "endLine": 812,
        "endChar": 68
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1af467bf_1e8f8247",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 881,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "As written, this is going to require us to write an external storer route for EVERY node in the redfish tree (I believe there are 160 of them).  This doesn\u0027t scale as a design pattern;  Like we talked about before, there needs to be work to the router system to be able to handle modifiable redfish routes without having to duplicate all this information.",
      "range": {
        "startLine": 814,
        "startChar": 7,
        "endLine": 881,
        "endChar": 1
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "adc5b9d7_7ca8f11e",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 881,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "We talked about this in previous meetings. I thought, instead of a massive global change, the plan was to carefully add ExternalStorer support on an as-needed basis, similar to how we add devices in dbus-sensors: only after somebody actually tests the device and has it working for them locally.",
      "parentUuid": "1af467bf_1e8f8247",
      "range": {
        "startLine": 814,
        "startChar": 7,
        "endLine": 881,
        "endChar": 1
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "469068b5_aa0b22ba",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 884,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "This is not something we should rely on.",
      "range": {
        "startLine": 882,
        "startChar": 0,
        "endLine": 884,
        "endChar": 48
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a71d8d92_5511e6e8",
        "filename": "redfish-core/lib/external_storer.hpp",
        "patchSetId": 18
      },
      "lineNbr": 884,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "Agreed. Hence https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/43502 to add a priority system, as a longer-term solution than relying on initialization order.",
      "parentUuid": "469068b5_aa0b22ba",
      "range": {
        "startLine": 882,
        "startChar": 0,
        "endLine": 884,
        "endChar": 48
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b56e1803_425faeba",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 18
      },
      "lineNbr": 985,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-29T16:39:06Z",
      "side": 1,
      "message": "as a pattern, this is going to require us to populate this call to every single collection, and resource within this code.  This seems like a lot of boilerplate to be injecting in a lot of places, but maybe you have some plans on that?",
      "range": {
        "startLine": 975,
        "startChar": 0,
        "endLine": 985,
        "endChar": 17
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3fadbc8a_3b87b13b",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 18
      },
      "lineNbr": 985,
      "author": {
        "id": 1000520
      },
      "writtenOn": "2022-04-02T10:34:18Z",
      "side": 1,
      "message": "It only looks like a lot of boilerplate because the variable names are unusually long here, and the indentation level doesn\u0027t leave lots of room for long text, without wrapping it to many lines.\n\nIt\u0027s a for loop with a body that\u0027s a one-liner. This is about the minimal hook that I could think of, to insert ExternalStorer objects into the JSON array within the existing GET output.",
      "parentUuid": "b56e1803_425faeba",
      "range": {
        "startLine": 975,
        "startChar": 0,
        "endLine": 985,
        "endChar": 17
      },
      "revId": "7463575598fb8cddf0c64ef1fb8b5183866b710d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}