{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "208c695c_6c8bea73",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 86
      },
      "lineNbr": 1164,
      "author": {
        "id": 1001343
      },
      "writtenOn": "2023-03-23T07:04:55Z",
      "side": 1,
      "message": "inline is efficient only if function definition with less lines of code",
      "revId": "b1e781a80cadbb208ffc20e65f6dfd84a648dc40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "604a3819_339fbc7e",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 86
      },
      "lineNbr": 1164,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-03-24T13:48:24Z",
      "side": 1,
      "message": "I am following patterns used every where.",
      "parentUuid": "208c695c_6c8bea73",
      "revId": "b1e781a80cadbb208ffc20e65f6dfd84a648dc40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "170870ca_787edbb6",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 86
      },
      "lineNbr": 1186,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2023-03-28T04:58:31Z",
      "side": 1,
      "message": "Are these values on heap. if yes then is caller responsible for freeing them ?",
      "range": {
        "startLine": 1185,
        "startChar": 1,
        "endLine": 1186,
        "endChar": 48
      },
      "revId": "b1e781a80cadbb208ffc20e65f6dfd84a648dc40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "020e21b0_7dc0cdb3",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 86
      },
      "lineNbr": 1186,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-03-28T05:21:13Z",
      "side": 1,
      "message": "No, these values are not on the heap. They are pointers to stack-allocated memory. \nOnce the function returns, the memory for attemptsLeft and retryAttempts will be automatically freed.",
      "parentUuid": "170870ca_787edbb6",
      "range": {
        "startLine": 1185,
        "startChar": 1,
        "endLine": 1186,
        "endChar": 48
      },
      "revId": "b1e781a80cadbb208ffc20e65f6dfd84a648dc40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e8c3148_5659ba54",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 86
      },
      "lineNbr": 1186,
      "author": {
        "id": 1001286
      },
      "writtenOn": "2023-03-28T08:00:08Z",
      "side": 1,
      "message": "As per my reading of sdbusplus, I think unpackPropertiesNoThrow makes these two pointer point to content inside propertiesList. Anyway my query resolved.",
      "parentUuid": "020e21b0_7dc0cdb3",
      "range": {
        "startLine": 1185,
        "startChar": 1,
        "endLine": 1186,
        "endChar": 48
      },
      "revId": "b1e781a80cadbb208ffc20e65f6dfd84a648dc40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de965ef9_e0a5fb5b",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 86
      },
      "lineNbr": 1231,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2023-03-22T14:25:16Z",
      "side": 1,
      "message": "This is a change in behavior from the previous code. It\u0027s an optional property so I would agree with this change (and it was probably added based on the code review comments for 1177), but would have been best to put in a separate patch set and focus this one only on the new feature.",
      "revId": "b1e781a80cadbb208ffc20e65f6dfd84a648dc40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "027dc0a1_24e84d61",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 86
      },
      "lineNbr": 1249,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-03-17T17:31:27Z",
      "side": 1,
      "message": "Not sure why these have to be chained? \nWondering if this call could be on line 3141\n\nBefore we only showed RemainingAutomaticRetryAttempts when AutomaticRetryConfig was RetryAttempts but showed AutomaticRetryAttempts when AutomaticRetryConfig was either value... This moves to show both when you have AutomaticRetryConfig, regardless of the value, which I think makes sense. \n\nI guess this was here before.. If you don\u0027t have a AutomaticRetryConfig, don\u0027t show RemainingAutomaticRetryAttempts / AutomaticRetryAttempts I guess that is why these are chained?\n\nI am okay with this as is.",
      "revId": "b1e781a80cadbb208ffc20e65f6dfd84a648dc40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a15f006f_c918696f",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 86
      },
      "lineNbr": 1249,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2023-03-22T14:25:16Z",
      "side": 1,
      "message": "Yeah, I don\u0027t see any issues with always showing it, even when auto reboot is disabled. But, this is another change from the previous behavior which should have been a separate patch set IMO.",
      "parentUuid": "027dc0a1_24e84d61",
      "revId": "b1e781a80cadbb208ffc20e65f6dfd84a648dc40",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}