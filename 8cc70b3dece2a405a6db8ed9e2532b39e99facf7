{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "04b1c542_a9816239",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 7
      },
      "lineNbr": 80,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-02-25T10:37:18Z",
      "side": 1,
      "message": "seperate change?",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 80,
        "endChar": 59
      },
      "revId": "8cc70b3dece2a405a6db8ed9e2532b39e99facf7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "594c72c8_a069b98b",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 7
      },
      "lineNbr": 253,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-02-25T10:37:18Z",
      "side": 1,
      "message": "apparently it should be `typename`?",
      "range": {
        "startLine": 253,
        "startChar": 34,
        "endLine": 253,
        "endChar": 51
      },
      "revId": "8cc70b3dece2a405a6db8ed9e2532b39e99facf7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4079cb47_73588929",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 7
      },
      "lineNbr": 364,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-02-25T10:37:18Z",
      "side": 1,
      "message": "how some this is commented out?",
      "range": {
        "startLine": 364,
        "startChar": 4,
        "endLine": 364,
        "endChar": 25
      },
      "revId": "8cc70b3dece2a405a6db8ed9e2532b39e99facf7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cdf86232_340be4ad",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 7
      },
      "lineNbr": 417,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-02-25T10:37:18Z",
      "side": 1,
      "message": "\u0027/\u0027 instead",
      "range": {
        "startLine": 417,
        "startChar": 44,
        "endLine": 417,
        "endChar": 48
      },
      "revId": "8cc70b3dece2a405a6db8ed9e2532b39e99facf7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23504c0d_9daf9523",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 7
      },
      "lineNbr": 426,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-02-25T10:37:18Z",
      "side": 1,
      "message": "nit: revert the logic instead?\n\n```\nif (key !\u003d item.key() || unpackSpec.complete)\n{\n  continue;\n}\n```\n\n---\n\nCorrect me if I am wrong. Based on my understanding if we have request for `test/a` and `test/b` with\n\n```\n{\n  \"test\": {\n    \"a\": 0,\n    \"b\": 1,\n  }\n}\n```\n\nWhen it is doing `test/a` and went into `test/` it will also compete `test/b`, right? So when we get to `test/b` it will already be completed?",
      "range": {
        "startLine": 425,
        "startChar": 12,
        "endLine": 426,
        "endChar": 13
      },
      "revId": "8cc70b3dece2a405a6db8ed9e2532b39e99facf7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16982ec8_7be8dcf5",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 7
      },
      "lineNbr": 451,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-02-25T10:37:18Z",
      "side": 1,
      "message": "this should always be true, right?\n\nDo we have to check explicitly?\n\nOr just check if `p.key` starts with key + \"/\" instead? Maybe that\u0027s too much for this.",
      "range": {
        "startLine": 451,
        "startChar": 24,
        "endLine": 451,
        "endChar": 43
      },
      "revId": "8cc70b3dece2a405a6db8ed9e2532b39e99facf7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c52e969_e265f88b",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 7
      },
      "lineNbr": 453,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-02-25T10:37:18Z",
      "side": 1,
      "message": "emplace_back?",
      "range": {
        "startLine": 453,
        "startChar": 38,
        "endLine": 453,
        "endChar": 47
      },
      "revId": "8cc70b3dece2a405a6db8ed9e2532b39e99facf7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2775d930_19598550",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 7
      },
      "lineNbr": 515,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-02-25T10:37:18Z",
      "side": 1,
      "message": "do we need to check index out of bound here?",
      "range": {
        "startLine": 514,
        "startChar": 0,
        "endLine": 515,
        "endChar": 29
      },
      "revId": "8cc70b3dece2a405a6db8ed9e2532b39e99facf7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0158d15_ab299c89",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 7
      },
      "lineNbr": 518,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-02-25T10:37:18Z",
      "side": 1,
      "message": "oh yeah, I was working on something like this. Just parse the requested variables and use while parsing the json input and exist once that is done. Seems like this cover everything that I wanted from that idea.",
      "range": {
        "startLine": 507,
        "startChar": 0,
        "endLine": 518,
        "endChar": 1
      },
      "revId": "8cc70b3dece2a405a6db8ed9e2532b39e99facf7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f689fdba_62586945",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 7
      },
      "lineNbr": 572,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-02-25T10:37:18Z",
      "side": 1,
      "message": "is the {} needed?",
      "range": {
        "startLine": 572,
        "startChar": 11,
        "endLine": 572,
        "endChar": 24
      },
      "revId": "8cc70b3dece2a405a6db8ed9e2532b39e99facf7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2464fc55_754e2f81",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 7
      },
      "lineNbr": 580,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-02-25T10:37:18Z",
      "side": 1,
      "message": "Is this ever true?\n\ncompare against std::nullopt instead?",
      "range": {
        "startLine": 580,
        "startChar": 8,
        "endLine": 580,
        "endChar": 30
      },
      "revId": "8cc70b3dece2a405a6db8ed9e2532b39e99facf7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}