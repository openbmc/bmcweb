{
  "comments": [
    {
      "key": {
        "uuid": "fb54cb0f_fefa5bc3",
        "filename": "CMakeLists.txt",
        "patchSetId": 27
      },
      "lineNbr": 391,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "Please add a comment in your commit about how much this adds to the binary size of bmcweb.",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7b3de6e_f6261c41",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 22,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "This is a crazy size to allow by default.",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a94914a8_d293d662",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 37,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "This code doesn\u0027t use global scoped using, and definitely not global scoped \"using namespace\".  Please fix.",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36f4d5aa_6cb8747a",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 44,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "nit: declare as constexpr const to match the above definitions.",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "410887e3_850516e6",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 91,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "You\u0027re checking capacity here.  I suspect you meant to check size().  capacity can be much greater than size.",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7524959_96d42065",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 95,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "\"huge\" is a really bad way to describe an error.  Please reword.",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "329130a2_c63347a3",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 109,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "This goes against one of the primary security design goals of bmcweb, in that it writes a file from a a user controlled parameter.  Please amend your design to not do this, and properly sanitize the user-driven strings.",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "779de65e_57ee827b",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 136,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "This variable, despite being passed into your recursive function, doesn\u0027t look like it\u0027s used for anything.  Please refactor and remove.",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa51f78f_f40a48eb",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 178,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "??????  You\u0027re adding Content-Type, as a header, do the body of the request, although it\u0027s not clear why.  Presumably you should be using the header().contentType() api for this, instead of adding it to the payload (and moving the payload out of the request object).",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be520d97_2aed11bc",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 182,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "I see no checking of errors here.\n\nAlso, please use the iterator based MimeEntity constructor instead of the stream based constructor, as you know the final size, and will make the parsing faster.\n\nLooking at it again, the load() API might be what you really want here.",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9387e4b_209a6d4a",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 187,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "Missing locks if this API is called from multiple callers.",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2650f86b_893436e3",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 203,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "Certainly you don\u0027t actually want std::uintmax_t here.  Pick an integer size that fits your application.  I\u0027m guessing in a lot of these cases you want size_t.",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06b8d20e_a2d46ffd",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 205,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "see above about uintmax_t.  I\u0027m guessing here you want to use size_t, as that contains the limit of the containers you\u0027re using.",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b1f92be_2db9a956",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 218,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "You create a vector here, then you attempt to use it like a linear scanning map on line 235.  Why not just make it an unordered map (or in this case, probably a boost::container::flat_map)",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06a1a346_62df0b91",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 220,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "As part of the mime payload, you know what files were written.  You should build this map as part of creating the files, not by iterating the directory after the fact.",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7574d9fe_fc9bfebe",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 225,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "I suspect this (soon to be map) should simply contain a std::filesystem::path, as that\u0027s what you\u0027re storing here.",
      "range": {
        "startLine": 225,
        "startChar": 26,
        "endLine": 225,
        "endChar": 57
      },
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df7df606_7052613f",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 237,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "patchFile is going to be taken by copy here.  I\u0027m guessing that\u0027s not what you want.",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1a45ea2_fbdaad34",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 251,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "Overflow safety error here.  See above about picking appropriate types.  These types of unsafe conversions happen in a number of places.  I will comment only here.",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d23487d4_f6083413",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 258,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "You are doing this check AFTER you\u0027ve written all the files to tmp.  For safety, this check needs to be done while you\u0027re operating, so the files on disk aren\u0027t allowed to be larger than the allowed.\n\nAlso, won\u0027t this leak, and leave the files in tmp?",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26ef8bad_6ae5affc",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 266,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "Why are you pulling the data into a temp, then copying it into place?  Just write it in the right place?",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a534f4b_2d4fa918",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 274,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "You are using a redfish error code in a non-redfish API.  Please fix.",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5ed1e28_0c849374",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 279,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "You have forgotten about concurrency here.  What if 2 users/connections attempt to save to the same location at once.  This is very likely to overwrite someone elses file.  Please fix.",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03a4fcf8_87148834",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 331,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "Not clear why these were added.  ostream is an RAII type, and will close when it leaves scope?",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "814602bd_d918bc93",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 484,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "Please don\u0027t invent your own router here.  There is already a URL router that handles everything you\u0027ve done here.  Please use it.",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0e4a254_dfbf562f",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 487,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "This should be using some form of RAII response type (like AsyncResp).\n\nThe res.end() pattern has been going away for some time now, as it was too difficult to get right.",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b1725f8_827a0b36",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 490,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "Possible leak.  If this falls through to the end, the response will never complete.",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b457476_f9e714c7",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 27
      },
      "lineNbr": 767,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T06:24:56Z",
      "side": 1,
      "message": "Don\u0027t do it this way.  Register 2 handlers, one for POST and one for GET, and have them call the correct callbacks appropriately.  It saves on having to do the GET/POST/PATCH branch multiple times.  Presumably you would need different permissions on the POST handler than you do the GET handler.",
      "revId": "2de6d04a7324575f22a10e41d2876f0d2c1c2c15",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}