{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d2802599_8b0526ce",
        "filename": "redfish-core/src/subscription.cpp",
        "patchSetId": 11
      },
      "lineNbr": 16,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-11-15T19:46:56Z",
      "side": 1,
      "message": "I\u0027m wondering why `subscription.cpp` needs to be created?\nCan this class body implementation be done as a part of `subscription.hpp`?\n\nBy doing this way, it may loose the benefit of inlining functions.\nFor example, previously `matchSseId()` was inlined when it is referenced from `event_service_manager.hpp`. Now, since it is moved to `subscription.cpp`, it seems not inlined anymore.\nIn fact, I think most of functions of `Subscription` class becomes non-inlined with this.",
      "revId": "923852518394bd942b8947064627169b97de1d78",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "891675a5_9147a742",
        "filename": "redfish-core/src/subscription.cpp",
        "patchSetId": 11
      },
      "lineNbr": 16,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-11-15T20:08:41Z",
      "side": 1,
      "message": "\u003e I\u0027m wondering why `subscription.cpp` needs to be created?\n\u003e Can this class body implementation be done as a part of `subscription.hpp`?\n\u003e \n\u003e By doing this way, it may loose the benefit of inlining functions.\n\u003e For example, previously `matchSseId()` was inlined when it is referenced from `event_service_manager.hpp`. Now, since it is moved to `subscription.cpp`, it seems not inlined anymore.\n\nHow are you verifying the inlining?  Keep in mind, the inline keyword doesn\u0027t actually effect inlining anymore, it\u0027s just an indication that the same definition might show up twice.\n\n\u003e In fact, I think most of functions of `Subscription` class becomes non-inlined with this.\n\nIs there a concrete reason that\u0027s a problem?",
      "parentUuid": "d2802599_8b0526ce",
      "revId": "923852518394bd942b8947064627169b97de1d78",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "425bcd01_8bfe9c66",
        "filename": "redfish-core/src/subscription.cpp",
        "patchSetId": 11
      },
      "lineNbr": 16,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-11-16T00:58:19Z",
      "side": 1,
      "message": "I think - having the inline functions (member functions as part of class) may allow the compiler to do the optimization if possible.\nHowever, moving the body of the function into *.cpp (as a separate compilation unit) effectively disable such optimization even if they may be possible.\n\nIn my experiment, I see the image/usr/libexec/bmcwebd size differences \n\n    - 172370088 (with this)\n    - 170208180 (moving funcs into inline)",
      "parentUuid": "891675a5_9147a742",
      "revId": "923852518394bd942b8947064627169b97de1d78",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}