{
    "$id": "http://redfish.dmtf.org/schemas/v1/Sensor.v1_0_3.json",
    "$ref": "#/definitions/Sensor",
    "$schema": "http://redfish.dmtf.org/schemas/v1/redfish-schema-v1.json",
    "copyright": "Copyright 2014-2019 DMTF. For the full DMTF copyright policy, see http://www.dmtf.org/about/policies/copyright",
    "definitions": {
        "Actions": {
            "additionalProperties": false,
            "description": "The available actions for this Resource.",
            "longDescription": "This type shall contain the available actions for this Resource.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "#Sensor.ResetStatistics": {
                    "$ref": "#/definitions/ResetStatistics"
                },
                "Oem": {
                    "$ref": "#/definitions/OemActions",
                    "description": "The available OEM-specific actions for this Resource.",
                    "longDescription": "This property shall contain the available OEM-specific actions for this Resource."
                }
            },
            "type": "object"
        },
        "ElectricalContext": {
            "enum": [
                "Line1",
                "Line2",
                "Line3",
                "Neutral",
                "LineToLine",
                "Line1ToLine2",
                "Line2ToLine3",
                "Line3ToLine1",
                "LineToNeutral",
                "Line1ToNeutral",
                "Line2ToNeutral",
                "Line3ToNeutral",
                "Line1ToNeutralAndL1L2",
                "Line2ToNeutralAndL1L2",
                "Line2ToNeutralAndL2L3",
                "Line3ToNeutralAndL3L1",
                "Total"
            ],
            "enumDescriptions": {
                "Line1": "The circuits that share the L1 current-carrying conductor.",
                "Line1ToLine2": "The circuit formed by L1 and L2 current-carrying conductors when PhaseWiringType.TwoPhase3Wire, TwoPhase4Wire, ThreePhase4Wire, or ThreePhase5Wire.",
                "Line1ToNeutral": "The circuit formed by L1 and Neutral current-carrying conductors when PhaseWiringType.OnePhase3Wire, TwoPhase4Wire, ThreePhase4Wire, or ThreePhase5Wire.",
                "Line1ToNeutralAndL1L2": "The circuits formed by L1, L2, and Neutral current-carrying conductors when PhaseWiringType.TwoPhase4Wire or ThreePhase5Wire.",
                "Line2": "The circuits that share the L2 current-carrying conductor when PhaseWiringType.ThreePhase4Wire, TwoPhase4Wire, or ThreePhase5Wire.",
                "Line2ToLine3": "The circuit formed by L2 and L3 current-carrying conductors when PhaseWiringType.ThreePhase4Wire or ThreePhase5Wire.",
                "Line2ToNeutral": "The circuit formed by L2 and Neutral current-carrying conductors when PhaseWiringType.TwoPhase4Wire or ThreePhase5Wire.",
                "Line2ToNeutralAndL1L2": "The circuits formed by L1, L2, and Neutral current-carrying conductors when PhaseWiringType.TwoPhase4Wire or ThreePhase5Wire.",
                "Line2ToNeutralAndL2L3": "The circuits formed by L2, L3, and Neutral current-carrying conductors when PhaseWiringType.ThreePhase5Wire.",
                "Line3": "The circuits that share the L3 current-carrying conductor when PhaseWiringType.ThreePhase4Wire or ThreePhase5Wire.",
                "Line3ToLine1": "The circuit formed by L3 and L1 current-carrying conductors when PhaseWiringType.ThreePhase4Wire or ThreePhase5Wire.",
                "Line3ToNeutral": "The circuit formed by L3 and Neutral current-carrying conductors when PhaseWiringType.ThreePhase5Wire.",
                "Line3ToNeutralAndL3L1": "The circuits formed by L3, L1, and Neutral current-carrying conductors when PhaseWiringType.ThreePhase5Wire.",
                "LineToLine": "The circuit formed by two current-carrying conductors when PhaseWiringType.TwoPhase3Wire, TwoPhase4Wire, ThreePhase4Wire, or ThreePhase5Wire.",
                "LineToNeutral": "The circuit formed by a line and Neutral current-carrying conductor when PhaseWiringType.OnePhase3Wire, TwoPhase4Wire, ThreePhase4Wire, or ThreePhase5Wire.",
                "Neutral": "The grounded current-carrying return circuit of current-carrying conductors when PhaseWiringType.OnePhase3Wire, TwoPhase4Wire, or ThreePhase5Wire.",
                "Total": "The circuits formed by all current-carrying conductors for any PhaseWiringType."
            },
            "enumLongDescriptions": {
                "Line1": "This property shall contain the circuits that share the L1 current-carrying conductor when PhaseWiringType.TwoPhase3Wire, TwoPhase4Wire, ThreePhase4Wire, or ThreePhase5Wire.",
                "Line1ToLine2": "This property shall contain the circuit formed by L1 and L2 current-carrying conductors when PhaseWiringType.TwoPhase3Wire, TwoPhase4Wire, ThreePhase4Wire, or ThreePhase5Wire.",
                "Line1ToNeutral": "This property shall contain the circuit formed by L1 and Neutral current-carrying conductors when PhaseWiringType.OnePhase3Wire, TwoPhase4Wire, ThreePhase4Wire, or ThreePhase5Wire.",
                "Line1ToNeutralAndL1L2": "This property shall contain the circuits formed by L1, L2, and Neutral current-carrying conductors when PhaseWiringType.TwoPhase4Wire or ThreePhase5Wire.",
                "Line2": "This property shall contain the circuits that share the L2 current-carrying conductor when PhaseWiringType.ThreePhase4Wire, TwoPhase4Wire, or ThreePhase5Wire.",
                "Line2ToLine3": "This property shall contain the circuit formed by L2 and L3 current-carrying conductors when PhaseWiringType.ThreePhase4Wire or ThreePhase5Wire.",
                "Line2ToNeutral": "This property shall contain the circuit formed by L2 and Neutral current-carrying conductors when PhaseWiringType.TwoPhase4Wire or ThreePhase5Wire.",
                "Line2ToNeutralAndL1L2": "This property shall contain the circuits formed by L1, L2, and Neutral current-carrying conductors when PhaseWiringType.TwoPhase4Wire or ThreePhase5Wire.",
                "Line2ToNeutralAndL2L3": "This property shall contain the circuits formed by L2, L3, and Neutral current-carrying conductors when PhaseWiringType.ThreePhase5Wire.",
                "Line3": "This property shall contain the circuits that share the L3 current-carrying conductor when PhaseWiringType.ThreePhase4Wire or ThreePhase5Wire.",
                "Line3ToLine1": "This property shall contain the circuit formed by L3 and L1 current-carrying conductors when PhaseWiringType.ThreePhase4Wire or ThreePhase5Wire.",
                "Line3ToNeutral": "This property shall contain the circuit formed by L3 and Neutral current-carrying conductors when PhaseWiringType.ThreePhase5Wire.",
                "Line3ToNeutralAndL3L1": "This property shall contain the circuits formed by L3, L1, and Neutral current-carrying conductors when PhaseWiringType.ThreePhase5Wire.",
                "LineToLine": "This property shall contain the circuit formed by two current-carrying conductors when PhaseWiringType.TwoPhase3Wire, TwoPhase4Wire, ThreePhase4Wire, or ThreePhase5Wire.",
                "LineToNeutral": "This property shall contain the circuit formed by a line and Neutral current-carrying conductor when PhaseWiringType.OnePhase3Wire, TwoPhase4Wire, ThreePhase4Wire, or ThreePhase5Wire.",
                "Neutral": "This property shall contain the grounded current-carrying return circuit of current-carrying conductors when PhaseWiringType.OnePhase3Wire, TwoPhase4Wire, or ThreePhase5Wire.",
                "Total": "This property shall contain the circuits formed by all current-carrying conductors for any PhaseWiringType."
            },
            "type": "string"
        },
        "OemActions": {
            "additionalProperties": true,
            "description": "The available OEM-specific actions for this Resource.",
            "longDescription": "This type shall contain the available OEM-specific actions for this Resource.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {},
            "type": "object"
        },
        "ReadingType": {
            "enum": [
                "Temperature",
                "Humidity",
                "Power",
                "EnergykWh",
                "EnergyJoules",
                "Voltage",
                "Current",
                "Frequency",
                "Pressure",
                "LiquidLevel",
                "Rotational",
                "AirFlow",
                "LiquidFlow",
                "Barometric",
                "Altitude"
            ],
            "enumDescriptions": {
                "AirFlow": "Airflow.",
                "Altitude": "Altitude.",
                "Barometric": "Barometric pressure.",
                "Current": "Current.",
                "EnergyJoules": "Energy (Joules).",
                "EnergykWh": "Energy (kWh).",
                "Frequency": "Frequency.",
                "Humidity": "Relative Humidity.",
                "LiquidFlow": "Liquid flow.",
                "LiquidLevel": "Liquid level.",
                "Power": "Power.",
                "Pressure": "Pressure.",
                "Rotational": "Rotational.",
                "Temperature": "Temperature.",
                "Voltage": "Voltage (AC or DC)."
            },
            "enumLongDescriptions": {
                "AirFlow": "This value shall indicate a measurement of a volume of gas per unit of time that flows through a particular junction.  The ReadingUnits shall be `cft_i/min`.",
                "Altitude": "This value shall indicate a measurement of altitude, in meter units, and the ReadingUnits value shall be `m`.",
                "Barometric": "This value shall indicate a measurement of barometric pressure, in millimeters, of a mercury column, and the ReadingUnits value shall be `mm[Hg]`.",
                "Current": "This value shall indicate a measurement of the root mean square (RMS) of instantaneous current calculated over an integer number of line cycles for a circuit.  Current is expressed in Amperes units and the ReadingUnits value shall be `A`.",
                "EnergyJoules": "This value shall indicate the energy, integral of real power over time, of the monitored item since the sensor statistics were last reset.  The value of the Reading property shall be in Joule units and the ReadingUnits value shall be `J`.  This value is used for device-level energy consumption measurements, while EnergykWh is used for large-scale consumption measurements.",
                "EnergykWh": "This value shall indicate the energy, integral of real power over time, of the monitored item since the sensor statistics were last reset.  The value of the Reading property shall be in kilowatt-hour units and the ReadingUnits value shall be `kW.h`.  This value is used for large-scale energy consumption measurements, while EnergyJoules is used for device-level consumption measurements.",
                "Frequency": "This value shall indicate a frequency measurement, in Hertz units, and the ReadingUnits value shall be `Hz`.",
                "Humidity": "This value shall indicate a relative humidity measurement, in percent units, and the ReadingUnits value shall be '%'.",
                "LiquidFlow": "This value shall indicate a measurement of a volume of liquid per unit of time that flows through a particular junction.  The ReadingUnits shall be `L/s`.",
                "LiquidLevel": "This value shall indicate a measurement of fluid height relative to a specified vertical datum and the ReadingUnits value shall be `cm`.",
                "Power": "This value shall indicate the arithmetic mean of product terms of instantaneous voltage and current values measured over integer number of line cycles for a circuit, in Watt units, and the ReadingUnits value shall be 'W'.",
                "Pressure": "This value shall indicate a measurement of force applied perpendicular to the surface of an object per unit area over which that force is distributed.  The ReadingUnits shall be `Pa`.",
                "Rotational": "This value shall indicate a measurement of rotational frequency, in revolutions per minute unit, and the ReadingUnits value shall be `RPM`.",
                "Temperature": "This value shall indicate a temperature measurement, in degrees Celsius units, and the ReadingUnits value shall be 'Cel'.",
                "Voltage": "This value shall indicate a measurement of the root mean square (RMS) of instantaneous voltage calculated over an integer number of line cycles for a circuit.  Voltage is expressed in Volts units and the ReadingUnits value shall be `V`."
            },
            "type": "string"
        },
        "ResetStatistics": {
            "additionalProperties": false,
            "description": "Resets statistics related to this sensor.",
            "longDescription": "This action shall reset any time intervals or counted values for this sensor.",
            "parameters": {},
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "target": {
                    "description": "Link to invoke action",
                    "format": "uri-reference",
                    "type": "string"
                },
                "title": {
                    "description": "Friendly action name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Sensor": {
            "additionalProperties": false,
            "description": "The Sensor schema describes a sensor and its properties.",
            "longDescription": "This Resource represents a Sensor for a Redfish implementation.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "@odata.context": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata-v4.json#/definitions/context"
                },
                "@odata.etag": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata-v4.json#/definitions/etag"
                },
                "@odata.id": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata-v4.json#/definitions/id"
                },
                "@odata.type": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata-v4.json#/definitions/type"
                },
                "Accuracy": {
                    "description": "The estimated percent error of measured versus actual values.",
                    "longDescription": "This property shall contain the percent error +/- of the measured versus actual values of the Reading property.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ],
                    "units": "%"
                },
                "Actions": {
                    "$ref": "#/definitions/Actions",
                    "description": "The available actions for this Resource.",
                    "longDescription": "This property shall contain the available actions for this Resource."
                },
                "AdjustedMaxAllowableOperatingValue": {
                    "description": "The adjusted maximum allowable operating value for this equipment based on the environmental conditions.",
                    "longDescription": "This property shall contain the adjusted maximum allowable operating value for the equipment that this sensor monitors, as specified by a standards body, manufacturer, or both.  The value is adjusted based on environmental conditions.  For example, liquid inlet temperature may be adjusted based on the available liquid pressure.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "AdjustedMinAllowableOperatingValue": {
                    "description": "The adjusted minimum allowable operating value for this equipment based on the environmental conditions.",
                    "longDescription": "This property shall contain the adjusted minimum allowable operating value for the equipment that this sensor monitors, as specified by a standards body, manufacturer, or both.  This value is adjusted based on environmental conditions.  For example, liquid inlet temperature may be adjusted based on the available liquid pressure.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "ApparentVA": {
                    "description": "The product of voltage and current for an AC circuit, in Volt-Ampere units.",
                    "excerpt": "SensorPower",
                    "longDescription": "This property shall contain the product of VoltageRMS multiplied by CurrentRMS for a circuit.  This property may appear in sensors of the Power ReadingType, and shall not appear in sensors of other ReadingType values.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ],
                    "units": "V.A"
                },
                "Description": {
                    "anyOf": [
                        {
                            "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Description"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "readonly": true
                },
                "ElectricalContext": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/ElectricalContext"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The combination of current-carrying conductors.",
                    "longDescription": "This property shall represent the combination of current-carrying conductors that distribute power.",
                    "readonly": true
                },
                "Id": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Id",
                    "readonly": true
                },
                "LoadPercent": {
                    "description": "The power load utilization for this sensor.",
                    "longDescription": "This property shall indicate the power load utilization percent for this sensor.  This property may appear in sensors of the Power ReadingType, and shall not appear in sensors of other ReadingType values.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ],
                    "units": "%"
                },
                "Location": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Location",
                    "description": "The location information for this sensor.",
                    "longDescription": "This property shall indicate the location information for this sensor."
                },
                "MaxAllowableOperatingValue": {
                    "description": "The maximum allowable operating value for this equipment.",
                    "longDescription": "This property shall contain the maximum allowable operating value for the equipment that this sensor monitors, as specified by a standards body, manufacturer, or both.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "MinAllowableOperatingValue": {
                    "description": "The minimum allowable operating value for this equipment.",
                    "longDescription": "This property shall contain the minimum allowable operating value for the equipment that this sensor monitors, as specified by a standards body, manufacturer, or both.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "Name": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Name",
                    "readonly": true
                },
                "Oem": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Oem",
                    "description": "The OEM extension property.",
                    "longDescription": "This property shall contain the OEM extensions.  All values for properties that this object contains shall conform to the Redfish Specification-described requirements."
                },
                "PeakReading": {
                    "description": "The peak sensor value.",
                    "longDescription": "This property shall contain the peak sensor value since the last ResetStatistics action was performed or the service last reset the time-based property values.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "PeakReadingTime": {
                    "description": "The time when the peak sensor value occurred.",
                    "format": "date-time",
                    "longDescription": "This property shall contain the date and time when the peak sensor value was observed.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "PhysicalContext": {
                    "anyOf": [
                        {
                            "$ref": "http://redfish.dmtf.org/schemas/v1/PhysicalContext.json#/definitions/PhysicalContext"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The area or device to which this sensor measurement applies.",
                    "excerpt": "SensorArray",
                    "longDescription": "This property shall contain a description of the affected component or region within the equipment to which this sensor measurement applies.",
                    "readonly": true
                },
                "PhysicalSubContext": {
                    "anyOf": [
                        {
                            "$ref": "http://redfish.dmtf.org/schemas/v1/PhysicalContext.json#/definitions/PhysicalSubContext"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The usage or location within a device to which this sensor measurement applies.",
                    "excerpt": "SensorArray",
                    "longDescription": "This property shall contain a description of the usage or sub-region within the equipment to which this sensor measurement applies.  This property generally differentiates multiple sensors within the same PhysicalContext instance.",
                    "readonly": true
                },
                "PowerFactor": {
                    "description": "The power factor for this sensor.",
                    "excerpt": "SensorPower",
                    "longDescription": "This property shall identify the quotient of PowerRealWatts and PowerApparentVA for a circuit.  PowerFactor is expressed in unit-less 1/100ths.  This property may appear in sensors of the Power ReadingType, and shall not appear in sensors of other ReadingType values.",
                    "maximum": 1,
                    "minimum": 0,
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "Precision": {
                    "description": "The number of significant digits in the reading.",
                    "longDescription": "This property shall contain the number of significant digits in the Reading property.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "ReactiveVAR": {
                    "description": "The square root of the difference term of squared ApparentVA and squared Power (Reading) for a circuit, in var units.",
                    "excerpt": "SensorPower",
                    "longDescription": "This property shall contain the arithmetic mean of product terms of instantaneous voltage and quadrature current measurements calculated over an integer number of line cycles for a circuit.  This property may appear in sensors of the Power ReadingType, and shall not appear in sensors of other ReadingType values.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ],
                    "units": "V.A"
                },
                "Reading": {
                    "description": "The sensor value.",
                    "excerpt": "Sensor",
                    "longDescription": "This property shall contain the sensor value.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "ReadingRangeMax": {
                    "description": "The maximum possible value for this sensor.",
                    "longDescription": "This property shall indicate the maximum possible value of the Reading property for this sensor.  This value is the range of valid readings for this sensor.  Values outside this range are discarded as reading errors.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "ReadingRangeMin": {
                    "description": "The minimum possible value for this sensor.",
                    "longDescription": "This property shall indicate the minimum possible value of the Reading property for this sensor.  This value is the range of valid readings for this sensor.  Values outside this range are discarded as reading errors.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "ReadingType": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/ReadingType"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The type of sensor.",
                    "longDescription": "This property shall contain the type of the sensor.",
                    "readonly": true
                },
                "ReadingUnits": {
                    "description": "The units of the reading and thresholds.",
                    "excerpt": "Sensor",
                    "longDescription": "This property shall contain the units of the sensor's reading and thresholds.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "SensingFrequency": {
                    "description": "The time interval between readings of the physical sensor.",
                    "longDescription": "This property shall contain the time interval between readings of the physical sensor.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "SensorResetTime": {
                    "description": "The date and time when the time-based properties were last reset.",
                    "format": "date-time",
                    "longDescription": "This property shall contain the date and time when the ResetStatistics action was last performed or the service last reset the time-based property values.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "Status": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Status",
                    "description": "The status and health of the Resource and its subordinate or dependent Resources.",
                    "excerpt": "Sensor",
                    "longDescription": "This property shall contain the status and health of the Resource and its children."
                },
                "Thresholds": {
                    "$ref": "#/definitions/Thresholds",
                    "description": "The set of thresholds defined for this sensor.",
                    "longDescription": "This property shall contain the set of thresholds that derive a sensor's health and operational range."
                },
                "VoltageType": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/VoltageType"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The voltage type for this sensor.",
                    "longDescription": "This property shall represent the type of input voltage the sensor monitors.",
                    "readonly": true
                }
            },
            "required": [
                "@odata.id",
                "@odata.type",
                "Id",
                "Name"
            ],
            "type": "object"
        },
        "SensorArrayExcerpt": {
            "additionalProperties": false,
            "description": "The Sensor schema describes a sensor and its properties.",
            "excerpt": "SensorArray",
            "longDescription": "This Resource represents a Sensor for a Redfish implementation.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "DataSourceUri": {
                    "description": "The link to the Resource that provides the data for this sensor.",
                    "excerptCopyOnly": true,
                    "format": "uri-reference",
                    "longDescription": "This property shall contain a URI to the Resource that provides the source of the Excerpt contained within this copy.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "PhysicalContext": {
                    "anyOf": [
                        {
                            "$ref": "http://redfish.dmtf.org/schemas/v1/PhysicalContext.json#/definitions/PhysicalContext"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The area or device to which this sensor measurement applies.",
                    "excerpt": "SensorArray",
                    "longDescription": "This property shall contain a description of the affected component or region within the equipment to which this sensor measurement applies.",
                    "readonly": true
                },
                "PhysicalSubContext": {
                    "anyOf": [
                        {
                            "$ref": "http://redfish.dmtf.org/schemas/v1/PhysicalContext.json#/definitions/PhysicalSubContext"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The usage or location within a device to which this sensor measurement applies.",
                    "excerpt": "SensorArray",
                    "longDescription": "This property shall contain a description of the usage or sub-region within the equipment to which this sensor measurement applies.  This property generally differentiates multiple sensors within the same PhysicalContext instance.",
                    "readonly": true
                },
                "Reading": {
                    "description": "The sensor value.",
                    "excerpt": "Sensor",
                    "longDescription": "This property shall contain the sensor value.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "ReadingUnits": {
                    "description": "The units of the reading and thresholds.",
                    "excerpt": "Sensor",
                    "longDescription": "This property shall contain the units of the sensor's reading and thresholds.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "Status": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Status",
                    "description": "The status and health of the Resource and its subordinate or dependent Resources.",
                    "excerpt": "Sensor",
                    "longDescription": "This property shall contain the status and health of the Resource and its children."
                }
            },
            "type": "object"
        },
        "SensorExcerpt": {
            "additionalProperties": false,
            "description": "The Sensor schema describes a sensor and its properties.",
            "excerpt": "Sensor",
            "longDescription": "This Resource represents a Sensor for a Redfish implementation.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "DataSourceUri": {
                    "description": "The link to the Resource that provides the data for this sensor.",
                    "excerptCopyOnly": true,
                    "format": "uri-reference",
                    "longDescription": "This property shall contain a URI to the Resource that provides the source of the Excerpt contained within this copy.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "Reading": {
                    "description": "The sensor value.",
                    "excerpt": "Sensor",
                    "longDescription": "This property shall contain the sensor value.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "ReadingUnits": {
                    "description": "The units of the reading and thresholds.",
                    "excerpt": "Sensor",
                    "longDescription": "This property shall contain the units of the sensor's reading and thresholds.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "Status": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Status",
                    "description": "The status and health of the Resource and its subordinate or dependent Resources.",
                    "excerpt": "Sensor",
                    "longDescription": "This property shall contain the status and health of the Resource and its children."
                }
            },
            "type": "object"
        },
        "SensorPowerExcerpt": {
            "additionalProperties": false,
            "description": "The Sensor schema describes a sensor and its properties.",
            "excerpt": "SensorPower",
            "longDescription": "This Resource represents a Sensor for a Redfish implementation.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "ApparentVA": {
                    "description": "The product of voltage and current for an AC circuit, in Volt-Ampere units.",
                    "excerpt": "SensorPower",
                    "longDescription": "This property shall contain the product of VoltageRMS multiplied by CurrentRMS for a circuit.  This property may appear in sensors of the Power ReadingType, and shall not appear in sensors of other ReadingType values.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ],
                    "units": "V.A"
                },
                "DataSourceUri": {
                    "description": "The link to the Resource that provides the data for this sensor.",
                    "excerptCopyOnly": true,
                    "format": "uri-reference",
                    "longDescription": "This property shall contain a URI to the Resource that provides the source of the Excerpt contained within this copy.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "PowerFactor": {
                    "description": "The power factor for this sensor.",
                    "excerpt": "SensorPower",
                    "longDescription": "This property shall identify the quotient of PowerRealWatts and PowerApparentVA for a circuit.  PowerFactor is expressed in unit-less 1/100ths.  This property may appear in sensors of the Power ReadingType, and shall not appear in sensors of other ReadingType values.",
                    "maximum": 1,
                    "minimum": 0,
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "ReactiveVAR": {
                    "description": "The square root of the difference term of squared ApparentVA and squared Power (Reading) for a circuit, in var units.",
                    "excerpt": "SensorPower",
                    "longDescription": "This property shall contain the arithmetic mean of product terms of instantaneous voltage and quadrature current measurements calculated over an integer number of line cycles for a circuit.  This property may appear in sensors of the Power ReadingType, and shall not appear in sensors of other ReadingType values.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ],
                    "units": "V.A"
                },
                "Reading": {
                    "description": "The sensor value.",
                    "excerpt": "Sensor",
                    "longDescription": "This property shall contain the sensor value.",
                    "readonly": true,
                    "type": [
                        "number",
                        "null"
                    ]
                },
                "ReadingUnits": {
                    "description": "The units of the reading and thresholds.",
                    "excerpt": "Sensor",
                    "longDescription": "This property shall contain the units of the sensor's reading and thresholds.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "Status": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Status",
                    "description": "The status and health of the Resource and its subordinate or dependent Resources.",
                    "excerpt": "Sensor",
                    "longDescription": "This property shall contain the status and health of the Resource and its children."
                }
            },
            "type": "object"
        },
        "Threshold": {
            "additionalProperties": false,
            "description": "The threshold definition for a sensor.",
            "longDescription": "This type shall contain the properties for an individual threshold for this sensor.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "Activation": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/ThresholdActivation"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The direction of crossing that activates this threshold.",
                    "longDescription": "This property shall indicate the direction of crossing of the reading for this sensor that activates the threshold.",
                    "readonly": false
                },
                "DwellTime": {
                    "description": "The duration the sensor value must violate the threshold before the threshold is activated.",
                    "longDescription": "This property shall indicate the duration the sensor value must violate the threshold before the threshold is activated.",
                    "pattern": "-?P(\\d+D)?(T(\\d+H)?(\\d+M)?(\\d+(.\\d+)?S)?)?",
                    "readonly": false,
                    "type": [
                        "string",
                        "null"
                    ]
                },
                "Reading": {
                    "description": "The threshold value.",
                    "longDescription": "This property shall indicate the reading for this sensor that activates the threshold.  The value of the property shall use the same units as the Reading property.",
                    "readonly": false,
                    "type": [
                        "number",
                        "null"
                    ]
                }
            },
            "type": "object"
        },
        "ThresholdActivation": {
            "enum": [
                "Increasing",
                "Decreasing",
                "Either"
            ],
            "enumDescriptions": {
                "Decreasing": "Value decreases below the threshold.",
                "Either": "Value crosses the threshold in either direction.",
                "Increasing": "Value increases above the threshold."
            },
            "enumLongDescriptions": {
                "Decreasing": "This threshold is activated when the reading changes from a value higher than the threshold to a value lower than the threshold.",
                "Either": "This threshold is activated when either the increasing or decreasing conditions are met.",
                "Increasing": "This threshold is activated when the reading changes from a value lower than the threshold to a value higher than the threshold."
            },
            "type": "string"
        },
        "Thresholds": {
            "additionalProperties": false,
            "description": "The set of thresholds defined for a sensor.",
            "longDescription": "This object shall contain the set of thresholds that derive a sensor's health and operational range.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "LowerCaution": {
                    "$ref": "#/definitions/Threshold",
                    "description": "The value at which the reading is below normal range.",
                    "longDescription": "This property shall contain the value at which the Reading property is below normal range.  The value of the property shall use the same units as the Reading property."
                },
                "LowerCritical": {
                    "$ref": "#/definitions/Threshold",
                    "description": "The value at which the reading is below normal range but not yet fatal.",
                    "longDescription": "This property shall contain the value at which the Reading property is below the normal range but is not yet fatal.  The value of the property shall use the same units as the Reading property."
                },
                "LowerFatal": {
                    "$ref": "#/definitions/Threshold",
                    "description": "The value at which the reading is below normal range and fatal.",
                    "longDescription": "This property shall contain the value at which the Reading property is below the normal range and is fatal.  The value of the property shall use the same units as the Reading property."
                },
                "UpperCaution": {
                    "$ref": "#/definitions/Threshold",
                    "description": "The value at which the reading is above normal range.",
                    "longDescription": "This property shall contain the value at which the Reading property is above the normal range.  The value of the property shall use the same units as the Reading property."
                },
                "UpperCritical": {
                    "$ref": "#/definitions/Threshold",
                    "description": "The value at which the reading is above normal range but not yet fatal.",
                    "longDescription": "This property shall contain the value at which the Reading property is above the normal range but is not yet fatal.  The value of the property shall use the same units as the Reading property."
                },
                "UpperFatal": {
                    "$ref": "#/definitions/Threshold",
                    "description": "The value at which the reading is above normal range and fatal.",
                    "longDescription": "This property shall contain the value at which the Reading property is above the normal range and is fatal.  The value of the property shall use the same units as the Reading property."
                }
            },
            "type": "object"
        },
        "VoltageType": {
            "enum": [
                "AC",
                "DC"
            ],
            "enumDescriptions": {
                "AC": "Alternating current.",
                "DC": "Direct durrent."
            },
            "type": "string"
        }
    },
    "owningEntity": "DMTF",
    "release": "2018.3",
    "title": "#Sensor.v1_0_3.Sensor"
}