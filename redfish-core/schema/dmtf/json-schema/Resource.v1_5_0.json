{
    "$schema": "http://redfish.dmtf.org/schemas/v1/redfish-schema.v1_2_0.json",
    "title": "#Resource.v1_5_0",
    "definitions": {
        "ReferenceableMember": {
            "type": "object",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ],
                    "description": "This property shall specify a valid odata or Redfish property."
                }
            },
            "additionalProperties": false,
            "properties": {
                "@odata.context": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata.4.0.0.json#/definitions/context"
                },
                "@odata.id": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata.4.0.0.json#/definitions/id"
                },
                "@odata.type": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata.4.0.0.json#/definitions/type"
                },
                "Oem": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Oem",
                    "description": "This is the manufacturer/provider specific extension moniker used to divide the Oem object into sections.",
                    "longDescription": "The value of this string shall be of the format for the reserved word *Oem*."
                },
                "MemberId": {
                    "type": "string",
                    "readonly": true,
                    "description": "This is the identifier for the member within the collection.",
                    "longDescription": "The value of this string shall uniquely identify the member within the collection."
                }
            },
            "description": "This is the base type for addressable members of an array.",
            "longDescription": "Array members can be referenced using the value returned in the @odata.id property which may or may not be a dereferenceable URL. The @odata.id of this entity shall be the location of this element within an Item."
        },
        "Resource": {
            "type": "object",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ],
                    "description": "This property shall specify a valid odata or Redfish property."
                }
            },
            "additionalProperties": false,
            "properties": {
                "@odata.context": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata.4.0.0.json#/definitions/context"
                },
                "@odata.id": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata.4.0.0.json#/definitions/id"
                },
                "@odata.type": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata.4.0.0.json#/definitions/type"
                },
                "Oem": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Oem",
                    "description": "This is the manufacturer/provider specific extension moniker used to divide the Oem object into sections.",
                    "longDescription": "The value of this string shall be of the format for the reserved word *Oem*."
                },
                "Id": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Id",
                    "readonly": true
                },
                "Description": {
                    "anyOf": [
                        {"$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Description"},
                        {"type": "null"}
                    ],
                    "readonly": true
                },
                "Name": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Name",
                    "readonly": true
                }
            },
            "required": [
                "Id",
                "Name"
            ],
            "description": "This is the base type for resources and referenceable members."
        },
        "ResourceCollection": {
            "type": "object",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ],
                    "description": "This property shall specify a valid odata or Redfish property."
                }
            },
            "additionalProperties": false,
            "properties": {
                "@odata.context": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata.4.0.0.json#/definitions/context"
                },
                "@odata.id": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata.4.0.0.json#/definitions/id"
                },
                "@odata.type": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata.4.0.0.json#/definitions/type"
                },
                "Description": {
                    "anyOf": [
                        {"$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Description"},
                        {"type": "null"}
                    ],
                    "readonly": true
                },
                "Name": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Name",
                    "readonly": true
                },
                "Oem": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Oem",
                    "description": "This is the manufacturer/provider specific extension moniker used to divide the Oem object into sections.",
                    "longDescription": "The value of this string shall be of the format for the reserved word *Oem*."
                }
            }
        },
        "DurableNameFormat": {
            "type": "string",
            "enum": [
                "NAA",
                "iQN",
                "FC_WWN",
                "UUID",
                "EUI"
            ],
            "enumDescriptions": {
                "NAA": "Name Address Authority Format.",
                "iQN": "iSCSI Qualified Name.",
                "FC_WWN": "Fibre Channel World Wide Name.",
                "UUID": "Universally Unique Identifier.",
                "EUI": "IEEE-defined 64-bit Extended Unique Identifier."
            },
            "enumLongDescriptions": {
                "NAA": "This durable name shall be a hexadecimal representation of the Name Address Authority structure as defined in the T11 Fibre Channel - Framing and Signaling - 3 (FC-FS-3) specification.",
                "iQN": "This durable name shall be in the iSCSI Qualified Name format as defined in RFC 3720 and RFC 3721.",
                "FC_WWN": "This durable name shall be a hexadecimal representation of the World Wide Name format as defined in the T11 Fibre Channel Physical and Signaling Interface Specification.",
                "UUID": "This durable name shall be the hexadecimal representation of the Universal Unique Identifier as defined in the Internation Telecom Union's OSI networking and system aspects - Naming, Addressing and Registration Specification.",
                "EUI": "This durable name shall be the hexadecimal representation of the IEEE-defined 64-bit Extended Unique Identifier as defined in the IEEE's Guidelines for 64-bit Global Identifier (EUI-64) Specification."
            }
        },
        "Identifier": {
            "type": "object",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ],
                    "description": "This property shall specify a valid odata or Redfish property."
                }
            },
            "additionalProperties": false,
            "properties": {
                "DurableName": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": true,
                    "description": "This indicates the world wide, persistent name of the resource.",
                    "longDescription": "This property shall contain the world wide unique identifier for the resource. The string shall be in the format described by the value of the Identifier.DurableNameFormat property."
                },
                "DurableNameFormat": {
                    "anyOf": [
                        {"$ref": "#/definitions/DurableNameFormat"},
                        {"type": "null"}
                    ],
                    "readonly": true,
                    "description": "This represents the format of the DurableName property.",
                    "longDescription": "This property shall represent the format of the DurableName property."
                }
            },
            "readonly": true,
            "description": "This type describes any additional identifiers for a resource.",
            "longDescription": "This type shall contain any additional identifiers of a resource."
        },
        "IndicatorLED": {
            "type": "string",
            "enum": [
                "Lit",
                "Blinking",
                "Off"
            ],
            "enumDescriptions": {
                "Lit": "The Indicator LED is lit.",
                "Blinking": "The Indicator LED is blinking.",
                "Off": "The Indicator LED is off."
            },
            "enumLongDescriptions": {
                "Lit": "This value shall represent the Indicator LED is in a solid on state.  If this value is not supported by the service, the service shall reject PATCH or PUT requests containing this value by returning HTTP 400 (Bad Request).",
                "Blinking": "This value shall represent the Indicator LED is in a blinking state where the LED is being turned on and off in repetition.  If this value is not supported by the service, the service shall reject PATCH or PUT requests containing this value by returning HTTP 400 (Bad Request).",
                "Off": "This value shall represent the Indicator LED is in a solid off state.  If this value is not supported by the service, the service shall reject PATCH or PUT requests containing this value by returning HTTP 400 (Bad Request)."
            }
        },
        "PowerState": {
            "type": "string",
            "enum": [
                "On",
                "Off",
                "PoweringOn",
                "PoweringOff"
            ],
            "enumDescriptions": {
                "On": "The state is powered On.",
                "Off": "The state is powered Off.",
                "PoweringOn": "A temporary state between Off and On.",
                "PoweringOff": "A temporary state between On and Off."
            }
        },
        "Placement": {
            "type": "object",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ],
                    "description": "This property shall specify a valid odata or Redfish property."
                }
            },
            "additionalProperties": true,
            "properties": {
                "Row": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Name of row.",
                    "longDescription": "The value shall be the name of the row."
                },
                "Rack": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Name of a rack location within a row.",
                    "longDescription": "The value shall be the name of the rack within a row."
                },
                "RackOffsetUnits": {
                    "anyOf": [
                        {"$ref": "#/definitions/RackUnits"},
                        {"type": "null"}
                    ],
                    "readonly": false,
                    "description": "The type of Rack Units in use.",
                    "longDescription": "The value shall be a RackUnit enumeration literal indicating the type of rack units in use."
                },
                "RackOffset": {
                    "type": [
                        "number",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Vertical location of the item in terms of RackOffsetUnits.",
                    "longDescription": "Vertical location of the item in the rack. Rack offset units shall be measured from bottom to top starting with 0."
                }
            },
            "description": "The placement within the addressed location.",
            "longDescription": "The value shall describe a location within a resource.  Examples include a shelf in a rack."
        },
        "PostalAddress": {
            "type": "object",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ],
                    "description": "This property shall specify a valid odata or Redfish property."
                }
            },
            "additionalProperties": true,
            "properties": {
                "Country": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Country.",
                    "longDescription": "The value shall conform the requirements of the Country field as defined in RFC5139."
                },
                "Territory": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "A top-level subdivision within a country.",
                    "longDescription": "The value shall conform the requirements of the A1 field as defined in RFC5139 when used to name a territory, state, region, province, or prefecture within a country."
                },
                "District": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "A county, parish, gun (JP), or  district (IN).",
                    "longDescription": "The value shall conform the requirements of the A2 field as defined in RFC5139.  It is used to name a county, parish, gun (JP), or  district (IN)."
                },
                "City": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "City, township, or shi (JP).",
                    "longDescription": "The value shall conform the requirements of the A3 field as defined in RFC5139.  It is used to name a city, township, or shi (JP)."
                },
                "Division": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "City division, borough, dity district, ward, chou (JP).",
                    "longDescription": "The value shall conform the requirements of the A4 field as defined in RFC5139.  It is used to name a city division, borough, dity district, ward, chou (JP)."
                },
                "Neighborhood": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Neighborhood or block.",
                    "longDescription": "The value shall conform the requirements of the A5 field as defined in RFC5139.  It is used to name a neighborhood or block."
                },
                "LeadingStreetDirection": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "A leading street direction.",
                    "longDescription": "The value shall conform the requirements of the PRD field as defined in RFC5139.  It is used to name a leading street direction, (N, W, SE)."
                },
                "Street": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Street name.",
                    "longDescription": "The value shall conform the requirements of the A6 field as defined in RFC5139.  It is used to name a street."
                },
                "TrailingStreetSuffix": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "A trailing street suffix.",
                    "longDescription": "The value shall conform the requirements of the POD field as defined in RFC5139.  It is used to name a trailing street suffix."
                },
                "StreetSuffix": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Avenue, Platz, Street, Circle.",
                    "longDescription": "The value shall conform the requirements of the STS field as defined in RFC5139.  It is used to name a  street suffix."
                },
                "HouseNumber": {
                    "type": [
                        "number",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Numeric portion of house number.",
                    "longDescription": "The value shall conform the requirements of the HNO field as defined in RFC5139.  It is the numeric portion of the house number."
                },
                "HouseNumberSuffix": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "House number suffix.",
                    "longDescription": "The value shall conform the requirements of the HNS field as defined in RFC5139.  It is used to provide a suffix to a house number, (F, B, 1/2)."
                },
                "Landmark": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Landmark.",
                    "longDescription": "The value shall conform the requirements of the LMK field as defined in RFC5139.  It is used to identify a landmark or vanity address."
                },
                "Location": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Room designation or other additional info.",
                    "longDescription": "The value shall conform the requirements of the LOC field as defined in RFC5139.  It is used to provide additional information."
                },
                "Floor": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Floor.",
                    "longDescription": "The value shall conform the requirements of the FLR field as defined in RFC5139.  It is used to provide a floor designation."
                },
                "Name": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Name.",
                    "longDescription": "The value shall conform the requirements of the NAM field as defined in RFC5139.  It is used to name the occupant."
                },
                "PostalCode": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Postal code (or zip code).",
                    "longDescription": "The value shall conform the requirements of the PC field as defined in RFC5139. The value shall be a Postal code (or zip code)."
                },
                "Building": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Name of the building.",
                    "longDescription": "The value shall conform the requirements of the BLD field as defined in RFC5139.  The value shall be name a building used to locate the resource."
                },
                "Unit": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Name or number of the unit (apartment, suite).",
                    "longDescription": "The value shall conform the requirements of the UNIT field as defined in RFC5139.  The value shall be a name or number of a unit (apartment, suite) used to locate the resource."
                },
                "Room": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Name or number of the room.",
                    "longDescription": "The value shall conform the requirements of the ROOM field as defined in RFC5139.  The value shall be a name or number of a room used to locate the resource within the unit."
                },
                "Seat": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Seat (desk, cubicle, workstation).",
                    "longDescription": "The value shall conform the requirements of the SEAT field as defined in RFC5139.  The value shall be a name or number of a Seat (desk, cubicle, workstation)."
                },
                "PlaceType": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "A description of the type of place that is addressed.",
                    "longDescription": "The value shall conform the requirements of the PLC field as defined in RFC5139.  Examples include: office, residence,...)."
                },
                "Community": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Postal community name.",
                    "longDescription": "The value shall conform the requirements of the PCN field as defined in RFC5139.  The value shall be a postal community name."
                },
                "POBox": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Post office box (P.O. box).",
                    "longDescription": "The value shall conform the requirements of the POBOX field as defined in RFC5139.  The value shall be a Post office box (P.O. box)."
                },
                "AdditionalCode": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Additional code.",
                    "longDescription": "The value shall conform the requirements of the ADDCODE field as defined in RFC5139."
                },
                "Road": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "A primary road or street.",
                    "longDescription": "The value shall conform the requirements of the RD field as defined in RFC5139.  The value designates a primary road or street."
                },
                "RoadSection": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Road Section.",
                    "longDescription": "The value shall conform the requirements of the RDSEC field as defined in RFC5139.  The value shall be a road section."
                },
                "RoadBranch": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Road branch.",
                    "longDescription": "The value shall conform the requirements of the RDBR field as defined in RFC5139.  The value shall be a Post office box (P.O. box)road branch."
                },
                "RoadSubBranch": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Road sub branch.",
                    "longDescription": "The value shall conform the requirements of the RDSUBBR field as defined in RFC5139."
                },
                "RoadPreModifier": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Road pre-modifier.",
                    "longDescription": "The value shall conform the requirements of the PRM field as defined in RFC5139.  (Old, New)."
                },
                "RoadPostModifier": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "Road post-modifier.",
                    "longDescription": "The value shall conform the requirements of the POM field as defined in RFC5139.  (Extended)."
                },
                "GPSCoords": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": false,
                    "description": "The GPS coordinates of the part.",
                    "longDescription": "The value shall conform the requirements of the ADDCODE field as defined in RFC5139. The value shall be the GPS coordinates of the location. If furnished, this shall be expressed in the format '[-][nn]n.nnnnnn, [-][nn]n.nnnnn', i.e. two numbers, either positive or negative, with six decimal places of precision, comma-separated."
                }
            },
            "description": "The PostalAddress for a resource.",
            "longDescription": "Instances shall describe a postal address for a resource. For more information see RFC5139. Depending on use, the instance may represent a past, current, or future location."
        },
        "RackUnits": {
            "type": "string",
            "enum": [
                "OpenU",
                "EIA_310"
            ],
            "enumDescriptions": {
                "OpenU": "Defines a rack unit as being equal to 48 mm (1.89 in).",
                "EIA_310": "Defines a rack unit as being equal to 1.75 in (44.45 mm)."
            },
            "enumLongDescriptions": {
                "OpenU": "Rack units shall be specifie3d in terms of the Open Compute Open Rack specification.",
                "EIA_310": "Rack units shall be specified as defined by the EIA-310 standard."
            },
            "description": "Defines a rack unit.",
            "longDescription": "Enumeration literals shall name the type of rack units in use."
        },
        "Location": {
            "type": "object",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ],
                    "description": "This property shall specify a valid odata or Redfish property."
                }
            },
            "additionalProperties": false,
            "properties": {
                "Info": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "deprecated": "This property has been Deprecated in favor of new properties defined in Resource.v1_3_0.Location and Resource.v1_5_0.Location.",
                    "readonly": true,
                    "description": "This indicates the location of the resource.",
                    "longDescription": "This property shall represent the location of the resource."
                },
                "InfoFormat": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "deprecated": "This property has been Deprecated in favor of new properties defined in Resource.v1_3_0.Location and Resource.v1_5_0.Location.",
                    "readonly": true,
                    "description": "This represents the format of the Info property.",
                    "longDescription": "This property shall represent the format of the Info property."
                },
                "Oem": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Oem"
                },
                "PostalAddress": {
                    "anyOf": [
                        {"$ref": "#/definitions/PostalAddress"},
                        {"type": "null"}
                    ],
                    "description": "Postal address of the addressed resource.",
                    "longDescription": "The value shall be a postal address of the resource."
                },
                "Placement": {
                    "anyOf": [
                        {"$ref": "#/definitions/Placement"},
                        {"type": "null"}
                    ],
                    "description": "A place within the addressed location.",
                    "longDescription": "The value shall be a place within the addressed location."
                },
                "PartLocation": {
                    "anyOf": [
                        {"$ref": "#/definitions/PartLocation"},
                        {"type": "null"}
                    ],
                    "description": "Postal address of the addressed resource.",
                    "longDescription": "The value shall be a postal address of the resource."
                }
            },
            "description": "The location of a resource.",
            "longDescription": "Instances shall describe a location for a resource. For more information see RFC5139. Depending on use, the instance may represent a past, current, or future location.",
            "readonly": true
        },
        "LocationType": {
            "type": "string",
            "enum": [
                "Slot",
                "Bay",
                "Connector",
                "Socket"
            ],
            "enumDescriptions": {
                "Slot": "Defines a slot as the type of location.",
                "Bay": "Defines a bay as the type of location.",
                "Connector": "Defines a connector as the type of location.",
                "Socket": "Defines a socket as the type of location."
            },
            "enumLongDescriptions": {
                "Slot": "Slot shall be used to indicate the type of PartLocation is of type slot.",
                "Bay": "Bay shall be used to indicate the type of PartLocation is of type bay.",
                "Connector": "Connector shall be used to indicate the type of PartLocation is of type connector.",
                "Socket": "Socket shall be used to indicate the type of PartLocation is of type socket."
            },
            "description": "Defines the location types for PartLocation.",
            "longDescription": "Enumeration literals shall name the type of location in use."
        },
        "Orientation": {
            "type": "string",
            "enum": [
                "FrontToBack",
                "BackToFront",
                "TopToBottom",
                "BottomToTop",
                "LeftToRight",
                "RightToLeft"
            ],
            "enumDescriptions": {
                "FrontToBack": "Defines the ordering for the LocationOrdinalValue is front to back.",
                "BackToFront": "Defines the ordering for the LocationOrdinalValue is back to front.",
                "TopToBottom": "Defines the ordering for the LocationOrdinalValue is top to bottom.",
                "BottomToTop": "Defines the ordering for the LocationOrdinalValue is bottom to top.",
                "LeftToRight": "Defines the ordering for the LocationOrdinalValue is left to right.",
                "RightToLeft": "Defines the ordering for the LocationOrdinalValue is right to left."
            },
            "enumLongDescriptions": {
                "FrontToBack": "This value shall be used to specify the ordering for LocationOrdinalValue is front to back.",
                "BackToFront": "This value shall be used to specify the ordering for LocationOrdinalValue is back to front.",
                "TopToBottom": "This value shall be used to specify the ordering for LocationOrdinalValue is top to bottom.",
                "BottomToTop": "This value shall be used to specify the ordering for LocationOrdinalValue is bottom to top.",
                "LeftToRight": "This value shall be used to specify the ordering for LocationOrdinalValue is left to right.",
                "RightToLeft": "This value shall be used to specify the ordering for LocationOrdinalValue is right to left."
            },
            "description": "Defines a orientation for the ordering of the ordinal value of the part location.",
            "longDescription": "Enumeration literals shall name the orientation for the location type ordering in determining the LocationOrdinalValue."
        },
        "PartLocation": {
            "type": "object",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message|Privileges)\\.[a-zA-Z_][a-zA-Z0-9_.]+$": {
                    "type": [
                        "array",
                        "boolean",
                        "number",
                        "null",
                        "object",
                        "string"
                    ],
                    "description": "This property shall specify a valid odata or Redfish property."
                }
            },
            "additionalProperties": true,
            "properties": {
                "ServiceLabel": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "readonly": true,
                    "description": "This is the label of the part location, such as a silk screened name or a printed label.",
                    "longDescription": "The value shall be the label assigned for service at the part location."
                },
                "LocationType": {
                    "anyOf": [
                        {"$ref": "#/definitions/LocationType"},
                        {"type": "null"}
                    ],
                    "readonly": true,
                    "description": "The type of location of the part, such as slot, bay, socket and slot.",
                    "longDescription": "The value shall be a LocationType enumeration literal indicating the type of rack units in use."
                },
                "LocationOrdinalValue": {
                    "type": [
                        "number",
                        "null"
                    ],
                    "readonly": true,
                    "description": "The number that represents the location of the part.  If LocationType is slot and this unit is in slot 2 then the LocationOrdinalValue will be 2.",
                    "longDescription": "The value shall be the number that represents the location of the part based on the LocationType.  LocationOrdinalValue shall be measured based on the Orientation value starting with 0."
                },
                "Reference": {
                    "anyOf": [
                        {"$ref": "#/definitions/Reference"},
                        {"type": "null"}
                    ],
                    "readonly": true,
                    "description": "The reference point for the part location.  This is used to give guidance as to the general location of the part.",
                    "longDescription": "The value shall be a Reference enumeration literal indicating the general location within the unit of the part."
                },
                "Orientation": {
                    "anyOf": [
                        {"$ref": "#/definitions/Orientation"},
                        {"type": "null"}
                    ],
                    "readonly": true,
                    "description": "The orientation for the ordering of the slot enumeration used by the LocationOrdinalValue property.",
                    "longDescription": "The value shall be a Orientation enumeration literal indicating the orientation for the ordering used by the LocationOrdinalValue property."
                }
            },
            "description": "The part location within the placement.",
            "longDescription": "The value shall describe a location within a resource.  This representation shall be used to indicate the location within the Placement."
        },
        "Reference": {
            "type": "string",
            "enum": [
                "Top",
                "Bottom",
                "Front",
                "Rear",
                "Left",
                "Right",
                "Middle"
            ],
            "enumDescriptions": {
                "Top": "Defines the part as being in the top of the unit.",
                "Bottom": "Defines the part as being in the bottom of the unit.",
                "Front": "Defines the part as being in the front of the unit.",
                "Rear": "Defines the part as being in the rear of the unit.",
                "Left": "Defines the part as being in the left of the unit.",
                "Right": "Defines the part as being in the right of the unit.",
                "Middle": "Defines the part as being in the middle of the unit."
            },
            "enumLongDescriptions": {
                "Top": "Top shall be used to specify the part location is in the top of the unit.",
                "Bottom": "Top shall be used to specify the part location is in the bottom of the unit.",
                "Front": "Top shall be used to specify the part location is in the front of the unit.",
                "Rear": "Top shall be used to specify the part location is in the rear of the unit.",
                "Left": "Top shall be used to specify the part location is in the left of the unit.",
                "Right": "Top shall be used to specify the part location is in the right of the unit.",
                "Middle": "Top shall be used to specify the part location is in the middle of the unit."
            },
            "description": "Defines a reference area for the location of the part.",
            "longDescription": "Enumeration literals shall name the reference for the part location."
        }
    },
    "copyright": "Copyright 2014-2017 Distributed Management Task Force, Inc. (DMTF). For the full DMTF copyright policy, see http://www.dmtf.org/about/policies/copyright"
}
