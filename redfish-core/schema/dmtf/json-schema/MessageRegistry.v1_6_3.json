{
    "$id": "http://redfish.dmtf.org/schemas/v1/MessageRegistry.v1_6_3.json",
    "$ref": "#/definitions/MessageRegistry",
    "$schema": "http://redfish.dmtf.org/schemas/v1/redfish-schema-v1.json",
    "copyright": "Copyright 2014-2024 DMTF. For the full DMTF copyright policy, see http://www.dmtf.org/about/policies/copyright",
    "definitions": {
        "Actions": {
            "additionalProperties": false,
            "description": "The available actions for this resource.",
            "longDescription": "This type shall contain the available actions for this resource.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "Oem": {
                    "$ref": "#/definitions/OemActions",
                    "description": "The available OEM-specific actions for this resource.",
                    "longDescription": "This property shall contain the available OEM-specific actions for this resource.",
                    "versionAdded": "v1_1_0"
                }
            },
            "type": "object"
        },
        "ClearingLogic": {
            "additionalProperties": false,
            "description": "The clearing logic associated with a message.  The properties within indicate the events, specified by message keys for other messages in this registry, that are cleared by a message with optional conditions.",
            "longDescription": "This type shall contain the clearing logic associated with a message.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "ClearsAll": {
                    "description": "Indicates whether all logged events containing messages from this message registry are cleared when this message is received.  If conditional properties are present, such as the `ClearsIf` property, the specified conditions shall be required to clear the logged events.",
                    "longDescription": "This property shall indicate whether all logged events containing messages from this message registry are cleared when this message is received.  If conditional properties are present, such as the `ClearsIf` property, the specified conditions are required to clear the logged events.",
                    "readonly": true,
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "versionAdded": "v1_2_0"
                },
                "ClearsIf": {
                    "anyOf": [
                        {
                            "$ref": "#/definitions/ClearingType"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The condition required to clear the logged events specified by other properties in this object when this message is received.",
                    "longDescription": "This property shall contain the condition required to clear the logged events specified by other properties in this object when this message is received.  If not present, no condition is checked prior to clearing logged events when this message is received.",
                    "readonly": true,
                    "versionAdded": "v1_2_0"
                },
                "ClearsMessage": {
                    "description": "An array of message keys for logged events that are cleared when this message is received.  If conditional properties are present, such as the `ClearsIf` property, the specified conditions are required to clear the logged events with these message keys.",
                    "items": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "longDescription": "This property shall contain an array of message keys for logged events that are cleared when this message is received.  If conditional properties are present, such as the `ClearsIf` property, the specified conditions shall be required to clear the logged events with these message keys.  This property shall contain message keys, without message registry names and versions, as defined in the 'MessageId format' clause of the Redfish Specification.  This property shall not reference message keys in other message registries.",
                    "readonly": true,
                    "type": "array",
                    "versionAdded": "v1_2_0"
                }
            },
            "type": "object"
        },
        "ClearingType": {
            "enum": [
                "SameOriginOfCondition"
            ],
            "enumDescriptions": {
                "SameOriginOfCondition": "Indicates that a logged event is cleared by a message if the `OriginOfCondition` for both events are the same."
            },
            "enumLongDescriptions": {
                "SameOriginOfCondition": "This value shall indicate that a logged event is cleared by a message if the `OriginOfCondition` for both events are the same."
            },
            "type": "string"
        },
        "Message": {
            "additionalProperties": false,
            "description": "This type represents how a message is defined within the message registry.",
            "longDescription": "The type shall represent how a message is defined within a message registry.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "ArgDescriptions": {
                    "description": "The `MessageArgs` descriptions, in order, used for this message.",
                    "items": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "longDescription": "This property shall contain an ordered array of text describing each argument used as substitution in the message.",
                    "readonly": true,
                    "type": "array",
                    "versionAdded": "v1_3_0"
                },
                "ArgLongDescriptions": {
                    "description": "The `MessageArgs` normative descriptions, in order, used for this message.",
                    "items": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "longDescription": "This property shall contain an ordered array of normative language for each argument used as substitution in the message.",
                    "readonly": true,
                    "type": "array",
                    "versionAdded": "v1_3_0"
                },
                "ClearingLogic": {
                    "$ref": "#/definitions/ClearingLogic",
                    "description": "The clearing logic associated with this message.  The properties within indicate the events, specified by message keys for other messages in this registry, that are cleared by this message with optional conditions.",
                    "longDescription": "This property shall contain the clearing logic associated with this message.  Clearing in this context deasserts the event rather than removes the event from a log.",
                    "versionAdded": "v1_2_0"
                },
                "Deprecated": {
                    "description": "The reason the message has been deprecated.",
                    "longDescription": "This property shall indicate that a message is deprecated.  The value of the string should explain the deprecation, including reference to a new message or messages to be used.  The message can be supported in new and existing implementations, but usage in new implementations is discouraged.  Deprecated messages are likely to be removed in a future major version of the message registry.  The `ReplacedBy` property may be used to provide a reference to a replacement message definition.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ],
                    "versionAdded": "v1_5_0"
                },
                "Description": {
                    "description": "A short description of how and when to use this message.",
                    "longDescription": "This property shall indicate how and when this message is returned by the Redfish service.",
                    "readonly": true,
                    "type": "string"
                },
                "LongDescription": {
                    "description": "The normative language that describes this message's usage.",
                    "longDescription": "This property shall contain the normative language that describes this message's usage in a Redfish implementation.",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ],
                    "versionAdded": "v1_3_0"
                },
                "MapsToGeneralMessages": {
                    "description": "The general or less-specific messages related to this message.",
                    "items": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "longDescription": "This property shall indicate that this message maps to general or less-specific messages that duplicates information about the condition that generated this message.  Services may issue the referenced messages along with this message to provide consistency for clients.  The array shall contain `MessageRegistryPrefix.MessageKey` formatted values that describe the message registry and message key used to identify the messages.",
                    "pattern": "^[A-Z]\\w+\\.[A-Z]\\w+$",
                    "readonly": true,
                    "type": "array",
                    "versionAdded": "v1_6_0"
                },
                "Message": {
                    "description": "The actual message.",
                    "longDescription": "This property shall contain the message to display.  If a %integer is included in part of the string, it shall represent a string substitution for any `MessageArgs` that accompany the message, in order.",
                    "readonly": true,
                    "type": "string"
                },
                "MessageSeverity": {
                    "anyOf": [
                        {
                            "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Health"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "description": "The severity of the message.",
                    "longDescription": "This property shall contain the severity of the message.  Services can replace the severity defined in the message registry with a value more applicable to the implementation in message payloads and event payloads.",
                    "readonly": true,
                    "versionAdded": "v1_4_0"
                },
                "NumberOfArgs": {
                    "description": "The number of arguments in the message.",
                    "longDescription": "This property shall contain the number of arguments that are substituted for the locations marked with %<integer> in the message.",
                    "minimum": 0,
                    "readonly": true,
                    "type": "integer"
                },
                "Oem": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Oem",
                    "description": "The OEM extension property.",
                    "longDescription": "This property shall contain the OEM extensions.  All values for properties contained in this object shall conform to the Redfish Specification-described requirements."
                },
                "ParamTypes": {
                    "description": "The data types of the message arguments, prior to conversion to strings for inclusion in a message.",
                    "items": {
                        "$ref": "#/definitions/ParamType"
                    },
                    "longDescription": "This property shall contain an ordered array of the data types of the values in `MessageArgs`, prior to their conversion to strings for inclusion in a message.",
                    "readonly": true,
                    "type": "array"
                },
                "ReplacedBy": {
                    "description": "The message identifier that replaces this message.",
                    "longDescription": "This property shall contain the message registry and message key, in the `MessageRegistryPrefix.MessageKey` format, that identifies the message that replaces this message.  This property may be used to indicate replacement for a deprecated message, including cases where a standardized version replaces an OEM-created message.",
                    "pattern": "^[A-Z]\\w+\\.[A-Z]\\w+$",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ],
                    "versionAdded": "v1_6_0"
                },
                "Resolution": {
                    "description": "Used to provide suggestions on how to resolve the situation that caused the error.",
                    "longDescription": "This property shall contain the resolution of the message.  Services can replace the resolution defined in the message registry with a more specific resolution in message payloads.",
                    "readonly": true,
                    "type": "string"
                },
                "Severity": {
                    "deprecated": "This property has been deprecated in favor of `MessageSeverity`, which ties the values to the enumerations defined for the `Health` property within `Status`.",
                    "description": "The severity of the message.",
                    "longDescription": "This property shall contain the severity of the condition resulting in the message, as defined in the 'Status' clause of the Redfish Specification.  Services can replace the severity defined in the message registry with a value more applicable to the implementation in message payloads and event payloads.",
                    "readonly": true,
                    "type": "string",
                    "versionDeprecated": "v1_4_0"
                },
                "VersionAdded": {
                    "description": "The registry version which added this message.",
                    "longDescription": "This property shall contain the version of the message registry when the message was added.  This property shall not appear for messages created at version `1.0.0` of a message registry.",
                    "pattern": "^\\d+\\.\\d+\\.\\d+$",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ],
                    "versionAdded": "v1_5_0"
                },
                "VersionDeprecated": {
                    "description": "The registry version when the message was deprecated.",
                    "longDescription": "This property shall contain the version of the registry when the message was deprecated.  This property shall not appear if the message has not been deprecated.",
                    "pattern": "^\\d+\\.\\d+\\.\\d+$",
                    "readonly": true,
                    "type": [
                        "string",
                        "null"
                    ],
                    "versionAdded": "v1_5_0"
                }
            },
            "required": [
                "Description",
                "Message",
                "Severity",
                "NumberOfArgs",
                "Resolution",
                "MessageSeverity"
            ],
            "type": "object"
        },
        "MessageProperty": {
            "additionalProperties": false,
            "description": "The message keys contained in the message registry.",
            "longDescription": "This type shall contain the message keys contained in the message registry.  The message keys are the suffix of the `MessageId` and shall be unique within this message registry.",
            "patternProperties": {
                "[A-Za-z0-9]+": {
                    "$ref": "#/definitions/Message"
                },
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {},
            "type": "object"
        },
        "MessageRegistry": {
            "additionalProperties": false,
            "description": "The `MessageRegistry` schema describes all message registries.  It represents the properties for the message registries themselves.",
            "longDescription": "This resource shall represent a message registry for a Redfish implementation.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {
                "@odata.type": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/odata-v4.json#/definitions/type"
                },
                "Actions": {
                    "$ref": "#/definitions/Actions",
                    "description": "The available actions for this resource.",
                    "longDescription": "This property shall contain the available actions for this resource.",
                    "versionAdded": "v1_1_0"
                },
                "Description": {
                    "anyOf": [
                        {
                            "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Description"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "readonly": true
                },
                "Id": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Id",
                    "readonly": true
                },
                "Language": {
                    "description": "The RFC5646-conformant language code for the message registry.",
                    "longDescription": "This property shall contain an RFC5646-conformant language code.",
                    "readonly": true,
                    "type": "string"
                },
                "Messages": {
                    "$ref": "#/definitions/MessageProperty",
                    "description": "The message keys contained in the message registry.",
                    "longDescription": "This property shall contain the message keys contained in the message registry.  The message keys are the suffix of the `MessageId` and shall be unique within this message registry."
                },
                "Name": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Name",
                    "readonly": true
                },
                "Oem": {
                    "$ref": "http://redfish.dmtf.org/schemas/v1/Resource.json#/definitions/Oem",
                    "description": "The OEM extension property.",
                    "longDescription": "This property shall contain the OEM extensions.  All values for properties that this object contains shall conform to the Redfish Specification-described requirements."
                },
                "OwningEntity": {
                    "description": "The organization or company that publishes this message registry.",
                    "longDescription": "This property shall represent the publisher of this message registry.",
                    "readonly": true,
                    "type": "string"
                },
                "RegistryPrefix": {
                    "description": "The single-word prefix that is used in forming and decoding `MessageId` values.",
                    "longDescription": "This property shall contain the Redfish Specification-defined prefix used in forming and decoding `MessageId` values that uniquely identifies all messages that belong to this message registry.",
                    "readonly": true,
                    "type": "string"
                },
                "RegistryVersion": {
                    "description": "The message registry version in the middle portion of a `MessageId`.",
                    "longDescription": "This property shall contain the version of this message registry.",
                    "pattern": "^\\d+\\.\\d+\\.\\d+$",
                    "readonly": true,
                    "type": "string"
                }
            },
            "required": [
                "Language",
                "RegistryPrefix",
                "RegistryVersion",
                "OwningEntity",
                "Messages",
                "@odata.type",
                "Id",
                "Name"
            ],
            "type": "object"
        },
        "OemActions": {
            "additionalProperties": true,
            "description": "The available OEM-specific actions for this resource.",
            "longDescription": "This type shall contain the available OEM-specific actions for this resource.",
            "patternProperties": {
                "^([a-zA-Z_][a-zA-Z0-9_]*)?@(odata|Redfish|Message)\\.[a-zA-Z_][a-zA-Z0-9_]*$": {
                    "description": "This property shall specify a valid odata or Redfish property.",
                    "type": [
                        "array",
                        "boolean",
                        "integer",
                        "number",
                        "null",
                        "object",
                        "string"
                    ]
                }
            },
            "properties": {},
            "type": "object"
        },
        "ParamType": {
            "enum": [
                "string",
                "number"
            ],
            "enumDescriptions": {
                "number": "The argument is a number converted to a string.",
                "string": "The argument is a string."
            },
            "type": "string"
        }
    },
    "language": "en",
    "owningEntity": "DMTF",
    "release": "2022.3",
    "title": "#MessageRegistry.v1_6_3.MessageRegistry"
}