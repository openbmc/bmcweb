#pragma once
/****************************************************************
 *                 READ THIS WARNING FIRST
 * This is an auto-generated header which contains definitions
 * for Redfish DMTF defined messages.
 * DO NOT modify this registry outside of running the
 * parse_registries.py script.  The definitions contained within
 * this file are owned by DMTF.  Any modifications to these files
 * should be first pushed to the relevant registry in the DMTF
 * github organization.
 ***************************************************************/
#include "privileges.hpp"
#include "verb.hpp"

#include <array>
#include <map>
#include <span>
#include <string>
#include <vector>

namespace redfish::privileges
{

const std::array<Privileges, 1> privilegeSetLogin = {{{"Login"}}};
const std::array<Privileges, 1> privilegeSetConfigureComponents = {
    {{"ConfigureComponents"}}};
const std::array<Privileges, 1> privilegeSetConfigureUsers = {
    {{"ConfigureUsers"}}};
const std::array<Privileges, 1> privilegeSetConfigureManager = {
    {{"ConfigureManager"}}};
const std::array<Privileges, 2>
    privilegeSetConfigureManagerOrConfigureComponents = {
        {{"ConfigureManager"}, {"ConfigureComponents"}}};
const std::array<Privileges, 2> privilegeSetConfigureManagerOrConfigureSelf = {
    {{"ConfigureManager"}, {"ConfigureSelf"}}};
const std::array<Privileges, 3>
    privilegeSetConfigureManagerOrConfigureUsersOrConfigureSelf = {
        {{"ConfigureManager"}, {"ConfigureUsers"}, {"ConfigureSelf"}}};
const std::array<Privileges, 2> privilegeSetLoginOrNoAuth = {{{"Login"}, {}}};

enum class EntityTag : size_t
{
    tagAccelerationFunction = 0,
    tagAccelerationFunctionCollection,
    tagAccountService,
    tagActionInfo,
    tagAddressPool,
    tagAddressPoolCollection,
    tagAggregate,
    tagAggregateCollection,
    tagAggregationService,
    tagAggregationSource,
    tagAggregationSourceCollection,
    tagAllowDeny,
    tagAllowDenyCollection,
    tagAssembly,
    tagBattery,
    tagBatteryCollection,
    tagBatteryMetrics,
    tagBios,
    tagBootOption,
    tagBootOptionCollection,
    tagCable,
    tagCableCollection,
    tagCertificate,
    tagCertificateCollection,
    tagCertificateLocations,
    tagCertificateService,
    tagChassis,
    tagChassisCollection,
    tagCircuit,
    tagCircuitCollection,
    tagCompositionReservation,
    tagCompositionReservationCollection,
    tagCompositionService,
    tagComputerSystem,
    tagComputerSystemCollection,
    tagConnection,
    tagConnectionCollection,
    tagConnectionMethod,
    tagConnectionMethodCollection,
    tagControl,
    tagControlCollection,
    tagDrive,
    tagDriveCollection,
    tagEndpoint,
    tagEndpointCollection,
    tagEndpointGroup,
    tagEndpointGroupCollection,
    tagEnvironmentMetrics,
    tagEthernetInterface,
    tagEthernetInterfaceCollection,
    tagEventDestination,
    tagEventDestinationCollection,
    tagEventService,
    tagExternalAccountProvider,
    tagExternalAccountProviderCollection,
    tagFabric,
    tagFabricCollection,
    tagFabricAdapter,
    tagFabricAdapterCollection,
    tagFacility,
    tagFacilityCollection,
    tagFan,
    tagFanCollection,
    tagGraphicsController,
    tagGraphicsControllerCollection,
    tagHostInterface,
    tagHostInterfaceCollection,
    tagJob,
    tagJobCollection,
    tagJobService,
    tagJsonSchemaFile,
    tagJsonSchemaFileCollection,
    tagKey,
    tagKeyCollection,
    tagKeyPolicy,
    tagKeyPolicyCollection,
    tagKeyService,
    tagLogEntry,
    tagLogEntryCollection,
    tagLogService,
    tagLogServiceCollection,
    tagManager,
    tagManagerCollection,
    tagManagerAccount,
    tagManagerAccountCollection,
    tagManagerDiagnosticData,
    tagManagerNetworkProtocol,
    tagMediaController,
    tagMediaControllerCollection,
    tagMemory,
    tagMemoryCollection,
    tagMemoryChunks,
    tagMemoryChunksCollection,
    tagMemoryDomain,
    tagMemoryDomainCollection,
    tagMemoryMetrics,
    tagMessageRegistryFile,
    tagMessageRegistryFileCollection,
    tagMetricDefinition,
    tagMetricDefinitionCollection,
    tagMetricReport,
    tagMetricReportCollection,
    tagMetricReportDefinition,
    tagMetricReportDefinitionCollection,
    tagNetworkAdapter,
    tagNetworkAdapterCollection,
    tagNetworkAdapterMetrics,
    tagNetworkDeviceFunction,
    tagNetworkDeviceFunctionCollection,
    tagNetworkDeviceFunctionMetrics,
    tagNetworkInterface,
    tagNetworkInterfaceCollection,
    tagNetworkPort,
    tagNetworkPortCollection,
    tagOperatingConfig,
    tagOperatingConfigCollection,
    tagOutlet,
    tagOutletCollection,
    tagOutletGroup,
    tagOutletGroupCollection,
    tagPCIeDevice,
    tagPCIeDeviceCollection,
    tagPCIeFunction,
    tagPCIeFunctionCollection,
    tagPCIeSlots,
    tagPort,
    tagPortCollection,
    tagPortMetrics,
    tagPower,
    tagPowerDistribution,
    tagPowerDistributionCollection,
    tagPowerDistributionMetrics,
    tagPowerDomain,
    tagPowerDomainCollection,
    tagPowerEquipment,
    tagPowerSubsystem,
    tagPowerSupply,
    tagPowerSupplyCollection,
    tagPowerSupplyMetrics,
    tagProcessor,
    tagProcessorCollection,
    tagProcessorMetrics,
    tagResourceBlock,
    tagResourceBlockCollection,
    tagRole,
    tagRoleCollection,
    tagRouteEntry,
    tagRouteEntryCollection,
    tagRouteSetEntry,
    tagRouteSetEntryCollection,
    tagSecureBoot,
    tagSecureBootDatabase,
    tagSecureBootDatabaseCollection,
    tagSensor,
    tagSensorCollection,
    tagSerialInterface,
    tagSerialInterfaceCollection,
    tagServiceRoot,
    tagSession,
    tagSessionCollection,
    tagSessionService,
    tagSignature,
    tagSignatureCollection,
    tagSimpleStorage,
    tagSimpleStorageCollection,
    tagSoftwareInventory,
    tagSoftwareInventoryCollection,
    tagStorage,
    tagStorageCollection,
    tagStorageController,
    tagStorageControllerCollection,
    tagSwitch,
    tagSwitchCollection,
    tagTask,
    tagTaskCollection,
    tagTaskService,
    tagTelemetryService,
    tagThermal,
    tagThermalMetrics,
    tagThermalSubsystem,
    tagTriggers,
    tagTriggersCollection,
    tagUpdateService,
    tagUSBController,
    tagUSBControllerCollection,
    tagVCATEntry,
    tagVCATEntryCollection,
    tagVLanNetworkInterface,
    tagVLanNetworkInterfaceCollection,
    tagVirtualMedia,
    tagVirtualMediaCollection,
    tagVolume,
    tagVolumeCollection,
    tagZone,
    tagZoneCollection,
    none,
};

std::map<std::string, EntityTag> entityTagMap;

// AccelerationFunction
std::map<HttpVerb, std::vector<Privileges>> tagAccelerationFunctionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// AccelerationFunctionCollection
std::map<HttpVerb, std::vector<Privileges>>
    tagAccelerationFunctionCollectionMap = {
        {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                privilegeSetLogin.end())},
        {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                 privilegeSetLogin.end())},
        {HttpVerb::Patch,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Put,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Delete,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Post,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
};

// AccountService
std::map<HttpVerb, std::vector<Privileges>> tagAccountServiceMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureUsers.begin(),
                             privilegeSetConfigureUsers.end())},
    {HttpVerb::Put, std::vector<Privileges>(privilegeSetConfigureUsers.begin(),
                                            privilegeSetConfigureUsers.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureUsers.begin(),
                             privilegeSetConfigureUsers.end())},
    {HttpVerb::Post, std::vector<Privileges>(privilegeSetConfigureUsers.begin(),
                                             privilegeSetConfigureUsers.end())},
};

// ActionInfo
std::map<HttpVerb, std::vector<Privileges>> tagActionInfoMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// AddressPool
std::map<HttpVerb, std::vector<Privileges>> tagAddressPoolMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// AddressPoolCollection
std::map<HttpVerb, std::vector<Privileges>> tagAddressPoolCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// Aggregate
std::map<HttpVerb, std::vector<Privileges>> tagAggregateMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(
         privilegeSetConfigureManagerOrConfigureComponents.begin(),
         privilegeSetConfigureManagerOrConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(
         privilegeSetConfigureManagerOrConfigureComponents.begin(),
         privilegeSetConfigureManagerOrConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(
         privilegeSetConfigureManagerOrConfigureComponents.begin(),
         privilegeSetConfigureManagerOrConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(
         privilegeSetConfigureManagerOrConfigureComponents.begin(),
         privilegeSetConfigureManagerOrConfigureComponents.end())},
};

// AggregateCollection
std::map<HttpVerb, std::vector<Privileges>> tagAggregateCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(
         privilegeSetConfigureManagerOrConfigureComponents.begin(),
         privilegeSetConfigureManagerOrConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(
         privilegeSetConfigureManagerOrConfigureComponents.begin(),
         privilegeSetConfigureManagerOrConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(
         privilegeSetConfigureManagerOrConfigureComponents.begin(),
         privilegeSetConfigureManagerOrConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(
         privilegeSetConfigureManagerOrConfigureComponents.begin(),
         privilegeSetConfigureManagerOrConfigureComponents.end())},
};

// AggregationService
std::map<HttpVerb, std::vector<Privileges>> tagAggregationServiceMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// AggregationSource
std::map<HttpVerb, std::vector<Privileges>> tagAggregationSourceMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// AggregationSourceCollection
std::map<HttpVerb, std::vector<Privileges>> tagAggregationSourceCollectionMap =
    {
        {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                privilegeSetLogin.end())},
        {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                 privilegeSetLogin.end())},
        {HttpVerb::Patch,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
        {HttpVerb::Put,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
        {HttpVerb::Delete,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
        {HttpVerb::Post,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
};

// AllowDeny
std::map<HttpVerb, std::vector<Privileges>> tagAllowDenyMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// AllowDenyCollection
std::map<HttpVerb, std::vector<Privileges>> tagAllowDenyCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// Assembly
std::map<HttpVerb, std::vector<Privileges>> tagAssemblyMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// Battery
std::map<HttpVerb, std::vector<Privileges>> tagBatteryMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// BatteryCollection
std::map<HttpVerb, std::vector<Privileges>> tagBatteryCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// BatteryMetrics
std::map<HttpVerb, std::vector<Privileges>> tagBatteryMetricsMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// Bios
std::map<HttpVerb, std::vector<Privileges>> tagBiosMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// BootOption
std::map<HttpVerb, std::vector<Privileges>> tagBootOptionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// BootOptionCollection
std::map<HttpVerb, std::vector<Privileges>> tagBootOptionCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// Cable
std::map<HttpVerb, std::vector<Privileges>> tagCableMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// CableCollection
std::map<HttpVerb, std::vector<Privileges>> tagCableCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// Certificate
std::map<HttpVerb, std::vector<Privileges>> tagCertificateMap = {
    {HttpVerb::Get,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Head,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// CertificateCollection
std::map<HttpVerb, std::vector<Privileges>> tagCertificateCollectionMap = {
    {HttpVerb::Get,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Head,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// CertificateLocations
std::map<HttpVerb, std::vector<Privileges>> tagCertificateLocationsMap = {
    {HttpVerb::Get,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Head,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// CertificateService
std::map<HttpVerb, std::vector<Privileges>> tagCertificateServiceMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// Chassis
std::map<HttpVerb, std::vector<Privileges>> tagChassisMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// ChassisCollection
std::map<HttpVerb, std::vector<Privileges>> tagChassisCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// Circuit
std::map<HttpVerb, std::vector<Privileges>> tagCircuitMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// CircuitCollection
std::map<HttpVerb, std::vector<Privileges>> tagCircuitCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// CompositionReservation
std::map<HttpVerb, std::vector<Privileges>> tagCompositionReservationMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// CompositionReservationCollection
std::map<HttpVerb, std::vector<Privileges>>
    tagCompositionReservationCollectionMap = {
        {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                privilegeSetLogin.end())},
        {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                 privilegeSetLogin.end())},
        {HttpVerb::Patch,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
        {HttpVerb::Put,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
        {HttpVerb::Delete,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
        {HttpVerb::Post,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
};

// CompositionService
std::map<HttpVerb, std::vector<Privileges>> tagCompositionServiceMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// ComputerSystem
std::map<HttpVerb, std::vector<Privileges>> tagComputerSystemMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// ComputerSystemCollection
std::map<HttpVerb, std::vector<Privileges>> tagComputerSystemCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// Connection
std::map<HttpVerb, std::vector<Privileges>> tagConnectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// ConnectionCollection
std::map<HttpVerb, std::vector<Privileges>> tagConnectionCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// ConnectionMethod
std::map<HttpVerb, std::vector<Privileges>> tagConnectionMethodMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// ConnectionMethodCollection
std::map<HttpVerb, std::vector<Privileges>> tagConnectionMethodCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// Control
std::map<HttpVerb, std::vector<Privileges>> tagControlMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// ControlCollection
std::map<HttpVerb, std::vector<Privileges>> tagControlCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// Drive
std::map<HttpVerb, std::vector<Privileges>> tagDriveMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// DriveCollection
std::map<HttpVerb, std::vector<Privileges>> tagDriveCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// Endpoint
std::map<HttpVerb, std::vector<Privileges>> tagEndpointMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// EndpointCollection
std::map<HttpVerb, std::vector<Privileges>> tagEndpointCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// EndpointGroup
std::map<HttpVerb, std::vector<Privileges>> tagEndpointGroupMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// EndpointGroupCollection
std::map<HttpVerb, std::vector<Privileges>> tagEndpointGroupCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// EnvironmentMetrics
std::map<HttpVerb, std::vector<Privileges>> tagEnvironmentMetricsMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// EthernetInterface
std::map<HttpVerb, std::vector<Privileges>> tagEthernetInterfaceMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// EthernetInterfaceCollection
std::map<HttpVerb, std::vector<Privileges>> tagEthernetInterfaceCollectionMap =
    {
        {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                privilegeSetLogin.end())},
        {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                 privilegeSetLogin.end())},
        {HttpVerb::Patch,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Post,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Put,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Delete,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
};

// EventDestination
std::map<HttpVerb, std::vector<Privileges>> tagEventDestinationMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch, std::vector<Privileges>(
                          privilegeSetConfigureManagerOrConfigureSelf.begin(),
                          privilegeSetConfigureManagerOrConfigureSelf.end())},
    {HttpVerb::Post, std::vector<Privileges>(
                         privilegeSetConfigureManagerOrConfigureSelf.begin(),
                         privilegeSetConfigureManagerOrConfigureSelf.end())},
    {HttpVerb::Put, std::vector<Privileges>(
                        privilegeSetConfigureManagerOrConfigureSelf.begin(),
                        privilegeSetConfigureManagerOrConfigureSelf.end())},
    {HttpVerb::Delete, std::vector<Privileges>(
                           privilegeSetConfigureManagerOrConfigureSelf.begin(),
                           privilegeSetConfigureManagerOrConfigureSelf.end())},
};

// EventDestinationCollection
std::map<HttpVerb, std::vector<Privileges>> tagEventDestinationCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(
         privilegeSetConfigureManagerOrConfigureComponents.begin(),
         privilegeSetConfigureManagerOrConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(
         privilegeSetConfigureManagerOrConfigureComponents.begin(),
         privilegeSetConfigureManagerOrConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(
         privilegeSetConfigureManagerOrConfigureComponents.begin(),
         privilegeSetConfigureManagerOrConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(
         privilegeSetConfigureManagerOrConfigureComponents.begin(),
         privilegeSetConfigureManagerOrConfigureComponents.end())},
};

// EventService
std::map<HttpVerb, std::vector<Privileges>> tagEventServiceMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// ExternalAccountProvider
std::map<HttpVerb, std::vector<Privileges>> tagExternalAccountProviderMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// ExternalAccountProviderCollection
std::map<HttpVerb, std::vector<Privileges>>
    tagExternalAccountProviderCollectionMap = {
        {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                privilegeSetLogin.end())},
        {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                 privilegeSetLogin.end())},
        {HttpVerb::Patch,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
        {HttpVerb::Put,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
        {HttpVerb::Delete,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
        {HttpVerb::Post,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
};

// Fabric
std::map<HttpVerb, std::vector<Privileges>> tagFabricMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// FabricCollection
std::map<HttpVerb, std::vector<Privileges>> tagFabricCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// FabricAdapter
std::map<HttpVerb, std::vector<Privileges>> tagFabricAdapterMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// FabricAdapterCollection
std::map<HttpVerb, std::vector<Privileges>> tagFabricAdapterCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// Facility
std::map<HttpVerb, std::vector<Privileges>> tagFacilityMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// FacilityCollection
std::map<HttpVerb, std::vector<Privileges>> tagFacilityCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// Fan
std::map<HttpVerb, std::vector<Privileges>> tagFanMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// FanCollection
std::map<HttpVerb, std::vector<Privileges>> tagFanCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// GraphicsController
std::map<HttpVerb, std::vector<Privileges>> tagGraphicsControllerMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// GraphicsControllerCollection
std::map<HttpVerb, std::vector<Privileges>> tagGraphicsControllerCollectionMap =
    {
        {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                privilegeSetLogin.end())},
        {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                 privilegeSetLogin.end())},
        {HttpVerb::Patch,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Put,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Delete,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Post,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
};

// HostInterface
std::map<HttpVerb, std::vector<Privileges>> tagHostInterfaceMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// HostInterfaceCollection
std::map<HttpVerb, std::vector<Privileges>> tagHostInterfaceCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// Job
std::map<HttpVerb, std::vector<Privileges>> tagJobMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// JobCollection
std::map<HttpVerb, std::vector<Privileges>> tagJobCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// JobService
std::map<HttpVerb, std::vector<Privileges>> tagJobServiceMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// JsonSchemaFile
std::map<HttpVerb, std::vector<Privileges>> tagJsonSchemaFileMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// JsonSchemaFileCollection
std::map<HttpVerb, std::vector<Privileges>> tagJsonSchemaFileCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// Key
std::map<HttpVerb, std::vector<Privileges>> tagKeyMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// KeyCollection
std::map<HttpVerb, std::vector<Privileges>> tagKeyCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// KeyPolicy
std::map<HttpVerb, std::vector<Privileges>> tagKeyPolicyMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// KeyPolicyCollection
std::map<HttpVerb, std::vector<Privileges>> tagKeyPolicyCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// KeyService
std::map<HttpVerb, std::vector<Privileges>> tagKeyServiceMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// LogEntry
std::map<HttpVerb, std::vector<Privileges>> tagLogEntryMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// LogEntryCollection
std::map<HttpVerb, std::vector<Privileges>> tagLogEntryCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// LogService
std::map<HttpVerb, std::vector<Privileges>> tagLogServiceMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// LogServiceCollection
std::map<HttpVerb, std::vector<Privileges>> tagLogServiceCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// Manager
std::map<HttpVerb, std::vector<Privileges>> tagManagerMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// ManagerCollection
std::map<HttpVerb, std::vector<Privileges>> tagManagerCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// ManagerAccount
std::map<HttpVerb, std::vector<Privileges>> tagManagerAccountMap = {
    {HttpVerb::Get,
     std::vector<Privileges>(
         privilegeSetConfigureManagerOrConfigureUsersOrConfigureSelf.begin(),
         privilegeSetConfigureManagerOrConfigureUsersOrConfigureSelf.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureUsers.begin(),
                             privilegeSetConfigureUsers.end())},
    {HttpVerb::Post, std::vector<Privileges>(privilegeSetConfigureUsers.begin(),
                                             privilegeSetConfigureUsers.end())},
    {HttpVerb::Put, std::vector<Privileges>(privilegeSetConfigureUsers.begin(),
                                            privilegeSetConfigureUsers.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureUsers.begin(),
                             privilegeSetConfigureUsers.end())},
};

// ManagerAccountCollection
std::map<HttpVerb, std::vector<Privileges>> tagManagerAccountCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureUsers.begin(),
                             privilegeSetConfigureUsers.end())},
    {HttpVerb::Put, std::vector<Privileges>(privilegeSetConfigureUsers.begin(),
                                            privilegeSetConfigureUsers.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureUsers.begin(),
                             privilegeSetConfigureUsers.end())},
    {HttpVerb::Post, std::vector<Privileges>(privilegeSetConfigureUsers.begin(),
                                             privilegeSetConfigureUsers.end())},
};

// ManagerDiagnosticData
std::map<HttpVerb, std::vector<Privileges>> tagManagerDiagnosticDataMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// ManagerNetworkProtocol
std::map<HttpVerb, std::vector<Privileges>> tagManagerNetworkProtocolMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// MediaController
std::map<HttpVerb, std::vector<Privileges>> tagMediaControllerMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// MediaControllerCollection
std::map<HttpVerb, std::vector<Privileges>> tagMediaControllerCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// Memory
std::map<HttpVerb, std::vector<Privileges>> tagMemoryMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// MemoryCollection
std::map<HttpVerb, std::vector<Privileges>> tagMemoryCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// MemoryChunks
std::map<HttpVerb, std::vector<Privileges>> tagMemoryChunksMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// MemoryChunksCollection
std::map<HttpVerb, std::vector<Privileges>> tagMemoryChunksCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// MemoryDomain
std::map<HttpVerb, std::vector<Privileges>> tagMemoryDomainMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// MemoryDomainCollection
std::map<HttpVerb, std::vector<Privileges>> tagMemoryDomainCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// MemoryMetrics
std::map<HttpVerb, std::vector<Privileges>> tagMemoryMetricsMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// MessageRegistryFile
std::map<HttpVerb, std::vector<Privileges>> tagMessageRegistryFileMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// MessageRegistryFileCollection
std::map<HttpVerb, std::vector<Privileges>>
    tagMessageRegistryFileCollectionMap = {
        {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                privilegeSetLogin.end())},
        {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                 privilegeSetLogin.end())},
        {HttpVerb::Patch,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
        {HttpVerb::Post,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
        {HttpVerb::Put,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
        {HttpVerb::Delete,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
};

// MetricDefinition
std::map<HttpVerb, std::vector<Privileges>> tagMetricDefinitionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// MetricDefinitionCollection
std::map<HttpVerb, std::vector<Privileges>> tagMetricDefinitionCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// MetricReport
std::map<HttpVerb, std::vector<Privileges>> tagMetricReportMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// MetricReportCollection
std::map<HttpVerb, std::vector<Privileges>> tagMetricReportCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// MetricReportDefinition
std::map<HttpVerb, std::vector<Privileges>> tagMetricReportDefinitionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// MetricReportDefinitionCollection
std::map<HttpVerb, std::vector<Privileges>>
    tagMetricReportDefinitionCollectionMap = {
        {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                privilegeSetLogin.end())},
        {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                 privilegeSetLogin.end())},
        {HttpVerb::Patch,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
        {HttpVerb::Put,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
        {HttpVerb::Delete,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
        {HttpVerb::Post,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
};

// NetworkAdapter
std::map<HttpVerb, std::vector<Privileges>> tagNetworkAdapterMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// NetworkAdapterCollection
std::map<HttpVerb, std::vector<Privileges>> tagNetworkAdapterCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// NetworkAdapterMetrics
std::map<HttpVerb, std::vector<Privileges>> tagNetworkAdapterMetricsMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// NetworkDeviceFunction
std::map<HttpVerb, std::vector<Privileges>> tagNetworkDeviceFunctionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// NetworkDeviceFunctionCollection
std::map<HttpVerb, std::vector<Privileges>>
    tagNetworkDeviceFunctionCollectionMap = {
        {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                privilegeSetLogin.end())},
        {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                 privilegeSetLogin.end())},
        {HttpVerb::Patch,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Post,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Put,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Delete,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
};

// NetworkDeviceFunctionMetrics
std::map<HttpVerb, std::vector<Privileges>> tagNetworkDeviceFunctionMetricsMap =
    {
        {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                privilegeSetLogin.end())},
        {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                 privilegeSetLogin.end())},
        {HttpVerb::Patch,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
        {HttpVerb::Put,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
        {HttpVerb::Delete,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
        {HttpVerb::Post,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
};

// NetworkInterface
std::map<HttpVerb, std::vector<Privileges>> tagNetworkInterfaceMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// NetworkInterfaceCollection
std::map<HttpVerb, std::vector<Privileges>> tagNetworkInterfaceCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// NetworkPort
std::map<HttpVerb, std::vector<Privileges>> tagNetworkPortMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// NetworkPortCollection
std::map<HttpVerb, std::vector<Privileges>> tagNetworkPortCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// OperatingConfig
std::map<HttpVerb, std::vector<Privileges>> tagOperatingConfigMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// OperatingConfigCollection
std::map<HttpVerb, std::vector<Privileges>> tagOperatingConfigCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// Outlet
std::map<HttpVerb, std::vector<Privileges>> tagOutletMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// OutletCollection
std::map<HttpVerb, std::vector<Privileges>> tagOutletCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// OutletGroup
std::map<HttpVerb, std::vector<Privileges>> tagOutletGroupMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// OutletGroupCollection
std::map<HttpVerb, std::vector<Privileges>> tagOutletGroupCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// PCIeDevice
std::map<HttpVerb, std::vector<Privileges>> tagPCIeDeviceMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// PCIeDeviceCollection
std::map<HttpVerb, std::vector<Privileges>> tagPCIeDeviceCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// PCIeFunction
std::map<HttpVerb, std::vector<Privileges>> tagPCIeFunctionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// PCIeFunctionCollection
std::map<HttpVerb, std::vector<Privileges>> tagPCIeFunctionCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// PCIeSlots
std::map<HttpVerb, std::vector<Privileges>> tagPCIeSlotsMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// Port
std::map<HttpVerb, std::vector<Privileges>> tagPortMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// PortCollection
std::map<HttpVerb, std::vector<Privileges>> tagPortCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// PortMetrics
std::map<HttpVerb, std::vector<Privileges>> tagPortMetricsMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// Power
std::map<HttpVerb, std::vector<Privileges>> tagPowerMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// PowerDistribution
std::map<HttpVerb, std::vector<Privileges>> tagPowerDistributionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// PowerDistributionCollection
std::map<HttpVerb, std::vector<Privileges>> tagPowerDistributionCollectionMap =
    {
        {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                privilegeSetLogin.end())},
        {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                 privilegeSetLogin.end())},
        {HttpVerb::Patch,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Post,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Put,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Delete,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
};

// PowerDistributionMetrics
std::map<HttpVerb, std::vector<Privileges>> tagPowerDistributionMetricsMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// PowerDomain
std::map<HttpVerb, std::vector<Privileges>> tagPowerDomainMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// PowerDomainCollection
std::map<HttpVerb, std::vector<Privileges>> tagPowerDomainCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// PowerEquipment
std::map<HttpVerb, std::vector<Privileges>> tagPowerEquipmentMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// PowerSubsystem
std::map<HttpVerb, std::vector<Privileges>> tagPowerSubsystemMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// PowerSupply
std::map<HttpVerb, std::vector<Privileges>> tagPowerSupplyMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// PowerSupplyCollection
std::map<HttpVerb, std::vector<Privileges>> tagPowerSupplyCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// PowerSupplyMetrics
std::map<HttpVerb, std::vector<Privileges>> tagPowerSupplyMetricsMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// Processor
std::map<HttpVerb, std::vector<Privileges>> tagProcessorMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// ProcessorCollection
std::map<HttpVerb, std::vector<Privileges>> tagProcessorCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// ProcessorMetrics
std::map<HttpVerb, std::vector<Privileges>> tagProcessorMetricsMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// ResourceBlock
std::map<HttpVerb, std::vector<Privileges>> tagResourceBlockMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// ResourceBlockCollection
std::map<HttpVerb, std::vector<Privileges>> tagResourceBlockCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// Role
std::map<HttpVerb, std::vector<Privileges>> tagRoleMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// RoleCollection
std::map<HttpVerb, std::vector<Privileges>> tagRoleCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// RouteEntry
std::map<HttpVerb, std::vector<Privileges>> tagRouteEntryMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// RouteEntryCollection
std::map<HttpVerb, std::vector<Privileges>> tagRouteEntryCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// RouteSetEntry
std::map<HttpVerb, std::vector<Privileges>> tagRouteSetEntryMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// RouteSetEntryCollection
std::map<HttpVerb, std::vector<Privileges>> tagRouteSetEntryCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// SecureBoot
std::map<HttpVerb, std::vector<Privileges>> tagSecureBootMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// SecureBootDatabase
std::map<HttpVerb, std::vector<Privileges>> tagSecureBootDatabaseMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// SecureBootDatabaseCollection
std::map<HttpVerb, std::vector<Privileges>> tagSecureBootDatabaseCollectionMap =
    {
        {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                privilegeSetLogin.end())},
        {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                 privilegeSetLogin.end())},
        {HttpVerb::Patch,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Post,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Put,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Delete,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
};

// Sensor
std::map<HttpVerb, std::vector<Privileges>> tagSensorMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// SensorCollection
std::map<HttpVerb, std::vector<Privileges>> tagSensorCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// SerialInterface
std::map<HttpVerb, std::vector<Privileges>> tagSerialInterfaceMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// SerialInterfaceCollection
std::map<HttpVerb, std::vector<Privileges>> tagSerialInterfaceCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// ServiceRoot
std::map<HttpVerb, std::vector<Privileges>> tagServiceRootMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLoginOrNoAuth.begin(),
                                            privilegeSetLoginOrNoAuth.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLoginOrNoAuth.begin(),
                                             privilegeSetLoginOrNoAuth.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// Session
std::map<HttpVerb, std::vector<Privileges>> tagSessionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete, std::vector<Privileges>(
                           privilegeSetConfigureManagerOrConfigureSelf.begin(),
                           privilegeSetConfigureManagerOrConfigureSelf.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// SessionCollection
std::map<HttpVerb, std::vector<Privileges>> tagSessionCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
};

// SessionService
std::map<HttpVerb, std::vector<Privileges>> tagSessionServiceMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// Signature
std::map<HttpVerb, std::vector<Privileges>> tagSignatureMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// SignatureCollection
std::map<HttpVerb, std::vector<Privileges>> tagSignatureCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// SimpleStorage
std::map<HttpVerb, std::vector<Privileges>> tagSimpleStorageMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// SimpleStorageCollection
std::map<HttpVerb, std::vector<Privileges>> tagSimpleStorageCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// SoftwareInventory
std::map<HttpVerb, std::vector<Privileges>> tagSoftwareInventoryMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// SoftwareInventoryCollection
std::map<HttpVerb, std::vector<Privileges>> tagSoftwareInventoryCollectionMap =
    {
        {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                privilegeSetLogin.end())},
        {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                 privilegeSetLogin.end())},
        {HttpVerb::Patch,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Post,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Put,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Delete,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
};

// Storage
std::map<HttpVerb, std::vector<Privileges>> tagStorageMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// StorageCollection
std::map<HttpVerb, std::vector<Privileges>> tagStorageCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// StorageController
std::map<HttpVerb, std::vector<Privileges>> tagStorageControllerMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// StorageControllerCollection
std::map<HttpVerb, std::vector<Privileges>> tagStorageControllerCollectionMap =
    {
        {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                privilegeSetLogin.end())},
        {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                 privilegeSetLogin.end())},
        {HttpVerb::Patch,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Post,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Put,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
        {HttpVerb::Delete,
         std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                                 privilegeSetConfigureComponents.end())},
};

// Switch
std::map<HttpVerb, std::vector<Privileges>> tagSwitchMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// SwitchCollection
std::map<HttpVerb, std::vector<Privileges>> tagSwitchCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// Task
std::map<HttpVerb, std::vector<Privileges>> tagTaskMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// TaskCollection
std::map<HttpVerb, std::vector<Privileges>> tagTaskCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// TaskService
std::map<HttpVerb, std::vector<Privileges>> tagTaskServiceMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// TelemetryService
std::map<HttpVerb, std::vector<Privileges>> tagTelemetryServiceMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// Thermal
std::map<HttpVerb, std::vector<Privileges>> tagThermalMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// ThermalMetrics
std::map<HttpVerb, std::vector<Privileges>> tagThermalMetricsMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// ThermalSubsystem
std::map<HttpVerb, std::vector<Privileges>> tagThermalSubsystemMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// Triggers
std::map<HttpVerb, std::vector<Privileges>> tagTriggersMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// TriggersCollection
std::map<HttpVerb, std::vector<Privileges>> tagTriggersCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// UpdateService
std::map<HttpVerb, std::vector<Privileges>> tagUpdateServiceMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// USBController
std::map<HttpVerb, std::vector<Privileges>> tagUSBControllerMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// USBControllerCollection
std::map<HttpVerb, std::vector<Privileges>> tagUSBControllerCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// VCATEntry
std::map<HttpVerb, std::vector<Privileges>> tagVCATEntryMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// VCATEntryCollection
std::map<HttpVerb, std::vector<Privileges>> tagVCATEntryCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// VLanNetworkInterface
std::map<HttpVerb, std::vector<Privileges>> tagVLanNetworkInterfaceMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// VLanNetworkInterfaceCollection
std::map<HttpVerb, std::vector<Privileges>>
    tagVLanNetworkInterfaceCollectionMap = {
        {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                privilegeSetLogin.end())},
        {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                                 privilegeSetLogin.end())},
        {HttpVerb::Patch,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
        {HttpVerb::Put,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
        {HttpVerb::Delete,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
        {HttpVerb::Post,
         std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                                 privilegeSetConfigureManager.end())},
};

// VirtualMedia
std::map<HttpVerb, std::vector<Privileges>> tagVirtualMediaMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// VirtualMediaCollection
std::map<HttpVerb, std::vector<Privileges>> tagVirtualMediaCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureManager.begin(),
                             privilegeSetConfigureManager.end())},
};

// Volume
std::map<HttpVerb, std::vector<Privileges>> tagVolumeMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// VolumeCollection
std::map<HttpVerb, std::vector<Privileges>> tagVolumeCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// Zone
std::map<HttpVerb, std::vector<Privileges>> tagZoneMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

// ZoneCollection
std::map<HttpVerb, std::vector<Privileges>> tagZoneCollectionMap = {
    {HttpVerb::Get, std::vector<Privileges>(privilegeSetLogin.begin(),
                                            privilegeSetLogin.end())},
    {HttpVerb::Head, std::vector<Privileges>(privilegeSetLogin.begin(),
                                             privilegeSetLogin.end())},
    {HttpVerb::Patch,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Post,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Put,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
    {HttpVerb::Delete,
     std::vector<Privileges>(privilegeSetConfigureComponents.begin(),
                             privilegeSetConfigureComponents.end())},
};

std::map<EntityTag, std::map<HttpVerb, std::vector<Privileges>>>
    privilegeSetMap = {
        {EntityTag::tagAccelerationFunction, tagAccelerationFunctionMap},
        {EntityTag::tagAccelerationFunctionCollection,
         tagAccelerationFunctionCollectionMap},
        {EntityTag::tagAccountService, tagAccountServiceMap},
        {EntityTag::tagActionInfo, tagActionInfoMap},
        {EntityTag::tagAddressPool, tagAddressPoolMap},
        {EntityTag::tagAddressPoolCollection, tagAddressPoolCollectionMap},
        {EntityTag::tagAggregate, tagAggregateMap},
        {EntityTag::tagAggregateCollection, tagAggregateCollectionMap},
        {EntityTag::tagAggregationService, tagAggregationServiceMap},
        {EntityTag::tagAggregationSource, tagAggregationSourceMap},
        {EntityTag::tagAggregationSourceCollection,
         tagAggregationSourceCollectionMap},
        {EntityTag::tagAllowDeny, tagAllowDenyMap},
        {EntityTag::tagAllowDenyCollection, tagAllowDenyCollectionMap},
        {EntityTag::tagAssembly, tagAssemblyMap},
        {EntityTag::tagBattery, tagBatteryMap},
        {EntityTag::tagBatteryCollection, tagBatteryCollectionMap},
        {EntityTag::tagBatteryMetrics, tagBatteryMetricsMap},
        {EntityTag::tagBios, tagBiosMap},
        {EntityTag::tagBootOption, tagBootOptionMap},
        {EntityTag::tagBootOptionCollection, tagBootOptionCollectionMap},
        {EntityTag::tagCable, tagCableMap},
        {EntityTag::tagCableCollection, tagCableCollectionMap},
        {EntityTag::tagCertificate, tagCertificateMap},
        {EntityTag::tagCertificateCollection, tagCertificateCollectionMap},
        {EntityTag::tagCertificateLocations, tagCertificateLocationsMap},
        {EntityTag::tagCertificateService, tagCertificateServiceMap},
        {EntityTag::tagChassis, tagChassisMap},
        {EntityTag::tagChassisCollection, tagChassisCollectionMap},
        {EntityTag::tagCircuit, tagCircuitMap},
        {EntityTag::tagCircuitCollection, tagCircuitCollectionMap},
        {EntityTag::tagCompositionReservation, tagCompositionReservationMap},
        {EntityTag::tagCompositionReservationCollection,
         tagCompositionReservationCollectionMap},
        {EntityTag::tagCompositionService, tagCompositionServiceMap},
        {EntityTag::tagComputerSystem, tagComputerSystemMap},
        {EntityTag::tagComputerSystemCollection,
         tagComputerSystemCollectionMap},
        {EntityTag::tagConnection, tagConnectionMap},
        {EntityTag::tagConnectionCollection, tagConnectionCollectionMap},
        {EntityTag::tagConnectionMethod, tagConnectionMethodMap},
        {EntityTag::tagConnectionMethodCollection,
         tagConnectionMethodCollectionMap},
        {EntityTag::tagControl, tagControlMap},
        {EntityTag::tagControlCollection, tagControlCollectionMap},
        {EntityTag::tagDrive, tagDriveMap},
        {EntityTag::tagDriveCollection, tagDriveCollectionMap},
        {EntityTag::tagEndpoint, tagEndpointMap},
        {EntityTag::tagEndpointCollection, tagEndpointCollectionMap},
        {EntityTag::tagEndpointGroup, tagEndpointGroupMap},
        {EntityTag::tagEndpointGroupCollection, tagEndpointGroupCollectionMap},
        {EntityTag::tagEnvironmentMetrics, tagEnvironmentMetricsMap},
        {EntityTag::tagEthernetInterface, tagEthernetInterfaceMap},
        {EntityTag::tagEthernetInterfaceCollection,
         tagEthernetInterfaceCollectionMap},
        {EntityTag::tagEventDestination, tagEventDestinationMap},
        {EntityTag::tagEventDestinationCollection,
         tagEventDestinationCollectionMap},
        {EntityTag::tagEventService, tagEventServiceMap},
        {EntityTag::tagExternalAccountProvider, tagExternalAccountProviderMap},
        {EntityTag::tagExternalAccountProviderCollection,
         tagExternalAccountProviderCollectionMap},
        {EntityTag::tagFabric, tagFabricMap},
        {EntityTag::tagFabricCollection, tagFabricCollectionMap},
        {EntityTag::tagFabricAdapter, tagFabricAdapterMap},
        {EntityTag::tagFabricAdapterCollection, tagFabricAdapterCollectionMap},
        {EntityTag::tagFacility, tagFacilityMap},
        {EntityTag::tagFacilityCollection, tagFacilityCollectionMap},
        {EntityTag::tagFan, tagFanMap},
        {EntityTag::tagFanCollection, tagFanCollectionMap},
        {EntityTag::tagGraphicsController, tagGraphicsControllerMap},
        {EntityTag::tagGraphicsControllerCollection,
         tagGraphicsControllerCollectionMap},
        {EntityTag::tagHostInterface, tagHostInterfaceMap},
        {EntityTag::tagHostInterfaceCollection, tagHostInterfaceCollectionMap},
        {EntityTag::tagJob, tagJobMap},
        {EntityTag::tagJobCollection, tagJobCollectionMap},
        {EntityTag::tagJobService, tagJobServiceMap},
        {EntityTag::tagJsonSchemaFile, tagJsonSchemaFileMap},
        {EntityTag::tagJsonSchemaFileCollection,
         tagJsonSchemaFileCollectionMap},
        {EntityTag::tagKey, tagKeyMap},
        {EntityTag::tagKeyCollection, tagKeyCollectionMap},
        {EntityTag::tagKeyPolicy, tagKeyPolicyMap},
        {EntityTag::tagKeyPolicyCollection, tagKeyPolicyCollectionMap},
        {EntityTag::tagKeyService, tagKeyServiceMap},
        {EntityTag::tagLogEntry, tagLogEntryMap},
        {EntityTag::tagLogEntryCollection, tagLogEntryCollectionMap},
        {EntityTag::tagLogService, tagLogServiceMap},
        {EntityTag::tagLogServiceCollection, tagLogServiceCollectionMap},
        {EntityTag::tagManager, tagManagerMap},
        {EntityTag::tagManagerCollection, tagManagerCollectionMap},
        {EntityTag::tagManagerAccount, tagManagerAccountMap},
        {EntityTag::tagManagerAccountCollection,
         tagManagerAccountCollectionMap},
        {EntityTag::tagManagerDiagnosticData, tagManagerDiagnosticDataMap},
        {EntityTag::tagManagerNetworkProtocol, tagManagerNetworkProtocolMap},
        {EntityTag::tagMediaController, tagMediaControllerMap},
        {EntityTag::tagMediaControllerCollection,
         tagMediaControllerCollectionMap},
        {EntityTag::tagMemory, tagMemoryMap},
        {EntityTag::tagMemoryCollection, tagMemoryCollectionMap},
        {EntityTag::tagMemoryChunks, tagMemoryChunksMap},
        {EntityTag::tagMemoryChunksCollection, tagMemoryChunksCollectionMap},
        {EntityTag::tagMemoryDomain, tagMemoryDomainMap},
        {EntityTag::tagMemoryDomainCollection, tagMemoryDomainCollectionMap},
        {EntityTag::tagMemoryMetrics, tagMemoryMetricsMap},
        {EntityTag::tagMessageRegistryFile, tagMessageRegistryFileMap},
        {EntityTag::tagMessageRegistryFileCollection,
         tagMessageRegistryFileCollectionMap},
        {EntityTag::tagMetricDefinition, tagMetricDefinitionMap},
        {EntityTag::tagMetricDefinitionCollection,
         tagMetricDefinitionCollectionMap},
        {EntityTag::tagMetricReport, tagMetricReportMap},
        {EntityTag::tagMetricReportCollection, tagMetricReportCollectionMap},
        {EntityTag::tagMetricReportDefinition, tagMetricReportDefinitionMap},
        {EntityTag::tagMetricReportDefinitionCollection,
         tagMetricReportDefinitionCollectionMap},
        {EntityTag::tagNetworkAdapter, tagNetworkAdapterMap},
        {EntityTag::tagNetworkAdapterCollection,
         tagNetworkAdapterCollectionMap},
        {EntityTag::tagNetworkAdapterMetrics, tagNetworkAdapterMetricsMap},
        {EntityTag::tagNetworkDeviceFunction, tagNetworkDeviceFunctionMap},
        {EntityTag::tagNetworkDeviceFunctionCollection,
         tagNetworkDeviceFunctionCollectionMap},
        {EntityTag::tagNetworkDeviceFunctionMetrics,
         tagNetworkDeviceFunctionMetricsMap},
        {EntityTag::tagNetworkInterface, tagNetworkInterfaceMap},
        {EntityTag::tagNetworkInterfaceCollection,
         tagNetworkInterfaceCollectionMap},
        {EntityTag::tagNetworkPort, tagNetworkPortMap},
        {EntityTag::tagNetworkPortCollection, tagNetworkPortCollectionMap},
        {EntityTag::tagOperatingConfig, tagOperatingConfigMap},
        {EntityTag::tagOperatingConfigCollection,
         tagOperatingConfigCollectionMap},
        {EntityTag::tagOutlet, tagOutletMap},
        {EntityTag::tagOutletCollection, tagOutletCollectionMap},
        {EntityTag::tagOutletGroup, tagOutletGroupMap},
        {EntityTag::tagOutletGroupCollection, tagOutletGroupCollectionMap},
        {EntityTag::tagPCIeDevice, tagPCIeDeviceMap},
        {EntityTag::tagPCIeDeviceCollection, tagPCIeDeviceCollectionMap},
        {EntityTag::tagPCIeFunction, tagPCIeFunctionMap},
        {EntityTag::tagPCIeFunctionCollection, tagPCIeFunctionCollectionMap},
        {EntityTag::tagPCIeSlots, tagPCIeSlotsMap},
        {EntityTag::tagPort, tagPortMap},
        {EntityTag::tagPortCollection, tagPortCollectionMap},
        {EntityTag::tagPortMetrics, tagPortMetricsMap},
        {EntityTag::tagPower, tagPowerMap},
        {EntityTag::tagPowerDistribution, tagPowerDistributionMap},
        {EntityTag::tagPowerDistributionCollection,
         tagPowerDistributionCollectionMap},
        {EntityTag::tagPowerDistributionMetrics,
         tagPowerDistributionMetricsMap},
        {EntityTag::tagPowerDomain, tagPowerDomainMap},
        {EntityTag::tagPowerDomainCollection, tagPowerDomainCollectionMap},
        {EntityTag::tagPowerEquipment, tagPowerEquipmentMap},
        {EntityTag::tagPowerSubsystem, tagPowerSubsystemMap},
        {EntityTag::tagPowerSupply, tagPowerSupplyMap},
        {EntityTag::tagPowerSupplyCollection, tagPowerSupplyCollectionMap},
        {EntityTag::tagPowerSupplyMetrics, tagPowerSupplyMetricsMap},
        {EntityTag::tagProcessor, tagProcessorMap},
        {EntityTag::tagProcessorCollection, tagProcessorCollectionMap},
        {EntityTag::tagProcessorMetrics, tagProcessorMetricsMap},
        {EntityTag::tagResourceBlock, tagResourceBlockMap},
        {EntityTag::tagResourceBlockCollection, tagResourceBlockCollectionMap},
        {EntityTag::tagRole, tagRoleMap},
        {EntityTag::tagRoleCollection, tagRoleCollectionMap},
        {EntityTag::tagRouteEntry, tagRouteEntryMap},
        {EntityTag::tagRouteEntryCollection, tagRouteEntryCollectionMap},
        {EntityTag::tagRouteSetEntry, tagRouteSetEntryMap},
        {EntityTag::tagRouteSetEntryCollection, tagRouteSetEntryCollectionMap},
        {EntityTag::tagSecureBoot, tagSecureBootMap},
        {EntityTag::tagSecureBootDatabase, tagSecureBootDatabaseMap},
        {EntityTag::tagSecureBootDatabaseCollection,
         tagSecureBootDatabaseCollectionMap},
        {EntityTag::tagSensor, tagSensorMap},
        {EntityTag::tagSensorCollection, tagSensorCollectionMap},
        {EntityTag::tagSerialInterface, tagSerialInterfaceMap},
        {EntityTag::tagSerialInterfaceCollection,
         tagSerialInterfaceCollectionMap},
        {EntityTag::tagServiceRoot, tagServiceRootMap},
        {EntityTag::tagSession, tagSessionMap},
        {EntityTag::tagSessionCollection, tagSessionCollectionMap},
        {EntityTag::tagSessionService, tagSessionServiceMap},
        {EntityTag::tagSignature, tagSignatureMap},
        {EntityTag::tagSignatureCollection, tagSignatureCollectionMap},
        {EntityTag::tagSimpleStorage, tagSimpleStorageMap},
        {EntityTag::tagSimpleStorageCollection, tagSimpleStorageCollectionMap},
        {EntityTag::tagSoftwareInventory, tagSoftwareInventoryMap},
        {EntityTag::tagSoftwareInventoryCollection,
         tagSoftwareInventoryCollectionMap},
        {EntityTag::tagStorage, tagStorageMap},
        {EntityTag::tagStorageCollection, tagStorageCollectionMap},
        {EntityTag::tagStorageController, tagStorageControllerMap},
        {EntityTag::tagStorageControllerCollection,
         tagStorageControllerCollectionMap},
        {EntityTag::tagSwitch, tagSwitchMap},
        {EntityTag::tagSwitchCollection, tagSwitchCollectionMap},
        {EntityTag::tagTask, tagTaskMap},
        {EntityTag::tagTaskCollection, tagTaskCollectionMap},
        {EntityTag::tagTaskService, tagTaskServiceMap},
        {EntityTag::tagTelemetryService, tagTelemetryServiceMap},
        {EntityTag::tagThermal, tagThermalMap},
        {EntityTag::tagThermalMetrics, tagThermalMetricsMap},
        {EntityTag::tagThermalSubsystem, tagThermalSubsystemMap},
        {EntityTag::tagTriggers, tagTriggersMap},
        {EntityTag::tagTriggersCollection, tagTriggersCollectionMap},
        {EntityTag::tagUpdateService, tagUpdateServiceMap},
        {EntityTag::tagUSBController, tagUSBControllerMap},
        {EntityTag::tagUSBControllerCollection, tagUSBControllerCollectionMap},
        {EntityTag::tagVCATEntry, tagVCATEntryMap},
        {EntityTag::tagVCATEntryCollection, tagVCATEntryCollectionMap},
        {EntityTag::tagVLanNetworkInterface, tagVLanNetworkInterfaceMap},
        {EntityTag::tagVLanNetworkInterfaceCollection,
         tagVLanNetworkInterfaceCollectionMap},
        {EntityTag::tagVirtualMedia, tagVirtualMediaMap},
        {EntityTag::tagVirtualMediaCollection, tagVirtualMediaCollectionMap},
        {EntityTag::tagVolume, tagVolumeMap},
        {EntityTag::tagVolumeCollection, tagVolumeCollectionMap},
        {EntityTag::tagZone, tagZoneMap},
        {EntityTag::tagZoneCollection, tagZoneCollectionMap},
};

inline std::span<Privileges>
    getPrivilegesFromUrlAndMethod(const std::string& url, HttpVerb method)
{
    return privilegeSetMap[entityTagMap[url]][method];
}
} // namespace redfish::privileges
