{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0554e6e6_4a9f8bbb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-02-03T17:02:47Z",
      "side": 1,
      "message": "50/72 please",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 60
      },
      "revId": "c83bdc4284dde4b05d669e76bd9aea082e63e307",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39129e2d_d84c35e0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-02-03T17:02:47Z",
      "side": 1,
      "message": "This is illegal in the redfish spec.  Empty string does not mean \"null\"  The correct payload for this request would be [\"1.1.1.1\"]",
      "range": {
        "startLine": 13,
        "startChar": 41,
        "endLine": 13,
        "endChar": 45
      },
      "revId": "c83bdc4284dde4b05d669e76bd9aea082e63e307",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7719cf0e_84953d83",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000401
      },
      "writtenOn": "2022-02-04T17:58:04Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "39129e2d_d84c35e0",
      "range": {
        "startLine": 13,
        "startChar": 41,
        "endLine": 13,
        "endChar": 45
      },
      "revId": "c83bdc4284dde4b05d669e76bd9aea082e63e307",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cacdf842_15c833c1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-02-03T17:05:44Z",
      "side": 1,
      "message": "Per crud semantics, if we HAD accepted the above PATCH payload, this should be returning NTPServers: [\"1.1.1.1\", \"\"], which again, is incorrect, and we shouldn\u0027t accept as valid input.",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 27,
        "endChar": 5
      },
      "revId": "c83bdc4284dde4b05d669e76bd9aea082e63e307",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "092773c7_4c4f90f3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000401
      },
      "writtenOn": "2022-02-04T17:58:04Z",
      "side": 1,
      "message": "yeah i observed this o/p when i tested without this patch.\n\n\u003e we shouldn\u0027t accept as valid input\nSo this means, we should send an error back to the user on invalid input (\"\" in this case), right.",
      "parentUuid": "cacdf842_15c833c1",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 27,
        "endChar": 5
      },
      "revId": "c83bdc4284dde4b05d669e76bd9aea082e63e307",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3894ecbc_eb554c86",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-02-04T23:42:19Z",
      "side": 1,
      "message": "Yes, to be more precise, phosphor-time-manager should not accept a list with an empty property, and should be returning a reasonable return code when bmcweb tries to set it, so we can translate that error to redfish, and forward it back to the user.  We should not be doing empty string checks directly in bmcweb.",
      "parentUuid": "092773c7_4c4f90f3",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 27,
        "endChar": 5
      },
      "revId": "c83bdc4284dde4b05d669e76bd9aea082e63e307",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe61fd40_2c47d876",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000401
      },
      "writtenOn": "2022-03-09T10:40:13Z",
      "side": 1,
      "message": "But I am still not sure how \"phosphor-time-manager\" is tied to this. We do a patch on the networkd\u0027s ethernet interface\u0027s NTPServers property and write it to a config file.\ntimesyncd will fetch this in \"LinkNTPServers\" property of org.freedesktop.timesync1.Manager interface of the dbus object.",
      "parentUuid": "3894ecbc_eb554c86",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 27,
        "endChar": 5
      },
      "revId": "c83bdc4284dde4b05d669e76bd9aea082e63e307",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbbebdab_ce02cb8d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-12T18:19:25Z",
      "side": 1,
      "message": "Ah, my mistake then if we\u0027re writing to networkd.  Regardless, networkd should be parsing the list of entries we give it and making sure it\u0027s sane (ie not empty), not just blindly writing it to a config file.",
      "parentUuid": "fe61fd40_2c47d876",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 27,
        "endChar": 5
      },
      "revId": "c83bdc4284dde4b05d669e76bd9aea082e63e307",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "567bc1bb_c799d627",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-16T16:20:36Z",
      "side": 1,
      "message": "Can this patch be abandoned?",
      "revId": "c83bdc4284dde4b05d669e76bd9aea082e63e307",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7812c04_97a6afab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000401
      },
      "writtenOn": "2022-03-17T17:15:39Z",
      "side": 1,
      "message": "I think yes, this logic can be taken to the backend as you mentioned; and if the backend returns error on null values, bmcweb will anyways catch this error and send it back to the client.",
      "parentUuid": "567bc1bb_c799d627",
      "revId": "c83bdc4284dde4b05d669e76bd9aea082e63e307",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}