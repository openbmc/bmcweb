{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e46898e2_79eb5a5c",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 224,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2023-05-23T22:18:54Z",
      "side": 0,
      "message": "Wait, why is this correct?\n\nThe default expand handler runs after dedicated ones, so minus is correct to me",
      "range": {
        "startLine": 224,
        "startChar": 33,
        "endLine": 224,
        "endChar": 50
      },
      "revId": "479e899d5f57a67647f83b7f615d2c8565290bcf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79e74a81_82b11079",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 224,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-05-23T22:26:08Z",
      "side": 0,
      "message": "The issue is when it start paring the json to find odata.id with https://github.com/openbmc/bmcweb/blob/479e899d5f57a67647f83b7f615d2c8565290bcf/redfish-core/include/utils/query_param.hpp#.\n\n`findNavigationReferencesRecursive` only parse 1 level of odata.id since it doesn\u0027t skip the one that is delegated. \n\nAnother potential that\u0027s more clear on the intention would be...\n\nPass delegated to processAllParams -\u003e startQuery\n\nhttps://github.com/openbmc/bmcweb/blob/479e899d5f57a67647f83b7f615d2c8565290bcf/redfish-core/include/utils/query_param.hpp#L962-L1003\n\nSo we do\n\n```\nstd::vector\u003cExpandNode\u003e nodes \u003d findNavigationReferences(\n            query.expandType, query.expandLevel + delegated.expandLevel, finalRes-\u003eres.jsonValue);\n```\ninstead. Or something like skip first `delegated.expandLevel` level.",
      "parentUuid": "e46898e2_79eb5a5c",
      "range": {
        "startLine": 224,
        "startChar": 33,
        "endLine": 224,
        "endChar": 50
      },
      "revId": "479e899d5f57a67647f83b7f615d2c8565290bcf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cabf546_c4887a37",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 224,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-05-24T05:41:53Z",
      "side": 0,
      "message": "updated with the approach that\u0027s more self-explanatory.",
      "parentUuid": "79e74a81_82b11079",
      "range": {
        "startLine": 224,
        "startChar": 33,
        "endLine": 224,
        "endChar": 50
      },
      "revId": "479e899d5f57a67647f83b7f615d2c8565290bcf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bee186ad_d8d8a634",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 224,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-05-24T22:50:44Z",
      "side": 0,
      "message": "discussed with Nan offline and seems like my understand of the issue is wrong and that there is a different bug instead.\n\nMy assumption is that is is DFS, but it should be BFS instead. I believe the change should be https://gerrit.openbmc.org/c/openbmc/bmcweb/+/53228.\n\nThe change should just be not remove the depth and just go find all of the odata.id at the current json output. It is assumed that efficient expand will get to the point where is only expose one more level of odata.id.\n\nfix WIP.",
      "parentUuid": "9cabf546_c4887a37",
      "range": {
        "startLine": 224,
        "startChar": 33,
        "endLine": 224,
        "endChar": 50
      },
      "revId": "479e899d5f57a67647f83b7f615d2c8565290bcf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}