{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2107cd10_bc6d7b49",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 35,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-18T21:35:03Z",
      "side": 1,
      "message": "I see nothing in this patchset that\u0027s creating this as an array or calling emplace_back/push_back, which makes me believe that this test result is from another system, and not a result of this patchset.  Is it possible that this patchset wasn\u0027t actually tested?",
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ff7cfb0_f8033fa2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 35,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-01-23T06:20:51Z",
      "side": 1,
      "message": "NO, we tested it and Validator passed.\n\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/65286/7/redfish-core/lib/thermal_metrics.hpp#34\nThis is an array, but the writing method is different. I have updated it in the new patch as per your comment.",
      "parentUuid": "2107cd10_bc6d7b49",
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e73ed50_dc1fed2c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 35,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2024-09-12T22:19:24Z",
      "side": 1,
      "message": "The afterGetTemperatureValue() function calls emplace_back to add each entry to the TemperatureReadingsCelsius array.\nAdditionally getTemperatureReadingsCelsius() now creates the empty TemperatureReadingsCelsius array.\n\nI\u0027ve tested with hardware simulator for Rainier hardware.\n\nThe Redfish validator does not validate the DataSourceUri. This was reported and I\u0027ve updated the issue to indicate ThermalMetrics path has similar issue.\nhttps://github.com/DMTF/Redfish-Service-Validator/issues/598\n\nI\u0027ve manually checked the DataSourceUri being produced.",
      "parentUuid": "4ff7cfb0_f8033fa2",
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0f737cd_3e8c14d4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 35,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-13T22:25:25Z",
      "side": 1,
      "message": "I\u0027m still not sure how we can create an array without calling push_back, but this patchset has changed that this commit is probably invalid now.",
      "parentUuid": "9e73ed50_dc1fed2c",
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0f765b4_07592c81",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 38,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-18T21:35:03Z",
      "side": 1,
      "message": "just wrap your json in triple backticks.  No need to add line breaks in a json statement.",
      "range": {
        "startLine": 38,
        "startChar": 60,
        "endLine": 38,
        "endChar": 62
      },
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72ff1d65_18a85544",
        "filename": "/COMMIT_MSG",
        "patchSetId": 7
      },
      "lineNbr": 38,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-01-22T01:59:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c0f765b4_07592c81",
      "range": {
        "startLine": 38,
        "startChar": 60,
        "endLine": 38,
        "endChar": 62
      },
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af8ff4b8_ac3f5c34",
        "filename": "Redfish.md",
        "patchSetId": 7
      },
      "lineNbr": 322,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-18T21:42:28Z",
      "side": 1,
      "message": "This is an array of objects.  You need to call out the properties you\u0027ve implemented\n\nTemperatureReadingCelcius/Reading\n\netc.",
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29155d55_d6202af6",
        "filename": "Redfish.md",
        "patchSetId": 7
      },
      "lineNbr": 322,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-01-22T01:59:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "af8ff4b8_ac3f5c34",
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ba392eb_30ef122a",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 34,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-18T21:35:03Z",
      "side": 1,
      "message": "You call this tempArray, but it isn\u0027t an array?  Maybe you meant tempObject?  I would expect this to be an array.",
      "range": {
        "startLine": 34,
        "startChar": 20,
        "endLine": 34,
        "endChar": 29
      },
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b86c203_ce70aa5f",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 34,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-01-22T01:59:26Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "5ba392eb_30ef122a",
      "range": {
        "startLine": 34,
        "startChar": 20,
        "endLine": 34,
        "endChar": 29
      },
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "940c5908_40f7a1e5",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 34,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-22T22:08:33Z",
      "side": 1,
      "message": "Please don\u0027t resolve comments that aren\u0027t done.  Go through and reopen the ones that aren\u0027t complete.",
      "parentUuid": "2b86c203_ce70aa5f",
      "range": {
        "startLine": 34,
        "startChar": 20,
        "endLine": 34,
        "endChar": 29
      },
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4aeec343_62fca01a",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 34,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-01-23T06:20:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "940c5908_40f7a1e5",
      "range": {
        "startLine": 34,
        "startChar": 20,
        "endLine": 34,
        "endChar": 29
      },
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "550da352_b552fba5",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 39,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-18T21:35:03Z",
      "side": 1,
      "message": "Isn\u0027t this incorrect.  Sensor Ids include the name and type.  Did this link work in your testing?",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 39,
        "endChar": 68
      },
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "048c46e1_414e8f15",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 39,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-01-22T01:59:26Z",
      "side": 1,
      "message": "Sorry, I am not following ðŸ˜ž\n\nhttps://www.dmtf.org/sites/default/files/standards/documents/DSP0268_2023.3.pdf\n\n6.137.6 Example response\n```\n\"TemperatureReadingsCelsius\": [\n{\n\"Reading\": 40,\n\"DeviceName\": \"SystemBoard\",\n\"DataSourceUri\": \"/redfish/v1/Chassis/1U/Sensors/SysBrdTemp\"\n},\n{\n\"Reading\": 24.8,\n\"DeviceName\": \"Intake\",\n\"DataSourceUri\": \"/redfish/v1/Chassis/1U/Sensors/IntakeTemp\"\n},\n{\n\"Reading\": 39,\n\"DeviceName\": \"CPUSubsystem\",\n\"DataSourceUri\": \"/redfish/v1/Chassis/1U/Sensors/CPUTemps\"\n},\n{\n\"Reading\": 42,\n\"DeviceName\": \"MemorySubsystem\",\n\"DataSourceUri\": \"/redfish/v1/Chassis/1U/Sensors/MemoryTemp\"\n},\n{\n\"Reading\": 33,\n\"DeviceName\": \"PowerSupply\",\n\"DataSourceUri\": \"/redfish/v1/Chassis/1U/Sensors/PSTemp\"\n},\n{\n\"Reading\": 40.5,\n\"DeviceName\": \"Exhaust\",\n\"DataSourceUri\": \"/redfish/v1/Chassis/1U/Sensors/ExhaustTemp\"\n}\n```\nIs this incorrect?",
      "parentUuid": "550da352_b552fba5",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 39,
        "endChar": 68
      },
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd35cf64_392edd04",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 39,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-22T22:08:33Z",
      "side": 1,
      "message": "Please answer my question.  Did you test that the links your code produced were correct?\n\nYou\u0027re quoting a DTMF example (which is not the specification) that was not taken on an openbmc system.  \"SysBrdTemp\" in the example is a uri segment that the server has control over, and on openbmc, doesn\u0027t match the example you\u0027ve given.\n\nI would expect that your tests would fail, which is why I\u0027m asking if they were run recently.  If they\u0027re not failing, then I\u0027m misunderstanding something.",
      "parentUuid": "048c46e1_414e8f15",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 39,
        "endChar": 68
      },
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "145af015_03f4854a",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 39,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-01-23T06:20:51Z",
      "side": 1,
      "message": "\u003e Please answer my question.  Did you test that the links your code produced were correct?\n\nYes, validator passed, and ran for a while on fp5280g3 and rainier.",
      "parentUuid": "dd35cf64_392edd04",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 39,
        "endChar": 68
      },
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6a8a747_19cbd739",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 39,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-30T17:48:42Z",
      "side": 1,
      "message": "\u003e Did you test that the links your code produced were correct?\n\nI didn\u0027t ask if the validator passed.  I asked if you tested the links.  The validator doesn\u0027t test DataSourceUri links.",
      "parentUuid": "145af015_03f4854a",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 39,
        "endChar": 68
      },
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18e60906_306ba310",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 39,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2024-09-12T22:19:24Z",
      "side": 1,
      "message": "I\u0027ve changed the way DataSourceUri is being built for these entries. I have confirmed the corrected link matches the full sensor and can be retrieved using curl.",
      "parentUuid": "d6a8a747_19cbd739",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 39,
        "endChar": 68
      },
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d61da51a_4363da5c",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 40,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-18T21:35:03Z",
      "side": 1,
      "message": "\"This property shall contain the name of the device associated with this sensor.\"\n\nThis doesn\u0027t look correct to that description, as you\u0027re putting in the sensor odata.id, not the device name.  Please remove.",
      "range": {
        "startLine": 40,
        "startChar": 15,
        "endLine": 40,
        "endChar": 25
      },
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd9fc09d_50b4f419",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 40,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-01-22T01:59:26Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "d61da51a_4363da5c",
      "range": {
        "startLine": 40,
        "startChar": 15,
        "endLine": 40,
        "endChar": 25
      },
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "556b694b_aaea7076",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 40,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-22T22:08:33Z",
      "side": 1,
      "message": "not resolved.",
      "parentUuid": "bd9fc09d_50b4f419",
      "range": {
        "startLine": 40,
        "startChar": 15,
        "endLine": 40,
        "endChar": 25
      },
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a2d1fd0_d3c4fbea",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 40,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-01-23T06:20:51Z",
      "side": 1,
      "message": "Removed `DeviceName` on patch-9.",
      "parentUuid": "556b694b_aaea7076",
      "range": {
        "startLine": 40,
        "startChar": 15,
        "endLine": 40,
        "endChar": 25
      },
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6dfdb8e_a8fd2ee0",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 40,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2024-09-12T22:19:24Z",
      "side": 1,
      "message": "Changed DataSourceUri to be built using redfish::sensor_utils::getSensorId().",
      "parentUuid": "0a2d1fd0_d3c4fbea",
      "range": {
        "startLine": 40,
        "startChar": 15,
        "endLine": 40,
        "endChar": 25
      },
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72f554a1_24991a4f",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 40,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-13T22:25:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a6dfdb8e_a8fd2ee0",
      "range": {
        "startLine": 40,
        "startChar": 15,
        "endLine": 40,
        "endChar": 25
      },
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "124c6042_066e39d5",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 42,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-18T21:35:03Z",
      "side": 1,
      "message": "Lots of this method looks incorrect.  Can we just use the same method that we use in sensors.hpp?\n\nsensors::handleSensorGet\n\nThat seems like a good idea to share code to avoid problems like the above.",
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07ac6949_a8b2a28e",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 42,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-01-22T01:59:26Z",
      "side": 1,
      "message": "\u003e Lots of this method looks incorrect.\n\nCould you please point out what exactly is incorrect?\n\n\u003e sensors::handleSensorGet\n\nI checked this method, but I do not know how to implement `DeviceName` and `Reading`. I do not think we can use this method instead.",
      "parentUuid": "124c6042_066e39d5",
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dc15fcb_71283936",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 42,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-22T22:08:33Z",
      "side": 1,
      "message": "\u003e \u003e Lots of this method looks incorrect.\n\u003e \n\nCompare your code to handleSensorGet, and you will see some very obvious differences in how the properties are generated.\n\n\u003e \n\u003e \u003e sensors::handleSensorGet\n\u003e \n\u003e I checked this method, but I do not know how to implement `DeviceName` and `Reading`. I do not think we can use this method instead.\n\nhandleSensorGet doesn\u0027t currently implement DeviceName, so I\u0027m not sure why that relates.  I would assume that DeviceName would need to be implemented in handleSensorGet, FIRST, before we could use it in ThermalSubsystem.",
      "parentUuid": "07ac6949_a8b2a28e",
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f68b3a4e_ddffb5ce",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 42,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-01-23T06:20:51Z",
      "side": 1,
      "message": "How to implement `TemperatureReadingsCelsius` in `handleSensorGet` method?\n\nYes, they do have similarities, but the properties they expose are completely different. Why use this method instead?\n\nIf there is a problem with the current logic, please point it out. At least for now, handleSensorGet is not a universal method.",
      "parentUuid": "5dc15fcb_71283936",
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d0871a0_9520cc8e",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 42,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-05T17:01:17Z",
      "side": 1,
      "message": "\u003e How to implement `TemperatureReadingsCelsius` in `handleSensorGet` method?\n\nAdd a method call arg called excerpt, that here is true, and in the other code is false.  Then, within that code, branch where appropriate such that the \"excerpt\" of the sensor is produced.\n\n\u003e \n\u003e Yes, they do have similarities, but the properties they expose are completely different. Why use this method instead?\n\nThey\u0027re based on the same schema.  What do you mean the properties they produce are completely different?\n\n\u003e \n\u003e If there is a problem with the current logic, please point it out. At least for now, handleSensorGet is not a universal method.\n\nI\u0027m avoiding pointing out the logic errors, because it will miss the fact that we\u0027ve completely rewritten something that produces the same schema.  if we agree that we should write completely new code for this, at that point in time I will start pointing out the issues in this patchset, but given that it will likely all be condensed into sensor.hpp and associated sensor utils, that seems like a waste of effort.",
      "parentUuid": "f68b3a4e_ddffb5ce",
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "222d8658_dd838c56",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 42,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2024-09-12T22:19:24Z",
      "side": 1,
      "message": "I\u0027ve modified this to use a common function. I didn\u0027t use the handleSensorGet() function as the common function since it expects to put the response directly into the asyncResp. Since here we need to build an array I have different wrappers.\n\nThe objectPropertiesToJson() function where the properties for the sensor are filled in is common for the handleSensorGet() path and this path as well. It understands if a chassisSubNode is an excerpt and limits what properties are built for the excerpts.\n\nRight now mostly this is just skipping things, but I\u0027m expecting when other sensor excerpts are implemented that some of the other properties may be added for excerpts as well. I\u0027m expecting the combination of the chassisSubNode and the sensorType will be used to determine which properties are included for a particular call to build a sensor Json representation.",
      "parentUuid": "3d0871a0_9520cc8e",
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e26c03b2_a4d9ff5d",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 42,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-13T22:25:25Z",
      "side": 1,
      "message": "\u003e I\u0027ve modified this to use a common function. I didn\u0027t use the handleSensorGet() function as the common function since it expects to put the response directly into the asyncResp. Since here we need to build an array I have different wrappers.\n\nWe can modify handleSensorGet to do whatever we need it to.  What I don\u0027t want is the same keys declared in two places, and I want to make it obvious when changes are made to sensor, that the excerpt version is corrected as well.\n\n\u003e \n\u003e The objectPropertiesToJson() function where the properties for the sensor are filled in is common for the handleSensorGet() path and this path as well. It understands if a chassisSubNode is an excerpt and limits what properties are built for the excerpts.\n\u003e \n\u003e Right now mostly this is just skipping things, but I\u0027m expecting when other sensor excerpts are implemented that some of the other properties may be added for excerpts as well. I\u0027m expecting the combination of the chassisSubNode and the sensorType will be used to determine which properties are included for a particular call to build a sensor Json representation.",
      "parentUuid": "222d8658_dd838c56",
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eef04e21_964abf15",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 42,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-15T16:46:08Z",
      "side": 1,
      "message": "Looks like you did this in the way i\u0027d expect, so we should be good.",
      "parentUuid": "e26c03b2_a4d9ff5d",
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f38c48b6_6d33168b",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 98,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-18T21:35:03Z",
      "side": 1,
      "message": "depth 1.",
      "range": {
        "startLine": 98,
        "startChar": 8,
        "endLine": 98,
        "endChar": 9
      },
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fca43a2f_473a1d71",
        "filename": "redfish-core/lib/thermal_metrics.hpp",
        "patchSetId": 7
      },
      "lineNbr": 98,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-01-22T01:59:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f38c48b6_6d33168b",
      "range": {
        "startLine": 98,
        "startChar": 8,
        "endLine": 98,
        "endChar": 9
      },
      "revId": "a9ddd7504290b1653c09a1b46298885bc7ecde9e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}