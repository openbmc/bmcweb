{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bd635b71_d2b03b6a",
        "filename": "include/dbus_privileges.hpp",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-02-27T17:03:07Z",
      "side": 1,
      "message": "other places we do this, we call this reqIn \nhttps://github.com/openbmc/bmcweb/blob/6b9ac4f23ed00c3905c9b99f1d0831930acdbb1c/http/http_client.hpp#L124\n\nhttps://github.com/openbmc/bmcweb/blob/6b9ac4f23ed00c3905c9b99f1d0831930acdbb1c/http/http_request.hpp#L38 \n\nOh well.",
      "range": {
        "startLine": 153,
        "startChar": 23,
        "endLine": 153,
        "endChar": 26
      },
      "revId": "7ae1a6594f4aef7f7fa1efa11c55d80e38b6404d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e7d19e7_0ad0124d",
        "filename": "include/dbus_privileges.hpp",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-28T02:10:24Z",
      "side": 1,
      "message": "We call it ReqIn when it\u0027s in a constructor and trips shadow warnings..  This doesn\u0027t trip -Wshadow because it\u0027s the same type on both sides in the capture.",
      "parentUuid": "bd635b71_d2b03b6a",
      "range": {
        "startLine": 153,
        "startChar": 23,
        "endLine": 153,
        "endChar": 26
      },
      "revId": "7ae1a6594f4aef7f7fa1efa11c55d80e38b6404d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32a3c1ec_afe1a0e2",
        "filename": "include/dbus_privileges.hpp",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2024-04-25T07:20:27Z",
      "side": 1,
      "message": "This patch seems wrong, because when it\u0027s \"moved\" here, the `req` in http_connection becomes empty, and thus in `completeRequest()`, it\u0027s using an \"empty\" `req`.\n\nTo the original problem, what exactly is the case that the `req` is cleared up? The whole bmcweb uses the `asyncResp` as shared_ptr to hold the `connection`, and the `req` is a member of `connection`, so ideally there is no case for `req` to be cleared before `asyncResp` is destructed.",
      "parentUuid": "7e7d19e7_0ad0124d",
      "range": {
        "startLine": 153,
        "startChar": 23,
        "endLine": 153,
        "endChar": 26
      },
      "revId": "7ae1a6594f4aef7f7fa1efa11c55d80e38b6404d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}