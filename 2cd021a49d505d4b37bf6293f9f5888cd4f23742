{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "42898282_3f105d80",
        "filename": "redfish-core/include/registries.hpp",
        "patchSetId": 8
      },
      "lineNbr": 42,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-25T22:25:32Z",
      "side": 1,
      "message": "does it create several temporary strings every time this function gets called?",
      "range": {
        "startLine": 42,
        "startChar": 15,
        "endLine": 42,
        "endChar": 67
      },
      "revId": "2cd021a49d505d4b37bf6293f9f5888cd4f23742",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7854bfc3_7c8f8c68",
        "filename": "redfish-core/include/registries.hpp",
        "patchSetId": 8
      },
      "lineNbr": 42,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-26T18:37:06Z",
      "side": 1,
      "message": "because both sides are const char* I don’t believe it does.  and clang performance analyzer which is supposed to find that didn’t raise a flag.\n\nwe don’t really have a great StrCat in std c++, but I guess I could optimize it for reserve().  I did that in the latest patch.  PTAL.",
      "parentUuid": "42898282_3f105d80",
      "range": {
        "startLine": 42,
        "startChar": 15,
        "endLine": 42,
        "endChar": 67
      },
      "revId": "2cd021a49d505d4b37bf6293f9f5888cd4f23742",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "111c58fd_3cbe8a2c",
        "filename": "redfish-core/include/registries.hpp",
        "patchSetId": 8
      },
      "lineNbr": 42,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-26T19:07:12Z",
      "side": 1,
      "message": "https://github.com/openbmc/bmcweb/blob/master/.clang-tidy#L261 this?\n\nLGTM if clang tidy doesn\u0027t error out.",
      "parentUuid": "7854bfc3_7c8f8c68",
      "range": {
        "startLine": 42,
        "startChar": 15,
        "endLine": 42,
        "endChar": 67
      },
      "revId": "2cd021a49d505d4b37bf6293f9f5888cd4f23742",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}