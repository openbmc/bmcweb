{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "44f579c3_ef085819",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-04-11T21:08:31Z",
      "side": 1,
      "message": "This would be a breaking change since this was enabled before.. What if it was enabled, allowing a period of time for meta layers who wanted this to enable it?",
      "revId": "bc5b69a12160c0163c5885a1ed7c3107deb29938",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2066fa33_68249f35",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-11T22:49:52Z",
      "side": 1,
      "message": "I\u0027d be pretty amazed if any system that wasn\u0027t IBM enabled this.  Should be enough to just look through the meta layers and put in a patch to meta-ibm to add this?  Or is there a concern that we\u0027d break something else?  I\u0027m not against having a time period, just not sure why we need it when the fix for all known users is pretty easy.",
      "parentUuid": "44f579c3_ef085819",
      "revId": "bc5b69a12160c0163c5885a1ed7c3107deb29938",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1eae0179_b82e748e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-04-12T06:28:32Z",
      "side": 1,
      "message": "+1, I think only IBM need to enable this option in bbappend file.",
      "parentUuid": "2066fa33_68249f35",
      "revId": "bc5b69a12160c0163c5885a1ed7c3107deb29938",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3215f65c_12394bb7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-04-13T17:42:33Z",
      "side": 1,
      "message": "\u003e Should be enough to just look through the meta layers and put in a patch to meta-ibm to add this?\n\nThat should be fine. \n\nThere is OEM I would also like to have a build option for  \nhttps://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/managers.hpp#L289",
      "parentUuid": "1eae0179_b82e748e",
      "revId": "bc5b69a12160c0163c5885a1ed7c3107deb29938",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a62fa05d_f6a43fbf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-11T19:41:44Z",
      "side": 1,
      "message": "FYI, I\u0027m not sure how you\u0027re measuring this, but I got a significantly different number.\n\nI measured with:\n\nbitbake obmc-phosphoor-image\nxz -zc $BBPATH/tmp/work/qemuarm-openbmc-linux-gnueabi/obmc-phosphor-image/1.0-r0/rootfs/usr/bin/bmcweb | wc -c\n865564\ncd \u003cbmcweb dir\u003e\ngit reset --hard HEAD~1\nbitbake obmc-phosphoor-image\nxz -zc $BBPATH/tmp/work/qemuarm-openbmc-linux-gnueabi/obmc-phosphor-image/1.0-r0/rootfs/usr/bin/bmcweb | wc -c\n880404\n\nThat shows a 15KB difference, not a 50KB difference.  Granted, it\u0027s still 1.6% (down from 5.6%), which is quite a nice chunk of change to get rid of for low flash-size systems, but differs 3.3X from what you posted, so it\u0027s probably worth examining whos number is correct.",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 69
      },
      "revId": "bc5b69a12160c0163c5885a1ed7c3107deb29938",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3eff2897_1ce9f329",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-11T19:43:13Z",
      "side": 1,
      "message": "/s/phosphoor/phosphor/g",
      "parentUuid": "a62fa05d_f6a43fbf",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 69
      },
      "revId": "bc5b69a12160c0163c5885a1ed7c3107deb29938",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a925e800_4e9618b7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-04-12T06:28:32Z",
      "side": 1,
      "message": "Sorry I have some misunderstanding, I thought in tmp/work/\u003carch\u003e-openbmc-linux-gnueabi/bmcweb/1.0+git999-r0/, the package/usr/bin/bmcweb is the uncompressed one and the image/usr/bin/bmcweb (identical to the file in tmp/work/\u003ctarget\u003e/\u003cimage\u003e/1.0-r0/rootfs/usr/bin/bmcweb) is the compressed one. I\u0027m not aware of this file is not the compressed one need to be compressed manually.\n\nI\u0027m using a intel build of openbmc, it enables some other options in bmcweb, the result might be different from the qemu image. With xz it manually, the difference is 13332 (784640-\u003e771308) in this intel build.\n\nI also tried building a qemu obmc-phosphor-image with all default configs. The result is 14108 (763340-\u003e749232)\n\nSo your test result is right. I\u0027ll update the commit message.",
      "parentUuid": "3eff2897_1ce9f329",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 69
      },
      "revId": "bc5b69a12160c0163c5885a1ed7c3107deb29938",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb44c187_2d407f29",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-12T17:22:06Z",
      "side": 1,
      "message": "üëç",
      "parentUuid": "a925e800_4e9618b7",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 14,
        "endChar": 69
      },
      "revId": "bc5b69a12160c0163c5885a1ed7c3107deb29938",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2958885_aac88a5c",
        "filename": "redfish-core/include/redfish.hpp",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-11T19:41:44Z",
      "side": 1,
      "message": "Please follow the patterns of the other header files that contain \"optional\" routes.  We didn\u0027t come to what\u0027s there on accident.  If you had good reasons for not doing that, please note it in your commit message.",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 51,
        "endChar": 0
      },
      "revId": "bc5b69a12160c0163c5885a1ed7c3107deb29938",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fdf785c9_47e78b93",
        "filename": "redfish-core/include/redfish.hpp",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-04-12T06:28:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c2958885_aac88a5c",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 51,
        "endChar": 0
      },
      "revId": "bc5b69a12160c0163c5885a1ed7c3107deb29938",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}