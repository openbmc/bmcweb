{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "da605d6f_5e1ff297",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-05-27T19:14:41Z",
      "side": 1,
      "message": "LGTM",
      "revId": "33b4291a4b16b921a0a1e703c69b5a3b5ca1864e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f4a49b4_7855852b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-01T20:48:41Z",
      "side": 1,
      "message": "As always, happy to discuss, but when the rebase happens, this is going to break a bunch of places, so I\u0027d prefer to get this merged ahead of that.",
      "revId": "33b4291a4b16b921a0a1e703c69b5a3b5ca1864e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4358d304_6a2bc42f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-01T20:50:44Z",
      "side": 1,
      "message": "Missed a comment.  Sorry about that.  Replying to it and giving some time rather than just blanket overriding.",
      "parentUuid": "4f4a49b4_7855852b",
      "revId": "33b4291a4b16b921a0a1e703c69b5a3b5ca1864e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bed8237b_1258916a",
        "filename": "http/ut/utility_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 253,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-05-27T19:14:41Z",
      "side": 1,
      "message": "nit: what about\n\n```\nstd::string urlString \u003d \"/foo\";\nEXPECT_EQ(json(boost::urls::url(urlString)), urlString);\nEXPECT_EQ(json(boost::urls::url_view(urlString)), urlString);\n```",
      "revId": "33b4291a4b16b921a0a1e703c69b5a3b5ca1864e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63c2b7fe_397c7170",
        "filename": "http/ut/utility_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 253,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-01T20:49:57Z",
      "side": 1,
      "message": "What you did relies on undefined behavior.  rvalue references (ie url or url_view in this case), don\u0027t survive multiple layers of rvalue.",
      "parentUuid": "bed8237b_1258916a",
      "revId": "33b4291a4b16b921a0a1e703c69b5a3b5ca1864e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93915c75_4370e5fc",
        "filename": "http/utility.hpp",
        "patchSetId": 3
      },
      "lineNbr": 789,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-05-27T19:15:37Z",
      "side": 1,
      "message": "These two template specialization will automatically be applied?\n\nIIUC we need to explicitly include this header, right?",
      "range": {
        "startLine": 789,
        "startChar": 7,
        "endLine": 789,
        "endChar": 21
      },
      "revId": "33b4291a4b16b921a0a1e703c69b5a3b5ca1864e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3b8708d_dae2bef9",
        "filename": "http/utility.hpp",
        "patchSetId": 3
      },
      "lineNbr": 789,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-27T19:32:20Z",
      "side": 1,
      "message": "\u003e These two template specialization will automatically be applied?\n\n\nCorrect, it relies on argument dependent lookup, which as a pattern I don\u0027t really like, because it confuses people, but there aren\u0027t a lot of other options for force nlohmann to not encode this incorrectly.\n\n\u003e \n\u003e IIUC we need to explicitly include this header, right?\n\nYes.  Open to other options if there\u0027s a better way to solve this.",
      "parentUuid": "93915c75_4370e5fc",
      "range": {
        "startLine": 789,
        "startChar": 7,
        "endLine": 789,
        "endChar": 21
      },
      "revId": "33b4291a4b16b921a0a1e703c69b5a3b5ca1864e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}