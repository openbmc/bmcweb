{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "62284b1d_8f83d539",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 12
      },
      "lineNbr": 12,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-29T15:38:10Z",
      "side": 1,
      "message": "now that all keys are optional in this struct, should we just omit the ones that aren\u0027t provided, rather than track a std::optional here?\n\n\nstd::pair\u003cstd::string_view, std::string_view\u003e;\n\nWhere if a token is provided, you get\n\n\"Password: \", \"\u003cuser password\u003e\",\n\"Verification code: \", \"\u003ctoken\u003e\"\n\nor if a token isn\u0027t provided, we just have \n\n\"Password: \", \"\u003cuser password\u003e\",\n\n\nThat seems a lot simpler of a struct?",
      "range": {
        "startLine": 12,
        "startChar": 47,
        "endLine": 12,
        "endChar": 78
      },
      "revId": "d27a34eeeaf2977d84b286620df4e85619c85359",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a3bee71_234089b0",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 12
      },
      "lineNbr": 12,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-08-29T16:32:48Z",
      "side": 1,
      "message": "I was thinking about the same. But that makes another if check while creating the PasswordData. For eg: in pamAuthenticateUser function. The current implementation will take care of both case.",
      "parentUuid": "62284b1d_8f83d539",
      "range": {
        "startLine": 12,
        "startChar": 47,
        "endLine": 12,
        "endChar": 78
      },
      "revId": "d27a34eeeaf2977d84b286620df4e85619c85359",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcb7059e_7db9f928",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 12
      },
      "lineNbr": 12,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-29T17:47:50Z",
      "side": 1,
      "message": "I still think it\u0027s an improvement regardless of having to add that check during creation.",
      "parentUuid": "8a3bee71_234089b0",
      "range": {
        "startLine": 12,
        "startChar": 47,
        "endLine": 12,
        "endChar": 78
      },
      "revId": "d27a34eeeaf2977d84b286620df4e85619c85359",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a773577b_b4b6cbcc",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 12
      },
      "lineNbr": 12,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-08-30T14:11:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dcb7059e_7db9f928",
      "range": {
        "startLine": 12,
        "startChar": 47,
        "endLine": 12,
        "endChar": 78
      },
      "revId": "d27a34eeeaf2977d84b286620df4e85619c85359",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e19f5a9_1398c8e3",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 12
      },
      "lineNbr": 42,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-29T15:38:10Z",
      "side": 1,
      "message": "why value_or here?  We checked this has a value on the line 2 lines up.",
      "range": {
        "startLine": 42,
        "startChar": 54,
        "endLine": 42,
        "endChar": 66
      },
      "revId": "d27a34eeeaf2977d84b286620df4e85619c85359",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45ce9fae_e2b98aef",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 12
      },
      "lineNbr": 42,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-29T15:38:10Z",
      "side": 1,
      "message": "can\u0027t call data() on a string view without size().  The string isn\u0027t necessarily null terminated.",
      "range": {
        "startLine": 42,
        "startChar": 67,
        "endLine": 42,
        "endChar": 71
      },
      "revId": "d27a34eeeaf2977d84b286620df4e85619c85359",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9af42b9e_31d97ac1",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 12
      },
      "lineNbr": 42,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-08-29T16:32:48Z",
      "side": 1,
      "message": "you mean value_or(\"\").data() is error? or strdup(promptDataIter-\u003esecond.data()); is error? \na quick check on std::string_view(\"\").length() gave me zero.\nThis code is need to silent the clang-tidy",
      "parentUuid": "45ce9fae_e2b98aef",
      "range": {
        "startLine": 42,
        "startChar": 67,
        "endLine": 42,
        "endChar": 71
      },
      "revId": "d27a34eeeaf2977d84b286620df4e85619c85359",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4883d97c_455bb892",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 12
      },
      "lineNbr": 42,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-08-29T16:32:48Z",
      "side": 1,
      "message": "with out this cland-tidy was throwing error. It was a strange error. The has_value check is already there , but clang-tidy still complains.",
      "parentUuid": "8e19f5a9_1398c8e3",
      "range": {
        "startLine": 42,
        "startChar": 54,
        "endLine": 42,
        "endChar": 66
      },
      "revId": "d27a34eeeaf2977d84b286620df4e85619c85359",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf06fa79_72b6fa24",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 12
      },
      "lineNbr": 42,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-29T17:47:50Z",
      "side": 1,
      "message": "Use operator\u003cbool\u003e instead of has_value().",
      "parentUuid": "4883d97c_455bb892",
      "range": {
        "startLine": 42,
        "startChar": 54,
        "endLine": 42,
        "endChar": 66
      },
      "revId": "d27a34eeeaf2977d84b286620df4e85619c85359",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf2a3109_49432923",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 12
      },
      "lineNbr": 42,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-29T17:47:50Z",
      "side": 1,
      "message": "std::string_view::data() is not null terminated.  You\u0027ve passed it into an API that expects null terminated.\n\nNot sure about the tidy error, but lets get this written in a simple way, and we can figure out the tidy issue.",
      "parentUuid": "9af42b9e_31d97ac1",
      "range": {
        "startLine": 42,
        "startChar": 67,
        "endLine": 42,
        "endChar": 71
      },
      "revId": "d27a34eeeaf2977d84b286620df4e85619c85359",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b7fb311_10283454",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 12
      },
      "lineNbr": 42,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-08-30T14:11:38Z",
      "side": 1,
      "message": "changed the optional to actual value. Now only prompts with value will be present in the PasswordData. Checks has to be done at caller side",
      "parentUuid": "cf06fa79_72b6fa24",
      "range": {
        "startLine": 42,
        "startChar": 54,
        "endLine": 42,
        "endChar": 66
      },
      "revId": "d27a34eeeaf2977d84b286620df4e85619c85359",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a536eaff_237282b0",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 12
      },
      "lineNbr": 42,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-08-30T14:11:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf2a3109_49432923",
      "range": {
        "startLine": 42,
        "startChar": 67,
        "endLine": 42,
        "endChar": 71
      },
      "revId": "d27a34eeeaf2977d84b286620df4e85619c85359",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d189372_782a50c8",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 12
      },
      "lineNbr": 42,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-30T21:01:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b7fb311_10283454",
      "range": {
        "startLine": 42,
        "startChar": 54,
        "endLine": 42,
        "endChar": 66
      },
      "revId": "d27a34eeeaf2977d84b286620df4e85619c85359",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f98498b_1d40aaf2",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 12
      },
      "lineNbr": 72,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-29T15:38:10Z",
      "side": 1,
      "message": "Why was this broken out?  It\u0027s essentially one branch that we\u0027ve just duplicated",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 72,
        "endChar": 9
      },
      "revId": "d27a34eeeaf2977d84b286620df4e85619c85359",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "879d85ff_00325a22",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 12
      },
      "lineNbr": 72,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-08-29T16:32:48Z",
      "side": 1,
      "message": "just to improve the readability. will make it inline if you want.",
      "parentUuid": "2f98498b_1d40aaf2",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 72,
        "endChar": 9
      },
      "revId": "d27a34eeeaf2977d84b286620df4e85619c85359",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8084ec10_222cee87",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 12
      },
      "lineNbr": 72,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-29T17:47:50Z",
      "side": 1,
      "message": "keep it inline please.  breaking out one branch doesn\u0027t improve readability IMO",
      "parentUuid": "879d85ff_00325a22",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 72,
        "endChar": 9
      },
      "revId": "d27a34eeeaf2977d84b286620df4e85619c85359",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "350a6eaf_d25e3d78",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 12
      },
      "lineNbr": 72,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-08-30T14:11:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8084ec10_222cee87",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 72,
        "endChar": 9
      },
      "revId": "d27a34eeeaf2977d84b286620df4e85619c85359",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7da5a7f4_60a9d520",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 12
      },
      "lineNbr": 127,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-29T15:38:10Z",
      "side": 1,
      "message": "Why do we need PasswordData::KVPair on one constructor and not the other?",
      "range": {
        "startLine": 127,
        "startChar": 23,
        "endLine": 127,
        "endChar": 43
      },
      "revId": "d27a34eeeaf2977d84b286620df4e85619c85359",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "895c54ff_a7a536d3",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 12
      },
      "lineNbr": 127,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-08-29T16:32:48Z",
      "side": 1,
      "message": "std::string(password) would have done the trick. I will change it back. \nCompiler just need a hint to deduce the type of pair.",
      "parentUuid": "7da5a7f4_60a9d520",
      "range": {
        "startLine": 127,
        "startChar": 23,
        "endLine": 127,
        "endChar": 43
      },
      "revId": "d27a34eeeaf2977d84b286620df4e85619c85359",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "894237cc_512467cf",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 12
      },
      "lineNbr": 127,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-29T17:47:50Z",
      "side": 1,
      "message": "👍",
      "parentUuid": "895c54ff_a7a536d3",
      "range": {
        "startLine": 127,
        "startChar": 23,
        "endLine": 127,
        "endChar": 43
      },
      "revId": "d27a34eeeaf2977d84b286620df4e85619c85359",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c90d93ec_5c27bd2f",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 12
      },
      "lineNbr": 127,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-08-30T14:11:38Z",
      "side": 1,
      "message": "changed the implementation to use addPrompt API",
      "parentUuid": "894237cc_512467cf",
      "range": {
        "startLine": 127,
        "startChar": 23,
        "endLine": 127,
        "endChar": 43
      },
      "revId": "d27a34eeeaf2977d84b286620df4e85619c85359",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c428c609_a83d033d",
        "filename": "include/pam_authenticate.hpp",
        "patchSetId": 12
      },
      "lineNbr": 127,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-31T16:21:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c90d93ec_5c27bd2f",
      "range": {
        "startLine": 127,
        "startChar": 23,
        "endLine": 127,
        "endChar": 43
      },
      "revId": "d27a34eeeaf2977d84b286620df4e85619c85359",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}