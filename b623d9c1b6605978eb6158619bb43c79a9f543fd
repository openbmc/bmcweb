{
  "comments": [
    {
      "key": {
        "uuid": "3a9a91dd_11847263",
        "filename": "include/ssl_key_handler.hpp",
        "patchSetId": 1
      },
      "lineNbr": 402,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-26T20:44:17Z",
      "side": 0,
      "message": "This is going to remove all TLS 1.2 support.  Also, your changes don\u0027t seem to match either mozilla modern or mozilla compatibility, which is currently where we take our cipher suites list from.  OpenBMC itself is not an authority on cipher suites, and should not be making these decisions itself;  Any change to this list should reference mozilla.  With that said, it does look like we\u0027re running off an old version of mozilla intermediate compatibility, so if we wanted to update to that, we could and I would be in support of that.\n\nhttps://wiki.mozilla.org/Security/Server_Side_TLS",
      "revId": "b623d9c1b6605978eb6158619bb43c79a9f543fd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25720de0_14b61f03",
        "filename": "include/ssl_key_handler.hpp",
        "patchSetId": 1
      },
      "lineNbr": 402,
      "author": {
        "id": 1000524
      },
      "writtenOn": "2021-05-26T21:07:49Z",
      "side": 0,
      "message": "You are correct about Mozilla\u0027s recommendations, this is tighter.\n\nThe secure Cipher Suites of TLSv1.2 are\nstill present and functional.\n\nTLSv1.2 (server order)\n\n xc02c   ECDHE-ECDSA-AES256-GCM-SHA384     ECDH 253   AESGCM      256      TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n xcca9   ECDHE-ECDSA-CHACHA20-POLY1305     ECDH 253   ChaCha20    256      TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n xc02b   ECDHE-ECDSA-AES128-GCM-SHA256     ECDH 253   AESGCM      128      TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\nTLSv1.3 (server order)\n x1302   TLS_AES_256_GCM_SHA384            ECDH 253   AESGCM      256      TLS_AES_256_GCM_SHA384\n x1303   TLS_CHACHA20_POLY1305_SHA256      ECDH 253   ChaCha20    256      TLS_CHACHA20_POLY1305_SHA256\n x1301   TLS_AES_128_GCM_SHA256            ECDH 253   AESGCM      128      TLS_AES_128_GCM_SHA256",
      "parentUuid": "3a9a91dd_11847263",
      "revId": "b623d9c1b6605978eb6158619bb43c79a9f543fd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6ae71df_3902f4cc",
        "filename": "include/ssl_key_handler.hpp",
        "patchSetId": 1
      },
      "lineNbr": 402,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-26T21:28:45Z",
      "side": 0,
      "message": "\u003e You are correct about Mozilla\u0027s recommendations, this is tighter.\n\u003e \n\nI will reiterate, OpenBMC is not a security authority.  If you think that these are the ciphers we should be using, feel free to bring that up with mozilla and get them to change their guidelines.  If we deviate from their guidelines, we should have a VERY good reason to do so, and take on that added maintenance burden.\n\n\u003e The secure Cipher Suites of TLSv1.2 are\n\u003e still present and functional.\n\nFair point.  I will admit, I didn\u0027t actually look this up, and assumed.  mea culpa.\n\n\u003e \n\u003e TLSv1.2 (server order)\n\u003e \n\u003e  xc02c   ECDHE-ECDSA-AES256-GCM-SHA384     ECDH 253   AESGCM      256      TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\n\u003e  xcca9   ECDHE-ECDSA-CHACHA20-POLY1305     ECDH 253   ChaCha20    256      TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256\n\u003e  xc02b   ECDHE-ECDSA-AES128-GCM-SHA256     ECDH 253   AESGCM      128      TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256\n\u003e TLSv1.3 (server order)\n\u003e  x1302   TLS_AES_256_GCM_SHA384            ECDH 253   AESGCM      256      TLS_AES_256_GCM_SHA384\n\u003e  x1303   TLS_CHACHA20_POLY1305_SHA256      ECDH 253   ChaCha20    256      TLS_CHACHA20_POLY1305_SHA256\n\u003e  x1301   TLS_AES_128_GCM_SHA256            ECDH 253   AESGCM      128      TLS_AES_128_GCM_SHA256",
      "parentUuid": "25720de0_14b61f03",
      "revId": "b623d9c1b6605978eb6158619bb43c79a9f543fd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d118bdd3_47d19b30",
        "filename": "include/ssl_key_handler.hpp",
        "patchSetId": 1
      },
      "lineNbr": 402,
      "author": {
        "id": 1000524
      },
      "writtenOn": "2021-05-26T23:11:36Z",
      "side": 0,
      "message": "3) Removes Obsoleted CBC ciphers (AES, ARIA etc.)\n   These 4 cipher suites were removed because they are\n   Obsoleted CBC ciphers (AES, ARIA etc.) and CVE-2013-0169\n   LUCKY13 experimental potentially VULNERABLE, uses\n   cipher block chaining (CBC) ciphers with TLS.\n   1) \"ECDHE-ECDSA-AES256-SHA384:\"\n   2) \"ECDHE-RSA-AES256-SHA384:\"\n   3) \"ECDHE-ECDSA-AES128-SHA256:\"\n   4) \"ECDHE-RSA-AES128-SHA256\"\n   Again from https://github.com/drwetter/testssl.sh\n\nI have no problem if the OpenBMC community want to take\nthe, probably minor, risk in favor of following Mozilla\u0027s\nrecommendations and / or more compatibility.",
      "parentUuid": "f6ae71df_3902f4cc",
      "revId": "b623d9c1b6605978eb6158619bb43c79a9f543fd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}