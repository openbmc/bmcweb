{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f40a9719_75b671a6",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 5
      },
      "lineNbr": 182,
      "author": {
        "id": 1001322
      },
      "writtenOn": "2022-09-05T06:07:33Z",
      "side": 1,
      "message": "where is the object \"handler\" getting created for which getInstance is getting called? As far as I understand, this is working as singleton, so where are you making sure that there is only one object getting created. Correct me if I understood it wrong",
      "revId": "7fa5e0341c5cf00ab0a216ccf7ffcbb89d2a4ad5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb11fad8_de626d5b",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 5
      },
      "lineNbr": 182,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-09-06T16:24:24Z",
      "side": 1,
      "message": "I\u0027m assuming you mean making sure there is only one RedfishAggregator object that gets created.  It\u0027s a singleton so by design that\u0027s guaranteed.  The constructor is private and only gets called by \"getInstance()\".  \n```\n    static RedfishAggregator\u0026 getInstance()\n    {\n        static RedfishAggregator handler;\n        return handler;\n    }\n```  \nThe use of static means that handler will only be created the first time \"getInstance()\" is called from anywhere.  All future calls will just point to that original handler and not invoke the constructor.\n\nThe first ever call to RedfishAggregator\u0027s getInstance() will occur in src/webserver_main.cpp as part of \"run()\" https://github.com/openbmc/bmcweb/blob/master/src/webserver_main.cpp#L94.\n\nPlease reopen this issue if I misunderstood and did not answer your question.",
      "parentUuid": "f40a9719_75b671a6",
      "revId": "7fa5e0341c5cf00ab0a216ccf7ffcbb89d2a4ad5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5032a6f7_ddee2813",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 5
      },
      "lineNbr": 202,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-09-12T17:15:58Z",
      "side": 1,
      "message": "This is not really the ping of satellites. Its does much more such as resolve config and connect to IP:Port. So may be, we need to implement the network IP ping first to make sure IP is reachable and then do establish the http connection.",
      "range": {
        "startLine": 187,
        "startChar": 4,
        "endLine": 202,
        "endChar": 5
      },
      "revId": "7fa5e0341c5cf00ab0a216ccf7ffcbb89d2a4ad5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e02a20e3_8e722fcc",
        "filename": "redfish-core/include/redfish_aggregator.hpp",
        "patchSetId": 5
      },
      "lineNbr": 202,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-09-20T21:43:51Z",
      "side": 1,
      "message": "I called it ping for lack of a better term.  An actual network IP ping won\u0027t tell us what we need to know.  We\u0027re specifically interested in if we can establish an http connection with the destination or if the connection attempt will timeout.  This is to potentially save us from having to wait for our initial message sending attempt to timeout during the connection attempt so that we know the destination is unreachable.\n\nI\u0027ve updated the naming conventions to remove the use of \"ping\" make the purpose clearer",
      "parentUuid": "5032a6f7_ddee2813",
      "range": {
        "startLine": 187,
        "startChar": 4,
        "endLine": 202,
        "endChar": 5
      },
      "revId": "7fa5e0341c5cf00ab0a216ccf7ffcbb89d2a4ad5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}