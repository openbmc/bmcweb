{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b005b58b_ed144fd7",
        "filename": "include/multipart_parser.hpp",
        "patchSetId": 1
      },
      "lineNbr": 206,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-28T19:27:24Z",
      "side": 1,
      "message": "Style thing, because we have to break this into two lines anyway, can we just write it as\n\nParserError ec \u003d processPartData(buffer, i, c);\nif (ec !\u003d ParserError::PARSER_SUCCESS){\n....\n\nI don\u0027t think there\u0027s anything gained here by ensuring that ec is in a new scope.",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 206,
        "endChar": 58
      },
      "revId": "54fa5325512b1553f9cb5c3aaab1638eaf8cab63",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1f5268e_5f891454",
        "filename": "include/multipart_parser.hpp",
        "patchSetId": 1
      },
      "lineNbr": 206,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-08-29T07:42:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b005b58b_ed144fd7",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 206,
        "endChar": 58
      },
      "revId": "54fa5325512b1553f9cb5c3aaab1638eaf8cab63",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d54f23e_7d1be70e",
        "filename": "include/multipart_parser.hpp",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-28T19:22:23Z",
      "side": 1,
      "message": "Doesn\u0027t this break incremental parsing if the boundary ends up in the middle of a processing part?",
      "range": {
        "startLine": 263,
        "startChar": 0,
        "endLine": 263,
        "endChar": 33
      },
      "revId": "54fa5325512b1553f9cb5c3aaab1638eaf8cab63",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "642acf5d_501309f0",
        "filename": "include/multipart_parser.hpp",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-08-29T07:10:54Z",
      "side": 1,
      "message": "prevIndex was set and used only in this function. This should work exactly like it was working before, but we got rid of one parameter.",
      "parentUuid": "1d54f23e_7d1be70e",
      "range": {
        "startLine": 263,
        "startChar": 0,
        "endLine": 263,
        "endChar": 33
      },
      "revId": "54fa5325512b1553f9cb5c3aaab1638eaf8cab63",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98546a86_8f5582a6",
        "filename": "include/multipart_parser.hpp",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-29T23:16:15Z",
      "side": 1,
      "message": "Just because it was only used in this function doesn\u0027t meant that it wasn\u0027t used in iteration. \n\nThe intent of this api was that you could:\nConstruct a multipart object\ncall processPartData repeatedly until complete.\n\nThat\u0027s not how we use it currently, but if we\u0027re going to remove the \"repeatedly\" part, this class can be simplified a lot.",
      "parentUuid": "642acf5d_501309f0",
      "range": {
        "startLine": 263,
        "startChar": 0,
        "endLine": 263,
        "endChar": 33
      },
      "revId": "54fa5325512b1553f9cb5c3aaab1638eaf8cab63",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6c1c7d4_c83694b8",
        "filename": "include/multipart_parser.hpp",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-09-05T08:36:28Z",
      "side": 1,
      "message": "If you want I can revert this change, but please take a look how it was used before in whole context:\n\nprevIndex was local variable in parse method then it was passed to processPartData as reference and immediately assigned new value.\n\nMy change doesn\u0027t change any functionality, just removes needless complication, provessPartData is still called repeatedly. All unit tests are still passing, if you think UTs don\u0027t cover this feature I can write another unit test to confirm it.",
      "parentUuid": "98546a86_8f5582a6",
      "range": {
        "startLine": 263,
        "startChar": 0,
        "endLine": 263,
        "endChar": 33
      },
      "revId": "54fa5325512b1553f9cb5c3aaab1638eaf8cab63",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "734edd73_4ef20539",
        "filename": "include/multipart_parser.hpp",
        "patchSetId": 1
      },
      "lineNbr": 263,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-09-09T17:40:34Z",
      "side": 1,
      "message": "Jump into this discussion.\n\nI haven\u0027t fully read the while header. But just blindly look at this function.\n\nhttps://github1s.com/openbmc/bmcweb/blob/master/include/multipart_parser.hpp#L248-L249\n\n1. |prevIndex| is a argument of function |processPartData| before, however, at the very first line, it was assigned a new value, which is equal to the member variable |index|.\n\n2. |processPartData| is a private member function, the only place which uses it is https://github1s.com/openbmc/bmcweb/blob/master/include/multipart_parser.hpp#L199-L200, the public |parse| function.\n\n3. |prevIndex| in the |parse| function is initialized once to index, then passed into |processPartData|, and not used anywhere else inside |parse|.\n\nI agree with |Krzysztof|. I don\u0027t see how moving definition of |prevIndex| from |parse| to |processPartData| changes the behavior.\n\nEd, did we miss something?",
      "parentUuid": "c6c1c7d4_c83694b8",
      "range": {
        "startLine": 263,
        "startChar": 0,
        "endLine": 263,
        "endChar": 33
      },
      "revId": "54fa5325512b1553f9cb5c3aaab1638eaf8cab63",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}