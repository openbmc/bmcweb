{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "359a13f2_337d14f4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-22T15:02:11Z",
      "side": 1,
      "message": "Why is this desirable?  Are there systems without pam present?",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 51
      },
      "revId": "18e95248e3b87fc19ae552d8de8234a405b7c1af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "221836c0_137aa97d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-22T16:40:52Z",
      "side": 1,
      "message": "At least in my Docker build I have to install libpam explicitly.",
      "parentUuid": "359a13f2_337d14f4",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 51
      },
      "revId": "18e95248e3b87fc19ae552d8de8234a405b7c1af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9d631f7_57507896",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-22T19:50:41Z",
      "side": 1,
      "message": "you have to install libpam-dev.  I\u0027m almost certain your docker build still has pam available.",
      "parentUuid": "221836c0_137aa97d",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 51
      },
      "revId": "18e95248e3b87fc19ae552d8de8234a405b7c1af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd161cd5_34f6e423",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-25T01:06:30Z",
      "side": 1,
      "message": "\u003e you have to install libpam-dev\n\nI have to install libpam0g-dev.\n\n\u003e I\u0027m almost certain your docker build still has pam available.\n\nI used the following Dockerfile, if you want to try. At least without libpam0g-dev,\nthe build will fail since pam is required but missing.\n\n```\n#llvm clang + IWYU image\n\nFROM ubuntu:20.04\nMAINTAINER Nan Zhou \u003cnanzhoumails@gmail.com\u003e\n\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update -q\n\n#Install Dependencies\nRUN apt-get -qy install         \\\n    build-essential             \\\n    clang                       \\\n    cmake                       \\\n    libclang-dev                \\\n    libncurses-dev              \\\n    linux-libc-dev              \\\n    llvm-dev                    \\\n    make                        \\\n    subversion                  \\\n    git                         \\\n    ca-certificates             \\\n    libpam0g-dev                \\\n    --no-install-recommends     \n\n# RUN  libssl-dev\n\nRUN pip3 install meson\n\n#Checkout IWYU and switch the banch clang_10\nRUN mkdir include-what-you-use \u0026\u0026 cd include-what-you-use \u0026\u0026 git clone https://github.com/include-what-you-use/include-what-you-use.git \u0026\u0026 cd include-what-you-use \u0026\u0026 git checkout clang_10\n\nENV CC clang\nENV CXX clang++\nENV CMAKE_C_COMPILER clang\nENV CMAKE_CXX_COMPILER clang++\n\n#Configure IWYU\nRUN cd include-what-you-use \u0026\u0026 mkdir build \u0026\u0026 cd build \u0026\u0026 cmake -G \"Unix Makefiles\" -DCMAKE_PREFIX_PATH\u003d/usr/lib/llvm-10 ../include-what-you-use\n\n#Compile and install IWYU\nRUN cd include-what-you-use/build \u0026\u0026 make \u0026\u0026 make install\n```",
      "parentUuid": "c9d631f7_57507896",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 51
      },
      "revId": "18e95248e3b87fc19ae552d8de8234a405b7c1af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d07d0d53_49499efa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-28T18:49:52Z",
      "side": 1,
      "message": "There\u0027s already a dockerfile checked into bmcweb (which arguably should be removed because openbmc-build-scripts has one as well) that has these dependencies figured out.  We shouldn\u0027t be reinventing the wheel here.",
      "parentUuid": "cd161cd5_34f6e423",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 51
      },
      "revId": "18e95248e3b87fc19ae552d8de8234a405b7c1af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f59297a1_da964ed5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-28T18:54:32Z",
      "side": 1,
      "message": "Right. This is just for my development and a proof that libpam0g-dev is required. It\u0027s not in the scope if this patch.",
      "parentUuid": "d07d0d53_49499efa",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 17,
        "endChar": 51
      },
      "revId": "18e95248e3b87fc19ae552d8de8234a405b7c1af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df34733e_26bb5d60",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-06-22T00:44:01Z",
      "side": 1,
      "message": "real?",
      "range": {
        "startLine": 21,
        "startChar": 30,
        "endLine": 21,
        "endChar": 35
      },
      "revId": "18e95248e3b87fc19ae552d8de8234a405b7c1af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97e30cf1_54e75742",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-22T16:39:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df34733e_26bb5d60",
      "range": {
        "startLine": 21,
        "startChar": 30,
        "endLine": 21,
        "endChar": 35
      },
      "revId": "18e95248e3b87fc19ae552d8de8234a405b7c1af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1948bcff_84705296",
        "filename": "meson.build",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-22T15:02:11Z",
      "side": 1,
      "message": "Why is this needed?  And why does it need to be special cased for auth?",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 108,
        "endChar": 11
      },
      "revId": "18e95248e3b87fc19ae552d8de8234a405b7c1af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "647e2836_d4d8cfa2",
        "filename": "meson.build",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-22T16:38:43Z",
      "side": 1,
      "message": "I want to achieve that if \"insecure-disable-auth\" is enabled, all these individual \"auth\" option is also disabled.",
      "parentUuid": "1948bcff_84705296",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 108,
        "endChar": 11
      },
      "revId": "18e95248e3b87fc19ae552d8de8234a405b7c1af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6ba73c0_0d28e5ed",
        "filename": "meson.build",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-22T19:50:41Z",
      "side": 1,
      "message": "With what goal?  Aren\u0027t all these option flags beneath the insecure-disable-auth flags anyway?\n\nJust trying to understand the intent here;  I\u0027m a little worried about having special logic for auth, which should be easily auditable.",
      "parentUuid": "647e2836_d4d8cfa2",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 108,
        "endChar": 11
      },
      "revId": "18e95248e3b87fc19ae552d8de8234a405b7c1af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3140226_766e830b",
        "filename": "meson.build",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-22T23:33:47Z",
      "side": 1,
      "message": "Let me explain, today `basic-auth` (and other options) can be enabled even if  insecure-disable-auth is enabled, which doesn\u0027t make sense.\n\nWith this block I added,\n\n```\n    elif (option_key in [\u0027basic-auth\u0027, \u0027cookie-auth\u0027, \u0027session-auth\u0027, \u0027xtoken-auth\u0027, \u0027mutual-tls-auth\u0027])\n      if (get_option(\u0027insecure-disable-auth\u0027).disabled())\n        add_project_arguments(option_value, language:\u0027cpp\u0027)\n        summary(option_key,option_value, section : \u0027Enabled Features\u0027)\n      endif\n```\n\nIf we disable `insecure-disable-auth`, then all these auth options will be ignored.",
      "parentUuid": "f6ba73c0_0d28e5ed",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 108,
        "endChar": 11
      },
      "revId": "18e95248e3b87fc19ae552d8de8234a405b7c1af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "362a1597_e4fa2530",
        "filename": "meson.build",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-24T23:17:06Z",
      "side": 1,
      "message": "the explaination you gave above is much better than what\u0027s in your commit message.  Please put it in the commit message, and we should be good.",
      "parentUuid": "b3140226_766e830b",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 108,
        "endChar": 11
      },
      "revId": "18e95248e3b87fc19ae552d8de8234a405b7c1af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c95dad3_23707e5a",
        "filename": "meson.build",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-25T01:06:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "362a1597_e4fa2530",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 108,
        "endChar": 11
      },
      "revId": "18e95248e3b87fc19ae552d8de8234a405b7c1af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00c8f6b3_6b3bafe4",
        "filename": "redfish-core/include/redfish.hpp",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-06-22T00:44:01Z",
      "side": 1,
      "message": "I thought we moved to including all of these, then below have an #ifdef ?\n\nE.g. \n#include BMCWEB_ENABLE_VM_NBDPROXY\n...\n#ifdef BMCWEB_ENABLE_VM_NBDPROXY\n        requestNBDVirtualMediaRoutes(app);\n#endif // BMCWEB_ENABLE_VM_NBDPROXY",
      "revId": "18e95248e3b87fc19ae552d8de8234a405b7c1af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9edcf35f_f44b82a9",
        "filename": "redfish-core/include/redfish.hpp",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-22T04:34:07Z",
      "side": 1,
      "message": "That can\u0027t achieve what this commit is trying to do: when `insecure-disable-auth` is enabled, BMCWeb shouldn\u0027t depend on libssl and libpam.\n\n\"redfish_sessions.hpp\" and \"account_service.hpp\" are written in the way that it depends on libpam all the time. I didn\u0027t find other way to achieve this.",
      "parentUuid": "00c8f6b3_6b3bafe4",
      "revId": "18e95248e3b87fc19ae552d8de8234a405b7c1af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9fe15818_30517a26",
        "filename": "redfish-core/include/redfish.hpp",
        "patchSetId": 2
      },
      "lineNbr": 18,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-25T01:06:30Z",
      "side": 1,
      "message": "Please reopen if it\u0027s still a concern",
      "parentUuid": "9edcf35f_f44b82a9",
      "revId": "18e95248e3b87fc19ae552d8de8234a405b7c1af",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}