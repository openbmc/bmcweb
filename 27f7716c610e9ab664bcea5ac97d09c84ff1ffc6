{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "50fa3c50_b0744df3",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 13
      },
      "lineNbr": 411,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-20T00:59:02Z",
      "side": 1,
      "message": "isn\u0027t this going to set one emptyJSON message per non-optional key?  That doesn\u0027t seem right.  I suspect the old logic was more correct.",
      "revId": "27f7716c610e9ab664bcea5ac97d09c84ff1ffc6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "943fa759_1c8a036a",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 13
      },
      "lineNbr": 411,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-12-20T06:14:55Z",
      "side": 1,
      "message": "This will go through all of the requested properties and return false + empty Json message once  if it find a property is not optional.\n\nSo this will only set one emptyJSON message.\n\n```\ndetails::handleEmpty(res, val) \u0026\u0026 details::handleEmpty(res, in...)\n```\n\nOnce `details::handleEmpty(res, val)` is false, `details::handleEmpty(res, in...)` will not be called.",
      "parentUuid": "50fa3c50_b0744df3",
      "revId": "27f7716c610e9ab664bcea5ac97d09c84ff1ffc6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ebac7e88_54ee5367",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 13
      },
      "lineNbr": 411,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-02-24T22:27:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "943fa759_1c8a036a",
      "revId": "27f7716c610e9ab664bcea5ac97d09c84ff1ffc6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8723b409_faceb28b",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 13
      },
      "lineNbr": 440,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-20T00:59:02Z",
      "side": 1,
      "message": "Looks like this is missing setting messages::emptyJSON?",
      "range": {
        "startLine": 435,
        "startChar": 0,
        "endLine": 440,
        "endChar": 5
      },
      "revId": "27f7716c610e9ab664bcea5ac97d09c84ff1ffc6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56c91d62_6d0e3774",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 13
      },
      "lineNbr": 440,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-12-20T06:14:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8723b409_faceb28b",
      "range": {
        "startLine": 435,
        "startChar": 0,
        "endLine": 440,
        "endChar": 5
      },
      "revId": "27f7716c610e9ab664bcea5ac97d09c84ff1ffc6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "617c9975_5ab2f41e",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 13
      },
      "lineNbr": 442,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-20T00:59:02Z",
      "side": 1,
      "message": "One thing to point out is that this doesn\u0027t fix the behavior with something like\n\nreadJson(..... \"key\", std::vector\u003cnlohmann::json\u003e j)\n\nwhich should not set an emptyJson message if it hits the sub-key within the list and its empty.",
      "revId": "27f7716c610e9ab664bcea5ac97d09c84ff1ffc6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d603cbe_0021db6a",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 13
      },
      "lineNbr": 442,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-12-20T06:14:55Z",
      "side": 1,
      "message": "Do you mean that if the Json is empty and that the requested property is a vector, then it shouldn\u0027t error out?",
      "parentUuid": "617c9975_5ab2f41e",
      "revId": "27f7716c610e9ab664bcea5ac97d09c84ff1ffc6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6334f4f_a91f6ecd",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 13
      },
      "lineNbr": 442,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-01-07T23:54:55Z",
      "side": 1,
      "message": "I mean if the json has a sub-element.\n\nsomething like\n\nPATCH {\"IpAddresses\":[{}, {}]}",
      "parentUuid": "6d603cbe_0021db6a",
      "revId": "27f7716c610e9ab664bcea5ac97d09c84ff1ffc6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8157d254_9624f815",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 13
      },
      "lineNbr": 442,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-01-11T23:41:29Z",
      "side": 1,
      "message": "So do we expect\n```\nnlohmann::json json\nreadJsonPatch(\"ipAddress\", j)\n```\n\nto pass? I think it does already?\n\nOr are we thinking of fetching the subelement directly. like\n\n```\nnlohmann::json json\nreadJsonPatch(\"ipAddress/0\", j)\n```\n?\n\nAnyway, I added some unit tests so we can be more sure what what\u0027s happening.",
      "parentUuid": "d6334f4f_a91f6ecd",
      "revId": "27f7716c610e9ab664bcea5ac97d09c84ff1ffc6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1aa0f00_659c69d1",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 13
      },
      "lineNbr": 442,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-01-12T19:13:42Z",
      "side": 1,
      "message": "for PATCH {\"IpAddresses\":[{}, {}]}\n\nstd::vector\u003cnlohmann::json\u003e j;\nreadJsonPatch(\"ipAddress/0\", j)\n\n\nShould succeed without an error.",
      "parentUuid": "8157d254_9624f815",
      "revId": "27f7716c610e9ab664bcea5ac97d09c84ff1ffc6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "589f96b3_245ef846",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 13
      },
      "lineNbr": 442,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-01-21T10:59:30Z",
      "side": 1,
      "message": "ok, sounds good. That\u0027s also what I expected. Let me see how I can support it while I am at it.\n\n----\n\nI have updated it in the change, maybe should be in a separate review. I think it works? maybe there are some corner cases that I missed.",
      "parentUuid": "a1aa0f00_659c69d1",
      "revId": "27f7716c610e9ab664bcea5ac97d09c84ff1ffc6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7eebdf29_70fca09d",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 13
      },
      "lineNbr": 442,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-01-31T23:40:23Z",
      "side": 1,
      "message": "split it into https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/50809",
      "parentUuid": "589f96b3_245ef846",
      "revId": "27f7716c610e9ab664bcea5ac97d09c84ff1ffc6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39b0afa3_8356e0f9",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 13
      },
      "lineNbr": 442,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-02-24T19:14:29Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7eebdf29_70fca09d",
      "revId": "27f7716c610e9ab664bcea5ac97d09c84ff1ffc6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fdcb220_1accca88",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 13
      },
      "lineNbr": 474,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-12-20T00:59:02Z",
      "side": 1,
      "message": "Isn\u0027t this wrong?  readJsonAction should simply allow empty payloads in all cases.  If parameters are required and not provided, there are more specific error messages we\u0027ll produce.",
      "range": {
        "startLine": 473,
        "startChar": 0,
        "endLine": 474,
        "endChar": 48
      },
      "revId": "27f7716c610e9ab664bcea5ac97d09c84ff1ffc6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66d3d3c3_dbaf413b",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 13
      },
      "lineNbr": 474,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2021-12-20T06:14:55Z",
      "side": 1,
      "message": "ah, ok. Then I guess we don\u0027t need to do handleEmpty at all.\n\nWe will let the caller handle the errors.",
      "parentUuid": "4fdcb220_1accca88",
      "range": {
        "startLine": 473,
        "startChar": 0,
        "endLine": 474,
        "endChar": 48
      },
      "revId": "27f7716c610e9ab664bcea5ac97d09c84ff1ffc6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eba3958f_6793b4ba",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 13
      },
      "lineNbr": 474,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-01-07T23:54:55Z",
      "side": 1,
      "message": "it\u0027s not on the caller, but it\u0027s on the readJsonValue call.",
      "parentUuid": "66d3d3c3_dbaf413b",
      "range": {
        "startLine": 473,
        "startChar": 0,
        "endLine": 474,
        "endChar": 48
      },
      "revId": "27f7716c610e9ab664bcea5ac97d09c84ff1ffc6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d51a5fe9_420b8537",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 13
      },
      "lineNbr": 474,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-01-11T23:41:29Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "eba3958f_6793b4ba",
      "range": {
        "startLine": 473,
        "startChar": 0,
        "endLine": 474,
        "endChar": 48
      },
      "revId": "27f7716c610e9ab664bcea5ac97d09c84ff1ffc6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}