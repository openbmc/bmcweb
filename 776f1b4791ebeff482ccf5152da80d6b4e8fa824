{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a142d765_3abdd683",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-23T21:41:12Z",
      "side": 1,
      "message": "Welcome any comments or gaps that I can work on to make this happen",
      "revId": "776f1b4791ebeff482ccf5152da80d6b4e8fa824",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcd3ab6c_d1e6b6f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-23T22:08:22Z",
      "side": 1,
      "message": "Lets start with the first step of adding you as a reviewer in this file (which is generally the recommended first step) then we can start assigning you reviews that you can work through.\n\nI\u0027m not seeing a lot of patches where you actually took a submitter from a patchset through rework and got a +1, so that would be something that I think would help get you there is to review more code.\nhttps://gerrit.openbmc.org/q/reviewedby:nanzhoumails%2540gmail.com+project:openbmc/bmcweb+status:merged\n\nShows 9 total reviews +1ed that eventually merged, every one of which was written by google.  I\u0027d recommend starting to review patches not written by or for google to understand the breadth, or, if you only want to review google-specific code, maybe we could initially add you as a maintainer of google/v1?\n\nI have seen you in the DMTF meetings, which is great.\n\nOne other thing that we should talk about is access to test systems, given most of your testing results are qemu.  Admittedly, this is difficult, given the level of secrecy that Google has, but S7106, and GBS platforms are both upstream and available.  I generally test changes on S7106 (which we have a number of systems available for that purpose) or on a wolf pass.  Qemu is generally not sufficient for testing merges given its lack of access to hardware.\n\nI just merged the responsibility doc into the OWNERS file, so it would be good if your commit message walked through what that outlines, if you don\u0027t meet the criteria for some of it, lets have a discussion, and it\u0027s quite possible there\u0027s a portion of the codebase we can make you maintainer of, or we can come to some agreement about what patches you +2, and what patches you let the other maintainers merge.because of their ability to test them.\n\n\nGlad you\u0027re still interested.  Given that you never added yourself to the reviewers list, I was starting to wonder if you\u0027d decided this wasn\u0027t something you wanted to pursue.",
      "parentUuid": "a142d765_3abdd683",
      "revId": "776f1b4791ebeff482ccf5152da80d6b4e8fa824",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29357111_18cc28e5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-23T22:59:24Z",
      "side": 1,
      "message": "Thanks for the comment.\n\n\u003e I\u0027m not seeing a lot of patches where you actually took a submitter from a patchset through rework and got a +1, so that would be something that I think would help get you there is to review more code.https://gerrit.openbmc.org/q/reviewedby:nanzhoumails%2540gmail.com+project:openbmc/bmcweb+status:merged\n\nhttps://gerrit.openbmc.org/q/reviewer:nanzhoumails%2540gmail.com+project:openbmc/bmcweb+status:merged+-owner:nanzhoumails%2540gmail.com\n\nPlease see this. The problem of your search is that I have to be one of the reviewer in the last patchset. This doesn\u0027t make sense to me since I have tried comment on changes, authors replied and resolved comments by making new patchsets, then before I +1 the change again, the patch was submitted.\n\n\u003e One other thing that we should talk about is access to test systems, given most of your testing results are qemu.  Admittedly, this is difficult, given the level of secrecy that Google has, but S7106, and GBS platforms are both upstream and available.  I generally test changes on S7106 (which we have a number of systems available for that purpose) or on a wolf pass.  Qemu is generally not sufficient for testing merges given its lack of access to hardware.\n\nMost of my test results are on Google\u0027s hardware actually. What\u0027s the gap here? \"Have access to at least one upstream platform to test relevant patchsets\"?\n\nDo you have some pointers how I can access to those systems?\n\n\u003e it\u0027s quite possible there\u0027s a portion of the codebase we can make you maintainer of, or we can come to some agreement about what patches you +2, and what patches you let the other maintainers merge.because of their ability to test them.\n\nSure. I don\u0027t plan to +2 any commit and just submit it. And yes, I am ok with \"what patches you +2, and what patches you let the other maintainers merge.because of their ability to test them\".\n\n\u003e so it would be good if your commit message walked through what that outlines,\n\nI have followed the outlines. Do you see any other gaps?",
      "parentUuid": "fcd3ab6c_d1e6b6f8",
      "revId": "776f1b4791ebeff482ccf5152da80d6b4e8fa824",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a4fe404_e2f6953f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-23T23:53:06Z",
      "side": 1,
      "message": "\u003e Thanks for the comment.\n\u003e \n\u003e \u003e I\u0027m not seeing a lot of patches where you actually took a submitter from a patchset through rework and got a +1, so that would be something that I think would help get you there is to review more code.https://gerrit.openbmc.org/q/reviewedby:nanzhoumails%2540gmail.com+project:openbmc/bmcweb+status:merged\n\u003e \n\u003e https://gerrit.openbmc.org/q/reviewer:nanzhoumails%2540gmail.com+project:openbmc/bmcweb+status:merged+-owner:nanzhoumails%2540gmail.com\n\u003e \n\u003e Please see this. The problem of your search is that I have to be one of the reviewer in the last patchset.\n\nThat\u0027s a good point.  You\u0027re right, that search did look smaller than I thought it should, and yes, you have been reviewing, no question there.  You have reviewed quite a few more than 9 patches.  Agreed.\n\n\u003e This doesn\u0027t make sense to me since I have tried comment on changes, authors replied and resolved comments by making new patchsets, then before I +1 the change again, the patch was submitted.\n\u003e \n\u003e \u003e One other thing that we should talk about is access to test systems, given most of your testing results are qemu.  Admittedly, this is difficult, given the level of secrecy that Google has, but S7106, and GBS platforms are both upstream and available.  I generally test changes on S7106 (which we have a number of systems available for that purpose) or on a wolf pass.  Qemu is generally not sufficient for testing merges given its lack of access to hardware.\n\u003e \n\u003e Most of my test results are on Google\u0027s hardware actually. What\u0027s the gap here? \"Have access to at least one upstream platform to test relevant patchsets\"?\n\nThe gap here is that google hardware has code, interfaces and patches that upstream doesn\u0027t, and many times tests done on hardware with downstream patches have caused upstream issues because we\u0027re missing features and interfaces on the upstream platforms, and break the upstream platforms.\n\n\u003e \n\u003e Do you have some pointers how I can access to those systems?\n\nThey\u0027re in boxes in the lab.  Ofer can get you one.\n\n\u003e \n\u003e \u003e it\u0027s quite possible there\u0027s a portion of the codebase we can make you maintainer of, or we can come to some agreement about what patches you +2, and what patches you let the other maintainers merge.because of their ability to test them.\n\u003e \n\u003e Sure. I don\u0027t plan to +2 any commit and just submit it.\n\nTo be clear, I wasn\u0027t saying that\u0027s what you\u0027d do.  I do think you will do your best to review.\n\n\u003e And yes, I am ok with \"what patches you +2, and what patches you let the other maintainers merge.because of their ability to test them\".\n\nI\u0027m going to have to let you take the lead here on which portions you\u0027d like to help maintain.\n\n\u003e \n\u003e \u003e so it would be good if your commit message walked through what that outlines,\n\u003e \n\u003e I have followed the outlines. Do you see any other gaps?\n\nSecurity guidelines.  Your query parameters (I take some responsibility for this as well) are still under an \"insecure\" flag, and have to be disabled by default.  Getting that feature to the point where it can be ensured that it\u0027s secure, can be enabled by default, and doesn\u0027t cause CVEs will help you gain valuable insight on:\nWhy certain limits exist to prevent the bmc crashing.\nWhat authorities we fall back to for determining those limits.\nHow potential attackers and security researchers generally try to access the BMC.\n\nCVE responses;  The next CVE that comes in, I will read you into it so you can get experience with how to respond to it as a maintainer.\n\n\n\nAt the end of the day, the most important part is \"does the community trust you?\".  Getting yourself as a listed reviewer will be a good start to that.  If you\u0027d like, feel free to put it in another patchset (which I suspect gunnar and I can merge immediately) and we can keep the discussion going here.",
      "parentUuid": "29357111_18cc28e5",
      "revId": "776f1b4791ebeff482ccf5152da80d6b4e8fa824",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7888229f_6583cfe8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-24T01:59:42Z",
      "side": 1,
      "message": "\u003e At the end of the day, the most important part is \"does the community trust you?\".  Getting yourself as a listed reviewer will be a good start to that.  If you\u0027d like, feel free to put it in another patchset (which I suspect gunnar and I can merge immediately) and we can keep the discussion going here.\n\nI have been added myself manually to many changes manually already in last few months.  https://gerrit.openbmc.org/q/project:openbmc/bmcweb+branch:master+reviewer:nanzhoumails%2540gmail.com+after:2022-3-31\n\nIt is in the artifact list. I have started this when you first brought up we need to review random upstream patches several months ago. So I already started.\n\nAnd sure, I can add myself to the reviewer list\n\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/54861\n\n\u003e They\u0027re in boxes in the lab.  Ofer can get you one.\n\nYou mean gbs machines? gbs doesn\u0027t have Redfish. Or S7106?\n\n\u003e Security guidelines.\n\nQuery Parameter is a specific question that we can take out and discuss in another thread. The standard has already defined the maximum level of expand.\n\nI have contributed to at least the design of CRL support. Though the implementation hasn\u0027t started.\n\n\u003e CVE responses;\n\nSure. Glad to help.\n\n\u003e To be clear, I wasn\u0027t saying that\u0027s what you\u0027d do.  I do think you will do your best to review.\n\u003e I\u0027m going to have to let you take the lead here on which portions you\u0027d like to help maintain.\n\nI believe I have enough understanding on Sensor Collection, Memory Collection, part of the LogService, Certificate Service, Query Parameters. I can also help any unit tests.\n\nAny thing else I can +2? But for sure I will start with +1 only and let the other maintainers +2 for the first several months.",
      "parentUuid": "6a4fe404_e2f6953f",
      "revId": "776f1b4791ebeff482ccf5152da80d6b4e8fa824",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "badb41b5_04c7cbcf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-24T15:01:36Z",
      "side": 1,
      "message": "\u003e And sure, I can add myself to the reviewer list\n\nGreat.  No disagreement about you adding yourself manually, you\u0027ve been doing an excellent job over the last few months.  Please keep it up.\n\n\u003e You mean gbs machines? gbs doesn\u0027t have Redfish. Or S7106?\n\nI emailed you the details directly.  They\u0027re S7106 machines.\n\n\u003e Query Parameter is a specific question that we can take out and discuss in another thread. The standard has already defined the maximum level of expand.\n\nThe point is not specifically about query parameters, it\u0027s about being able to assess code for security impacts and undefined behavior when doing reviews.\n\n\u003eI have contributed to at least the design of CRL support. Though the implementation hasn\u0027t started.\n\nThank you for pushing that forward.  I\u0027m interested to see you follow through on it.  It will help quite a bit I suspect.\n\n\n\u003e I believe I have enough understanding on Sensor Collection, Memory Collection, part of the LogService, Certificate Service, Query Parameters. I can also help any unit tests.\n\nIf you want to just do those things, that reduces the scope quite a bit, which I think will help this request to go through faster.\n\nI\u0027m going to wait to see what the rest of the community and other maintainers have to say on this.  Krzysztof also had an interest in being a maintainer here so we need to include him in this decision making process as well.",
      "parentUuid": "7888229f_6583cfe8",
      "revId": "776f1b4791ebeff482ccf5152da80d6b4e8fa824",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}