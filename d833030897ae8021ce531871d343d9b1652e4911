{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "34fc4c9e_9c649f48",
        "filename": "scripts/generate_auth_certificates.py",
        "patchSetId": 8
      },
      "lineNbr": 410,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-03-16T18:20:44Z",
      "side": 1,
      "message": "you\u0027ve missed the point of these a little.",
      "range": {
        "startLine": 403,
        "startChar": 0,
        "endLine": 410,
        "endChar": 16
      },
      "revId": "d833030897ae8021ce531871d343d9b1652e4911",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f31a70b5_ba0bd227",
        "filename": "scripts/generate_auth_certificates.py",
        "patchSetId": 8
      },
      "lineNbr": 410,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-03-16T18:22:25Z",
      "side": 1,
      "message": "The intent of the client object is that you create one client, then reuse that client repeatedly, so that the auth and connection are reused.\n\nAs you\u0027ve written this patch you create 4 new session objects, we should be reusing one.",
      "parentUuid": "34fc4c9e_9c649f48",
      "range": {
        "startLine": 403,
        "startChar": 0,
        "endLine": 410,
        "endChar": 16
      },
      "revId": "d833030897ae8021ce531871d343d9b1652e4911",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ecde00f_4290bd5b",
        "filename": "scripts/generate_auth_certificates.py",
        "patchSetId": 8
      },
      "lineNbr": 410,
      "author": {
        "id": 1002382
      },
      "writtenOn": "2025-03-16T21:23:50Z",
      "side": 1,
      "message": "Got it! I combined all of the httpx.Client initialized in the script. However, I am not entirely sure that my approach is good. I overrided `_transport` property of the `httpx.Client` as the certificate is attached to the `_transport` property [1] (so we need to override it)\n\nI tried to check `httpx` source that whether we can pass the cert directly to the `get` method but I didn\u0027t find any other better approach. I also am not sure whether we retain connection here if we override the `_transport` property\n\nLet me know if you have any input on this, thanks!\n\n\n[1] `httpx` src: https://github.com/encode/httpx/blob/master/httpx/_client.py#L688-L696",
      "parentUuid": "f31a70b5_ba0bd227",
      "range": {
        "startLine": 403,
        "startChar": 0,
        "endLine": 410,
        "endChar": 16
      },
      "revId": "d833030897ae8021ce531871d343d9b1652e4911",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edb935e1_7328c85f",
        "filename": "scripts/generate_auth_certificates.py",
        "patchSetId": 8
      },
      "lineNbr": 410,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-03-17T17:00:35Z",
      "side": 1,
      "message": "\u003e Got it! I combined all of the httpx.Client initialized in the script. However, I am not entirely sure that my approach is good. I overrided `_transport` property of the `httpx.Client` as the certificate is attached to the `_transport` property [1] (so we need to override it)\n\n\n\n\u003e \n\u003e I tried to check `httpx` source that whether we can pass the cert directly to the `get` method but I didn\u0027t find any other better approach. I also am not sure whether we retain connection here if we override the `_transport` property\n\u003e \n\u003e Let me know if you have any input on this, thanks!\n\u003e \n\u003e \n\u003e [1] `httpx` src: https://github.com/encode/httpx/blob/master/httpx/_client.py#L688-L696",
      "parentUuid": "8ecde00f_4290bd5b",
      "range": {
        "startLine": 403,
        "startChar": 0,
        "endLine": 410,
        "endChar": 16
      },
      "revId": "d833030897ae8021ce531871d343d9b1652e4911",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}