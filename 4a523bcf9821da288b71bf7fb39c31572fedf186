{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5a11f257_ed24f27d",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 15
      },
      "lineNbr": 121,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2023-05-03T20:52:41Z",
      "side": 1,
      "message": "Not sure this is in the right place. If we have multiple connections, connectHandler is still only called once when the console socket is first connected. The second websocket connection will find that `hostSocket` already exists. So probably we should just put `conn.resumeRead();` at the end of `connectConsoleSocket`.",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 121,
        "endChar": 0
      },
      "revId": "4a523bcf9821da288b71bf7fb39c31572fedf186",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "518ca370_10dca6fa",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 15
      },
      "lineNbr": 121,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-05-04T05:13:03Z",
      "side": 1,
      "message": "Good catch. I am actually setting the defer read only if host socket is null. We only need protection during first socket connect. Please check.",
      "parentUuid": "5a11f257_ed24f27d",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 121,
        "endChar": 0
      },
      "revId": "4a523bcf9821da288b71bf7fb39c31572fedf186",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aacb29b2_8c37c134",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 15
      },
      "lineNbr": 129,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2023-05-03T20:52:41Z",
      "side": 1,
      "message": "`sessions.contains(\u0026conn)`\nMaybe this doesn\u0027t even need to be a function.",
      "range": {
        "startLine": 129,
        "startChar": 11,
        "endLine": 129,
        "endChar": 52
      },
      "revId": "4a523bcf9821da288b71bf7fb39c31572fedf186",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a70a687_861bd19a",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 15
      },
      "lineNbr": 129,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-05-04T05:13:03Z",
      "side": 1,
      "message": "I don\u0027t find contains() method in the boost::container::flat_set\nRef: https://boostorg.github.io/compute/boost/compute/flat_set.html",
      "parentUuid": "aacb29b2_8c37c134",
      "range": {
        "startLine": 129,
        "startChar": 11,
        "endLine": 129,
        "endChar": 52
      },
      "revId": "4a523bcf9821da288b71bf7fb39c31572fedf186",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b06d2cb3_834ce307",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 15
      },
      "lineNbr": 179,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-05-01T21:34:06Z",
      "side": 1,
      "message": "why not associate the obmc-console-server connection with the session and maintain N connections for N sessions across the M obmc-console-server instances? sticking this in a global makes it needlessly fragile and in effect reintroduces and forces you to re-solve the problems that obmc-console-server already solves.",
      "revId": "4a523bcf9821da288b71bf7fb39c31572fedf186",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca952d01_a701122a",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 15
      },
      "lineNbr": 179,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-05-02T17:26:40Z",
      "side": 1,
      "message": "That was basically what I asked earlier above:\n\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/62525/12..15/include/obmc_console.hpp#b22",
      "parentUuid": "b06d2cb3_834ce307",
      "revId": "4a523bcf9821da288b71bf7fb39c31572fedf186",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "678c0928_48bf5698",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 15
      },
      "lineNbr": 179,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-05-02T23:49:28Z",
      "side": 1,
      "message": "Okay, well so long as it\u0027s actively being reworked to be less bonkers...",
      "parentUuid": "ca952d01_a701122a",
      "revId": "4a523bcf9821da288b71bf7fb39c31572fedf186",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c1b9085_6bcc00a2",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 15
      },
      "lineNbr": 179,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2023-05-03T20:52:41Z",
      "side": 1,
      "message": "IMO it\u0027s pretty close to reasonable in the current state. Simultaneous connections to different consoles are not allowed so we don\u0027t need all the extra global state yet. This commit just sets up the D-Bus lookups.",
      "parentUuid": "678c0928_48bf5698",
      "revId": "4a523bcf9821da288b71bf7fb39c31572fedf186",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "758f78fa_ae0cb5e7",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 15
      },
      "lineNbr": 179,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-05-03T22:19:21Z",
      "side": 1,
      "message": "Right, but simultaneous connections to multiple consoles just falls out naturally from doing the right thing (one obmc-console connection per session), rather than doing what we\u0027re doing here.",
      "parentUuid": "2c1b9085_6bcc00a2",
      "revId": "4a523bcf9821da288b71bf7fb39c31572fedf186",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59aa250f_1a430fcf",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 15
      },
      "lineNbr": 179,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2023-05-03T22:29:40Z",
      "side": 1,
      "message": "Ok, I misunderstood what you were suggesting. The existing code shared state (unix socket + buffers) among multiple websockets to the same console. But you\u0027re suggesting to drop that model and keep separate state for each websocket. That\u0027s fine, and I agree it\u0027s simpler.\n\nBut I\u0027m also interested in getting this change merged ASAP because Redfish SOL is currently broken. bmcweb assumes a hardcoded unix socket name of @obmc-console but there is no way to configure obmc-console to listen at that path.",
      "parentUuid": "758f78fa_ae0cb5e7",
      "revId": "4a523bcf9821da288b71bf7fb39c31572fedf186",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67978333_66555829",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 15
      },
      "lineNbr": 179,
      "author": {
        "id": 1000009
      },
      "writtenOn": "2023-05-04T01:42:25Z",
      "side": 1,
      "message": "\u003e But I\u0027m also interested in getting this change merged ASAP because Redfish SOL is currently broken. bmcweb assumes a hardcoded unix socket name of @obmc-console but there is no way to configure obmc-console to listen at that path.\n\nYep, that\u0027s fair enough. Hopefully we can stage the changes better in the future. I discussed that on Discord with Ninad:\n\nhttps://discord.com/channels/775381525260664832/1083551792094249051/1103105227386781707",
      "parentUuid": "59aa250f_1a430fcf",
      "revId": "4a523bcf9821da288b71bf7fb39c31572fedf186",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a5b5341_def18cf3",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 15
      },
      "lineNbr": 195,
      "author": {
        "id": 1000900
      },
      "writtenOn": "2023-05-03T20:52:41Z",
      "side": 1,
      "message": "typo: endpoint",
      "range": {
        "startLine": 195,
        "startChar": 54,
        "endLine": 195,
        "endChar": 61
      },
      "revId": "4a523bcf9821da288b71bf7fb39c31572fedf186",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78daab4f_ddf1a976",
        "filename": "include/obmc_console.hpp",
        "patchSetId": 15
      },
      "lineNbr": 195,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-05-04T05:13:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a5b5341_def18cf3",
      "range": {
        "startLine": 195,
        "startChar": 54,
        "endLine": 195,
        "endChar": 61
      },
      "revId": "4a523bcf9821da288b71bf7fb39c31572fedf186",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}