{
  "comments": [
    {
      "key": {
        "uuid": "6c95fe0b_289e6c66",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-09T22:22:56Z",
      "side": 1,
      "message": "please wrap your commits 50/72",
      "revId": "6eec41fce6d71ec8204c987b1581137ab49f7852",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3c535ef_77876772",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-09T22:22:56Z",
      "side": 1,
      "message": "more detail here, including a link to the OWASP standards you\u0027re citing.  We do validate the content type by actually parsing it, so I suspect we meet the intent of the OWASP guidelines.  There\u0027s lots of places where we can implicitly assume a content-type.\n\nOverall, there\u0027s lots of places where we implicitly assume a content-type given the URI, as the specification is defined that way (redfish for example only defines JSON).\n\n\nSuddenly checking this while technically correct, has the potential to break a lot of scripts that were previously working.  I\u0027m open to this being a security issue, but it\u0027s not clear what that would be, as the content-type is controlled by the user, so it doesn\u0027t really change the security boundary by checking possibly-attacker sent fields.\n\nThe patchset itself has some style things that need fixed as well, but lets get the \"why\" sorted out first, then we can deal with the actual implementation.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 32
      },
      "revId": "6eec41fce6d71ec8204c987b1581137ab49f7852",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}