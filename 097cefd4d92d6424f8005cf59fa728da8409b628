{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d96b7df2_4c342b70",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-30T18:06:51Z",
      "side": 1,
      "message": "In the future, it would\u0027ve been a lot better if this were a separate commit.  it\u0027s an independent feature flag, and would\u0027ve made this commit smaller and more self container.\n\nAll good.",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 31,
        "endChar": 8
      },
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b864ef9d_6fb6b458",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 34,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-30T18:10:54Z",
      "side": 1,
      "message": "Could you please just update the existing mtls script to support your new type of encoding?\nhttps://github.com/openbmc/bmcweb/blob/master/scripts/generate_auth_certificates.py\n\nI appreciate a lot that you tested it very well, but checking in a test script into a user-driven repo when one already exists to do this kind of thing duplicates some effort.",
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7cf19cfd_bc27d548",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 34,
      "author": {
        "id": 1001910
      },
      "writtenOn": "2023-12-05T18:28:21Z",
      "side": 1,
      "message": "I can, would it be OK if I publish as a separate change? Need to ramp up on that script first.",
      "parentUuid": "b864ef9d_6fb6b458",
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b96dc419_235b6d4b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 34,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-05T18:46:40Z",
      "side": 1,
      "message": "yep, feel free to split it up.",
      "parentUuid": "7cf19cfd_bc27d548",
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e88019a_76e3dc47",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-30T18:10:54Z",
      "side": 1,
      "message": "Remove.  Just say you enabled this meson option on romulus.  No need to go into this level of details on how.",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 49,
        "endChar": 3
      },
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76c71ff1_e83e5820",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 1001910
      },
      "writtenOn": "2023-12-05T18:28:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6e88019a_76e3dc47",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 49,
        "endChar": 3
      },
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e4cb86c_fc10b5d5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-30T18:10:54Z",
      "side": 1,
      "message": "Just say \"unit tests pass\", which even itself is a given, because CI also runs the unit tests.",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 56,
        "endChar": 3
      },
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23c07796_31742980",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-30T20:54:27Z",
      "side": 1,
      "message": "Although, but to you.  This is a nit.",
      "parentUuid": "8e4cb86c_fc10b5d5",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 56,
        "endChar": 3
      },
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "558128d6_a4023657",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1001910
      },
      "writtenOn": "2023-11-30T03:25:49Z",
      "side": 1,
      "message": "Hi Ed, apologies for the delay. Think I\u0027ve got everything based on your feedback, but let me know what you think",
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "034fd936_b8f7204f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-30T20:32:18Z",
      "side": 1,
      "message": "Just posted a bunch of fixes.  Missing includes, some of the refactorings I asked for with iostreams, and changing the prototype of your function to output a std::optional instead of using an in-out param which simplifies some code.\n\nFYI, Changing around the parser in the way I did results in an almost 1KB reduction in the final binary size when your option is enabled (which is about half a percent of the total).  While it doesn\u0027t sound like a lot, these kinds of fixes when made consistently keep bmcweb able to be applied to a number of systems, and given that its binary size is already big, keeping making every attempt to not make it worse keeps the binary usable for everyone.\n\nPlease take a look at the fixes I made and see if they make sense to you.  Feel free to remove anything you disagree with or you\u0027d like to discuss.",
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00d4ea46_0e15c8d8",
        "filename": "http/mutual_tls.hpp",
        "patchSetId": 5
      },
      "lineNbr": 92,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-30T18:06:51Z",
      "side": 1,
      "message": "Lets break this into its own branch.  This is code that will need to get security reviewed a lot.  The simpler it is, the better.",
      "range": {
        "startLine": 92,
        "startChar": 9,
        "endLine": 92,
        "endChar": 68
      },
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24b8a71a_df79d287",
        "filename": "http/mutual_tls.hpp",
        "patchSetId": 5
      },
      "lineNbr": 92,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-30T20:32:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00d4ea46_0e15c8d8",
      "range": {
        "startLine": 92,
        "startChar": 9,
        "endLine": 92,
        "endChar": 68
      },
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee077df2_76ae876b",
        "filename": "http/mutual_tls_meta.hpp",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-30T18:06:51Z",
      "side": 1,
      "message": "Generally we try to avoid using stringstreams for parsing.  They compile pretty heavy, are difficult to check for errors without exceptions, and aren\u0027t terribly performant.\n\nNot sure if that matters in this case, but one example of such a parser is here:  https://github.com/openbmc/bmcweb/blob/7164bc62dd26ec92b01985aaae97ecc48276dea5/redfish-core/include/utils/time_utils.hpp#L47\n\nUp to you if you want to change.",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 34
      },
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af1a6c25_007d57ed",
        "filename": "http/mutual_tls_meta.hpp",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-30T18:06:51Z",
      "side": 1,
      "message": "We would generally do\n\nstd::find(\u0027:\u0027)",
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0a4c757_2bf6d15e",
        "filename": "http/mutual_tls_meta.hpp",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-30T18:06:51Z",
      "side": 1,
      "message": "in what conditions is the user host empty?  I suspect this should\u0027ve been a hard error?",
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38563e3b_ace0dae0",
        "filename": "http/mutual_tls_meta.hpp",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-30T20:32:18Z",
      "side": 1,
      "message": "nvm.  Figured it out.  done",
      "parentUuid": "d0a4c757_2bf6d15e",
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3333b69_4c30b796",
        "filename": "http/mutual_tls_meta.hpp",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2023-11-30T14:51:33Z",
      "side": 1,
      "message": "nit: it might be better to use static constexpr\u0027s and lengths instead of hard-coded number.  Not sure which will actually be less cluttered.",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 68,
        "endChar": 9
      },
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "855ebe98_d40b6e71",
        "filename": "http/mutual_tls_meta.hpp",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-30T18:06:51Z",
      "side": 1,
      "message": "+1.  Anything that avoids magic numbers like these is preffered.  Something like\n\n\nconstexpr std::string_view facebook \u003d \".facebook.com\";\nif (userHost.ends_with(facebook)){\n    userHost.resize(userHost.size() - facebook.size();\n}",
      "parentUuid": "b3333b69_4c30b796",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 68,
        "endChar": 9
      },
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a23b888_057e1075",
        "filename": "http/mutual_tls_meta.hpp",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-30T20:32:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "855ebe98_d40b6e71",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 68,
        "endChar": 9
      },
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eaaaec26_041eb7d4",
        "filename": "http/mutual_tls_meta.hpp",
        "patchSetId": 5
      },
      "lineNbr": 87,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-30T18:06:51Z",
      "side": 1,
      "message": "Is this possible?  You put the remaining username into userHost on line 52.  unless there was an error, this should always be eof, right?  I suspect we need to be checking for stream errors here?",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 87,
        "endChar": 18
      },
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9dcbeb63_fb97b5ec",
        "filename": "http/mutual_tls_meta.hpp",
        "patchSetId": 5
      },
      "lineNbr": 87,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-30T20:32:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eaaaec26_041eb7d4",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 87,
        "endChar": 18
      },
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b21b82d7_585f88aa",
        "filename": "http/mutual_tls_meta.hpp",
        "patchSetId": 5
      },
      "lineNbr": 106,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-30T18:06:51Z",
      "side": 1,
      "message": "wouldn\u0027t users be mapped to just userName, not userType_userName?",
      "range": {
        "startLine": 106,
        "startChar": 17,
        "endLine": 106,
        "endChar": 43
      },
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b340b635_6b6c2014",
        "filename": "http/mutual_tls_meta.hpp",
        "patchSetId": 5
      },
      "lineNbr": 106,
      "author": {
        "id": 1001910
      },
      "writtenOn": "2023-12-05T18:28:21Z",
      "side": 1,
      "message": "The problem is, in this example, these represent three separate entities in our case:\n\n```\nuser:zeus/hostname      # an employee with username\u003dzeus\nsvc:zeus                # a service called zeus\nhost:/zeus.facebook.com # a host called zeus\n```\n\nIf we don\u0027t include the `userType` field, they\u0027d all map to `sslUser \u003d \"zeus\"`, which would not be correct. I\u0027ve refactored the variable name as `entity` instead, let me know if it makes it clearer",
      "parentUuid": "b21b82d7_585f88aa",
      "range": {
        "startLine": 106,
        "startChar": 17,
        "endLine": 106,
        "endChar": 43
      },
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ddfe669c_6e0ada5d",
        "filename": "http/mutual_tls_meta.hpp",
        "patchSetId": 5
      },
      "lineNbr": 106,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-05T18:46:40Z",
      "side": 1,
      "message": "I\u0027m closing this comment out, we can follow up on the other thread that\u0027s basically asking the same question.",
      "parentUuid": "b340b635_6b6c2014",
      "range": {
        "startLine": 106,
        "startChar": 17,
        "endLine": 106,
        "endChar": 43
      },
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8e29c60_f80ffc4c",
        "filename": "meson_options.txt",
        "patchSetId": 5
      },
      "lineNbr": 201,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-30T18:06:51Z",
      "side": 1,
      "message": "nit, \"as a user name\" not \"as-is\"",
      "range": {
        "startLine": 201,
        "startChar": 54,
        "endLine": 201,
        "endChar": 59
      },
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "74f5615d_04420e0f",
        "filename": "meson_options.txt",
        "patchSetId": 5
      },
      "lineNbr": 201,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-30T20:32:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8e29c60_f80ffc4c",
      "range": {
        "startLine": 201,
        "startChar": 54,
        "endLine": 201,
        "endChar": 59
      },
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ecdcf41_8dbb8483",
        "filename": "test/http/mutual_tls_meta.cpp",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-30T19:27:44Z",
      "side": 1,
      "message": "I can\u0027t explain why this unit test is passing, but reading through the code, it looks like the code expects the hostnames to show up as one of 3 suffixes (.facebook.com etc), for which I would expect this check to fail.  Can you clarify if this is intentional?",
      "range": {
        "startLine": 22,
        "startChar": 31,
        "endLine": 22,
        "endChar": 50
      },
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "beab0d68_d3c39161",
        "filename": "test/http/mutual_tls_meta.cpp",
        "patchSetId": 5
      },
      "lineNbr": 22,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-11-30T20:54:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ecdcf41_8dbb8483",
      "range": {
        "startLine": 22,
        "startChar": 31,
        "endLine": 22,
        "endChar": 50
      },
      "revId": "097cefd4d92d6424f8005cf59fa728da8409b628",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}