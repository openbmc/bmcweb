{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "10074658_88be8d51",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 21
      },
      "lineNbr": 121,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-06T17:22:18Z",
      "side": 1,
      "message": "This is a dbus path, why it\u0027s it using the typesafe dbus path object?\n\n\nOnce that is answered, it\u0027s really odd to me that this API takes BOTH an object path, and the full path to the association.  Isn\u0027t the association just\n\n```\npath / association_name\n```\n\nWhy would this api need to provide two paths?",
      "range": {
        "startLine": 121,
        "startChar": 10,
        "endLine": 121,
        "endChar": 22
      },
      "revId": "a0b4b9f738cc25d01714967c5865617c23eafefc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d86e9517_4514cebd",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 21
      },
      "lineNbr": 121,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-02-18T01:47:32Z",
      "side": 1,
      "message": "associationEndPointPath: The path where the associated endpoint is fetched from.\npath: The subtree path for which the result should be fetched.\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/308004bcafc31ffa6cf895c9e04613482592459c/yaml/xyz/openbmc_project/ObjectMapper.interface.yaml#L127",
      "parentUuid": "10074658_88be8d51",
      "range": {
        "startLine": 121,
        "startChar": 10,
        "endLine": 121,
        "endChar": 22
      },
      "revId": "a0b4b9f738cc25d01714967c5865617c23eafefc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c906aa8_c85d3e2d",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 21
      },
      "lineNbr": 121,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-23T17:26:37Z",
      "side": 1,
      "message": "\u003e associationEndPointPath: The path where the associated endpoint is fetched from.\n\nRight, why is this required?  Shouldn\u0027t we get associations from ALL subtrees?",
      "parentUuid": "d86e9517_4514cebd",
      "range": {
        "startLine": 121,
        "startChar": 10,
        "endLine": 121,
        "endChar": 22
      },
      "revId": "a0b4b9f738cc25d01714967c5865617c23eafefc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1ccee5c_f8d8eff6",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 21
      },
      "lineNbr": 121,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-02-28T00:29:14Z",
      "side": 1,
      "message": "I do not understand what you mean.\nWe only need to get the **associated** subtree path\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/38570/91/redfish-core/lib/processor.hpp#980",
      "parentUuid": "2c906aa8_c85d3e2d",
      "range": {
        "startLine": 121,
        "startChar": 10,
        "endLine": 121,
        "endChar": 22
      },
      "revId": "a0b4b9f738cc25d01714967c5865617c23eafefc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}