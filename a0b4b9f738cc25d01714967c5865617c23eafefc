{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "10074658_88be8d51",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 21
      },
      "lineNbr": 121,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-06T17:22:18Z",
      "side": 1,
      "message": "This is a dbus path, why it\u0027s it using the typesafe dbus path object?\n\n\nOnce that is answered, it\u0027s really odd to me that this API takes BOTH an object path, and the full path to the association.  Isn\u0027t the association just\n\n```\npath / association_name\n```\n\nWhy would this api need to provide two paths?",
      "range": {
        "startLine": 121,
        "startChar": 10,
        "endLine": 121,
        "endChar": 22
      },
      "revId": "a0b4b9f738cc25d01714967c5865617c23eafefc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d86e9517_4514cebd",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 21
      },
      "lineNbr": 121,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-02-18T01:47:32Z",
      "side": 1,
      "message": "associationEndPointPath: The path where the associated endpoint is fetched from.\npath: The subtree path for which the result should be fetched.\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/308004bcafc31ffa6cf895c9e04613482592459c/yaml/xyz/openbmc_project/ObjectMapper.interface.yaml#L127",
      "parentUuid": "10074658_88be8d51",
      "range": {
        "startLine": 121,
        "startChar": 10,
        "endLine": 121,
        "endChar": 22
      },
      "revId": "a0b4b9f738cc25d01714967c5865617c23eafefc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c906aa8_c85d3e2d",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 21
      },
      "lineNbr": 121,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-23T17:26:37Z",
      "side": 1,
      "message": "\u003e associationEndPointPath: The path where the associated endpoint is fetched from.\n\nRight, why is this required?  Shouldn\u0027t we get associations from ALL subtrees?",
      "parentUuid": "d86e9517_4514cebd",
      "range": {
        "startLine": 121,
        "startChar": 10,
        "endLine": 121,
        "endChar": 22
      },
      "revId": "a0b4b9f738cc25d01714967c5865617c23eafefc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1ccee5c_f8d8eff6",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 21
      },
      "lineNbr": 121,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-02-28T00:29:14Z",
      "side": 1,
      "message": "I do not understand what you mean.\nWe only need to get the **associated** subtree path\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/38570/91/redfish-core/lib/processor.hpp#980",
      "parentUuid": "2c906aa8_c85d3e2d",
      "range": {
        "startLine": 121,
        "startChar": 10,
        "endLine": 121,
        "endChar": 22
      },
      "revId": "a0b4b9f738cc25d01714967c5865617c23eafefc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6e2800f_bd18ef7f",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 21
      },
      "lineNbr": 121,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-29T18:53:39Z",
      "side": 1,
      "message": "in the simplest case, we have\n\n/path/a\nassociated to\n/path/b\nwith an association named X\n\nthe query I would expect would be\n\"Find me paths associated with /path/a, with the X association\"\n\nRight? \n\nWhat this code implements is\n    const boost::urls::url\u0026 collectionPath,\n    std::span\u003cconst std::string_view\u003e interfaces,\n    const std::string\u0026 associationEndPointPath,\n    const sdbusplus::message::object_path\u0026 path\n\nSo in the above example\n\ncollectionPath \u003d ?  This is an http url, which seems odd for a DBus helper.\n\nassociationEndpointPath \u003d ?\n\nShould this be:\nX\n/path/a/X\n/path/b\n?\n\nI suspect that this is written where it should be /path/a/X, which is redundant, given that we already provide /path/a in the path argument.\n\npath \u003d /path/a\ninterfaces \u003d ?  Is this the other sides dbus interfaces, or this side?  It\u0027s not clear from the docstring",
      "parentUuid": "f1ccee5c_f8d8eff6",
      "range": {
        "startLine": 121,
        "startChar": 10,
        "endLine": 121,
        "endChar": 22
      },
      "revId": "a0b4b9f738cc25d01714967c5865617c23eafefc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76d72c07_223bae6f",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 21
      },
      "lineNbr": 121,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2024-03-01T02:35:22Z",
      "side": 1,
      "message": "We want to get the paths of all cores under cpu0 through the getAssociatedSubTreePaths method\n```\n[\n    {\n        \"path\": \"system/chassis/motherboard/cpu0\",\n        \"endpoints\": [\n            {\n                \"types\": {\n                    \"rType\": \"contained_by\",\n                    \"fType\": \"containing\"\n                },\n                \"paths\": [\n                    \"/xyz/openbmc_project/inventory/system/chassis/motherboard/cpu0/core0\",\n                    \"/xyz/openbmc_project/inventory/system/chassis/motherboard/cpu0/core1\",\n                    \"/xyz/openbmc_project/inventory/system/chassis/motherboard/cpu0/core2\",\n                    \"/xyz/openbmc_project/inventory/system/chassis/motherboard/cpu0/core3\",\n                    ... ...\n                ]\n            }\n        ]\n    }\n]\n```\nassociationEndPointPath \u003d /xyz/openbmc_project/inventory/system/chassis/motherboard/cpu0/containing\npath \u003d /xyz/openbmc_project/inventory\ninterfaces \u003d xyz.openbmc_project.Inventory.Item.CpuCore\n\nis this incorrect?",
      "parentUuid": "d6e2800f_bd18ef7f",
      "range": {
        "startLine": 121,
        "startChar": 10,
        "endLine": 121,
        "endChar": 22
      },
      "revId": "a0b4b9f738cc25d01714967c5865617c23eafefc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3eae260d_84289e77",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 21
      },
      "lineNbr": 121,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-05T16:31:37Z",
      "side": 1,
      "message": "what does the path variable do in the above case?",
      "parentUuid": "76d72c07_223bae6f",
      "range": {
        "startLine": 121,
        "startChar": 10,
        "endLine": 121,
        "endChar": 22
      },
      "revId": "a0b4b9f738cc25d01714967c5865617c23eafefc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}