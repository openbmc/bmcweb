{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3d592184_ced5507e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1001387
      },
      "writtenOn": "2022-04-07T17:40:49Z",
      "side": 1,
      "message": "Finally got the CI bot happy. Should be good for review now :)",
      "revId": "0ca20e7667a22cd40e1f67a707813940079c1757",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe4f6e1f_73c272d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-08T02:13:38Z",
      "side": 1,
      "message": "Ok, this patchset has been long awaited, and is GREAT to see.  I want to make that clear;  If it feels like I\u0027m picking on it in the comments, it\u0027s mostly because I would expect this to be used all over bmcweb, and I want to make sure we get some design patters well understood before we go and replicate it a gazillion times throughout the codebase.",
      "revId": "0ca20e7667a22cd40e1f67a707813940079c1757",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "524d8266_e5c35dea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-04-08T17:58:27Z",
      "side": 1,
      "message": "Very nice",
      "revId": "0ca20e7667a22cd40e1f67a707813940079c1757",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd3d5b44_9cd598b5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1001387
      },
      "writtenOn": "2022-04-12T01:31:56Z",
      "side": 1,
      "message": "Thanks! Totally understand and the feedback is greatly appreciated.",
      "parentUuid": "fe4f6e1f_73c272d9",
      "revId": "0ca20e7667a22cd40e1f67a707813940079c1757",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65d102e5_4841260a",
        "filename": "meson.build",
        "patchSetId": 12
      },
      "lineNbr": 394,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-04-08T17:58:27Z",
      "side": 1,
      "message": "NIT: \nplease move to line 385, to keep the redfish-core/lib/ut test to together and in alphabetical order",
      "range": {
        "startLine": 394,
        "startChar": 2,
        "endLine": 394,
        "endChar": 3
      },
      "revId": "0ca20e7667a22cd40e1f67a707813940079c1757",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0a4f3a3_3074304d",
        "filename": "meson.build",
        "patchSetId": 12
      },
      "lineNbr": 394,
      "author": {
        "id": 1001387
      },
      "writtenOn": "2022-04-12T01:31:56Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "65d102e5_4841260a",
      "range": {
        "startLine": 394,
        "startChar": 2,
        "endLine": 394,
        "endChar": 3
      },
      "revId": "0ca20e7667a22cd40e1f67a707813940079c1757",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bff306c_a002b6f2",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 12
      },
      "lineNbr": 371,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-08T02:13:38Z",
      "side": 1,
      "message": "I realize this is the first patch, and only doing a portion.  Considering that this is going to turn essentially every handler method we have into a template, I worry a little what that does to compile times and bug readability.  Is there any way to avoid the template with composition or \u003cgasps\u003e inheritance?",
      "range": {
        "startLine": 371,
        "startChar": 0,
        "endLine": 371,
        "endChar": 25
      },
      "revId": "0ca20e7667a22cd40e1f67a707813940079c1757",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5edf0688_52939d01",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 12
      },
      "lineNbr": 371,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-04-08T17:58:27Z",
      "side": 1,
      "message": "This is a very cool way to mock arguments. I have never seen it before.\n\nBut it would be easier to read if you could pass in a mockSdbus that inherits and overrides sdbusplus::asio::connection. Then forgo the templateing.",
      "parentUuid": "1bff306c_a002b6f2",
      "range": {
        "startLine": 371,
        "startChar": 0,
        "endLine": 371,
        "endChar": 25
      },
      "revId": "0ca20e7667a22cd40e1f67a707813940079c1757",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65a035d0_faff9abc",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 12
      },
      "lineNbr": 371,
      "author": {
        "id": 1001387
      },
      "writtenOn": "2022-04-12T01:31:56Z",
      "side": 1,
      "message": "The inheritance way is how I wish I could have done it from the start. Unfortunately, all the methods in sdbusplus::asio::connection are non-virtual, so MockSdbusConnection can\u0027t override them.\n\nI was messing around with it today and I can\u0027t really get around this issue without going in and creating an interface for sdbusplus::asio::connection. I\u0027m also not a huge fan of the templating within log_services.hpp, but I think it\u0027s unavoidable without significant changes to sdbusplus::asio::connection (and anything that uses it).\n\nI\u0027d appreciate any suggestions though!",
      "parentUuid": "5edf0688_52939d01",
      "range": {
        "startLine": 371,
        "startChar": 0,
        "endLine": 371,
        "endChar": 25
      },
      "revId": "0ca20e7667a22cd40e1f67a707813940079c1757",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbf0e677_c2c7db99",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 12
      },
      "lineNbr": 371,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-18T19:43:03Z",
      "side": 1,
      "message": "\u003e The inheritance way is how I wish I could have done it from the start. Unfortunately, all the methods in sdbusplus::asio::connection are non-virtual, so MockSdbusConnection can\u0027t override them.\n\nComposition is still an \n\n\u003e \n\u003e I was messing around with it today and I can\u0027t really get around this issue without going in and creating an interface for sdbusplus::asio::connection.\n\nConsidering we only explicitly call the name sdbusplus::asio::connection in one place (where we declare the global and where we init it in main) we should be able to invent a new interface pointer there, right?\n\n\u003e I\u0027m also not a huge fan of the templating within log_services.hpp, but I think it\u0027s unavoidable without significant changes to sdbusplus::asio::connection (and anything that uses it).\n\nOpenBMC has control over sdbusplus::asio::connection, so if we do need to make significant changes, we certainly can.\n\n\u003e \n\u003e I\u0027d appreciate any suggestions though!\n\nHave you attempted a composition based approach?  When I played around with it earlier, it seemed to work.",
      "parentUuid": "65a035d0_faff9abc",
      "range": {
        "startLine": 371,
        "startChar": 0,
        "endLine": 371,
        "endChar": 25
      },
      "revId": "0ca20e7667a22cd40e1f67a707813940079c1757",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8add00c9_125354d7",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 12
      },
      "lineNbr": 375,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-08T02:13:38Z",
      "side": 1,
      "message": "Nit, unless this function needs to take ownership of bus in some way (which it doesn\u0027t look like it does) this should be passed by a reference, not a pointer.  This helps in that we don\u0027t have to nullptr check it inside every handler, and it helps users know that it\u0027s just using the bus, rather than \"owning\" the bus.",
      "range": {
        "startLine": 375,
        "startChar": 27,
        "endLine": 375,
        "endChar": 56
      },
      "revId": "0ca20e7667a22cd40e1f67a707813940079c1757",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c8f651e_d63b7d18",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 12
      },
      "lineNbr": 375,
      "author": {
        "id": 1001387
      },
      "writtenOn": "2022-04-12T01:31:56Z",
      "side": 1,
      "message": "That makes sense. Updated.\n\nAlso changed the type and argument names to better reflect what this actually is.",
      "parentUuid": "8add00c9_125354d7",
      "range": {
        "startLine": 375,
        "startChar": 27,
        "endLine": 375,
        "endChar": 56
      },
      "revId": "0ca20e7667a22cd40e1f67a707813940079c1757",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a38068d_31969dfc",
        "filename": "redfish-core/lib/ut/log_services_test.cpp",
        "patchSetId": 12
      },
      "lineNbr": 24,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-08T02:13:38Z",
      "side": 1,
      "message": "This is just using the default systembus?  Don\u0027t we want to avoid that entirely in a unit test?  (I\u0027m surprised this pointer is even filled in in a unit test context).",
      "range": {
        "startLine": 24,
        "startChar": 24,
        "endLine": 24,
        "endChar": 52
      },
      "revId": "0ca20e7667a22cd40e1f67a707813940079c1757",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ec0deee_a0638baf",
        "filename": "redfish-core/lib/ut/log_services_test.cpp",
        "patchSetId": 12
      },
      "lineNbr": 24,
      "author": {
        "id": 1001387
      },
      "writtenOn": "2022-04-12T01:31:56Z",
      "side": 1,
      "message": "That pointer is never used in this test, which is why this doesn\u0027t fail. Pretty sure it\u0027s not filled in, but I\u0027ve changed it to be the mock object since that seems more appropriate for a test.",
      "parentUuid": "4a38068d_31969dfc",
      "range": {
        "startLine": 24,
        "startChar": 24,
        "endLine": 24,
        "endChar": 52
      },
      "revId": "0ca20e7667a22cd40e1f67a707813940079c1757",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44377b62_663cdf6c",
        "filename": "redfish-core/lib/ut/log_services_test.cpp",
        "patchSetId": 12
      },
      "lineNbr": 38,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-08T02:13:38Z",
      "side": 1,
      "message": "Isn\u0027t this the default?",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 38,
        "endChar": 54
      },
      "revId": "0ca20e7667a22cd40e1f67a707813940079c1757",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6534d009_98acd8ff",
        "filename": "redfish-core/lib/ut/log_services_test.cpp",
        "patchSetId": 12
      },
      "lineNbr": 38,
      "author": {
        "id": 1001387
      },
      "writtenOn": "2022-04-12T01:31:56Z",
      "side": 1,
      "message": "Yeah, you\u0027re right. Removed the unnecessary lines throughout the test.",
      "parentUuid": "44377b62_663cdf6c",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 38,
        "endChar": 54
      },
      "revId": "0ca20e7667a22cd40e1f67a707813940079c1757",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}