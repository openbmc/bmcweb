{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3d592184_ced5507e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1001387
      },
      "writtenOn": "2022-04-07T17:40:49Z",
      "side": 1,
      "message": "Finally got the CI bot happy. Should be good for review now :)",
      "revId": "0ca20e7667a22cd40e1f67a707813940079c1757",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe4f6e1f_73c272d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-08T02:13:38Z",
      "side": 1,
      "message": "Ok, this patchset has been long awaited, and is GREAT to see.  I want to make that clear;  If it feels like I\u0027m picking on it in the comments, it\u0027s mostly because I would expect this to be used all over bmcweb, and I want to make sure we get some design patters well understood before we go and replicate it a gazillion times throughout the codebase.",
      "revId": "0ca20e7667a22cd40e1f67a707813940079c1757",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bff306c_a002b6f2",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 12
      },
      "lineNbr": 371,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-08T02:13:38Z",
      "side": 1,
      "message": "I realize this is the first patch, and only doing a portion.  Considering that this is going to turn essentially every handler method we have into a template, I worry a little what that does to compile times and bug readability.  Is there any way to avoid the template with composition or \u003cgasps\u003e inheritance?",
      "range": {
        "startLine": 371,
        "startChar": 0,
        "endLine": 371,
        "endChar": 25
      },
      "revId": "0ca20e7667a22cd40e1f67a707813940079c1757",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8add00c9_125354d7",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 12
      },
      "lineNbr": 375,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-08T02:13:38Z",
      "side": 1,
      "message": "Nit, unless this function needs to take ownership of bus in some way (which it doesn\u0027t look like it does) this should be passed by a reference, not a pointer.  This helps in that we don\u0027t have to nullptr check it inside every handler, and it helps users know that it\u0027s just using the bus, rather than \"owning\" the bus.",
      "range": {
        "startLine": 375,
        "startChar": 27,
        "endLine": 375,
        "endChar": 56
      },
      "revId": "0ca20e7667a22cd40e1f67a707813940079c1757",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a38068d_31969dfc",
        "filename": "redfish-core/lib/ut/log_services_test.cpp",
        "patchSetId": 12
      },
      "lineNbr": 24,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-08T02:13:38Z",
      "side": 1,
      "message": "This is just using the default systembus?  Don\u0027t we want to avoid that entirely in a unit test?  (I\u0027m surprised this pointer is even filled in in a unit test context).",
      "range": {
        "startLine": 24,
        "startChar": 24,
        "endLine": 24,
        "endChar": 52
      },
      "revId": "0ca20e7667a22cd40e1f67a707813940079c1757",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44377b62_663cdf6c",
        "filename": "redfish-core/lib/ut/log_services_test.cpp",
        "patchSetId": 12
      },
      "lineNbr": 38,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-08T02:13:38Z",
      "side": 1,
      "message": "Isn\u0027t this the default?",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 38,
        "endChar": 54
      },
      "revId": "0ca20e7667a22cd40e1f67a707813940079c1757",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}