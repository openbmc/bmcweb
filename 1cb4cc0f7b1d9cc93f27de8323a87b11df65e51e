{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "00ca9c85_a1b7c9c0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-07T16:00:38Z",
      "side": 1,
      "message": "Not sure I agree there.  Gunnar also points out this is an issue.\n\nOne thing I\u0027d like to understand is what \"none\" even means in this context.  From my perspective, \"None\" is the same as \"AlwaysOff\" (ie, on power failure and restore, don\u0027t take any action), so I\u0027d really like to understand why this was added.  From my perspective, unless I\"m missing something, Redfish would just map this to the same thing as AlwaysOff, considering that is the system behavior.\n\nI see Geissler added this new enum a year ago here.\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/commit/66b591e165b53a80e431a543aa8c8e48beba585f\n\nAnd it states that the intent is to handle the one_time option, which Redfish doesn\u0027t really seem to support (I think?), so I suspect that we need something like\n\nlookup one time action\nif (none)\n   look up the permenant action.",
      "range": {
        "startLine": 11,
        "startChar": 49,
        "endLine": 13,
        "endChar": 20
      },
      "revId": "1cb4cc0f7b1d9cc93f27de8323a87b11df65e51e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cda57dca_45a936a1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000029
      },
      "writtenOn": "2022-03-07T18:28:18Z",
      "side": 1,
      "message": "Andrew and I discussed the use of \"AlwaysOff\" in place of \"None\", however that would essentially mean there\u0027s no way to know if it was a one_time option or the property was set to \"AlwaysOff\" to begin with to the caller. Andrew would need to speak to why this \"None\" was specifically added.\n\n\u003e And it states that the intent is to handle the one_time option, which Redfish doesn\u0027t really seem to support (I think?), so I suspect that we need something like\nlookup one time action\nif (none)\nlook up the permenant action.\n\nCorrect, I did not see anything resembling the definition of the one_time option from our dbus interface. Its seems we\u0027d be polluting the bmcweb code with possible \"one time actions\" that\u0027d be specific to how a company chooses to use \"None\" right?\n\nIts possible that removal of the `PowerRestorePolicy` from the response when \"None\" would work, but I\u0027ll need to look further into that along with possibly just returning \"AlwaysOff\" depending on the object this is on.",
      "parentUuid": "00ca9c85_a1b7c9c0",
      "range": {
        "startLine": 11,
        "startChar": 49,
        "endLine": 13,
        "endChar": 20
      },
      "revId": "1cb4cc0f7b1d9cc93f27de8323a87b11df65e51e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "784d7662_227284c4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-08T00:26:07Z",
      "side": 1,
      "message": "\u003e Andrew and I discussed the use of \"AlwaysOff\" in place of \"None\", however that would essentially mean there\u0027s no way to know if it was a one_time option or the property was set to \"AlwaysOff\" to begin with to the caller. Andrew would need to speak to why this \"None\" was specifically added.\n\n\nMy read on the above is that Redfish didn\u0027t have a use case for a power restore policy of \"only next boot\", and that we\u0027re trying to shoehorn in something into an interface not really meant for it.  Might be worth starting a discussion with those guys to see how they would model it.  For boot priority there\u0027s a concept of \"next boot\" with BootSourceOverrideTarget, and AliasBootOrder,.  For your use case, I suspect that model needs to be translated to the PowerRestorePolicy parameter, then this all becomes really easy.\n\n\u003e \n\u003e \u003e And it states that the intent is to handle the one_time option, which Redfish doesn\u0027t really seem to support (I think?), so I suspect that we need something like\n\u003e lookup one time action\n\u003e if (none)\n\u003e look up the permenant action.\n\nScratch that, the above was a bad idea.\n\n\u003e \n\u003e Correct, I did not see anything resembling the definition of the one_time option from our dbus interface. Its seems we\u0027d be polluting the bmcweb code with possible \"one time actions\" that\u0027d be specific to how a company chooses to use \"None\" right?\n\nWe should define \"None\" firmly enough at interface level wording that we don\u0027t have to rely on system specific behavior of what it does.\n\n\u003e \n\u003e Its possible that removal of the `PowerRestorePolicy` from the response when \"None\" would work, but I\u0027ll need to look further into that along with possibly just returning \"AlwaysOff\" depending on the object this is on.\n\nWe really shouldn\u0027t be removing parameters that are supported on the system just because we can\u0027t model the behavior.  I\u0027d much rather we just map None to PowerOff long before we removed it entirely, but I suspect we can get something better, that actually handles the one-time behavior.",
      "parentUuid": "cda57dca_45a936a1",
      "range": {
        "startLine": 11,
        "startChar": 49,
        "endLine": 13,
        "endChar": 20
      },
      "revId": "1cb4cc0f7b1d9cc93f27de8323a87b11df65e51e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fdbc561_fe600884",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-07T16:00:38Z",
      "side": 1,
      "message": "The Developing guide asks that you run the service validator, this this will fail as written.",
      "revId": "1cb4cc0f7b1d9cc93f27de8323a87b11df65e51e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f15d6fb_07fc349f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000029
      },
      "writtenOn": "2022-03-07T18:28:18Z",
      "side": 1,
      "message": "Thanks, I\u0027ve got the validator down and working thru the setup to run against my test.",
      "parentUuid": "8fdbc561_fe600884",
      "revId": "1cb4cc0f7b1d9cc93f27de8323a87b11df65e51e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9bb56fc_9df52fca",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-08T00:26:07Z",
      "side": 1,
      "message": "üëç",
      "parentUuid": "2f15d6fb_07fc349f",
      "revId": "1cb4cc0f7b1d9cc93f27de8323a87b11df65e51e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a13bbe5_631486d8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000029
      },
      "writtenOn": "2022-03-10T20:00:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9bb56fc_9df52fca",
      "revId": "1cb4cc0f7b1d9cc93f27de8323a87b11df65e51e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a390f255_23b34ac2",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1224,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-03-07T15:04:18Z",
      "side": 1,
      "message": "I am pretty sure this will throw a Validator error (this is an enum and can only be those 3 values) \n\n\n\"PowerRestorePolicyTypes\": {\n            \"description\": \"The enumerations of PowerRestorePolicyTypes specify the choice of power state for the system when power is applied.\",\n            \"enum\": [\n                \"AlwaysOn\",\n                \"AlwaysOff\",\n                \"LastState\"\n            ],\n            \"enumDescriptions\": {\n                \"AlwaysOff\": \"The system always remains powered off when power is applied.\",\n                \"AlwaysOn\": \"The system always powers on when power is applied.\",\n                \"LastState\": \"The system returns to its last on or off power state when power is applied.\"\n            },\n\nWhen it is none, wonder if we should just leave off or we need to go back to Redfish and ask to add? Andrew added the None here: \nhttps://github.com/openbmc/phosphor-dbus-interfaces/commit/66b591e165b53a80e431a543aa8c8e48beba585f\n\nEven after reading that Commit msg I still don\u0027t understand why None is needed",
      "revId": "1cb4cc0f7b1d9cc93f27de8323a87b11df65e51e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b36df6fb_54fce0cb",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1224,
      "author": {
        "id": 1000029
      },
      "writtenOn": "2022-03-07T15:26:53Z",
      "side": 1,
      "message": "How does one go about running the validator since its not part of CI?\n\nLeaving it off may be an option for \"None\".",
      "parentUuid": "a390f255_23b34ac2",
      "revId": "1cb4cc0f7b1d9cc93f27de8323a87b11df65e51e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aef96168_a310a313",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1224,
      "author": {
        "id": 1000029
      },
      "writtenOn": "2022-03-07T18:28:18Z",
      "side": 1,
      "message": "Got the validator installed and working thru setup to run it and coincide that with how we can represent \"None\".",
      "parentUuid": "b36df6fb_54fce0cb",
      "revId": "1cb4cc0f7b1d9cc93f27de8323a87b11df65e51e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0eaefe27_a87ae5a1",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1224,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2022-03-07T21:53:36Z",
      "side": 1,
      "message": "I was wondering if we could just not set or return a [\"PowerRestorePolicy\"] at all when it\u0027s None since it\u0027s an optional property? \n\nAnd yeah, the \"None\" was needed because there was no way to know when the one-time was not set with the 3 values. It followed the general design of PDI to have a default un-initialized value so code can know if a property has been set to something.",
      "parentUuid": "aef96168_a310a313",
      "revId": "1cb4cc0f7b1d9cc93f27de8323a87b11df65e51e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ac2c44f_df01fa28",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1224,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-08T00:26:07Z",
      "side": 1,
      "message": "\u003e I was wondering if we could just not set or return a [\"PowerRestorePolicy\"] at all when it\u0027s None since it\u0027s an optional property? \n\nThat would be the equivalent of saying \"This system doesn\u0027t support setting or getting power restore policy\" which in this case is really not what you want, because the system supports it.\n\n\u003e \n\u003e And yeah, the \"None\" was needed because there was no way to know when the one-time was not set with the 3 values. It followed the general design of PDI to have a default un-initialized value so code can know if a property has been set to something.\n\nSee previous comment.  If we want to model \"one time\" params, we probably need to run through DMTF.  If we don\u0027t care so much, we can just map None to PowerOff, which will be correct until the system actually reboots.",
      "parentUuid": "0eaefe27_a87ae5a1",
      "revId": "1cb4cc0f7b1d9cc93f27de8323a87b11df65e51e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccf3318a_d6b1a334",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1224,
      "author": {
        "id": 1000029
      },
      "writtenOn": "2022-03-10T20:00:39Z",
      "side": 1,
      "message": "FWIW, my current setup is not throwing a validator error on this change. I still want to check this on another system configuration.\n\nAlso, it sounds as though a better choice for the time being (if the validator does truly throw an error or not?) to have \"None\" return as \"AlwaysOff\" then as Ed mentions in the commit msg comments?",
      "parentUuid": "9ac2c44f_df01fa28",
      "revId": "1cb4cc0f7b1d9cc93f27de8323a87b11df65e51e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}