{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "23c8bc7f_c33d0cf4",
        "filename": "http/http2_connection.hpp",
        "patchSetId": 3
      },
      "lineNbr": 210,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2025-07-09T14:07:45Z",
      "side": 1,
      "message": "This can be done using `string_view`\n```\n std::string_view urlpath;\n ```",
      "revId": "1a78b64e635e52bccc0032154c0e66849f730bab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "348dd460_b9c9069d",
        "filename": "http/http2_connection.hpp",
        "patchSetId": 3
      },
      "lineNbr": 210,
      "author": {
        "id": 1002328
      },
      "writtenOn": "2025-07-09T17:45:48Z",
      "side": 1,
      "message": "the string_view type will not work in this case as we are copying the value, and it was being corrupted and pointing to garbage.",
      "parentUuid": "23c8bc7f_c33d0cf4",
      "revId": "1a78b64e635e52bccc0032154c0e66849f730bab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ef19de2_306284a1",
        "filename": "http/http2_connection.hpp",
        "patchSetId": 3
      },
      "lineNbr": 210,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2025-07-22T15:07:45Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "348dd460_b9c9069d",
      "revId": "1a78b64e635e52bccc0032154c0e66849f730bab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ea82649_795fe578",
        "filename": "http/http_connection.hpp",
        "patchSetId": 3
      },
      "lineNbr": 833,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2025-07-09T14:07:45Z",
      "side": 1,
      "message": "This can be done using `string_view`\n```\n std::string_view urlpath;\n ```",
      "revId": "1a78b64e635e52bccc0032154c0e66849f730bab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50aed224_c0080ce8",
        "filename": "http/http_connection.hpp",
        "patchSetId": 3
      },
      "lineNbr": 833,
      "author": {
        "id": 1002328
      },
      "writtenOn": "2025-07-09T17:45:48Z",
      "side": 1,
      "message": "\u003e This can be done using `string_view`\n\u003e ```\n\u003e  std::string_view urlpath;\n\u003e  ```\n\nthe string_view type will not work in this case as we are copying the value, and it was being corrupted and pointing to garbage.",
      "parentUuid": "9ea82649_795fe578",
      "revId": "1a78b64e635e52bccc0032154c0e66849f730bab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b20d213_a5d5ca7a",
        "filename": "http/http_connection.hpp",
        "patchSetId": 3
      },
      "lineNbr": 833,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2025-07-10T12:43:15Z",
      "side": 1,
      "message": "It turns out it is due to urlView.path() gives a string (not string_view).\nAs a result, string_view urlpath is temporary but lost outside the lexical-scope (i.e. if statement). \n\nSo, either keep it as string, or use boost::urls::url_view.\n\n\nhttp_connection.hpp ( http2_connection.hpp similarly)\n```\n        boost::urls::url_view urlView;\n        if (req !\u003d nullptr)\n        {\n            urlView \u003d req-\u003eurl();\n        }\n        res.preparePayload(urlView);\n```\n\nhttp_response.hpp\n\n```\nvoid preparePayload(boost::urls::url_view urlView)\n{\n...\n      if (is1XXReturn || result() \u003d\u003d status::no_content ||\n            result() \u003d\u003d status::not_modified)\n        {\n            BMCWEB_LOG_CRITICAL(\n                \"{} Response content provided but code was \"\n                \"no-content or not_modified, which aren\u0027t \"\n                \"allowed to have a body for url : \\\"{}\\\"\",\n                logPtr(this), urlView.path());\n            response.content_length(0);\n            return;\n        }\n```",
      "parentUuid": "50aed224_c0080ce8",
      "revId": "1a78b64e635e52bccc0032154c0e66849f730bab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59307b29_859a94d2",
        "filename": "http/http_connection.hpp",
        "patchSetId": 3
      },
      "lineNbr": 833,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2025-07-22T15:07:45Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "3b20d213_a5d5ca7a",
      "revId": "1a78b64e635e52bccc0032154c0e66849f730bab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "646147c2_e2efd0ab",
        "filename": "http/http_response.hpp",
        "patchSetId": 3
      },
      "lineNbr": 192,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-07-09T21:19:19Z",
      "side": 1,
      "message": "If this function now takes an argument, it is no longer compatible with prepare_payload.  That\u0027s fine, but this comment is no longer valid so should be removed.",
      "range": {
        "startLine": 191,
        "startChar": 0,
        "endLine": 192,
        "endChar": 48
      },
      "revId": "1a78b64e635e52bccc0032154c0e66849f730bab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5432b0b2_49ff70d3",
        "filename": "http/http_response.hpp",
        "patchSetId": 3
      },
      "lineNbr": 192,
      "author": {
        "id": 1002328
      },
      "writtenOn": "2025-07-21T19:32:47Z",
      "side": 1,
      "message": "Comment has now been removed",
      "parentUuid": "646147c2_e2efd0ab",
      "range": {
        "startLine": 191,
        "startChar": 0,
        "endLine": 192,
        "endChar": 48
      },
      "revId": "1a78b64e635e52bccc0032154c0e66849f730bab",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}