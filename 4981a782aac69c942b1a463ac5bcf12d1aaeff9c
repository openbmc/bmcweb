{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7e492145_af44a348",
        "filename": "include/google_authenticator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-17T15:59:48Z",
      "side": 1,
      "message": "Please just inline most of these in the functions they\u0027re used in. They don\u0027t change often, and it\u0027s easier to review if they\u0027re in the spot where they\u0027re used.",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 30,
        "endChar": 89
      },
      "revId": "4981a782aac69c942b1a463ac5bcf12d1aaeff9c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eaa703a7_a3fa7477",
        "filename": "include/google_authenticator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-17T15:59:48Z",
      "side": 1,
      "message": "We generally follow the asio convention of passing errors back as a parameter (usually called ec).\n\nThe style you use here, which is popular in javascript, forces having a reference counted object to track state, or forces copies to be made.",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 33,
        "endChar": 41
      },
      "revId": "4981a782aac69c942b1a463ac5bcf12d1aaeff9c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7141acf4_83736eff",
        "filename": "include/google_authenticator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-17T15:59:48Z",
      "side": 1,
      "message": "common error.  string_view::data() does not always return a null terminated string.",
      "range": {
        "startLine": 60,
        "startChar": 43,
        "endLine": 60,
        "endChar": 57
      },
      "revId": "4981a782aac69c942b1a463ac5bcf12d1aaeff9c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1a2ccd0_4341a354",
        "filename": "include/google_authenticator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-17T15:59:48Z",
      "side": 1,
      "message": "moving this while within a member method is undefined behavior.  I suspect it works in this case because of the order in which the variables are initialized, and because the other variables are const, but we\u0027d generally prefer to avoid undefined behavior.",
      "range": {
        "startLine": 88,
        "startChar": 24,
        "endLine": 88,
        "endChar": 48
      },
      "revId": "4981a782aac69c942b1a463ac5bcf12d1aaeff9c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11528666_7bfedefe",
        "filename": "include/google_authenticator.hpp",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-17T15:59:48Z",
      "side": 1,
      "message": "Please don\u0027t write lambdas more than one or two lines.",
      "range": {
        "startLine": 118,
        "startChar": 0,
        "endLine": 139,
        "endChar": 13
      },
      "revId": "4981a782aac69c942b1a463ac5bcf12d1aaeff9c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}