{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fc531ee5_d4fe2ec6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 67
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-08T16:38:33Z",
      "side": 1,
      "message": "There\u0027s a ton of code here, but no unit tests.",
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1ad544d_5ad213d9",
        "filename": "Redfish.md",
        "patchSetId": 67
      },
      "lineNbr": 791,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-07T22:18:00Z",
      "side": 1,
      "message": "Please put at least some content here, otherwise the documentation renders an empty path",
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c541a37_3fb04e47",
        "filename": "Redfish.md",
        "patchSetId": 67
      },
      "lineNbr": 791,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-02-08T15:41:49Z",
      "side": 1,
      "message": "In this commit, it will contain only \"Id\" and \"Name\".\nI\u0027ll add them even if they are mentioned as common.\nI\u0027ll remove those by the coming commits.",
      "parentUuid": "c1ad544d_5ad213d9",
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d22d3284_d11873b6",
        "filename": "Redfish.md",
        "patchSetId": 67
      },
      "lineNbr": 791,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-08T16:38:33Z",
      "side": 1,
      "message": "then put something like ‚Äúno properties‚Äù",
      "parentUuid": "6c541a37_3fb04e47",
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee0246c5_c88a71fe",
        "filename": "Redfish.md",
        "patchSetId": 67
      },
      "lineNbr": 791,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-02-09T14:30:40Z",
      "side": 1,
      "message": "Thanks. I\u0027ll change it on the next commit.",
      "parentUuid": "d22d3284_d11873b6",
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b19b2794_6bd21c79",
        "filename": "Redfish.md",
        "patchSetId": 67
      },
      "lineNbr": 791,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T17:02:53Z",
      "side": 1,
      "message": "üëç",
      "parentUuid": "ee0246c5_c88a71fe",
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ab3a827_d9bc0250",
        "filename": "Redfish.md",
        "patchSetId": 67
      },
      "lineNbr": 791,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-02-20T13:52:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b19b2794_6bd21c79",
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2597e38_752de20d",
        "filename": "redfish-core/lib/fabric_adapters.hpp",
        "patchSetId": 67
      },
      "lineNbr": 3,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-07T22:14:08Z",
      "side": 1,
      "message": "Looks unrelated?",
      "range": {
        "startLine": 3,
        "startChar": 10,
        "endLine": 3,
        "endChar": 23
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1bc6507_06394fd1",
        "filename": "redfish-core/lib/fabric_adapters.hpp",
        "patchSetId": 67
      },
      "lineNbr": 3,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-02-08T15:41:49Z",
      "side": 1,
      "message": "A few places check `bmcwebEnableMultiHost` (which is defined in bmcweb_config.h).",
      "parentUuid": "c2597e38_752de20d",
      "range": {
        "startLine": 3,
        "startChar": 10,
        "endLine": 3,
        "endChar": 23
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b408f7ec_ac2fab98",
        "filename": "redfish-core/lib/fabric_adapters.hpp",
        "patchSetId": 67
      },
      "lineNbr": 3,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-08T16:38:33Z",
      "side": 1,
      "message": "there are no other changes in this file in this patchset.   it‚Äôs possible this include needs fixed, but please put it in its own patchset.",
      "parentUuid": "d1bc6507_06394fd1",
      "range": {
        "startLine": 3,
        "startChar": 10,
        "endLine": 3,
        "endChar": 23
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fecc6fd0_43d07dc5",
        "filename": "redfish-core/lib/fabric_adapters.hpp",
        "patchSetId": 67
      },
      "lineNbr": 3,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-02-09T14:30:40Z",
      "side": 1,
      "message": "I\u0027ll fix it.",
      "parentUuid": "b408f7ec_ac2fab98",
      "range": {
        "startLine": 3,
        "startChar": 10,
        "endLine": 3,
        "endChar": 23
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1072877e_dcbc07a8",
        "filename": "redfish-core/lib/fabric_adapters.hpp",
        "patchSetId": 67
      },
      "lineNbr": 3,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-02-20T13:52:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fecc6fd0_43d07dc5",
      "range": {
        "startLine": 3,
        "startChar": 10,
        "endLine": 3,
        "endChar": 23
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b373d78_34d27667",
        "filename": "redfish-core/lib/fabric_adapters.hpp",
        "patchSetId": 67
      },
      "lineNbr": 197,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-07T22:14:08Z",
      "side": 1,
      "message": "Remove \"if there are\".  There\u0027s nothing in this that checks for a ports existence.",
      "range": {
        "startLine": 197,
        "startChar": 25,
        "endLine": 197,
        "endChar": 38
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c6d65ecd_fd0ebc97",
        "filename": "redfish-core/lib/fabric_adapters.hpp",
        "patchSetId": 67
      },
      "lineNbr": 197,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-02-08T15:41:49Z",
      "side": 1,
      "message": "Done. The comment is removed.",
      "parentUuid": "2b373d78_34d27667",
      "range": {
        "startLine": 197,
        "startChar": 25,
        "endLine": 197,
        "endChar": 38
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "465146dd_9bf907fc",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 29,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-07T22:14:08Z",
      "side": 1,
      "message": "if these properties are unused, why are we adding them?",
      "range": {
        "startLine": 28,
        "startChar": 29,
        "endLine": 29,
        "endChar": 38
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ca9cb47_720271f3",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 29,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-02-08T15:41:49Z",
      "side": 1,
      "message": "These fields will be used by the consecutive commits - Location, Status .\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/62849\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/62850",
      "parentUuid": "465146dd_9bf907fc",
      "range": {
        "startLine": 28,
        "startChar": 29,
        "endLine": 29,
        "endChar": 38
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24d76a8e_dd6f055c",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 29,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-08T16:38:33Z",
      "side": 1,
      "message": "then add them when we use them?",
      "parentUuid": "1ca9cb47_720271f3",
      "range": {
        "startLine": 28,
        "startChar": 29,
        "endLine": 29,
        "endChar": 38
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "155430b6_5a3fdeef",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 29,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-02-20T13:52:28Z",
      "side": 1,
      "message": "Removed them.",
      "parentUuid": "24d76a8e_dd6f055c",
      "range": {
        "startLine": 28,
        "startChar": 29,
        "endLine": 29,
        "endChar": 38
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74b59484_a57cf938",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 95,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-07T22:14:08Z",
      "side": 1,
      "message": "please propagate the error to the callback.",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 95,
        "endChar": 55
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f841c6f_a1c2cc99",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 95,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-02-08T15:41:49Z",
      "side": 1,
      "message": "This function `doGetValidFabricPortSubTree()` is to handle the error of the parent function `getValidFabricPortSubTree()`.\n\n\nThe parameter `callback` is passed to  `getValidFabricPortSubTree()` which will handle the successful subtree.\n\nThey may be passed from \n- getValidFabricPortPath()\n- handleFarbicPortCollectionHead\n- handleFabricPortCollectionGet\n\n\nIt usage is similar to `getValidChassisPath()`,  `getValidFabricAdapterPath()`, etc.",
      "parentUuid": "74b59484_a57cf938",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 95,
        "endChar": 55
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86b6be98_e0f49ea8",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 95,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-08T16:38:33Z",
      "side": 1,
      "message": "\u003e This function `doGetValidFabricPortSubTree()` is to handle the error of the parent function `getValidFabricPortSubTree()`.\n\u003e \n\u003e \n\u003e The parameter `callback` is passed to  `getValidFabricPortSubTree()` which will handle the successful subtree.\n\u003e \n\u003e They may be passed from \n\u003e - getValidFabricPortPath()\n\u003e - handleFarbicPortCollectionHead\n\u003e - handleFabricPortCollectionGet\n\u003e \n\u003e \n\u003e It usage is similar to `getValidChassisPath()`,  `getValidFabricAdapterPath()`, etc.\n\nthen I missed it on those commits (probably because I was trying to get them merged.). please fix this anti pattern on those as well.",
      "parentUuid": "7f841c6f_a1c2cc99",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 95,
        "endChar": 55
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87a53afa_2aef1957",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 95,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-02-20T13:52:28Z",
      "side": 1,
      "message": "I refactored to propagate the error to caller.",
      "parentUuid": "86b6be98_e0f49ea8",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 95,
        "endChar": 55
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea04b6f3_c8e079e6",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 228,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-07T22:14:08Z",
      "side": 1,
      "message": "invert this.\n\njust declare the array:\n\nnlohmann::json::array_t members;\nfill it\n\nthen do\n\n\nasyncResp-\u003eres.jsonValue[\"Members\"] \u003d std::move(members);",
      "range": {
        "startLine": 228,
        "startChar": 4,
        "endLine": 228,
        "endChar": 66
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7aa34b6d_55c22395",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 228,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-02-08T15:41:49Z",
      "side": 1,
      "message": "Done.\nThanks for the suggestion.",
      "parentUuid": "ea04b6f3_c8e079e6",
      "range": {
        "startLine": 228,
        "startChar": 4,
        "endLine": 228,
        "endChar": 66
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61d7d5bf_d696d97a",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 235,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-07T22:14:08Z",
      "side": 1,
      "message": "Needs to set internal error if we hit an error.",
      "range": {
        "startLine": 235,
        "startChar": 0,
        "endLine": 235,
        "endChar": 28
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "130e7437_27e65c18",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 235,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-02-08T15:41:49Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "61d7d5bf_d696d97a",
      "range": {
        "startLine": 235,
        "startChar": 0,
        "endLine": 235,
        "endChar": 28
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecef8578_27ead018",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 244,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-07T22:14:08Z",
      "side": 1,
      "message": "This is a well known antipattern, and for things that have no ports, will result in the members array being null.\n\nPlease follow the same pattern pointed out on line 228",
      "range": {
        "startLine": 244,
        "startChar": 0,
        "endLine": 244,
        "endChar": 66
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d6df3e9_91ea418f",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 244,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-02-08T15:41:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ecef8578_27ead018",
      "range": {
        "startLine": 244,
        "startChar": 0,
        "endLine": 244,
        "endChar": 66
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f3d7faa_bfdd3587",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 247,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-07T22:14:08Z",
      "side": 1,
      "message": "nlohmann::json::object_t",
      "range": {
        "startLine": 247,
        "startChar": 8,
        "endLine": 247,
        "endChar": 22
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d67289e2_80b2f364",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 247,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-02-08T15:41:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f3d7faa_bfdd3587",
      "range": {
        "startLine": 247,
        "startChar": 8,
        "endLine": 247,
        "endChar": 22
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7b48a78_120749d2",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 282,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-07T22:14:08Z",
      "side": 1,
      "message": "Why do we do a full subtree command and then ignore the result?",
      "range": {
        "startLine": 282,
        "startChar": 59,
        "endLine": 282,
        "endChar": 74
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9cbe7935_adf4e8dd",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 282,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-02-08T15:55:32Z",
      "side": 1,
      "message": "The function `getValidFabricPortSubTree()` is also used by the other places which use `portSubTree`.\n\nThis particular function `handleFarbicPortCollectionHead()` needs only the validation of adapter/port but does not need to walk thru the subtree and thus the result is ignored.",
      "parentUuid": "a7b48a78_120749d2",
      "range": {
        "startLine": 282,
        "startChar": 59,
        "endLine": 282,
        "endChar": 74
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd810d16_75ef2cca",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 282,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-08T16:38:33Z",
      "side": 1,
      "message": "and this is why the callback pattern I described earlier is important.",
      "parentUuid": "9cbe7935_adf4e8dd",
      "range": {
        "startLine": 282,
        "startChar": 59,
        "endLine": 282,
        "endChar": 74
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a8aebfa_d766f6bd",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 282,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-02-09T14:30:40Z",
      "side": 1,
      "message": "I would agree to return the error to the caller, if `getValidFabricPortSubTree()` is a generalized wrapper like `getAssociationEndPoints()` etc to make the logic clearer.\n\nHowever, like this case, `getValidFabricPortSubTree()` is designed to check/handle the error and return the subtree only if it is valid. It is also called by a few places. If so, wouldn\u0027t it appropriate to filter out errors to callers?\n\nIf not but passing the errors to the callers, would all callers need to handle the same errors and need the similar aux functions - `afterXXX()` again.",
      "parentUuid": "fd810d16_75ef2cca",
      "range": {
        "startLine": 282,
        "startChar": 59,
        "endLine": 282,
        "endChar": 74
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03e68e1b_14b58221",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 282,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-09T17:02:53Z",
      "side": 1,
      "message": "\u003e I would agree to return the error to the caller, if `getValidFabricPortSubTree()` is a generalized wrapper like `getAssociationEndPoints()` etc to make the logic clearer.\n\u003e \n\u003e However, like this case, `getValidFabricPortSubTree()` is designed to check/handle the error and return the subtree only if it is valid.\n\nRight, and we generally do that by returning an error.  A \"handle all possible errors for all possible callers\" routine is generally not a pattern that has been found to work.  If it does, having one branch and a method to handle that error in the callback is trivial.\n\n\u003e It is also called by a few places. If so, wouldn\u0027t it appropriate to filter out errors to callers?\n\nGenerally not, because it:\nA. breaks the mental model of async operations.  I will note that the couple of places we break this already have caused a lot of problems in bugs.\nB. Doesn\u0027t give the caller a chance to customize their error.  Pretty rarely is the error handling identical between two different callers.  The fact that it is in this case stems from the fact that we\u0027re doing multiple chained mapper calls, which is not only complex, but shows this issue.\n\nOnce we have this down to one mapper call, I\u0027d be really surprised if the error handling had anything common.\n\n\u003e \n\u003e If not but passing the errors to the callers, would all callers need to handle the same errors and need the similar aux functions - `afterXXX()` again.\n\nif (ec){\n    handleError();\n    return;\n}\n\nis a trivial amount of code to write.  Keep in mind that the error for POST is different than the error for GET, is different than the error for an Action, so pretty much all the code will need a customized (to some degree) error handler anyway.",
      "parentUuid": "1a8aebfa_d766f6bd",
      "range": {
        "startLine": 282,
        "startChar": 59,
        "endLine": 282,
        "endChar": 74
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "291c05e5_27668293",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 282,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-02-20T13:52:28Z",
      "side": 1,
      "message": "I\u0027ve restructured `fabric_adapters.hpp` to address your code via https://gerrit.openbmc.org/c/openbmc/bmcweb/+/69499",
      "parentUuid": "03e68e1b_14b58221",
      "range": {
        "startLine": 282,
        "startChar": 59,
        "endLine": 282,
        "endChar": 74
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddb59a09_86072aa4",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 334,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-07T22:14:08Z",
      "side": 1,
      "message": "Please just combined these two into one.  There\u0027s no need to have multiple requestRoutes.  i realize we separate this in other places, but that was because of refactoring.",
      "range": {
        "startLine": 331,
        "startChar": 0,
        "endLine": 334,
        "endChar": 1
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b87c0b14_476fec6b",
        "filename": "redfish-core/lib/fabric_ports.hpp",
        "patchSetId": 67
      },
      "lineNbr": 334,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-02-08T15:41:49Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "ddb59a09_86072aa4",
      "range": {
        "startLine": 331,
        "startChar": 0,
        "endLine": 334,
        "endChar": 1
      },
      "revId": "abccac79f7834941c43684d06e36d1a8d76f3815",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}