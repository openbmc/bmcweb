{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b3f1e587_c2b5f7e4",
        "filename": "include/dbus_utility.hpp",
        "patchSetId": 9
      },
      "lineNbr": 154,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-11T00:53:12Z",
      "side": 1,
      "message": "Can we unit test this method?",
      "range": {
        "startLine": 154,
        "startChar": 12,
        "endLine": 154,
        "endChar": 33
      },
      "revId": "97f9fb2949badfdc03d77dc32b348cc12493d83a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e264603a_2c35636c",
        "filename": "include/dbus_utility.hpp",
        "patchSetId": 9
      },
      "lineNbr": 154,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-11-16T00:32:21Z",
      "side": 1,
      "message": "No longer applicable after reverting back to using the mapper in getDumpServiceInfo().",
      "parentUuid": "b3f1e587_c2b5f7e4",
      "range": {
        "startLine": 154,
        "startChar": 12,
        "endLine": 154,
        "endChar": 33
      },
      "revId": "97f9fb2949badfdc03d77dc32b348cc12493d83a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0bd1e92a_cdd1c4ea",
        "filename": "include/dbus_utility.hpp",
        "patchSetId": 9
      },
      "lineNbr": 157,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-14T18:14:52Z",
      "side": 1,
      "message": "This methods existence doesn\u0027t align with our uses of DBus.  Please take a look at other examples for how to determine the existence of an interface.\n\nIf you think that parsing XML is a better option, I\u0027m happy to have that discussion outside of adding a new feature, but I suspect that wasn\u0027t your intent here.",
      "revId": "97f9fb2949badfdc03d77dc32b348cc12493d83a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92b98858_7f2af385",
        "filename": "include/dbus_utility.hpp",
        "patchSetId": 9
      },
      "lineNbr": 157,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-14T18:16:15Z",
      "side": 1,
      "message": "This is from the other thread. Claire is using ObjectMapper initially, and I asked whether it\u0027s possible to introspect the object directly to save an ObjectMapper call.",
      "parentUuid": "0bd1e92a_cdd1c4ea",
      "revId": "97f9fb2949badfdc03d77dc32b348cc12493d83a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee7d0c2c_570e877b",
        "filename": "include/dbus_utility.hpp",
        "patchSetId": 9
      },
      "lineNbr": 157,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-14T18:19:26Z",
      "side": 1,
      "message": "Why would we do that?  There are very good reasons why we don\u0027t as a general practice.",
      "parentUuid": "92b98858_7f2af385",
      "revId": "97f9fb2949badfdc03d77dc32b348cc12493d83a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2e5120b_8541c713",
        "filename": "include/dbus_utility.hpp",
        "patchSetId": 9
      },
      "lineNbr": 157,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-14T18:24:44Z",
      "side": 1,
      "message": "Could you elaborate why?",
      "parentUuid": "ee7d0c2c_570e877b",
      "revId": "97f9fb2949badfdc03d77dc32b348cc12493d83a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29839672_2e2c3ecc",
        "filename": "include/dbus_utility.hpp",
        "patchSetId": 9
      },
      "lineNbr": 157,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-14T18:34:56Z",
      "side": 1,
      "message": "I asked why first ðŸ˜Š  Why would we do this, when we don\u0027t do it anywhere else?\n\nAt a minimum, we know the existing code patterns work for building reasonably reliable Redfish endpoints.  As a start, we shouldn\u0027t change without reason, so the onus is on the change-maker to talk about (documented in the developing guide) why we\u0027re changing.\n\n\nOff the top of my head: \n1. It duplicates code already in the mapper.\n2. it has race conditions that have already been solved and debugged in the matter.\n3. It imposes a hard requirement on tinyxml in bmcweb, whereas previously, only dbus-rest required it.\n4. It doesn\u0027t work properly if the interfaces are split between two daemons.\n5. (guessing) it is most likely slower, given the XML payload is going to be several orders of magnitude larger than the mapper response.",
      "parentUuid": "d2e5120b_8541c713",
      "revId": "97f9fb2949badfdc03d77dc32b348cc12493d83a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1329e501_7ae0c675",
        "filename": "include/dbus_utility.hpp",
        "patchSetId": 9
      },
      "lineNbr": 157,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-14T18:56:56Z",
      "side": 1,
      "message": "Also, from DBUS_USAGE.md\n\n\"There are interfaces for which there is an expectation that there will only ever be one producer in the project (ex bmc networking, user management). In these cases, it is desirable to call the daemon by well known name directly. Bmcweb APIs should call the mapper in cases where it\u0027s reasonably expected that multiple implementations exist (ex, CPU management, Sensors).\"",
      "parentUuid": "29839672_2e2c3ecc",
      "revId": "97f9fb2949badfdc03d77dc32b348cc12493d83a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "daa6f13a_226c3ac5",
        "filename": "include/dbus_utility.hpp",
        "patchSetId": 9
      },
      "lineNbr": 157,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-11-16T00:32:21Z",
      "side": 1,
      "message": "Reverted back to using the mapper (like patchset 3).\n\nEd, thanks for the explanation. Do you have any examples to share that could help illustrate #2 (race conditions related to introspection) and #5 (interfaces split between two daemons) for my understanding?",
      "parentUuid": "1329e501_7ae0c675",
      "revId": "97f9fb2949badfdc03d77dc32b348cc12493d83a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba194afb_165ae989",
        "filename": "include/dbus_utility.hpp",
        "patchSetId": 9
      },
      "lineNbr": 157,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2023-01-10T00:34:12Z",
      "side": 1,
      "message": "I am good in this thread.",
      "parentUuid": "daa6f13a_226c3ac5",
      "revId": "97f9fb2949badfdc03d77dc32b348cc12493d83a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}