{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "43366d4e_f16aeb56",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-02T17:38:49Z",
      "side": 1,
      "message": "Please wrap 50/72 as the developing guide asks.",
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d8f17bfb_917e65ad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-01-21T03:24:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43366d4e_f16aeb56",
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4788b400_eaecca05",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-02T17:38:49Z",
      "side": 1,
      "message": "one sentence of description for a new feature is rarely enough.\n\nWhat does this feature do?\nHow is a user expected to use it?\nIs the feature optional?\nWhat portions of Redfish does this implement?\nWhy is it useful?\n\nThe above questions are not a complete list, nor do I expect all answered, but we need some description of what\u0027s going on here.",
      "range": {
        "startLine": 9,
        "startChar": 1,
        "endLine": 10,
        "endChar": 22
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25b42dd9_473f90d6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-01-21T03:24:24Z",
      "side": 1,
      "message": "Done. Added more details to description.",
      "parentUuid": "4788b400_eaecca05",
      "range": {
        "startLine": 9,
        "startChar": 1,
        "endLine": 10,
        "endChar": 22
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f96d9a6f_df65a9c7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-02T17:38:49Z",
      "side": 1,
      "message": "Do we have this much precision here in practice?  I kinda doubt it, as this looks like a floating point rounding issue.  We should probably look into getting that corrected to round to the appropriate value as Edm.Decimal (The redfish type for theses) does care about significant digits, even if in floating point they\u0027re essentially moot.",
      "range": {
        "startLine": 23,
        "startChar": 21,
        "endLine": 23,
        "endChar": 39
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a7584ab_82ff132d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-01-21T03:24:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f96d9a6f_df65a9c7",
      "range": {
        "startLine": 23,
        "startChar": 21,
        "endLine": 23,
        "endChar": 39
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d49ced11_78182506",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-02T17:38:49Z",
      "side": 1,
      "message": "Missing redfish conformance tests.",
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc2af71a_6d37a945",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-22T19:40:41Z",
      "side": 1,
      "message": "Still missing.",
      "parentUuid": "d49ced11_78182506",
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90423427_3efbffce",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-22T20:05:19Z",
      "side": 1,
      "message": "I see schema violations in this patch that will become apparent when you run the validator.  I haven\u0027t called them out explicitly because the tool can give a better explanation than I can.  If you need help on how to fix it, let me know.",
      "parentUuid": "bc2af71a_6d37a945",
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e27b79f_16f1d49f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-02-14T20:08:05Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "90423427_3efbffce",
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd71aed0_d68f499b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-02T17:38:49Z",
      "side": 1,
      "message": "Missing Redfish documentation updates.",
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53d51323_d81a2ec2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-22T19:40:41Z",
      "side": 1,
      "message": "Still missing.",
      "parentUuid": "fd71aed0_d68f499b",
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd3c6131_751cd6bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-02-16T22:46:17Z",
      "side": 1,
      "message": "Sorry i didn\u0027t get your question. What do you want me to add for \"Missing Redfish documentation updates.\"?",
      "parentUuid": "53d51323_d81a2ec2",
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b2a80fe_c97c3c59",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-19T17:37:59Z",
      "side": 1,
      "message": "You need to add the new parameters that are now supported to the Redfish documentation in this repository.",
      "parentUuid": "fd3c6131_751cd6bd",
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce4923d8_76ed57b0",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-02T12:54:56Z",
      "side": 1,
      "message": "KiB is 1024.  KB is 1000.",
      "range": {
        "startLine": 33,
        "startChar": 68,
        "endLine": 33,
        "endChar": 72
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18320704_b3a3eff6",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-02T17:38:49Z",
      "side": 1,
      "message": "+1.  What tests can we execute that would\u0027ve caught this?  Do we need to manually compare to an existing tool?",
      "parentUuid": "ce4923d8_76ed57b0",
      "range": {
        "startLine": 33,
        "startChar": 68,
        "endLine": 33,
        "endChar": 72
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "85a7193a_ddc6658d",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-01-21T03:24:24Z",
      "side": 1,
      "message": "Done.\n\nThese are instantaneous values. I am not sure we can have a test to verify that values are matching or validate them.",
      "parentUuid": "18320704_b3a3eff6",
      "range": {
        "startLine": 33,
        "startChar": 68,
        "endLine": 33,
        "endChar": 72
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6bd81705_071ac710",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-22T19:40:41Z",
      "side": 1,
      "message": "They\u0027re instantaneous values of read-write storage.  Unless something is actively writing, I would expect them to match exactly.  This doesn\u0027t have to be an automated test, but some kind of manual test to know this number matches a known tool would be good.",
      "parentUuid": "85a7193a_ddc6658d",
      "range": {
        "startLine": 33,
        "startChar": 68,
        "endLine": 33,
        "endChar": 72
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bb5e54b_af7f1b78",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-02-14T20:08:05Z",
      "side": 1,
      "message": "I suppose i way you are mentioning we would need some mock functionality which can return fixed values which we can compare against. I am not sure if we something like that at the moment, would need to check.",
      "parentUuid": "6bd81705_071ac710",
      "range": {
        "startLine": 33,
        "startChar": 68,
        "endLine": 33,
        "endChar": 72
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b64e0203_62e4a828",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-02-16T22:46:17Z",
      "side": 1,
      "message": "Added unit test for verification.",
      "parentUuid": "9bb5e54b_af7f1b78",
      "range": {
        "startLine": 33,
        "startChar": 68,
        "endLine": 33,
        "endChar": 72
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "712299af_99560999",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-02T17:38:49Z",
      "side": 1,
      "message": "This path doesn\u0027t look right.  A bmc very likely has multiple RW storages (SPI flash and/or eMMC).  Do we need to disambiguate the two before we hardcode it here?",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 51
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f976150_c91b8392",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-02T17:52:45Z",
      "side": 1,
      "message": "FWIW, these paths (and path segments) are now able to be documented in the YAML directly.\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/cc4ce70daa8ffed4848c15c5ddc50c51b31dda4a/yaml/xyz/openbmc_project/Metric/Value.interface.yaml#L99\n\n(Not suggesting that your feedback isn\u0027t valid.)",
      "parentUuid": "712299af_99560999",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 51
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a2ca23a_fb587370",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-02T18:03:08Z",
      "side": 1,
      "message": "👍",
      "parentUuid": "0f976150_c91b8392",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 51
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ef82160_f05b749f",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-01-21T03:24:24Z",
      "side": 1,
      "message": "@Ed\nOn Redfish side, there is no specification for different RW storage types (but just one) -\n\nhttps://redfish.dmtf.org/schemas/v1/ManagerDiagnosticData.v1_2_1.json\n                \"FreeStorageSpaceKiB\": {\n                    \"description\": \"The available storage space on this manager in kibibytes (KiB).\",\n                    \"longDescription\": \"This property shall contain the available storage space on this manager in kibibytes (KiB).\",\n                    \"readonly\": true,\n                    \"type\": [\n                        \"integer\",\n                        \"null\"\n                    ],\n                    \"units\": \"KiBy\"\n                },\n                \nAlso, this further raises question that do we have any existing hardware in the OPEN community that supports 2 different types of RW storage? My understanding is that as per existing implementation that use-case doesn\u0027t exist in the OPEN community. Moreover, if we do need to support it then its better to have that as a completely new feature request and hence be handled separately as a different PR and implementation change.",
      "parentUuid": "8a2ca23a_fb587370",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 51
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "785c7a4e_35ab3c56",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-22T19:40:41Z",
      "side": 1,
      "message": "My understanding was that ibm plaforms are currently using emmc?  As is gsj which uses estoraged.  I don\u0027t think gsj will care.\n\nLets ping those ibm platform maintainers and see if they care that this is only reporting spi flash on those platforms.\n\nThe only reason I bring this up is that as written, this is enabling this on all platforms unconditional.  So if the number is \"wrong\" on any platform, there\u0027s no out except to revert the patch.",
      "parentUuid": "7ef82160_f05b749f",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 51
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8469cf6_8b64f754",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-22T20:47:15Z",
      "side": 1,
      "message": "AFAIK, IBM systems don\u0027t have _both_ a R/W SPI and a R/W eMMC though.  So, the presence or lack-there-of of this interface is just a matter of an implementation detail in phosphor-health-monitor and not part of the bmcweb commit.\n\nThe current phosphor-health-monitor config expects /run/initramfs/rw to be the RW volume.  The current eMMC implementation just blindly mounts over top `/var` which is broken anyhow but all they have to do is provide a phosphor-health-monitor config that uses /var instead of /run/initramfs/rw.\n\nEither way, I don\u0027t see this as affecting the bmcweb commit.  The dbus path should still be the same on either implementation.",
      "parentUuid": "785c7a4e_35ab3c56",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 51
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b34f1fc_a0ae81c9",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-22T21:02:26Z",
      "side": 1,
      "message": "Lets double check that we agree on expectations.  In my opinion, this feature needs to be either:\n\nA: Optionally selectable per platform (either through dbus or a meson option, strong preference for the former) so the platforms that have broken implementations don\u0027t give an incorrect answer to the user, and the user facing API remains correct.\n\nB: Correct on all platforms.\n\nDoes that seems reasonable?  Or is there a third path I\u0027m not considering?",
      "parentUuid": "c8469cf6_8b64f754",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 51
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10220839_2516a08b",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-22T21:17:44Z",
      "side": 1,
      "message": "C: The code leaves the unsupported statistic as nullptr in the JSON response.  (Perhaps this is a form of \"A\", as in missing dbus objects result in nullptr).  We do this all over bmcweb, don\u0027t we?  Missing objects result in no attribute being filled in.\n\n@Jagpal, I think you need to exame all of the `if (ec)` paths in your `after*` calls.  I don\u0027t think any of them should be returning internalError, but instead should be setting `jsonValue[...] \u003d nullptr`.",
      "parentUuid": "1b34f1fc_a0ae81c9",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 51
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "326b95eb_8c457a03",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-22T21:31:30Z",
      "side": 1,
      "message": "\u003e C: The code leaves the unsupported statistic as nullptr in the JSON response. \n\nThat\u0027s generally not how we\u0027ve handled unsupported properties.  For unsupported, we omit them entirely.  null is used for \"supported by this system, but not available right this moment\".\n\n\u003e (Perhaps this is a form of \"A\", as in missing dbus objects result in nullptr).  We do this all over bmcweb, don\u0027t we?  Missing objects result in no attribute being filled in.\n\nYep, we do it all over, but generally we use the mapper to do it, where we look up a subtree of paths, and if they don\u0027t exist, we omit the properties entirely.  This patch took the approach of calling the daemon directly, which I think is fine in this case, but needs to handle \"path isn\u0027t there\" errors in a similar fashion to how we handle it in the mapper.  DBUS_USAGE.md documents all this intent.\n\n\u003e \n\u003e @Jagpal, I think you need to exame all of the `if (ec)` paths in your `after*` calls.  I don\u0027t think any of them should be returning internalError, but instead should be setting `jsonValue[...] \u003d nullptr`.\n\nYep, we need to check for a specific kind of ec, similar to this:\nhttps://github.com/openbmc/bmcweb/blob/b5f288d294e17719f30e32acc40e07681baf04b9/redfish-core/include/utils/collection.hpp#L35\n\nAnd just return without populating anything.  Should be pretty doable to add and test.",
      "parentUuid": "10220839_2516a08b",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 51
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa61f60b_d9fd45e9",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-01-22T21:52:02Z",
      "side": 1,
      "message": "\u003e Yep, we do it all over, but generally we use the mapper to do it, where we look up a subtree of paths, and if they don\u0027t exist, we omit the properties entirely. This patch took the approach of calling the daemon directly, which I think is fine in this case, but needs to handle \"path isn\u0027t there\" errors in a similar fashion to how we handle it in the mapper.\n\nI missed this.  We probably shouldn\u0027t directly code to the service.",
      "parentUuid": "326b95eb_8c457a03",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 51
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e3813a6_5eb5b31b",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-22T22:19:55Z",
      "side": 1,
      "message": "We do call directly to the well known name in cases where we reasonably expect only one OpenBMC implementation to exist (systemd, mapper, etc).  Considering that this implementation is only for THIS manager, and THIS BMCs health metrics, it seems reasonable that only one implementation exists (sidenote, I actually prefer that, because it keeps people from inventing their own.) so I\u0027m not going to enforce the mapper here, just that we handle the non-existence of the dbus name or path as a non-critical failure.",
      "parentUuid": "fa61f60b_d9fd45e9",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 51
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "491a977a_1cf704d2",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-02-14T20:08:05Z",
      "side": 1,
      "message": "Added the use of specific error check as on https://github.com/openbmc/bmcweb/blob/b5f288d294e17719f30e32acc40e07681baf04b9/redfish-core/include/utils/collection.hpp#L35 which makes the non-existence of the dbus name or path as a non-critical failure.\n\nSkipping using the mapper for service name lookup at the moment as per discussion above.",
      "parentUuid": "8e3813a6_5eb5b31b",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 51
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5763965e_30c005c4",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-02T17:38:49Z",
      "side": 1,
      "message": "Double is not directly convertible to Edm.Decimal, because of non finite values like Nan, infinity, etc.  \n\nPlease do handling similar to how we deal with double sensor values:\n\nhttps://github.com/openbmc/bmcweb/blob/a88942019fdd3d8fc366999f7c178f3e1c18b2fe/redfish-core/lib/sensors.hpp#L934\n\nI suspect in this case for non finite we would just set to null.",
      "range": {
        "startLine": 72,
        "startChar": 69,
        "endLine": 72,
        "endChar": 76
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0cc39d6_ff0933d0",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-01-21T03:24:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5763965e_30c005c4",
      "range": {
        "startLine": 72,
        "startChar": 69,
        "endLine": 72,
        "endChar": 76
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb8da5ac_a581fece",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 155,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-02T17:38:49Z",
      "side": 1,
      "message": "Set an asyncResp internal error like we do most other places?  I suspect that needs done on all of these.",
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83a41e78_85aec1f5",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 155,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-01-21T03:24:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eb8da5ac_a581fece",
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06bc9a7c_72e66aa9",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 173,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-01-02T17:38:49Z",
      "side": 1,
      "message": "Please just inline these on each call.",
      "range": {
        "startLine": 164,
        "startChar": 0,
        "endLine": 173,
        "endChar": 55
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e574063_0d690d03",
        "filename": "redfish-core/lib/manager_diagnostic_data.hpp",
        "patchSetId": 4
      },
      "lineNbr": 173,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-01-21T03:24:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "06bc9a7c_72e66aa9",
      "range": {
        "startLine": 164,
        "startChar": 0,
        "endLine": 173,
        "endChar": 55
      },
      "revId": "c3dd7c20c7ff03e515cb7890dfe45ce17b8fa1f0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}