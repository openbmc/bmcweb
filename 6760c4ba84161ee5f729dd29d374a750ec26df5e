{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a9752b06_221618dd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 44
      },
      "lineNbr": 7,
      "author": {
        "id": 1000233
      },
      "writtenOn": "2022-03-23T18:09:41Z",
      "side": 1,
      "message": "This should be more specific now that the other resource types are being handled in previous commits.\n\nShould likely also move the generic information about splitting getLocation and discussion of LocationType to the initial commit that adds the helper functions",
      "revId": "6760c4ba84161ee5f729dd29d374a750ec26df5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "341e99de_4016e225",
        "filename": "/COMMIT_MSG",
        "patchSetId": 44
      },
      "lineNbr": 7,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-03-23T18:24:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9752b06_221618dd",
      "revId": "6760c4ba84161ee5f729dd29d374a750ec26df5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4efd3214_ec7e5b82",
        "filename": "/COMMIT_MSG",
        "patchSetId": 44
      },
      "lineNbr": 40,
      "author": {
        "id": 1000233
      },
      "writtenOn": "2022-03-23T18:09:41Z",
      "side": 1,
      "message": "Looks like it\u0027s been released now",
      "range": {
        "startLine": 39,
        "startChar": 49,
        "endLine": 40,
        "endChar": 12
      },
      "revId": "6760c4ba84161ee5f729dd29d374a750ec26df5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7dc02103_04f61ad2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 44
      },
      "lineNbr": 40,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-03-23T18:24:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4efd3214_ec7e5b82",
      "range": {
        "startLine": 39,
        "startChar": 49,
        "endLine": 40,
        "endChar": 12
      },
      "revId": "6760c4ba84161ee5f729dd29d374a750ec26df5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "203fca03_185e8d7f",
        "filename": "redfish-core/lib/storage.hpp",
        "patchSetId": 44
      },
      "lineNbr": 478,
      "author": {
        "id": 1000233
      },
      "writtenOn": "2022-03-23T18:09:41Z",
      "side": 1,
      "message": "The code in this function looks pretty similar to the other places where you get the LocationCode and LocationType. Any way to reduce the duplication or would that hurt readability?",
      "revId": "6760c4ba84161ee5f729dd29d374a750ec26df5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ec7675d_256f8cac",
        "filename": "redfish-core/lib/storage.hpp",
        "patchSetId": 44
      },
      "lineNbr": 478,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-03-23T18:24:56Z",
      "side": 1,
      "message": "this is the only place where I am getting both LocationCode and LocationType right now.\n\nMaybe in the helper file we can have,\n\nfindLocation(const std::shared_ptr\u003cbmcweb::AsyncResp\u003e\u0026 asyncResp,\n             const std::string\u0026 path, const std::string\u0026 service,\n             const std::vector\u003cstd::string\u003e\u0026 interfaces,\n             const nlohmann::json_pointer\u003cnlohmann::json\u003e\u0026 location)\n\nand we can use that instead.\n\nBut in some cases, this will force us to loop the interfaces list twice(if there is already a loop lik in https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/51879/4). Maybe that\u0027s fine.",
      "parentUuid": "203fca03_185e8d7f",
      "revId": "6760c4ba84161ee5f729dd29d374a750ec26df5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53788e0d_e634a9be",
        "filename": "redfish-core/lib/storage.hpp",
        "patchSetId": 44
      },
      "lineNbr": 478,
      "author": {
        "id": 1000233
      },
      "writtenOn": "2022-03-23T21:01:53Z",
      "side": 1,
      "message": "All the call sites for the location helpers look like:\n\n```\nif (interface \u003d\u003d \"...LocationCode\") { getLocationCode(...); }\nelse if (isConnector(interface)) { getLocationType(...); ... }\n```\n\nIf you make a findLocation/getLocation function, why not pass in `interface` explicitly to avoid the repeated loop?",
      "parentUuid": "4ec7675d_256f8cac",
      "revId": "6760c4ba84161ee5f729dd29d374a750ec26df5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "358bd311_f1061408",
        "filename": "redfish-core/lib/storage.hpp",
        "patchSetId": 44
      },
      "lineNbr": 478,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-03-23T21:27:34Z",
      "side": 1,
      "message": "do you mean that in the outside loop find whether `xyz.openbmc_project.Inventory.Decorator.LocationCode` or Connector is there? and just pass those in instead of the whole list?\n\nbecause in general, we don\u0027t know if there are in the list.",
      "parentUuid": "53788e0d_e634a9be",
      "revId": "6760c4ba84161ee5f729dd29d374a750ec26df5e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}