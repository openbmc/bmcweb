{
  "comments": [
    {
      "key": {
        "uuid": "ad8fe0e3_f07dfe07",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 7
      },
      "lineNbr": 1047,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-04T07:19:14Z",
      "side": 1,
      "message": "populateFanRedundancy is very similar to populatePSURedundancy, is it possible to merge them?",
      "range": {
        "startLine": 1047,
        "startChar": 4,
        "endLine": 1047,
        "endChar": 25
      },
      "revId": "3655d797992598b57a7e247c9590bbf7143525cd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d8572ca_4fc74009",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 7
      },
      "lineNbr": 1047,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2020-09-04T16:26:19Z",
      "side": 1,
      "message": "good question",
      "parentUuid": "ad8fe0e3_f07dfe07",
      "range": {
        "startLine": 1047,
        "startChar": 4,
        "endLine": 1047,
        "endChar": 25
      },
      "revId": "3655d797992598b57a7e247c9590bbf7143525cd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3288958a_28857190",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 7
      },
      "lineNbr": 1047,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2020-09-08T08:48:47Z",
      "side": 1,
      "message": "It is not suitable to merge them together, the dbus path is totally different. Why have to merge them?\n1. fan redundancy:\n                            },\n                            owner, path, \"org.freedesktop.DBus.Properties\",\n                            \"GetAll\",\n                            \"xyz.openbmc_project.Control.FanRedundancy\");\n                    },\n                    \"xyz.openbmc_project.ObjectMapper\", path + \"/chassis\",\n                    \"org.freedesktop.DBus.Properties\", \"Get\",\n                    \"xyz.openbmc_project.Association\", \"endpoints\");\n            }\n        },\n        \"xyz.openbmc_project.ObjectMapper\",\n        \"/xyz/openbmc_project/object_mapper\",\n        \"xyz.openbmc_project.ObjectMapper\", \"GetSubTree\",\n        \"/xyz/openbmc_project/control\", 2,\n        std::array\u003cconst char*, 1\u003e{\n            \"xyz.openbmc_project.Control.FanRedundancy\"});\n\n2. psu redundancy:\n                    owner, path, \"org.freedesktop.DBus.Properties\", \"GetAll\",\n                    \"xyz.openbmc_project.Control.PowerSupplyRedundancy\");\n            }\n        },\n        \"xyz.openbmc_project.ObjectMapper\",\n        \"/xyz/openbmc_project/object_mapper\",\n        \"xyz.openbmc_project.ObjectMapper\", \"GetSubTree\",\n        \"/xyz/openbmc_project/control\", 2,\n        std::array\u003cconst char*, 1\u003e{\n            \"xyz.openbmc_project.Control.PowerSupplyRedundancy\"});",
      "parentUuid": "3d8572ca_4fc74009",
      "range": {
        "startLine": 1047,
        "startChar": 4,
        "endLine": 1047,
        "endChar": 25
      },
      "revId": "3655d797992598b57a7e247c9590bbf7143525cd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07f586ce_81950975",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 7
      },
      "lineNbr": 1047,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-11T11:41:18Z",
      "side": 1,
      "message": "To simplify it. It is ok, I can see it is hard because of chassis association that is not required for PSU. Unless you want to make a function  like this:\n\ntemplate \u003ctypename Callback\u003e\ninline void\n  iterateOverSubTreeControlPath(std::shared_ptr\u003cSensorsAsyncResp\u003e sensorsAsyncResp, const char* interface, Callback callback)\n  crow::connections::systemBus-\u003easync_method_call(){\n      iterate through dictionary\n      callback(owner, path);\n  },\n  \"xyz.openbmc_project.ObjectMapper\",\n  \"/xyz/openbmc_project/object_mapper\",\n  \"xyz.openbmc_project.ObjectMapper\", \"GetSubTree\",\n  \"/xyz/openbmc_project/control\", 2,\n  std::array\u003cconst char*, 1\u003e{ interface });\n\nSkip if you do not like it or does not follow bmcweb style.",
      "parentUuid": "3288958a_28857190",
      "range": {
        "startLine": 1047,
        "startChar": 4,
        "endLine": 1047,
        "endChar": 25
      },
      "revId": "3655d797992598b57a7e247c9590bbf7143525cd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8446d14_bc868ade",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 7
      },
      "lineNbr": 1078,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-03T01:26:55Z",
      "side": 1,
      "message": "can you abstract this callback into its own function?  It\u0027s pretty long, and the 80 character line lengths are hurting here.",
      "range": {
        "startLine": 1078,
        "startChar": 0,
        "endLine": 1078,
        "endChar": 32
      },
      "revId": "3655d797992598b57a7e247c9590bbf7143525cd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c50a1cf1_b3635aa9",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 7
      },
      "lineNbr": 1099,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-03T01:26:55Z",
      "side": 1,
      "message": "Please don\u0027t use auto for these.",
      "range": {
        "startLine": 1099,
        "startChar": 24,
        "endLine": 1099,
        "endChar": 29
      },
      "revId": "3655d797992598b57a7e247c9590bbf7143525cd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2aef58b3_555db0a1",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 7
      },
      "lineNbr": 1099,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-04T07:19:14Z",
      "side": 1,
      "message": "auto is used in other places in sensors.hpp. Can maintainer confirm that using auto is ok?",
      "parentUuid": "c50a1cf1_b3635aa9",
      "range": {
        "startLine": 1099,
        "startChar": 24,
        "endLine": 1099,
        "endChar": 29
      },
      "revId": "3655d797992598b57a7e247c9590bbf7143525cd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d7bc37a_1965d9f2",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 7
      },
      "lineNbr": 1099,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2020-09-04T16:26:19Z",
      "side": 1,
      "message": "auto is acceptable in the cases that the value on the right allows you to easily tell what the lvalue is. This one is on the fence, as you need to know that get_if returns a pointer of the template type. I personally don\u0027t find these ones worth arguing about.",
      "parentUuid": "2aef58b3_555db0a1",
      "range": {
        "startLine": 1099,
        "startChar": 24,
        "endLine": 1099,
        "endChar": 29
      },
      "revId": "3655d797992598b57a7e247c9590bbf7143525cd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cfbba0b_4f92909b",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 7
      },
      "lineNbr": 1127,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-03T01:26:55Z",
      "side": 1,
      "message": "Given this might be platform or subsystem specific, this check should be done in the power supply daemon, and published to the same health dbus apis that other components do, then this can simply pull the status.",
      "revId": "3655d797992598b57a7e247c9590bbf7143525cd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fef8316_14efca72",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 7
      },
      "lineNbr": 1127,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2020-09-04T16:26:19Z",
      "side": 1,
      "message": "Yeah that would be nice if this used the health object, as some platforms loss of redundancy may be seen as critical",
      "parentUuid": "1cfbba0b_4f92909b",
      "revId": "3655d797992598b57a7e247c9590bbf7143525cd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0de2099a_ecffcc8d",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 7
      },
      "lineNbr": 1127,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-11T18:48:50Z",
      "side": 1,
      "message": "+1 to James comment, I just didn\u0027t know all the actual terms for the APIs you need to use.",
      "parentUuid": "5fef8316_14efca72",
      "revId": "3655d797992598b57a7e247c9590bbf7143525cd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4a759f4_a6e19c6d",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 7
      },
      "lineNbr": 1153,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-03T01:26:55Z",
      "side": 1,
      "message": "avoid auto here.",
      "range": {
        "startLine": 1153,
        "startChar": 24,
        "endLine": 1153,
        "endChar": 28
      },
      "revId": "3655d797992598b57a7e247c9590bbf7143525cd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9136ea79_e36b4c18",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 7
      },
      "lineNbr": 1153,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2020-09-04T16:26:19Z",
      "side": 1,
      "message": "This one I agree, as I have no idea what the value on the right is without inspecting the code.",
      "parentUuid": "e4a759f4_a6e19c6d",
      "range": {
        "startLine": 1153,
        "startChar": 24,
        "endLine": 1153,
        "endChar": 28
      },
      "revId": "3655d797992598b57a7e247c9590bbf7143525cd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a124cef3_af12ab4d",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 7
      },
      "lineNbr": 1155,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-03T01:26:55Z",
      "side": 1,
      "message": "This is looking at the response of one of the previous handlers, which can lead to inconsistencies if this handler gets handled before the other callback.  If you need the data from another callback, organize your code so you\u0027re explicitly called in the callback handler for that, and pass the info you need into your method.",
      "range": {
        "startLine": 1155,
        "startChar": 0,
        "endLine": 1155,
        "endChar": 77
      },
      "revId": "3655d797992598b57a7e247c9590bbf7143525cd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22b4937d_c6d7e334",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 7
      },
      "lineNbr": 1155,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2020-09-04T16:26:19Z",
      "side": 1,
      "message": "The use_count \u003d\u003d 1 below covers that I believe",
      "parentUuid": "a124cef3_af12ab4d",
      "range": {
        "startLine": 1155,
        "startChar": 0,
        "endLine": 1155,
        "endChar": 77
      },
      "revId": "3655d797992598b57a7e247c9590bbf7143525cd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3034659_80f4251f",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 7
      },
      "lineNbr": 1155,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-11T18:48:50Z",
      "side": 1,
      "message": "Ah, gross.  Forgot we did that hack in this one.\n\nFine as is.",
      "parentUuid": "22b4937d_c6d7e334",
      "range": {
        "startLine": 1155,
        "startChar": 0,
        "endLine": 1155,
        "endChar": 77
      },
      "revId": "3655d797992598b57a7e247c9590bbf7143525cd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fa4d3ab_a5c553dc",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 7
      },
      "lineNbr": 1159,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-03T01:26:55Z",
      "side": 1,
      "message": "Why is this here?",
      "range": {
        "startLine": 1159,
        "startChar": 0,
        "endLine": 1159,
        "endChar": 47
      },
      "revId": "3655d797992598b57a7e247c9590bbf7143525cd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed11bead_26ec2a35",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 7
      },
      "lineNbr": 1159,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2020-09-04T16:26:19Z",
      "side": 1,
      "message": "Through reading the code I believe that PSU Status was never correctly implemented and we\u0027ve been relying on input power \u003d\u003d 0 to say the psu is disabled",
      "parentUuid": "5fa4d3ab_a5c553dc",
      "range": {
        "startLine": 1159,
        "startChar": 0,
        "endLine": 1159,
        "endChar": 47
      },
      "revId": "3655d797992598b57a7e247c9590bbf7143525cd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f5d5f2a_9f4abfe5",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 7
      },
      "lineNbr": 1159,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2020-09-08T08:51:10Z",
      "side": 1,
      "message": "is to cover the AC lost case.",
      "parentUuid": "ed11bead_26ec2a35",
      "range": {
        "startLine": 1159,
        "startChar": 0,
        "endLine": 1159,
        "endChar": 47
      },
      "revId": "3655d797992598b57a7e247c9590bbf7143525cd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f744fd50_c57f239e",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 7
      },
      "lineNbr": 1159,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-11T18:48:50Z",
      "side": 1,
      "message": "Makes sense. Can we get it implemented correctly rather than propagating the wrongness forward?",
      "parentUuid": "ed11bead_26ec2a35",
      "range": {
        "startLine": 1159,
        "startChar": 0,
        "endLine": 1159,
        "endChar": 47
      },
      "revId": "3655d797992598b57a7e247c9590bbf7143525cd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1873d082_1fefab73",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 7
      },
      "lineNbr": 1159,
      "author": {
        "id": 1000218
      },
      "writtenOn": "2020-09-14T06:18:01Z",
      "side": 1,
      "message": "it is not wrongness. PowerSupplies include all the connected PSUs, no matter AC lost or not.\nBut for PURedundancy, just need the AC on PSU.",
      "parentUuid": "f744fd50_c57f239e",
      "range": {
        "startLine": 1159,
        "startChar": 0,
        "endLine": 1159,
        "endChar": 47
      },
      "revId": "3655d797992598b57a7e247c9590bbf7143525cd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d389168d_694f5a54",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 7
      },
      "lineNbr": 1159,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-15T18:48:11Z",
      "side": 1,
      "message": "Great, lets get that implemented in the PSU daemon, not in bmcweb.",
      "parentUuid": "1873d082_1fefab73",
      "range": {
        "startLine": 1159,
        "startChar": 0,
        "endLine": 1159,
        "endChar": 47
      },
      "revId": "3655d797992598b57a7e247c9590bbf7143525cd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}