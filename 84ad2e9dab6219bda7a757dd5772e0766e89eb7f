{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "426de302_57a37bcf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 36,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-07-11T19:24:36Z",
      "side": 1,
      "message": "So since you still add a cookie I assume you want to allow web browsers to use mTLS to authenticate to bmcweb. But AFAICT you still need CSRF protection in this case or else a malicious unrelated tab in a web browser with that client certificate would be able to covertly run any requests any time.\nI might be missing something but it looks that getting mTLS with web-browsers done right security wise requires much more effort and then would be out of scope for this patch if at all possible (without additional authentication factors).\nProbably mTLS for web browsers should be declared unsupported in this patch, no cookies sent at all and then if a good solution found re-introduced later? And if there\u0027s a reasonable way then probably getting WebSockets working can be done too?\nEither way to me it looks like this part requires more clarifications so that even someone inexperienced with web like me could follow the ideas behind security of the solution.",
      "range": {
        "startLine": 34,
        "startChar": 1,
        "endLine": 36,
        "endChar": 25
      },
      "revId": "84ad2e9dab6219bda7a757dd5772e0766e89eb7f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3382c278_87060010",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 36,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-07-11T23:30:26Z",
      "side": 1,
      "message": "\u003e So since you still add a cookie I assume you want to allow web browsers to use mTLS to authenticate to bmcweb.\n\nToday, this use case doesn\u0027t work, although was implemented at one point.  I have left the cookie in case someone in the future wants to use it, but to my knowledge, webui-vue has never supported it.\n\n\u003e But AFAICT you still need CSRF protection in this case or else a malicious unrelated tab in a web browser with that client certificate would be able to covertly run any requests any time.\n\u003e I might be missing something but it looks that getting mTLS with web-browsers done right security wise requires much more effort and then would be out of scope for this patch if at all possible (without additional authentication factors).\n\n\nYep, you got it.  Trying to get web browsers working with mtls is outside this patch, and would need someone to champion it.\n\n\u003e Probably mTLS for web browsers should be declared unsupported in this patch, no cookies sent at all and then if a good solution found re-introduced later?\n\nThe difference in what you\u0027re asking is the IsAuthenticated header?  If we wanted to remove that, lets do it in a different patch.  I believe it\u0027s still used in some contexts.  The cookies are not.\n\n\u003e And if there\u0027s a reasonable way then probably getting WebSockets working can be done too?\n\nA code review isn\u0027t the place for that discussion.  That would be a new feature.\n\n\u003e Either way to me it looks like this part requires more clarifications so that even someone inexperienced with web like me could follow the ideas behind security of the solution.\n\nwhat clarifications are you looking for?",
      "parentUuid": "426de302_57a37bcf",
      "range": {
        "startLine": 34,
        "startChar": 1,
        "endLine": 36,
        "endChar": 25
      },
      "revId": "84ad2e9dab6219bda7a757dd5772e0766e89eb7f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b85d2695_7be6927f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 36,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-07-12T17:32:59Z",
      "side": 1,
      "message": "\u003e what clarifications are you looking for?\n\nLet me try to rephrase. I have an impression that (presuming bmcweb should be secure by default) the right way to solve the TODO would be to disable sending of all cookies, including isAuthenticated, to discourage webui developers from trying to use mTLS altogether because with bmcweb as it currently is can not be made secure anyhow as it lacks any kind of CSRF protection for mTLS connections (I couldn\u0027t find any specific guidance about this aspect of mTLS at OWASP but it\u0027s essentially the same as basic auth, if you allow basic auth for web browser you need CSRF protections).\n\nAnd in any case when a code is touched which has security implications it would be nice to see what rationale, what idea was behind the decision to make it the way it is. In this case you decided to leave the code sending the cookie as it was but it\u0027s not clear whether you considered security implications of that or not. If you see a practical way how webui can be improved to start using it without compromising security, an outline would be nice to have in a commit message. If you think that\u0027s not possible then why keep the dead code which can also encourage frontend developers to try using it without knowing it shouldn\u0027t be done?",
      "parentUuid": "3382c278_87060010",
      "range": {
        "startLine": 34,
        "startChar": 1,
        "endLine": 36,
        "endChar": 25
      },
      "revId": "84ad2e9dab6219bda7a757dd5772e0766e89eb7f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87b9e930_e6599821",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 36,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-07-12T22:26:23Z",
      "side": 1,
      "message": "\u003e \u003e what clarifications are you looking for?\n\u003e \n\u003e Let me try to rephrase. I have an impression that (presuming bmcweb should be secure by default) the right way to solve the TODO would be to disable sending of all cookies, including isAuthenticated,\n\nSorry to cut in the middle of a sentence, but IsAuthenticated has no impact on the service security.  It is only a \"hint\" to the UI for the first load that it probably doesn\u0027t need to display the login page.\n\n\u003e to discourage webui developers from trying to use mTLS altogether because with bmcweb as it currently is can not be made secure anyhow as it lacks any kind of CSRF protection for mTLS connections \n\u003e (I couldn\u0027t find any specific guidance about this aspect of mTLS at OWASP but it\u0027s essentially the same as basic auth, if you allow basic auth for web browser you need CSRF protections).\n\nI\u0027m not sure why you think they\u0027re similar, but they\u0027re really not similar at all, aside from the browser keeping a cache of each.  At a minimum, MTLS certificates have a valid by date and valid before date, that limit the exposure if they\u0027re leaked.  The certificate key itself is also never present on the wire as it is in basic auth.\n\nIf you\u0027re going to make statements about the security or non-security of bmcweb, please try to quote an authority on the subject (it doesn\u0027t have to be owasp).  Debating complex undocumented security principles in a code review isn\u0027t generally fruitful in my experience.\n\nThere are plenty of deployments where CSRF isn\u0027t necessarily required for MTLS, and to my knowledge, CSRF has never been enforced on a mutual TLS gui or in bmcweb, so that would be new, that I\u0027m happy to discuss in a patches that want to add that.\n\n\nThe goal here isn\u0027t to encourage or discourage developers from doing anything.  If someone wants the webui to work with mutual TLS, they\u0027ll find a way to make it work and test it.  I haven\u0027t seen that happen, so the best I can do here is _try_ to keep the code similar for the paths that used to work.\n\n\n\u003e \n\u003e And in any case when a code is touched which has security implications it would be nice to see what rationale, what idea was behind the decision to make it the way it is.\n\nThat\u0027s certainly something I try to ask for in reviews.  You are welcome to do it as well, although in this case, this was literally just removing extra things that were known to not be used (hence the TODO).  It didn\u0027t really have anything to do with security. \n\n\n\u003e In this case you decided to leave the code sending the cookie as it was but it\u0027s not clear whether you considered security implications of that or not.\n\nYou mean the IsAuthenticated cookie?  That cookie has nothing to do with security, which is why it\u0027s not documented in the commit message.\n\n\u003e If you see a practical way how webui can be improved to start using it without compromising security, an outline would be nice to have in a commit message.\n\nThat would be for putting in a commit message in a patch about improving the webui, or a mailing list discussion.  Any \"practical way\" i suggest would start by reading information on the topic of mutual TLS authenticated websites and APIs, but that\u0027s something anyone can do.\n\n\u003e If you think that\u0027s not possible then why keep the dead code which can also encourage frontend developers to try using it without knowing it shouldn\u0027t be done?\n\nWhy wouldn\u0027t we encourage developers to add new things or fix bugs in existing implementations?",
      "parentUuid": "b85d2695_7be6927f",
      "range": {
        "startLine": 34,
        "startChar": 1,
        "endLine": 36,
        "endChar": 25
      },
      "revId": "84ad2e9dab6219bda7a757dd5772e0766e89eb7f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f4bebf9_eba4d42b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-07-11T19:24:36Z",
      "side": 1,
      "message": "The code all looks nice but I do have a question about that cookie...",
      "revId": "84ad2e9dab6219bda7a757dd5772e0766e89eb7f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "000ed86f_ccdc0e7b",
        "filename": "include/authentication.hpp",
        "patchSetId": 9
      },
      "lineNbr": 194,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-07-11T19:24:36Z",
      "side": 1,
      "message": "I think you might want to specify `Path\u003d/` here or else multiple cookies with the same name are going to be created and even though it wouldn\u0027t be breaking anything (I guess) that\u0027s not intended.",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 194,
        "endChar": 0
      },
      "revId": "84ad2e9dab6219bda7a757dd5772e0766e89eb7f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f16a44f_ba03925c",
        "filename": "include/authentication.hpp",
        "patchSetId": 9
      },
      "lineNbr": 194,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-07-11T23:30:26Z",
      "side": 1,
      "message": "\u003e I think you might want to specify `Path\u003d/`\n\nThat\u0027s fair, and based on our previous conversations correct, but that would be a different patch (along with a commit message describing why).\n\n\u003e here or else multiple cookies with the same name are going to be created and even though it wouldn\u0027t be breaking anything (I guess) that\u0027s not intended.",
      "parentUuid": "000ed86f_ccdc0e7b",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 194,
        "endChar": 0
      },
      "revId": "84ad2e9dab6219bda7a757dd5772e0766e89eb7f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}