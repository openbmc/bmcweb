{
  "comments": [
    {
      "key": {
        "uuid": "22fdbb97_a8c9fe71",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2021-03-02T02:00:39Z",
      "side": 1,
      "message": "spelling",
      "range": {
        "startLine": 25,
        "startChar": 20,
        "endLine": 25,
        "endChar": 34
      },
      "revId": "2e9bb25b7b5d130969fa3aa4eb8059723acd7a12",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "463ecce9_6e6fffc1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 41,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2021-03-02T02:00:39Z",
      "side": 1,
      "message": "Seems like I would expect more testing than that. \nSince you touched nbd proxy, and websockets, I would expect testing for those.",
      "revId": "2e9bb25b7b5d130969fa3aa4eb8059723acd7a12",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11784f55_20d6df51",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 41,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-02T02:16:50Z",
      "side": 1,
      "message": "agreed.  I mostly pushed this so we can get solidarity on all the use cases people need before going through all the testing on this.  I did test more than just logging in, I just did a mediocre job documenting it, which I will fix.\n\nwith that said, nbd is currently dead code (there\u0027s no backend for it) so I have no way to test it.  Based on the minimaly invasive code, and the shared implementation with all the other websockets, I\u0027m pretty sure I haven\u0027t changed the behavior from before, but there\u0027s no real way to know that.",
      "parentUuid": "463ecce9_6e6fffc1",
      "revId": "2e9bb25b7b5d130969fa3aa4eb8059723acd7a12",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1d78cca_1e895388",
        "filename": "include/sessions.hpp",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2021-02-22T16:11:30Z",
      "side": 1,
      "message": "I am hoping this change is going to break the LDAP which was working before with the following call.\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/39756/5/http/routing.hpp#b1405",
      "revId": "2e9bb25b7b5d130969fa3aa4eb8059723acd7a12",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e42e0f2_2a31cdd5",
        "filename": "include/sessions.hpp",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-22T16:26:04Z",
      "side": 1,
      "message": "This change assumes that phosphor-user-manager is working properly.  If this is broken, isn\u0027t there a bug in the properties changed event for LDAP users?",
      "parentUuid": "f1d78cca_1e895388",
      "revId": "2e9bb25b7b5d130969fa3aa4eb8059723acd7a12",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5d20ba2_a19bccf4",
        "filename": "include/sessions.hpp",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2021-02-23T03:21:48Z",
      "side": 1,
      "message": "Ed, We don\u0027t list the LDAP users on the Dbus. LDAP is used on the BMC for authentication not for the user management.\n\nLDAP notification is not supported in the back-end(nss-pam-ldapd).",
      "parentUuid": "5e42e0f2_2a31cdd5",
      "revId": "2e9bb25b7b5d130969fa3aa4eb8059723acd7a12",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d61d4310_e79243ff",
        "filename": "include/sessions.hpp",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-23T03:24:26Z",
      "side": 1,
      "message": "How are ldap users authorized then?  SOME backend needs to hold the users privilege level on dbus.",
      "parentUuid": "c5d20ba2_a19bccf4",
      "revId": "2e9bb25b7b5d130969fa3aa4eb8059723acd7a12",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebb2843b_31c57476",
        "filename": "include/sessions.hpp",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-23T03:27:22Z",
      "side": 1,
      "message": "Also, LDAP notification in the library isn\u0027t required to host the privilege level.\n\nThe reason most web services like this even have sessions is to avoid doing this exact thing, calling into ldap for every single request, which slows down everything.  Sessions are generally only authorized once, then that privilege level is held through the course of the session.\n\nThis is the same way your laptop works with an LDAP server.  If your privilege level on the LDAP server is changed, it\u0027s not immediately applied, you need to log out and log back in before it\u0027s applied.",
      "parentUuid": "d61d4310_e79243ff",
      "revId": "2e9bb25b7b5d130969fa3aa4eb8059723acd7a12",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "868870c7_148345bd",
        "filename": "include/sessions.hpp",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2021-02-24T14:04:51Z",
      "side": 1,
      "message": "\u003e How are ldap users authorized then? \nWe use the linux API for authorization where we get the group ID by calling the getpwnam_r and then call the getgrent to get the group name of the user..\nHow does the get ent knows that they need to make the ldap call? There is a nsswitch configuration where we tells that for password, grpup search what should be called(Linux, ldap).\n\nI am not sure that internally these API makes the LDAP call for each request to get the grpup name or it caches somewhere.but I have seen most of the times that LDAP call goes to the LDAP server for the authorization but it is very fast(in mili or micro seconds) as our ldap server is in the same network.",
      "parentUuid": "ebb2843b_31c57476",
      "revId": "2e9bb25b7b5d130969fa3aa4eb8059723acd7a12",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e7d3e70_53e8a1f1",
        "filename": "include/sessions.hpp",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-24T18:01:28Z",
      "side": 1,
      "message": "\u003e \u003e How are ldap users authorized then? \n\u003e We use the linux API for authorization where we get the group ID by calling the getpwnam_r and then call the getgrent to get the group name of the user..\n\u003e How does the get ent knows that they need to make the ldap call? There is a nsswitch configuration where we tells that for password, grpup search what should be called(Linux, ldap).\n\u003e \n\u003e I am not sure that internally these API makes the LDAP call for each request to get the grpup name or it caches somewhere.but I have seen most of the times that LDAP call goes to the LDAP server for the authorization but it is very fast(in mili or micro seconds) as our ldap server is in the same network.\n\nYou can\u0027t assume the LDAP server will always be fast, nor can you assume that the LDAP server can handle the load of all the bmcweb requests that might come through, also \"fast\" is relative, it\u0027s another network connection that needs polled, and significantly increases the response times.  Considering bmcweb is supposed to respond in a matter of milliseconds, adding another milliseconds hop to every request seems like an issue.\n\nConsidering that bmcweb is logging in via PAM directly, I would expect the getgrent to also be in bmcweb, so we can authorize users and determine their groups without any intermediates, at the same time we do the pam_authenticate call.  With that said, I don\u0027t have a problem authorizing through dbus, I have a problem authorizing every request.  If you have requirements around supporting removing sessions when the groups change (which is fairly unique) then phosphor-user-manager needs to set up inotify, and event on them properly.",
      "parentUuid": "868870c7_148345bd",
      "revId": "2e9bb25b7b5d130969fa3aa4eb8059723acd7a12",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f04fac5_1d665edb",
        "filename": "include/sessions.hpp",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2021-02-25T14:29:48Z",
      "side": 1,
      "message": "\u003e Considering that bmcweb is logging in via PAM directly,\nYes that will also make LDAP request for authentication via pam_ldap module.\n\n\u003e  I would expect the getgrent to also be in bmcweb, so we can authorize users and determine their groups without any intermediates, \ngetgrent internally makes the ldap request to get the group info from the LDAP. I think I have asked this info on the nss-pam-ldapd mailing list also.\n\nI am not sure either we make the getgrent call from the bmcweb or the phophosr-user-manager does, How it is solving the problem.\n\nOnce you get the group name you need to get the privilege for the group, for the same there is Dbus application.Hence you need to make the D-bus call.\n\nNow the question is whether getgrent is making the ldap call for each authorisation request or for some x amount of time it caches and then invalidate the cache , I have to take a look or I can fire a query to the maintainer of the nss-pam-ldapd.",
      "parentUuid": "3e7d3e70_53e8a1f1",
      "revId": "2e9bb25b7b5d130969fa3aa4eb8059723acd7a12",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3554ca9_10e82a16",
        "filename": "include/sessions.hpp",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-25T15:41:32Z",
      "side": 1,
      "message": "\u003e \u003e Considering that bmcweb is logging in via PAM directly,\n\u003e Yes that will also make LDAP request for authentication via pam_ldap module.\n\u003e \n\u003e \u003e  I would expect the getgrent to also be in bmcweb, so we can authorize users and determine their groups without any intermediates, \n\u003e getgrent internally makes the ldap request to get the group info from the LDAP. I think I have asked this info on the nss-pam-ldapd mailing list also.\n\u003e \n\u003e I am not sure either we make the getgrent call from the bmcweb or the phophosr-user-manager does, How it is solving the problem.\n\u003e \n\u003e Once you get the group name you need to get the privilege for the group, for the same there is Dbus application.Hence you need to make the D-bus call.\n\nI\u0027m not following this.  The group names contain the privileges for the groups.  If the user is in the admin group, it has admin privileges, operator group gets operator privileges, ect.  Why does that necessitate a call into phosphor-user-manager?\n\n\u003e \n\u003e Now the question is whether getgrent is making the ldap call for each authorisation request or for some x amount of time it caches and then invalidate the cache , I have to take a look or I can fire a query to the maintainer of the nss-pam-ldapd.\n\nThis doesn\u0027t matter, as getgrent would only be called when a session is created, and wouldn\u0027t need to be run on every request.",
      "parentUuid": "8f04fac5_1d665edb",
      "revId": "2e9bb25b7b5d130969fa3aa4eb8059723acd7a12",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53744024_c0b46369",
        "filename": "include/sessions.hpp",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2021-03-02T03:35:18Z",
      "side": 1,
      "message": "\u003e I\u0027m not following this.  The group names contain the privileges for the groups.  If the user is in the admin group, it has admin privileges, operator group gets operator privileges, ect.  Why does that necessitate a call into phosphor-user-manager?\n\nWe have two types of users.\n\n1) Local user: During creation of the local user we give the privilege to the user as admin, opertaor etc.\n   NOTE: This privilege is nothing : In linux it is the group where the user lies.\n\n2) LDAP user doesn\u0027t lie in group called priv admin, priv-opertaor which we made it for openbmc user management, we can not ask the ldap admin to create the user and tied the user with priv opertor or prive admin group.\n\n   Now in this case we need to map the LDAP grpup to the BMC privilege model. which we do it by having interface which maps the group to privilege model.There is a Dbus service for the same.\n\n   In redfish also we have the property called \"RemoteRole mapping\" for the same purpose where mapping rules that are used to convert the external account providers account information to the local Redfish role.\n\nSo we have two methods to get the privilege of a user.\n\nIf it is local user you can directly get the privilege of the user(by having Dbus call or Monitor the Dbus object) but if it is ldap user then we need to get the group id of the user from the LDAp server  and then find the privilege of the group by having Dbus call to the user manager..\n\nI agree with your point that privilege should be fetched during authentication not for each request for the same session.\n\nThis can be done if we keep the privilege in the in memory session object during authentication and each successive request will be matched against the privilege which is there in the in-memory session object.",
      "parentUuid": "e3554ca9_10e82a16",
      "revId": "2e9bb25b7b5d130969fa3aa4eb8059723acd7a12",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90f170a7_c75b8434",
        "filename": "include/sessions.hpp",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-18T18:21:13Z",
      "side": 1,
      "message": "\u003e \u003e I\u0027m not following this.  The group names contain the privileges for the groups.  If the user is in the admin group, it has admin privileges, operator group gets operator privileges, ect.  Why does that necessitate a call into phosphor-user-manager?\n\u003e \n\u003e We have two types of users.\n\u003e \n\u003e 1) Local user: During creation of the local user we give the privilege to the user as admin, opertaor etc.\n\u003e    NOTE: This privilege is nothing : In linux it is the group where the user lies.\n\u003e \n\u003e 2) LDAP user doesn\u0027t lie in group called priv admin, priv-opertaor which we made it for openbmc user management, we can not ask the ldap admin to create the user and tied the user with priv opertor or prive admin group.\n\u003e \n\u003e    Now in this case we need to map the LDAP grpup to the BMC privilege model. which we do it by having interface which maps the group to privilege model.There is a Dbus service for the same.\n\u003e \n\u003e    In redfish also we have the property called \"RemoteRole mapping\" for the same purpose where mapping rules that are used to convert the external account providers account information to the local Redfish role.\n\u003e \n\u003e So we have two methods to get the privilege of a user.\n\u003e \n\u003e If it is local user you can directly get the privilege of the user(by having Dbus call or Monitor the Dbus object) but if it is ldap user then we need to get the group id of the user from the LDAp server  and then find the privilege of the group by having Dbus call to the user manager..\n\nI was with you so far until this statement.  Why doesn\u0027t user manager just host an interface with the users group on it, then we\u0027re not changing any behavior based on whether or not the user is LDAP.\n\n\u003e \n\u003e I agree with your point that privilege should be fetched during authentication not for each request for the same session.\n\u003e \n\u003e This can be done if we keep the privilege in the in memory session object during authentication and each successive request will be matched against the privilege which is there in the in-memory session object.\n\nGreat.  We can certainly do that.",
      "parentUuid": "53744024_c0b46369",
      "revId": "2e9bb25b7b5d130969fa3aa4eb8059723acd7a12",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}