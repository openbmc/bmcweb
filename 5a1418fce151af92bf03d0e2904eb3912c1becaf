{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "89bfecba_8c3e2100",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-07T16:06:08Z",
      "side": 1,
      "message": "Can we break this patchset down to JUST the changes to make ComputerSystemCollection work for the moment?  I think that will give the best result, so we can get agreement on what the general interfaces are before we start porting things.",
      "revId": "5a1418fce151af92bf03d0e2904eb3912c1becaf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0ce0c39_f1029f88",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-07T16:16:11Z",
      "side": 1,
      "message": "Partial review as last round of comments seem to have just been marked done without actually having been done or understood.\n\nIn the future, lets have a short sentence response on what you did to update the patch in the response to the comments rather than just marking \"done\".  I think that\u0027ll help us communicate better.\n\n\n\nIn addition, lets break this patchset down to JUST the ComputerSystemCollection changes, so we can do this incrementally over time, rather than trying to get the whole power reset case handled in one patch.\n\nWould also like to see IBM review to see if this would work for their hypervisor use cases, so we can clean up that code.  @Asmitha, @Andrew,is that something you can do or find someone with knowledge of how the IBM hypervisor stuff works?",
      "revId": "5a1418fce151af92bf03d0e2904eb3912c1becaf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcfdc693_547b0958",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1002065
      },
      "writtenOn": "2024-08-12T14:15:44Z",
      "side": 1,
      "message": "Sure, I will do this in the future. \n\nI have now splited the commit to only include the introduction of getCollectionMembers in systems.hpp aswell as adjusted the commit message. I am working on resolving the issues you have commented here in a new patch. Will publish those under the same topic once I have fixed them. Is that ok with you?",
      "parentUuid": "f0ce0c39_f1029f88",
      "revId": "5a1418fce151af92bf03d0e2904eb3912c1becaf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd0a672a_0ff3de56",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-12T15:00:32Z",
      "side": 1,
      "message": "That sounds great.  Thank you for accommodating me.",
      "parentUuid": "dcfdc693_547b0958",
      "revId": "5a1418fce151af92bf03d0e2904eb3912c1becaf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a36a0054_0a80f892",
        "filename": "redfish-core/include/utils/systems_utils.hpp",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-07T16:16:11Z",
      "side": 1,
      "message": "Please don\u0027t capture request objects by value.  They make VERY large copies.  Parse out the information you need in the first callback for a given flow.\n\nFYI, we\u0027re trying to make this pitfall more obvious here:\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/71547\n\nUnder the hope that we can catch this earlier.",
      "range": {
        "startLine": 52,
        "startChar": 12,
        "endLine": 52,
        "endChar": 13
      },
      "revId": "5a1418fce151af92bf03d0e2904eb3912c1becaf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "546bd6e2_6244dc58",
        "filename": "redfish-core/include/utils/systems_utils.hpp",
        "patchSetId": 5
      },
      "lineNbr": 53,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-07T16:16:11Z",
      "side": 1,
      "message": "std::move.",
      "range": {
        "startLine": 53,
        "startChar": 9,
        "endLine": 53,
        "endChar": 17
      },
      "revId": "5a1418fce151af92bf03d0e2904eb3912c1becaf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e6a452f_aa6d0fc9",
        "filename": "redfish-core/include/utils/systems_utils.hpp",
        "patchSetId": 5
      },
      "lineNbr": 54,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-07T16:16:11Z",
      "side": 1,
      "message": "mutable",
      "revId": "5a1418fce151af92bf03d0e2904eb3912c1becaf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "570a3d01_1e7a8faa",
        "filename": "redfish-core/include/utils/systems_utils.hpp",
        "patchSetId": 5
      },
      "lineNbr": 91,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-07T16:16:11Z",
      "side": 1,
      "message": "Instance of common error #12 https://gerrit.openbmc.org/c/openbmc/bmcweb/+/71547",
      "range": {
        "startLine": 91,
        "startChar": 17,
        "endLine": 91,
        "endChar": 21
      },
      "revId": "5a1418fce151af92bf03d0e2904eb3912c1becaf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abacedba_97550dbf",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 5
      },
      "lineNbr": 2975,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-07T16:06:08Z",
      "side": 1,
      "message": "Please don\u0027t make whitespace changes that are unrelated to your logic change.  They make this patchset hard to review.  There are multiple, I will let you find them clean them up rather than marking all of them.",
      "range": {
        "startLine": 2973,
        "startChar": 5,
        "endLine": 2975,
        "endChar": 80
      },
      "revId": "5a1418fce151af92bf03d0e2904eb3912c1becaf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08653d16_43d76ea2",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 5
      },
      "lineNbr": 2983,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-07T16:06:08Z",
      "side": 1,
      "message": "BMCWEB_EXPERIMENTAL_REDFISH_MULTI_COMPUTER_SYSTEM is not the same as BMCWEB_REDFISH_SYSTEM_URI_NAME.empty().  They are different parameters for different purposes.  Just leaving the System URI empty does not explicitly enable multi host, and as written, can lead to systems that don\u0027t work.\n\n\nDo we have an understanding of why this branch needs to remain here at all?\n\nI would expect some logic like:\n\nBuild the collection\nIf there is only one member, have the collection name match BMCWEB_REDFISH_SYSTEM_URI_NAME",
      "revId": "5a1418fce151af92bf03d0e2904eb3912c1becaf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c52f57bb_12a07af3",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 5
      },
      "lineNbr": 2983,
      "author": {
        "id": 1002065
      },
      "writtenOn": "2024-08-12T17:07:55Z",
      "side": 1,
      "message": "I understand, I went back to using BMCWEB_EXPERIMENTAL_REDFISH_MULTI_COMPUTER_SYSTEM then.\n\nThe reason I branch here, is because non of the single host machines configure the ManagedHost interface as of now, which getCollecdtionMembers bases the search on. As I understand we would break single host if we don\u0027t branch like this, since the call to getCollectionMembers would not return any system on single host. I agree however, once every single host system implements the ManagedHost interface, the branching will no longer be needed.",
      "parentUuid": "08653d16_43d76ea2",
      "revId": "5a1418fce151af92bf03d0e2904eb3912c1becaf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae18ce90_22e507c0",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 5
      },
      "lineNbr": 2983,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-13T16:47:23Z",
      "side": 1,
      "message": "\u003e I understand, I went back to using BMCWEB_EXPERIMENTAL_REDFISH_MULTI_COMPUTER_SYSTEM then.\n\u003e \n\u003e The reason I branch here, is because non of the single host machines configure the ManagedHost interface as of now, which getCollecdtionMembers bases the search on.\n\u003e As I understand we would break single host if we don\u0027t branch like this, since the call to getCollectionMembers would not return any system on single host. I agree however, once every single host system implements the ManagedHost interface, the branching will no longer be needed.\n\n\nRight, and my understanding and the agreement I had with others when we talked about this option was that we were going to fix that ahead of merging this patch, and make single host systems have something on DBus we could key off, so that ComputerSystemCollection worked the same as all other dbus collections.  Then, one at a time, we would slowly remove the places where the option was used.",
      "parentUuid": "c52f57bb_12a07af3",
      "revId": "5a1418fce151af92bf03d0e2904eb3912c1becaf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60519e9d_35025aa0",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 5
      },
      "lineNbr": 2983,
      "author": {
        "id": 1002065
      },
      "writtenOn": "2024-08-14T15:06:09Z",
      "side": 1,
      "message": "Alright. I tried to implement the logic you suggested in your initial comment, but checking the count after the collection has been build fails, due to getCollectionMembers running async and the value not being set in time. I don\u0027t see another way to get the count, other than reading it from the json in the response object. The branching would fix this at least. Should I overload getCollectionMembers to be able to run a callback inside of it? What do you suggest?",
      "parentUuid": "ae18ce90_22e507c0",
      "revId": "5a1418fce151af92bf03d0e2904eb3912c1becaf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d5d5228_d395aa11",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 5
      },
      "lineNbr": 3003,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-07T16:06:08Z",
      "side": 1,
      "message": "What if you have a system named \"hypervisor\".  Wont\u0027 this conflict?  I suspect this needs to stay under the option flag.",
      "revId": "5a1418fce151af92bf03d0e2904eb3912c1becaf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "611f9041_774ac4a2",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 5
      },
      "lineNbr": 3128,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-07T16:06:08Z",
      "side": 1,
      "message": "I\u0027m assuming this is basically doing if (computerSystemIndex \u003e 0) ?",
      "range": {
        "startLine": 3128,
        "startChar": 12,
        "endLine": 3128,
        "endChar": 29
      },
      "revId": "5a1418fce151af92bf03d0e2904eb3912c1becaf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98e5f166_032df8b8",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 5
      },
      "lineNbr": 3170,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-07T16:06:08Z",
      "side": 1,
      "message": "Why are we using std::move on a function pointer?",
      "range": {
        "startLine": 3170,
        "startChar": 12,
        "endLine": 3170,
        "endChar": 21
      },
      "revId": "5a1418fce151af92bf03d0e2904eb3912c1becaf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9eefff6_64c794c6",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 5
      },
      "lineNbr": 3372,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-07T16:16:11Z",
      "side": 1,
      "message": "I don\u0027t see a return statement here, which would cause both handlers to run, and provide overlapping data.  Did this not show in the testing?",
      "revId": "5a1418fce151af92bf03d0e2904eb3912c1becaf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00955d85_bcf7af24",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 5
      },
      "lineNbr": 3525,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-08T01:02:32Z",
      "side": 1,
      "message": "Same here.  BMCWEB_REDFISH_SYSTEM_URI_NAME isn\u0027t a substitute for BMCWEB_EXPERIMENTAL_REDFISH_MULTI_COMPUTER_SYSTEM",
      "revId": "5a1418fce151af92bf03d0e2904eb3912c1becaf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7675907b_9015ca5f",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 5
      },
      "lineNbr": 3669,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-07T16:06:08Z",
      "side": 1,
      "message": "?",
      "range": {
        "startLine": 3669,
        "startChar": 0,
        "endLine": 3669,
        "endChar": 47
      },
      "revId": "5a1418fce151af92bf03d0e2904eb3912c1becaf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}