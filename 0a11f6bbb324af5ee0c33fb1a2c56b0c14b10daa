{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7c89b6fb_7a89d443",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2022-11-04T15:06:36Z",
      "side": 1,
      "message": "Good summary of what you got in place!",
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf413563_96c3db99",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-04T16:49:30Z",
      "side": 1,
      "message": "LGTM.  Only some VERY minor nits.",
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2650aa3e_ae43f6ee",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-11-04T19:20:50Z",
      "side": 1,
      "message": "Thanks for writing this. I am good with this, some minor things but I think this is a great start ",
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d729af33_b501e24e",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-04T16:49:30Z",
      "side": 1,
      "message": "We need to get this feature more fleshed out, and get this turned on by default.",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 63
      },
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "41537cf5_7cefd88e",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-11-04T17:12:11Z",
      "side": 1,
      "message": "Off the top of my head these are the remaining features:\n1. Aggregate all top level resource collections\n2. Add links to satellite only collections in responses from service root and other appropriate locations\n3. Generate aggregation prefix from uuid\n4. Contains/ContainedBy relationship between local and aggregated Chassis resource\n5. Aggregate more than one satellite\n6. Add Authentication (login with satellites)\n7. Support HTTPS connection to satellite.\n\n\nThere are already various levels of WIP patches for a number of those features.  How many are needed to turn it on by default?  My guess is the first 3, maybe #5 as well.",
      "parentUuid": "d729af33_b501e24e",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 63
      },
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "684ac417_ee976751",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-11-04T19:20:50Z",
      "side": 1,
      "message": "I think 7 as well because otherwise you have to have a bmcweb with insecure options (we don\u0027t recommend insecure options for production) as the Satellite. Without that, it still feels like a non-production / wip option",
      "parentUuid": "41537cf5_7cefd88e",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 63
      },
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9dfabe7d_40eeb5aa",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-11-09T20:25:22Z",
      "side": 1,
      "message": "Sounds good.  I can add a section that mentions these planned/missing features",
      "parentUuid": "684ac417_ee976751",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 63
      },
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce56e467_c1b8b677",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 13,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-11-11T20:26:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9dfabe7d_40eeb5aa",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 13,
        "endChar": 63
      },
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6a1a4b2_62ce3829",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-04T16:49:30Z",
      "side": 1,
      "message": "DO we need to mention $metadata?",
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "656e645a_0acae698",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-11-04T17:12:11Z",
      "side": 1,
      "message": "I\u0027m open to it, but in what way do you mean?",
      "parentUuid": "c6a1a4b2_62ce3829",
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb9df5ce_158734fb",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2022-11-04T22:11:48Z",
      "side": 1,
      "message": "I think this topic from rde forum is probably similar to this concern?   \nhttps://redfishforum.com/thread/314/metadata-document-rde-devices",
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2bf5fef_acbe61ec",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-11-09T20:25:22Z",
      "side": 1,
      "message": "Yeah that touches on the part about versions differing between the aggregator and satellites.  Outside of that though there is still the issue of how large some of the JsonSchema files are.  In testing there were singular ones which were larger than the internal HTTP client\u0027s response buffer could handle.  It seems reasonable to expect the operator of the aggregating BMC to keep the BMC up to date so that the satellite BMCs are not using newer schema versions.",
      "parentUuid": "fb9df5ce_158734fb",
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34159194_b3129d5b",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-10T01:31:54Z",
      "side": 1,
      "message": "#metadata is the CSDL equivalent of JsonSchemas, and arguably more used than JsonShemas, so it should probably be mentioned in how we handle it special (although I don\u0027t think we handle it specially today).",
      "parentUuid": "656e645a_0acae698",
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b74332fb_7f667ba7",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-11-11T18:33:14Z",
      "side": 1,
      "message": "Aggregation currently doesn\u0027t do anything special for $metadata.  I\u0027m not familiar with using $metadata so I\u0027m using this thread for reference https://redfishforum.com/thread/550/metadata-link-header.\n\nIt doesn\u0027t seem like we treat /redfish/v1/$metadata as an actual endpoint.  Instead requests to there get treated as requests to /redfish/v1.  I don\u0027t know if it matters that I\u0027m just sending normal curl requests.\n\nIf $metadata is a collection like /redfish/v1/JsonSchemas is then we\u0027d aggregate it like any other collection since we don\u0027t have a specific blocker like we do for /redfish/v1/JsonSchemas.\n\nEven then, \"@odata.type\" doesn\u0027t include a full path so aggregation won\u0027t touch that field as part of aggregation.  It will look like aggregated resources are using the metadata definition on the aggregating bmc.\n\nAlso, aggregation doesn\u0027t touch header fields when we receive valid responses from satellites.  We only copy over the JSON payload so if the \"Link\" header exists it gets dropped.  That might not be much of an issue right now because currently there are not too many endpoints that bmcweb adds a \"Link\" header for.  Maybe that needs to change in the future?\n\nIf any of these information sounds relevant then I can add it to the write-up.",
      "parentUuid": "34159194_b3129d5b",
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e322f58_9ceba2b1",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-11T19:18:57Z",
      "side": 1,
      "message": "\u003e Aggregation currently doesn\u0027t do anything special for $metadata.\n\nRight..... this needs some amount of mention.\n\n\u003e  I\u0027m not familiar with using $metadata so I\u0027m using this thread for reference https://redfishforum.com/thread/550/metadata-link-header.\n\u003e \n\u003e It doesn\u0027t seem like we treat /redfish/v1/$metadata as an actual endpoint.  \n\nI\u0027m not sure where you got this idea, but we do.\nhttps://github.com/openbmc/bmcweb/blob/master/static/redfish/v1/%24metadata/index.xml\n\n\n\u003e Instead requests to there get treated as requests to /redfish/v1.\n\nNo.... they don\u0027t.  You probably forgot to escape the $ in your bash curl request (if I had to guess, because I\u0027ve done the same thing before).\n\n\u003e  I don\u0027t know if it matters that I\u0027m just sending normal curl requests.\n\u003e \n\u003e If $metadata is a collection like /redfish/v1/JsonSchemas is then we\u0027d aggregate it like any other collection since we don\u0027t have a specific blocker like we do for /redfish/v1/JsonSchemas.\n\nit\u0027s not a \"normal\" collection.  It\u0027s the schema collection, which has a lot of weird stuff.\n\n\u003e \n\u003e Even then, \"@odata.type\" doesn\u0027t include a full path so aggregation won\u0027t touch that field as part of aggregation.\n\nI\u0027m not sure what this statement has to do with anything?  The path is enough to look up the schema via $metadata, which is what tools like redfish-service-validator does.\n\n\u003e  It will look like aggregated resources are using the metadata definition on the aggregating bmc.\n\u003e \n\u003e Also, aggregation doesn\u0027t touch header fields when we receive valid responses from satellites.\n\nAs a side comment, I\u0027m not sure this policy is going to be able to survive very long.  I very much suspect that when we start to think through query param forwarding and cache forwarding, this is going to be important.\n\n\u003e  We only copy over the JSON payload so if the \"Link\" header exists it gets dropped.  That might not be much of an issue right now because currently there are not too many endpoints that bmcweb adds a \"Link\" header for.  Maybe that needs to change in the future?\n\u003e \n\u003e If any of these information sounds relevant then I can add it to the write-up.",
      "parentUuid": "b74332fb_7f667ba7",
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3da42f05_00603bb1",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-11-11T20:26:11Z",
      "side": 1,
      "message": "\u003e \u003e Aggregation currently doesn\u0027t do anything special for $metadata.\n\u003e Right..... this needs some amount of mention.\nAlright I\u0027ll add a mention of that to the doc\n\n\n\u003e \u003e I\u0027m not familiar with using $metadata so I\u0027m using this thread for reference https://redfishforum.com/thread/550/metadata-link-header.\n\u003e \u003e It doesn\u0027t seem like we treat /redfish/v1/$metadata as an actual endpoint.\n\u003e I\u0027m not sure where you got this idea, but we do.\n\u003e https://github.com/openbmc/bmcweb/blob/master/static/redfish/v1/%24metadata/index.xml\n\u003e \u003e \n\u003e \u003e Instead requests to there get treated as requests to /redfish/v1.\n\u003e No.... they don\u0027t.  You probably forgot to escape the $ in your bash curl request (if I had to guess, because I\u0027ve done the same thing before).\nYup I forgot to escape it and that\u0027s why it looked like we weren\u0027t handling it.\n\n\n\u003e it\u0027s not a \"normal\" collection.  It\u0027s the schema collection, which has a lot of weird stuff.\nI can\u0027t tell where exactly the hook is for handling /redfish/v1/$metadata, but it does not hit our query parameters handling and thus it doesn\u0027t reach the aggregation hook.  If it was somehow to reach aggregation handling then it would be handled like a \"normal\" collection such that the response from the satellite would be ignored because it\u0027s not of type application/json.  It would\u0027ve also been ignored because it doesn\u0027t contain the expected \"Members\" array.\n\n\n\u003e \u003e Even then, \"@odata.type\" doesn\u0027t include a full path so aggregation won\u0027t touch that field as part of aggregation.\n\u003e I\u0027m not sure what this statement has to do with anything?  The path is enough to look up the schema via $metadata, which is what tools like redfish-service-validator does.\nI\u0027m saying that when querying a satellite resource, there won\u0027t be anything added to \"@odata.type\" to indicate that the info is supposed to come from the $metadata of a satellite BMC.  Whatever entity can use the value of \"@odata.type\" to lookup the schema, but the result will be from the aggregating BMC instead of the satellite.\n\n\n\u003e As a side comment, I\u0027m not sure this policy is going to be able to survive very long.  I very much suspect that when we start to think through query param forwarding and cache forwarding, this is going to be important.\nYeah I\u0027m getting that feeling as well.  I\u0027ve maybe bumped up against this issue already in forwarding responses from satellite BMCs.  For valid response codes we only copy over the JSON response and use the aggregator\u0027s headers.  For invalid codes we copy over the entire message.  That\u0027s a potential issue since it includes the satellite\u0027s headers.",
      "parentUuid": "8e322f58_9ceba2b1",
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e018062_5e202cbc",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-11T21:47:23Z",
      "side": 1,
      "message": "\u003e \u003e \u003e Aggregation currently doesn\u0027t do anything special for $metadata.\n\u003e \u003e Right..... this needs some amount of mention.\n\u003e Alright I\u0027ll add a mention of that to the doc\n\u003e \n\u003e \n\u003e \u003e \u003e I\u0027m not familiar with using $metadata so I\u0027m using this thread for reference https://redfishforum.com/thread/550/metadata-link-header.\n\u003e \u003e \u003e It doesn\u0027t seem like we treat /redfish/v1/$metadata as an actual endpoint.\n\u003e \u003e I\u0027m not sure where you got this idea, but we do.\n\u003e \u003e https://github.com/openbmc/bmcweb/blob/master/static/redfish/v1/%24metadata/index.xml\n\u003e \u003e \u003e \n\u003e \u003e \u003e Instead requests to there get treated as requests to /redfish/v1.\n\u003e \u003e No.... they don\u0027t.  You probably forgot to escape the $ in your bash curl request (if I had to guess, because I\u0027ve done the same thing before).\n\u003e Yup I forgot to escape it and that\u0027s why it looked like we weren\u0027t handling it.\n\u003e \n\u003e \n\u003e \u003e it\u0027s not a \"normal\" collection.  It\u0027s the schema collection, which has a lot of weird stuff.\n\u003e I can\u0027t tell where exactly the hook is for handling /redfish/v1/$metadata, but it does not hit our query parameters handling and thus it doesn\u0027t reach the aggregation hook.\n\ncheck webassets.hpp.  Today it\u0027s a fixed static file, so it just uses that handling.  As part of aggregation, that will probably have to move to code, rather than generating it at compile time.\n\n\u003e  If it was somehow to reach aggregation handling then it would be handled like a \"normal\" collection such that the response from the satellite would be ignored because it\u0027s not of type application/json.  It would\u0027ve also been ignored because it doesn\u0027t contain the expected \"Members\" array.\n\nIt\u0027s also XML..... so yeah..... it\u0027s not going to be able to be parsed as json.\n\n\u003e \n\u003e \n\u003e \u003e \u003e Even then, \"@odata.type\" doesn\u0027t include a full path so aggregation won\u0027t touch that field as part of aggregation.\n\u003e \u003e I\u0027m not sure what this statement has to do with anything?  The path is enough to look up the schema via $metadata, which is what tools like redfish-service-validator does.\n\u003e I\u0027m saying that when querying a satellite resource, there won\u0027t be anything added to \"@odata.type\" to indicate that the info is supposed to come from the $metadata of a satellite BMC.\n\nCorrect, because as far as the caller is concerned, there is no \"satellite $metadata\".  It all gets aggregated.\n\n\u003e  Whatever entity can use the value of \"@odata.type\" to lookup the schema, but the result will be from the aggregating BMC instead of the satellite.\n\nRight, but we need some way for the aggregating bmc to aggregate the schema files.  We punted on this originally, but we should probably document that assumption here, which is where my original comment was geared at.\n\n\u003e \n\u003e \n\u003e \u003e As a side comment, I\u0027m not sure this policy is going to be able to survive very long.  I very much suspect that when we start to think through query param forwarding and cache forwarding, this is going to be important.\n\u003e Yeah I\u0027m getting that feeling as well.  I\u0027ve maybe bumped up against this issue already in forwarding responses from satellite BMCs.  For valid response codes we only copy over the JSON response and use the aggregator\u0027s headers.  For invalid codes we copy over the entire message.  That\u0027s a potential issue since it includes the satellite\u0027s headers.",
      "parentUuid": "3da42f05_00603bb1",
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4799fc82_3bd144f8",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-11-22T17:20:25Z",
      "side": 1,
      "message": "I\u0027ve added an additional section which mentions that aggregation currently makes the same assumptions around $metadata as it does for /redfish/v1/$metadata.  Please reopen this thread if you think additional information should be included",
      "parentUuid": "b2bf5fef_acbe61ec",
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "816b2494_5cbcfbf6",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-11-22T17:20:25Z",
      "side": 1,
      "message": "\u003e \u003e  Whatever entity can use the value of \"@odata.type\" to lookup the schema, but the result will be from the aggregating BMC instead of the satellite.\n\u003e Right, but we need some way for the aggregating bmc to aggregate the schema files.  We punted on this originally, but we should probably document that assumption here, which is where my original comment was geared at.\n\nAlright I think I understand now.  I\u0027ve added an additional clarification for $metadata to the doc.  It\u0027s immediately after this portion on /redfish/v1/JsonSchemas.\n\nI\u0027m going to mark this resolved, but please let me know if you think I should include additional information like the discussion from the link provided in Milton\u0027s comment.  I\u0027m assuming we\u0027ll ultimately want to do something rather than make assumptions.  My preference is to not include talk of that until there\u0027s something more concrete, kinda like how there is list of specific features that must be implemented before we can turn on aggregation by default.",
      "parentUuid": "9e018062_5e202cbc",
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa2e6936_40336506",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 91,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-11-04T19:20:50Z",
      "side": 1,
      "message": "responses",
      "range": {
        "startLine": 91,
        "startChar": 4,
        "endLine": 91,
        "endChar": 13
      },
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82a35cf1_ad28746b",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 91,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-11-09T21:29:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa2e6936_40336506",
      "range": {
        "startLine": 91,
        "startChar": 4,
        "endLine": 91,
        "endChar": 13
      },
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70b35bf8_2764e195",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-04T16:49:30Z",
      "side": 1,
      "message": "Nit, maybe just omit this?  This command itself isn\u0027t going to work on any bmc.",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 104,
        "endChar": 45
      },
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ae57985_bccf743a",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-11-04T17:12:11Z",
      "side": 1,
      "message": "The terminal command or the entire example?  I also do the same thing in the later example.",
      "parentUuid": "70b35bf8_2764e195",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 104,
        "endChar": 45
      },
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc9f3395_7c545b2b",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-11-04T19:20:50Z",
      "side": 1,
      "message": "maybe do \ncurl -k -H \"X-Auth-Token: $token\" https://${bmc}/redfish/v1/Systems \nlike we do in https://github.com/openbmc/docs/blob/master/REDFISH-cheatsheet.md or yeah just omit it",
      "parentUuid": "7ae57985_bccf743a",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 104,
        "endChar": 45
      },
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbb1deac_40d4a76b",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-11-09T20:25:22Z",
      "side": 1,
      "message": "I want to include an example of how a collection looks so I\u0027ll use Gunnar\u0027s first suggestion",
      "parentUuid": "fc9f3395_7c545b2b",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 104,
        "endChar": 45
      },
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17de2a5c_f6d8c117",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-11-09T21:29:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cbb1deac_40d4a76b",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 104,
        "endChar": 45
      },
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96fce9fa_7d368094",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-11-04T19:20:50Z",
      "side": 1,
      "message": "same comment here",
      "range": {
        "startLine": 134,
        "startChar": 17,
        "endLine": 134,
        "endChar": 26
      },
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc1b1309_1b7cbf78",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-11-09T21:29:30Z",
      "side": 1,
      "message": "I used Gunnar\u0027s example like I did for the above comment",
      "parentUuid": "96fce9fa_7d368094",
      "range": {
        "startLine": 134,
        "startChar": 17,
        "endLine": 134,
        "endChar": 26
      },
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd0b5b92_ad8e6894",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-11-04T19:20:50Z",
      "side": 1,
      "message": "response",
      "range": {
        "startLine": 148,
        "startChar": 42,
        "endLine": 148,
        "endChar": 50
      },
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4808cb4e_34e6a0ce",
        "filename": "AGGREGATION.md",
        "patchSetId": 2
      },
      "lineNbr": 148,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-11-09T21:29:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bd0b5b92_ad8e6894",
      "range": {
        "startLine": 148,
        "startChar": 42,
        "endLine": 148,
        "endChar": 50
      },
      "revId": "0a11f6bbb324af5ee0c33fb1a2c56b0c14b10daa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}