{
  "comments": [
    {
      "key": {
        "uuid": "3e476369_1cc26f6a",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 32
      },
      "lineNbr": 38,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-01T15:46:57Z",
      "side": 1,
      "message": "This doesn\u0027t work, as it\u0027s possible for it to hunt past the value.",
      "range": {
        "startLine": 38,
        "startChar": 24,
        "endLine": 38,
        "endChar": 31
      },
      "revId": "1f81f4f19316632206f3786cd43e46eba6e19e8c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "848324d5_ae151504",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 32
      },
      "lineNbr": 38,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-03T15:21:34Z",
      "side": 1,
      "message": "Can you explain your point? Thanks in advance",
      "parentUuid": "3e476369_1cc26f6a",
      "range": {
        "startLine": 38,
        "startChar": 24,
        "endLine": 38,
        "endChar": 31
      },
      "revId": "1f81f4f19316632206f3786cd43e46eba6e19e8c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f6b1a81_d7efa089",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 32
      },
      "lineNbr": 38,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-04T16:16:46Z",
      "side": 1,
      "message": "Something like \"1234foobarD\", with a postfix of \u0027D\u0027 will cause this to hunt past the value, then fail silently at the stof when it hits the f.  you\u0027ve swapped for from_chars now, so I think you\u0027re in good shape now.",
      "parentUuid": "848324d5_ae151504",
      "range": {
        "startLine": 38,
        "startChar": 24,
        "endLine": 38,
        "endChar": 31
      },
      "revId": "1f81f4f19316632206f3786cd43e46eba6e19e8c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbd210ad_4e3aee99",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 32
      },
      "lineNbr": 48,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-01T15:46:57Z",
      "side": 1,
      "message": "See comment about avoiding floating point.  Just pull this out using integer values to be consistent and remove this branch.",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 48,
        "endChar": 56
      },
      "revId": "1f81f4f19316632206f3786cd43e46eba6e19e8c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a0d259f_c9465202",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 32
      },
      "lineNbr": 48,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-03T15:21:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cbd210ad_4e3aee99",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 48,
        "endChar": 56
      },
      "revId": "1f81f4f19316632206f3786cd43e46eba6e19e8c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ea3d8be_81d4b42a",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 32
      },
      "lineNbr": 55,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-01T15:46:57Z",
      "side": 1,
      "message": "Don\u0027t ignore your error codes.  It\u0027s against the coding standard.\n\nAlso, you need to set the fmt argument.  By default it supports scientific notation as well.\n\nAlso, if you check the return code, I think you can do this in a single pass by reading using from_chars, then check the index it finished on, and verify that index is equal to the postfix.",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 59
      },
      "revId": "1f81f4f19316632206f3786cd43e46eba6e19e8c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c546abe_446977fa",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 32
      },
      "lineNbr": 55,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-03T15:21:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ea3d8be_81d4b42a",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 59
      },
      "revId": "1f81f4f19316632206f3786cd43e46eba6e19e8c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac2c964a_9b59afe3",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 32
      },
      "lineNbr": 65,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-01T15:46:57Z",
      "side": 1,
      "message": "fromDurationString would be a better name.  Format makes it sound like this is a format string.",
      "range": {
        "startLine": 65,
        "startChar": 24,
        "endLine": 65,
        "endChar": 30
      },
      "revId": "1f81f4f19316632206f3786cd43e46eba6e19e8c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "285bc6ef_5ca72258",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 32
      },
      "lineNbr": 65,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-01T15:46:57Z",
      "side": 1,
      "message": "Change return type to the more modern std::chrono::system_clock::time_point",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 65,
        "endChar": 11
      },
      "revId": "1f81f4f19316632206f3786cd43e46eba6e19e8c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40342863_43042f01",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 32
      },
      "lineNbr": 65,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-03T15:21:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ac2c964a_9b59afe3",
      "range": {
        "startLine": 65,
        "startChar": 24,
        "endLine": 65,
        "endChar": 30
      },
      "revId": "1f81f4f19316632206f3786cd43e46eba6e19e8c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41611ca4_0878afe7",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 32
      },
      "lineNbr": 65,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-03T15:21:34Z",
      "side": 1,
      "message": "Changed it to std::chrono::milliseconds, because value is not taken from clock.",
      "parentUuid": "285bc6ef_5ca72258",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 65,
        "endChar": 11
      },
      "revId": "1f81f4f19316632206f3786cd43e46eba6e19e8c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a75f8291_f9d0a05c",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 32
      },
      "lineNbr": 65,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-04T15:53:25Z",
      "side": 1,
      "message": "that works.",
      "parentUuid": "41611ca4_0878afe7",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 65,
        "endChar": 11
      },
      "revId": "1f81f4f19316632206f3786cd43e46eba6e19e8c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dab067df_aeb05e6c",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 32
      },
      "lineNbr": 72,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-01T15:46:57Z",
      "side": 1,
      "message": "See previous comment, destructing the string as you parse it is inefficient.  use indexes or use a string_view (which has more efficient substr implementations).",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 72,
        "endChar": 27
      },
      "revId": "1f81f4f19316632206f3786cd43e46eba6e19e8c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dfa0676_69a47df1",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 32
      },
      "lineNbr": 72,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-03T15:21:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dab067df_aeb05e6c",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 72,
        "endChar": 27
      },
      "revId": "1f81f4f19316632206f3786cd43e46eba6e19e8c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3cda007_10c12193",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 32
      },
      "lineNbr": 75,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-01T15:46:57Z",
      "side": 1,
      "message": "If you invert this check, then put lines 80-83 in this conditional, it deduplicates the return line.",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 75,
        "endChar": 43
      },
      "revId": "1f81f4f19316632206f3786cd43e46eba6e19e8c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07ba76e2_ae09b316",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 32
      },
      "lineNbr": 75,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-09-04T14:23:01Z",
      "side": 1,
      "message": "Skip, now code is more complex and adding more embedded statement will make it less readable in my opinion",
      "parentUuid": "c3cda007_10c12193",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 75,
        "endChar": 43
      },
      "revId": "1f81f4f19316632206f3786cd43e46eba6e19e8c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cea17a95_8b23b49a",
        "filename": "redfish-core/include/utils/time_utils.hpp",
        "patchSetId": 32
      },
      "lineNbr": 75,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-09-04T15:53:25Z",
      "side": 1,
      "message": "To be clear, I\u0027m asking you to write this as:\n\nif (!fmt.empty() \u0026\u0026 *fmt.begin() !\u003d \u0027T\u0027)\n{\n\tfmt.erase(fmt.begin());\n\tout +\u003d details::fromDurationFormatItem\u003cstd::chrono::hours\u003e(fmt, \u0027H\u0027);\n\tout +\u003d details::fromDurationFormatItem\u003cstd::chrono::minutes\u003e(fmt, \u0027M\u0027);\n\tout +\u003d details::fromDurationFormatItem\u003cstd::chrono::milliseconds\u003e(fmt, \u0027S\u0027);\n}\n\nreturn static_cast\u003cstd::time_t\u003e(out.count());\n\nSame number of embedded statements, and less complex.  With that said, if you want to leave it the old way, I\u0027m not too worried about it.",
      "parentUuid": "07ba76e2_ae09b316",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 75,
        "endChar": 43
      },
      "revId": "1f81f4f19316632206f3786cd43e46eba6e19e8c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}