{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e156f530_ee0546a7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 67,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-10-28T16:09:50Z",
      "side": 1,
      "message": "And you verified the permissions didn\u0027t change? E.g. you verified ReadOnly user can GET /redfish/v1/Chassis/\u003cstr\u003e/ but not PATCH/POST?\n\nYou verified redfish::privileges::EntityTag::tagChassis is the correct privilege in both: \n\n    REDFISH_ROUTE(app, \"/redfish/v1/Chassis/\u003cstr\u003e/\",\n                  redfish::privileges::EntityTag::tagChassis,\n                  boost::beast::http::verb::get)\n    (std::bind_front(handleChassisGet, std::ref(app)));\n    REDFISH_ROUTE(app, \"/redfish/v1/Chassis/\u003cstr\u003e/\",\n                  redfish::privileges::EntityTag::tagChassis,\n                  boost::beast::http::verb::patch)\n    (std::bind_front(handleChassisPatch, std::ref(app)));",
      "revId": "38c573867afb880ca9c72920416879d8c3c84088",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab67fe41_91881e66",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 67,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-10-28T16:28:06Z",
      "side": 1,
      "message": "I have verified NoAccess user is rejected in all resources that require a privilege. I can try this ReadOnly user.\n\nWill do",
      "parentUuid": "e156f530_ee0546a7",
      "revId": "38c573867afb880ca9c72920416879d8c3c84088",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60ef5247_9af8b356",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 67,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-10-31T15:41:11Z",
      "side": 1,
      "message": "+1 to the overall theme of \"this needs a much larger tested statement\".\n\nWe\u0027re messing with core privilege level things here that have significant potential to cause a CVE;  The level of testing expected here is going to be much higher.",
      "parentUuid": "ab67fe41_91881e66",
      "revId": "38c573867afb880ca9c72920416879d8c3c84088",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2375ecb9_71da0c8b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 68,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-10-31T15:41:11Z",
      "side": 1,
      "message": "Binary size testing?\n\nStartup time testing?",
      "revId": "38c573867afb880ca9c72920416879d8c3c84088",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7d3f35e_932bf32f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 68,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-10-31T16:18:55Z",
      "side": 1,
      "message": "Binary size testing: please take another look at commit message. Search binary size.\n\nStartup time testing: I can add. Last time I test it there was no significant difference by looking at systemd timestamps. Do you have other options for testing this?",
      "parentUuid": "2375ecb9_71da0c8b",
      "revId": "38c573867afb880ca9c72920416879d8c3c84088",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7eeb48a_f7567227",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 68,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-10-31T16:21:44Z",
      "side": 1,
      "message": "\u003e Binary size testing: please take another look at commit message. Search binary size.\n\nACK.  I see this now.\n\n\u003e \n\u003e Startup time testing: I can add. Last time I test it there was no significant difference by looking at systemd timestamps. Do you have other options for testing this?\n\n\nWhen we did the same analysis years ago we did it with print statements, but if you can think of anything better, feel free to propose it.",
      "parentUuid": "a7d3f35e_932bf32f",
      "revId": "38c573867afb880ca9c72920416879d8c3c84088",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90805556_d30e405c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-10-28T16:03:21Z",
      "side": 1,
      "message": "Can this get broken up ? +2335 -2914  is a huge commit ",
      "revId": "38c573867afb880ca9c72920416879d8c3c84088",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac6e3862_3d4a8cdd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-10-28T16:24:45Z",
      "side": 1,
      "message": "I have split the unit test to the child.\n\nTo help view, I have added this note in commit message:\n\n```\nPlease note: a large number of lines changed here is by the script,\nspecifically, |redfish-core/include/registries/privilege_registry.hpp|.\nThe majority of the change is in |http/routing.hpp|,\n|redfish-core/include/privileges.hpp|, and |http/http_verbs.hpp|.\n```\n\nIf you take out tree wide macro change, and the script generated |privilege_registry|. There is not a lot left. And I don\u0027t find an easy way to split this change further.",
      "parentUuid": "90805556_d30e405c",
      "revId": "38c573867afb880ca9c72920416879d8c3c84088",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "13c2d90a_6237d93b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-10-31T15:41:11Z",
      "side": 1,
      "message": "This commit still needs broken down.  As written it is too large to review, with that said, I\u0027ve gone through and reviewed some of it to get a jump start on this.",
      "revId": "38c573867afb880ca9c72920416879d8c3c84088",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22001792_900200c5",
        "filename": "http/app.hpp",
        "patchSetId": 8
      },
      "lineNbr": 33,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-10-31T15:41:11Z",
      "side": 1,
      "message": "Considering that Redfish defines every type by URL, should we be avoiding putting entityTag into REDFISH_ROUTE.  For example\n\nREDFISH_ROUTE(\"/redfish/v1\", EntityTag::tagSessionCollection)\n\nWould be incorrect.",
      "range": {
        "startLine": 33,
        "startChar": 13,
        "endLine": 33,
        "endChar": 22
      },
      "revId": "38c573867afb880ca9c72920416879d8c3c84088",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed2c4507_f81ce867",
        "filename": "http/app.hpp",
        "patchSetId": 8
      },
      "lineNbr": 33,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-10-31T16:18:55Z",
      "side": 1,
      "message": "Today, we already have this issue. It\u0027s not that this commit introduces it.\n\nI don\u0027t want to handle the complexity of inferring EntityTag from URL. This is called out in both design and this commit message. Do you have an idea about this inferring? Does it make sense to block this commit because of an existing issue?",
      "parentUuid": "22001792_900200c5",
      "range": {
        "startLine": 33,
        "startChar": 13,
        "endLine": 33,
        "endChar": 22
      },
      "revId": "38c573867afb880ca9c72920416879d8c3c84088",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94ca464a_11cd5eb5",
        "filename": "http/app.hpp",
        "patchSetId": 8
      },
      "lineNbr": 89,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-10-31T15:41:11Z",
      "side": 1,
      "message": "The core routing layers should avoid having to know anything about Redfish.  They are intended to be reusable for non-redfish things.",
      "range": {
        "startLine": 89,
        "startChar": 36,
        "endLine": 89,
        "endChar": 45
      },
      "revId": "38c573867afb880ca9c72920416879d8c3c84088",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77ccfc42_1b10c565",
        "filename": "http/http_verbs.hpp",
        "patchSetId": 8
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-10-31T15:41:11Z",
      "side": 1,
      "message": "Please put code moves in their own commit.  Also, please help to review the other commits that predate this making changes to the http verbs structures.",
      "revId": "38c573867afb880ca9c72920416879d8c3c84088",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae2f28f4_245a2bc8",
        "filename": "http/routing.hpp",
        "patchSetId": 8
      },
      "lineNbr": 40,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-10-31T15:41:11Z",
      "side": 1,
      "message": "Same as above.  The core http layers should have no knowledge of Redfish.",
      "range": {
        "startLine": 40,
        "startChar": 22,
        "endLine": 40,
        "endChar": 29
      },
      "revId": "38c573867afb880ca9c72920416879d8c3c84088",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e684291e_d79b501a",
        "filename": "redfish-core/include/registries/privilege_registry.hpp",
        "patchSetId": 8
      },
      "lineNbr": 22,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-10-31T15:41:11Z",
      "side": 1,
      "message": "This is the default, and considering we\u0027re using this as an index, shouldn\u0027t this be size_t?",
      "range": {
        "startLine": 22,
        "startChar": 23,
        "endLine": 22,
        "endChar": 26
      },
      "revId": "38c573867afb880ca9c72920416879d8c3c84088",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba933006_53907b12",
        "filename": "redfish-core/include/registries/privilege_registry.hpp",
        "patchSetId": 8
      },
      "lineNbr": 417,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-10-31T15:41:11Z",
      "side": 1,
      "message": "Please make another attempt at these data structures below.  Just because this code is generated does not meant that it\u0027s acceptable for it to be unreadable, or not follow the coding standard.  This is a security data structure, it needs to be able to be audited easily.\n\nThe previous code stored essentially the same information.",
      "range": {
        "startLine": 417,
        "startChar": 0,
        "endLine": 417,
        "endChar": 64
      },
      "revId": "38c573867afb880ca9c72920416879d8c3c84088",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c2183f0_b83fb978",
        "filename": "redfish-core/include/registries/privilege_registry.hpp",
        "patchSetId": 8
      },
      "lineNbr": 417,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-10-31T16:18:55Z",
      "side": 1,
      "message": "Please take a look at https://gerrit.openbmc.org/c/openbmc/bmcweb/+/58192/6\n\nStoring bitmasks is called out in the design doc. The unit test guarantee any improper modification of this array results in test failures.\n\nThis is the most efficient way that I could think of. There is no easy way to store a two dimensional costexpr array.\n\nTo make these arrays readable, we can probably use a static map, if we accept it. \n\n\u003e The previous code stored essentially the same information.\n\nHow do you generate a PrivilegeRegistry from previous code?",
      "parentUuid": "ba933006_53907b12",
      "range": {
        "startLine": 417,
        "startChar": 0,
        "endLine": 417,
        "endChar": 64
      },
      "revId": "38c573867afb880ca9c72920416879d8c3c84088",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0dc2d0b9_8d51a2c3",
        "filename": "redfish-core/lib/hypervisor_system.hpp",
        "patchSetId": 8
      },
      "lineNbr": 3,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-10-31T15:41:11Z",
      "side": 1,
      "message": "Unclear what this has to do with this commit.",
      "range": {
        "startLine": 3,
        "startChar": 0,
        "endLine": 3,
        "endChar": 23
      },
      "revId": "38c573867afb880ca9c72920416879d8c3c84088",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf6b18d5_de970a78",
        "filename": "redfish-core/lib/hypervisor_system.hpp",
        "patchSetId": 8
      },
      "lineNbr": 3,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-10-31T16:07:29Z",
      "side": 1,
      "message": "I remember otherwise it doesn\u0027t compile. I can double check",
      "parentUuid": "0dc2d0b9_8d51a2c3",
      "range": {
        "startLine": 3,
        "startChar": 0,
        "endLine": 3,
        "endChar": 23
      },
      "revId": "38c573867afb880ca9c72920416879d8c3c84088",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10b7ea33_c2293f42",
        "filename": "redfish-core/lib/trigger.hpp",
        "patchSetId": 8
      },
      "lineNbr": 295,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-10-28T16:09:50Z",
      "side": 1,
      "message": "Why do we need EntityTag in each one?",
      "revId": "38c573867afb880ca9c72920416879d8c3c84088",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31c9b9af_0fe13094",
        "filename": "redfish-core/lib/trigger.hpp",
        "patchSetId": 8
      },
      "lineNbr": 295,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-10-28T16:27:06Z",
      "side": 1,
      "message": "It is explained in the commit message. It\u0027s non-trivial to infer the EntityTag from the URL. Given that URL and corresponding handler is decided at\ncompile time, adding an Entity in compile time doesn\u0027t introduce much\ntoil. Tags are implemented as enum, thus no much space increased.\n\nThis commit doesn\u0027t increase binary size but filled a big gap that existing authz code has",
      "parentUuid": "10b7ea33_c2293f42",
      "revId": "38c573867afb880ca9c72920416879d8c3c84088",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}