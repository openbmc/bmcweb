{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4e5e2dbb_f409ec36",
        "filename": "/COMMIT_MSG",
        "patchSetId": 24
      },
      "lineNbr": 28,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-06T17:06:18Z",
      "side": 1,
      "message": "Considering that this has impact against real hardware backends (as pointed out by the ManagedObjects thing), please test against a real system.\n\n\"mock system\" isn\u0027t a good enough definition.",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 21
      },
      "revId": "af16ac32432bf249549c799f9615f991051f9abe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60dc2e88_94390694",
        "filename": "/COMMIT_MSG",
        "patchSetId": 24
      },
      "lineNbr": 28,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-06T18:22:02Z",
      "side": 1,
      "message": "Apologize, I have tested on real hardware. It\u0027s already in the commit message. Please review the entire commit message.\n\nThis testing result on \"mock system\" is good since it doesn\u0027t have any potential secret messages like serial numbers.\n\nLet me know if this doesn\u0027t make sense.",
      "parentUuid": "4e5e2dbb_f409ec36",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 21
      },
      "revId": "af16ac32432bf249549c799f9615f991051f9abe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cfd29be7_5f500fc7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-06T05:31:56Z",
      "side": 1,
      "message": "I should\u0027ve realized this earlier, but have you verified all the various inventory systems implement ObjectManager?  I don\u0027t think they all do.  There\u0027s only 2 producers of sensors, which is why it can rely on ObjectManager.  There\u0027s lots of producers of Memory.",
      "revId": "af16ac32432bf249549c799f9615f991051f9abe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "085df82e_79141bd1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-06T18:00:24Z",
      "side": 1,
      "message": "As another meta comment, I\u0027d like to see us stabilize, secure, and get the existing expand stuff enabled by default ahead of trying to optimize it.  There are likely a number of things that we\u0027re missing that will be figured out when it gets turned on within the project, so I\u0027d like to avoid over optimizing where possible.\n\nConsidering that in upstream, no real platform can use this code, that is limiting the amount of test results we can get for this patchset.",
      "revId": "af16ac32432bf249549c799f9615f991051f9abe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6db45950_6865a71d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-06T18:25:16Z",
      "side": 1,
      "message": "Could you explain why \"expand\" is not stable or secure besides that we don\u0027t limit the expand level size?\n\n\u003e Considering that in upstream, no real platform can use this code, that is limiting the amount of test results we can get for this patchset.\n\nWhy? This commit changes the code path of individual DIMM as you suggested in previous comment. Most of the code will be used by others",
      "parentUuid": "085df82e_79141bd1",
      "revId": "af16ac32432bf249549c799f9615f991051f9abe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba801394_bb3ddce1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-06T18:49:32Z",
      "side": 1,
      "message": "I have verified `smbios-mdr`. What are the other producers? Adding ObjectManager is very trivial, right?",
      "parentUuid": "cfd29be7_5f500fc7",
      "revId": "af16ac32432bf249549c799f9615f991051f9abe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39142f8d_516d4476",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-06T18:59:30Z",
      "side": 1,
      "message": "Lets move the discussion to discord.\n\n\u003e Why?\n\nNo systems enable the expand option, so there\u0027s no way to run this on a real system in a release firmware.  Yes, I appreciate that you\u0027ve tested on one system, but given that we\u0027ve had issues with ObjectManager support in the past (We still have lots of problems with sensors even today), we need more testing than just one system.",
      "parentUuid": "6db45950_6865a71d",
      "revId": "af16ac32432bf249549c799f9615f991051f9abe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76a33f28_f0724458",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T22:12:28Z",
      "side": 1,
      "message": "I don\u0027t know them all off the top of my head.  We\u0027d have to go digging through the code.\n\nThis has been a problem for the sensor code you copied this pattern from already, which is why I\u0027m hesitant to add it here.",
      "parentUuid": "ba801394_bb3ddce1",
      "revId": "af16ac32432bf249549c799f9615f991051f9abe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "401ce52d_5e758daf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-07T23:33:08Z",
      "side": 1,
      "message": "Dig into what codes? Are they all in upstream?",
      "parentUuid": "76a33f28_f0724458",
      "revId": "af16ac32432bf249549c799f9615f991051f9abe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37f87ab9_0dac41da",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-08T04:00:10Z",
      "side": 1,
      "message": "Any dbus daemon that publishes an inventory that might include memory.  No, not all of them are upstream, and while we should do our best to not unnecessarily break peoples downstream (we don\u0027t like it when others do it to us) we can just publish the new interface requirements to phosphor-dbus-interfaces, and the downstream ones will need to adapt.",
      "parentUuid": "401ce52d_5e758daf",
      "revId": "af16ac32432bf249549c799f9615f991051f9abe",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}