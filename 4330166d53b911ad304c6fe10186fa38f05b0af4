{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a2e27c68_135890e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-29T21:18:33Z",
      "side": 1,
      "message": "Bunch of minor things, otherwise looks good.",
      "revId": "4330166d53b911ad304c6fe10186fa38f05b0af4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5728f10_e7ef8293",
        "filename": "redfish-core/include/utils/sensor_utils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-29T21:18:33Z",
      "side": 1,
      "message": "Can we just inline these into the two functions?  Having them in the global namespace means that people might use them.",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 29,
        "endChar": 61
      },
      "revId": "4330166d53b911ad304c6fe10186fa38f05b0af4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6b6487a_563aa145",
        "filename": "redfish-core/include/utils/sensor_utils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2024-08-30T10:32:12Z",
      "side": 1,
      "message": "Since there are two functions I\u0027d rather not have them in two places. What about if I put them into an \"internal\" namespace instead?\n\nThe compiler wouldn\u0027t prevent them being used, but the name would be a red-flag on them being used outside.",
      "parentUuid": "a5728f10_e7ef8293",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 29,
        "endChar": 61
      },
      "revId": "4330166d53b911ad304c6fe10186fa38f05b0af4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "568c739e_53959346",
        "filename": "redfish-core/include/utils/sensor_utils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-02T21:48:45Z",
      "side": 1,
      "message": "\u003e Since there are two functions I\u0027d rather not have them in two places.\n\nI would prefer them in two places.\n\nOut of trying to understand your previous comment, why is it a problem if they\u0027re in two places?\n\n\u003e What about if I put them into an \"internal\" namespace instead?\n\nNo thank you, please just inline them.  It makes the code more clear, and these fixed strings haven\u0027t changed since they were written 6 years ago, and won\u0027t change in the future unless there\u0027s a Redfish 2.0.  Lets optimize for readability here.\n\n\u003e \n\u003e The compiler wouldn\u0027t prevent them being used, but the name would be a red-flag on them being used outside.\n\nAgreed, internal is certainly better.  IMO the ideal is just to not expose them externally at all and put them in the two scopes where they\u0027re used.",
      "parentUuid": "a6b6487a_563aa145",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 29,
        "endChar": 61
      },
      "revId": "4330166d53b911ad304c6fe10186fa38f05b0af4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09e42ae6_ade7d7fb",
        "filename": "redfish-core/include/utils/sensor_utils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2024-09-04T20:46:59Z",
      "side": 1,
      "message": "My hesitation is just lessons learned from other code bases. I\u0027ve seen similar duplication of code where places were missed when things changed causing odd bugs. I generally like to define things in a single shared header file that gets used by all users.\n\nI see your point that in this case the duplication isn\u0027t really an issue. I\u0027ll change as you originally suggested.",
      "parentUuid": "568c739e_53959346",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 29,
        "endChar": 61
      },
      "revId": "4330166d53b911ad304c6fe10186fa38f05b0af4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e18f4b43_99aa2ee8",
        "filename": "redfish-core/include/utils/sensor_utils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-04T21:13:04Z",
      "side": 1,
      "message": "\u003e My hesitation is just lessons learned from other code bases. I\u0027ve seen similar duplication of code where places were missed when things changed causing odd bugs.\n\nThese are strings defined in a spec.  They by definition never change.  I understand other codebases that aren\u0027t tied to a specification.\n\n\u003e I generally like to define things in a single shared header file that gets used by all users.\n\nCertainly happy to discuss that kind of design outside of this code review.  For the moment, bmcweb doesn\u0027t use a shared header file for non configurable strings, because they should basically never be changing.  If there\u0027s a case where we think they might change or need to be configurable, happy to have that discussion about moving them to the config header, but I don\u0027t think this hits either of those.\n\n\u003e \n\u003e I see your point that in this case the duplication isn\u0027t really an issue. I\u0027ll change as you originally suggested.",
      "parentUuid": "09e42ae6_ade7d7fb",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 29,
        "endChar": 61
      },
      "revId": "4330166d53b911ad304c6fe10186fa38f05b0af4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4927769e_a3791a48",
        "filename": "redfish-core/include/utils/sensor_utils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-29T21:18:33Z",
      "side": 1,
      "message": "nit, I think naming convention is UpperCamel for enums",
      "range": {
        "startLine": 33,
        "startChar": 4,
        "endLine": 33,
        "endChar": 13
      },
      "revId": "4330166d53b911ad304c6fe10186fa38f05b0af4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f51c2a7a_bd656575",
        "filename": "redfish-core/include/utils/sensor_utils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2024-08-30T10:32:12Z",
      "side": 1,
      "message": "I did look this up because I had seen enums using different formatting in the code.\n\nI found in the openbmc cpp-style-and-conventions document two references.\nUppercase camelCase for enum definition: https://github.com/openbmc/docs/blob/master/cpp-style-and-conventions.md#types\nLowercase camelCase for enum members: https://github.com/openbmc/docs/blob/master/cpp-style-and-conventions.md#constants\n\nIs there a different style guide I should be following?",
      "parentUuid": "4927769e_a3791a48",
      "range": {
        "startLine": 33,
        "startChar": 4,
        "endLine": 33,
        "endChar": 13
      },
      "revId": "4330166d53b911ad304c6fe10186fa38f05b0af4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1364cb71_1c72ee0d",
        "filename": "redfish-core/include/utils/sensor_utils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2024-08-29T20:22:14Z",
      "side": 1,
      "message": "I went back and forth on what to return for the unknownNode element. This is easy to change if \"Unknown\" or something else is preferred.",
      "revId": "4330166d53b911ad304c6fe10186fa38f05b0af4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f0a9baa_d71558d4",
        "filename": "redfish-core/include/utils/sensor_utils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-29T21:18:33Z",
      "side": 1,
      "message": "We tend to do empty string a lot.  This is fine.",
      "parentUuid": "1364cb71_1c72ee0d",
      "revId": "4330166d53b911ad304c6fe10186fa38f05b0af4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "310d9f41_9d61903e",
        "filename": "redfish-core/include/utils/sensor_utils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2024-09-04T20:46:59Z",
      "side": 1,
      "message": "üëç",
      "parentUuid": "3f0a9baa_d71558d4",
      "revId": "4330166d53b911ad304c6fe10186fa38f05b0af4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6cd0d0f0_b52367b4",
        "filename": "redfish-core/include/utils/sensor_utils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-08-29T21:18:33Z",
      "side": 1,
      "message": "This branch doesn\u0027t actually do anything. subNode is already set to unknownNode",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 63,
        "endChar": 5
      },
      "revId": "4330166d53b911ad304c6fe10186fa38f05b0af4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6625709_978f38cd",
        "filename": "redfish-core/include/utils/sensor_utils.hpp",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2024-09-04T20:46:59Z",
      "side": 1,
      "message": "Good point, I\u0027ve removed it.",
      "parentUuid": "6cd0d0f0_b52367b4",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 63,
        "endChar": 5
      },
      "revId": "4330166d53b911ad304c6fe10186fa38f05b0af4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}