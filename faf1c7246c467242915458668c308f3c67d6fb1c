{
  "comments": [
    {
      "key": {
        "uuid": "ec1dc01e_f4be225d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-24T17:39:30Z",
      "side": 1,
      "message": "Please ensure your tests include some keep-alive behavior (ie, sending more than one message on a keep-alive connection).  I see some potential for header conflicts there.",
      "revId": "faf1c7246c467242915458668c308f3c67d6fb1c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82d69c09_bb9b7c22",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-08-25T09:34:24Z",
      "side": 1,
      "message": "I have not changed the value of the req header parameters in this patch. Those remain the same as in the master. \nThe event listener(server) has no keep-alive tag at my test environment. With that this code works fine.\n\nCan you please elaborate more on what kind of header conflicts can occur?",
      "parentUuid": "ec1dc01e_f4be225d",
      "revId": "faf1c7246c467242915458668c308f3c67d6fb1c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6f0ff2b_4c5b7187",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-31T18:28:09Z",
      "side": 1,
      "message": "\u003e I have not changed the value of the req header parameters in this patch. Those remain the same as in the master. \n\u003e The event listener(server) has no keep-alive tag at my test environment. With that this code works fine.\n\u003e \n\u003e Can you please elaborate more on what kind of header conflicts can occur?\n\nAs I\u0027m looking at this, you\u0027ve changed the concept of setting headers (which is a complete replacement) to the concept of adding headers, which would leave other headers in place.  If one subscriptions had headers set that the other one didn\u0027t, subscription 2 would get the headers from the first.",
      "parentUuid": "82d69c09_bb9b7c22",
      "revId": "faf1c7246c467242915458668c308f3c67d6fb1c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7b4f7ec_45927dd5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-09-01T11:49:05Z",
      "side": 1,
      "message": "Each subscription will have its own copy of req. There will be different HttpClient objects for each subscriptions. So there is no possibility for the 2nd subscription to take values from the 1st subscriber",
      "parentUuid": "a6f0ff2b_4c5b7187",
      "revId": "faf1c7246c467242915458668c308f3c67d6fb1c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8155989a_e3b159b2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-08T20:32:08Z",
      "side": 1,
      "message": "\u003e Each subscription will have its own copy of req.\n\nThat seems like something temporary simply because we don\u0027t have connection pooling yet.\n\n\u003e There will be different HttpClient objects for each subscriptions. So there is no possibility for the 2nd subscription to take values from the 1st subscriber\n\nIf that\u0027s true then why is addHeaders being called every time sendEvent is called?  Shouldn\u0027t we just set it in the constructor once and be done with it?\n\nAlso, looking at the code in sendEvent, it seems really inefficient, and makes a copy of every header 3-4 times before actually moving into the struct.  For what it\u0027s worth, we should make that cleaner as well, but not necessarily something you need to do.",
      "parentUuid": "d7b4f7ec_45927dd5",
      "revId": "faf1c7246c467242915458668c308f3c67d6fb1c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}