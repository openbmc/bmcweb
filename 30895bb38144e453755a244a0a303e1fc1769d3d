{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0ae370fc_6eec5641",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-01-21T20:23:21Z",
      "side": 1,
      "message": "Redfish must also allow setting this, which it does. Please add that to the commit msg.",
      "revId": "30895bb38144e453755a244a0a303e1fc1769d3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f85aeb18_81066f22",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2022-01-21T20:43:25Z",
      "side": 1,
      "message": "OK, I\u0027ll mention that it\u0027s not readonly in the official schema in the next version.",
      "parentUuid": "0ae370fc_6eec5641",
      "revId": "30895bb38144e453755a244a0a303e1fc1769d3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ba941a5_d114d35a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-01-21T20:23:21Z",
      "side": 1,
      "message": "Testing? \nIs there some limit to how low this can be set?",
      "revId": "30895bb38144e453755a244a0a303e1fc1769d3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "453d03d6_fcb988de",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2022-01-21T20:43:25Z",
      "side": 1,
      "message": "Please tell me what kind of testing results you want from me. Am I supposed to run Validator for a change like that? Or would showing a curl command and saying \"it worked\" be good enough?\n\nThe limit is enforced by phosphor-user-manager (hardcoded to 8), and I\u0027ve just sent a patch so that it wouldn\u0027t silently ignore the requests to set it too low: https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-user-manager/+/50589 , with that I\u0027m getting InternalError if I go below 8.",
      "parentUuid": "0ba941a5_d114d35a",
      "revId": "30895bb38144e453755a244a0a303e1fc1769d3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71a548ce_46376732",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2022-01-21T20:48:34Z",
      "side": 1,
      "message": "Guess I should change the phosphor-user-manager patch to emit InvalidArgument for that case?",
      "parentUuid": "453d03d6_fcb988de",
      "revId": "30895bb38144e453755a244a0a303e1fc1769d3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51aab902_fd6120e4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-01-21T22:47:20Z",
      "side": 1,
      "message": "\u003e Please tell me what kind of testing results you want from me.\n\nI will answer your question with another question.  How do you know that this code works and is bug free?  That question should be answered by your commit message in the Tested section.  Generally, yes, it involves some amount of playing with the API to ensure that it functions as designed.\n\n\u003e I\u0027ve just sent a patch so that it wouldn\u0027t silently ignore the requests to set it too low: https://gerrit.openbmc-project.xyz/c/openbmc/phosphor-user-manager/+/50589 ,\n\nYou should mention this in your commit message.",
      "parentUuid": "71a548ce_46376732",
      "revId": "30895bb38144e453755a244a0a303e1fc1769d3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d94cdda9_6a15fc7b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2022-01-22T14:31:38Z",
      "side": 1,
      "message": "\u003e \u003e Please tell me what kind of testing results you want from me.\n\u003e \n\u003e I will answer your question with another question.  How do you know that this code works and is bug free?\n\nNow this brings an interesting twist to the topic because /my/ answer would indeed differ fundamentally.\n\nWhen seeing a patch like that I would assume (as that is /usually/ the case) that the contributor has performed at least basic smoke testing confirming the code works as intended, so that goes without saying. An exception to that would be noted by commit message having something like \"RFC only: this breaks this and that for reasons unknown, please help me figure it out\" or \"Compile-tested only\" or \"Tested on X; should work the same on Y and Z for /reasons/\".\n\nI can also imagine how adding basic testing results not only clutters the commit log with trivialities but might lure the reviewers onto the wrong thought train (following the potentially erroneous author\u0027s logic) and I guess you know how hard it is to stop and look around properly when you\u0027re already going via a bad path.\n\nI understand you have good reasons to roll it differently, just wanted to note that it\u0027s not necessarily based on assumptions valid and natural for all free software developers.",
      "parentUuid": "51aab902_fd6120e4",
      "revId": "30895bb38144e453755a244a0a303e1fc1769d3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3aa48641_5121c211",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-01-24T19:22:26Z",
      "side": 1,
      "message": "\u003e \u003e \u003e Please tell me what kind of testing results you want from me.\n\u003e \u003e \n\u003e \u003e I will answer your question with another question.  How do you know that this code works and is bug free?\n\u003e \n\u003e Now this brings an interesting twist to the topic because /my/ answer would indeed differ fundamentally.\n\u003e \n\u003e When seeing a patch like that I would assume (as that is /usually/ the case) that the contributor has performed at least basic smoke testing confirming the code works as intended, so that goes without saying.\n\nRelying on assumptions is error prone.  Explicitly stating things saves time in the long run, and helps other people to replicate your results.  They should be seen as a form of documentation.\n\n\u003e An exception to that would be noted by commit message having something like \"RFC only: this breaks this and that for reasons unknown, please help me figure it out\" or \"Compile-tested only\" or \"Tested on X; should work the same on Y and Z for /reasons/\".\n\nIt would be nice if we could make that assumption on OpenBMC, and maybe that\u0027s how it works on other projects, but a significant portion of committers don\u0027t appropriately test their patches, and lead to regressions as a result, which takes away maintainer time from reviewing patches and getting them on master, which hurts the projects velocity overall.  This is why the tested statement rule exists, and helps to spread the testing load out.  If bmcweb/redfish had a more extensively used testing harness, and code was required to come with unit tests, this rule would likely be moot, but as it stands today, it saves time for the overall project in not chasing down regressions.\n\n\u003e \n\u003e I can also imagine how adding basic testing results not only clutters the commit log with trivialities but might lure the reviewers onto the wrong thought train (following the potentially erroneous author\u0027s logic) and I guess you know how hard it is to stop and look around properly when you\u0027re already going via a bad path.\n\nOn the opposite note from this, it\u0027s quite useful at times, as it can make very apparent that the level of testing wasn\u0027t quite enough, or needs to run other things.  For example, on this commit, running the service validator is kind of useless, because it only does GETs and you\u0027ve made modifications to PATCH, so if that was the only thing listed as being tested, it\u0027s relatively easy to ask for more.  Those kind of things are much easier to point out in a tested statement than in code.\n\n\u003e \n\u003e I understand you have good reasons to roll it differently, just wanted to note that it\u0027s not necessarily based on assumptions valid and natural for all free software developers.\n\n\nI\u0027m happy to continue to have this discussion, but not in the context of this patchset.  It looks like you\u0027ve added a tested statement, so that\u0027s good.  I will try to re-review this patchset soon.",
      "parentUuid": "d94cdda9_6a15fc7b",
      "revId": "30895bb38144e453755a244a0a303e1fc1769d3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2103a153_024071e1",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1392,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-01-21T20:23:21Z",
      "side": 1,
      "message": "https://github.com/openbmc/phosphor-dbus-interfaces/blob/08baf48ad5f15774d393fbbf4e9479a0ef3e82d0/yaml/xyz/openbmc_project/User/AccountPolicy.interface.yaml#L24 \nI guess that is why this changed",
      "revId": "30895bb38144e453755a244a0a303e1fc1769d3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffbb018b_2e665c7a",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1392,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2022-01-21T20:43:25Z",
      "side": 1,
      "message": "Yes. Do I need to send this as a separate commit with an explanatory commit message?",
      "parentUuid": "2103a153_024071e1",
      "revId": "30895bb38144e453755a244a0a303e1fc1769d3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd68713e_e8e17745",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 1392,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-01-21T22:47:20Z",
      "side": 1,
      "message": "No, considering this is just taking it back to the documented interface, I think a comment on the review is fine.",
      "parentUuid": "ffbb018b_2e665c7a",
      "revId": "30895bb38144e453755a244a0a303e1fc1769d3d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}