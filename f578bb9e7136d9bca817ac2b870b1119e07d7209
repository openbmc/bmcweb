{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cf6bb227_5c79c2bf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1001810
      },
      "writtenOn": "2024-05-01T18:02:24Z",
      "side": 1,
      "message": "Fixed review comments and modified code accordingly. Review and approve.",
      "revId": "f578bb9e7136d9bca817ac2b870b1119e07d7209",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3ab37678_9e555b50",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1001810
      },
      "writtenOn": "2024-05-08T17:27:25Z",
      "side": 1,
      "message": "Responded for review comments. Thanks",
      "revId": "f578bb9e7136d9bca817ac2b870b1119e07d7209",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32b34535_de556e48",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1001810
      },
      "writtenOn": "2024-05-21T21:35:44Z",
      "side": 1,
      "message": "Please review and approve. Thanks",
      "revId": "f578bb9e7136d9bca817ac2b870b1119e07d7209",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5aba26b5_73b6d2f5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-21T23:05:08Z",
      "side": 1,
      "message": "Please update and provide answers to all the existing open issues.",
      "parentUuid": "32b34535_de556e48",
      "revId": "f578bb9e7136d9bca817ac2b870b1119e07d7209",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9fc561dd_5dd08aa5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1001810
      },
      "writtenOn": "2024-06-04T21:40:00Z",
      "side": 1,
      "message": "Responded for review comment. Please review and approve",
      "revId": "f578bb9e7136d9bca817ac2b870b1119e07d7209",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f741534c_55ab8b4f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1001810
      },
      "writtenOn": "2024-06-14T06:02:23Z",
      "side": 1,
      "message": "Replied. Please review and approve.",
      "revId": "f578bb9e7136d9bca817ac2b870b1119e07d7209",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f349e90a_09a0f49c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1001810
      },
      "writtenOn": "2024-06-14T20:54:44Z",
      "side": 1,
      "message": "Modified as per review comments. Review and approve. Thanks",
      "revId": "f578bb9e7136d9bca817ac2b870b1119e07d7209",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1febae1a_8f8be5c5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1001810
      },
      "writtenOn": "2024-06-14T20:54:44Z",
      "side": 1,
      "message": "Done. Review and approve.Thanks",
      "parentUuid": "5aba26b5_73b6d2f5",
      "revId": "f578bb9e7136d9bca817ac2b870b1119e07d7209",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b95f7e9a_68c8ccad",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-14T21:21:55Z",
      "side": 1,
      "message": "It took 2 months for responses to my questions to be posted, please give me a similar amount of time (2 months) to review and approve.\n\nThanks.",
      "parentUuid": "f349e90a_09a0f49c",
      "revId": "f578bb9e7136d9bca817ac2b870b1119e07d7209",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9645b8da_78265663",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1002117
      },
      "writtenOn": "2024-11-11T08:59:12Z",
      "side": 1,
      "message": "The change can fix our issues and tests successfully.",
      "revId": "f578bb9e7136d9bca817ac2b870b1119e07d7209",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d315a6f1_1f6f86f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-11-11T18:36:45Z",
      "side": 1,
      "message": "This patch continues to need responses to the questions asked.  To be transparent, this Sensor value interface needs to be performant.  As it stands it\u0027s an interface that on most systems takes 500ms to respond, which for sensors polled at 500ms or 250ms loops is already too slow.\n\nThe test case being \"fixed\" here is undefined behavior in the Redfish specification an, and can\u0027t have any impact on a properly formed redfish client.  To actually have impact would require a client to ignore the Redfish collection URI tree.\n\nGiven that there\u0027s no patchset that can accomplish both, my preference is for the performant version, rather than trying reduce the performance (doubling dbus calls) to support someones example case.",
      "revId": "f578bb9e7136d9bca817ac2b870b1119e07d7209",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ee9a84a_e5569930",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 14
      },
      "lineNbr": 2970,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-07T20:39:11Z",
      "side": 1,
      "message": "this is now just checking if the chassis is valid?\n\nWhat if you have\n\n/redfish/v1/Chassis1/Sensors/Sensor1\n/redfish/v1/Chassis2/Sensors/Sensor2\n\nWon\u0027t\n\n/redfish/v1/Chassis1/Sensors/Sensor2\n\nStill return the same result?\n\nYes, I could see this would prevent\n\n/redfish/v1/NoExist/Sensors/Sensor2\n\nfrom returning the right behavior, but shouldn\u0027t we handle both cases?\n\nPlease add the missing tests cases above to your testing.",
      "range": {
        "startLine": 2970,
        "startChar": 28,
        "endLine": 2970,
        "endChar": 47
      },
      "revId": "f578bb9e7136d9bca817ac2b870b1119e07d7209",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5441a19d_cc08dfd4",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 14
      },
      "lineNbr": 2970,
      "author": {
        "id": 1001810
      },
      "writtenOn": "2024-05-08T17:27:25Z",
      "side": 1,
      "message": "Yes. It is tested for all the possible trest cases.\nfor ex: If we have /redfish/v1/Chassis1/Sensors/Sensor1 and /redfish/v1/Chassis2/Sensors/Sensors2\n\nif /redfish/v1/Chassis1/Sensors/Sensor1 is valid, then /redfish/v1/Chassis2/Sensors/Sensor1 and /redfish/v1/Chassis1/Sensors/Sensor2 are returning error. Even checked for PATCH and POST methods along with GET method.",
      "parentUuid": "5ee9a84a_e5569930",
      "range": {
        "startLine": 2970,
        "startChar": 28,
        "endLine": 2970,
        "endChar": 47
      },
      "revId": "f578bb9e7136d9bca817ac2b870b1119e07d7209",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "236e5730_8bfc57d1",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 14
      },
      "lineNbr": 2970,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-05-31T20:03:44Z",
      "side": 1,
      "message": "@SrinivasaRao in Ed\u0027s scenario both  /redfish/v1/Chassis1 and  /redfish/v1/Chassis2 are valid path, get /redfish/v1/Chassis1/Sensors/Sensor2 will think chassis is valid and call \"doSensorGet\" with chassisId\u003d1 and sensorId\u003d2 with valid chassisPath\n\nHave you tested this scenario and confirmed it is working as expected, i.e. /redfish/v1/Chassis1/Sensors/Sensor2 should return NotFound",
      "parentUuid": "5441a19d_cc08dfd4",
      "range": {
        "startLine": 2970,
        "startChar": 28,
        "endLine": 2970,
        "endChar": 47
      },
      "revId": "f578bb9e7136d9bca817ac2b870b1119e07d7209",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa8d4893_b8ad7a3e",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 14
      },
      "lineNbr": 2970,
      "author": {
        "id": 1001810
      },
      "writtenOn": "2024-06-04T21:40:00Z",
      "side": 1,
      "message": "Yes it is tested.\nChassis is unique to the system.\nIf suppose Chassis1 and Chassis2 both are valid...but as I tested, Chassis1 or Chassis2  is considered as valid based on the system and not both are valid on the same board.\nSo chassis is valid and having one valid entity only...So, when /Chassis/\u003cChassis_ID\u003e/Sensors/\u003cSensor_Name\u003e  is given from redfish postman tool, it is checking for valid chassis. Once this check is done then it is checking valid sensors in respective chassis.\nSensor Validity is checked in \"DoSensorGet\" specific to either Chassis1 or Chassis2.",
      "parentUuid": "236e5730_8bfc57d1",
      "range": {
        "startLine": 2970,
        "startChar": 28,
        "endLine": 2970,
        "endChar": 47
      },
      "revId": "f578bb9e7136d9bca817ac2b870b1119e07d7209",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d65e8457_2de6f32e",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 14
      },
      "lineNbr": 2970,
      "author": {
        "id": 1000559
      },
      "writtenOn": "2024-06-12T23:08:38Z",
      "side": 1,
      "message": "On some system, both Chassis1 and Chassis2 can be valid path, it needs to work correctly also.",
      "parentUuid": "fa8d4893_b8ad7a3e",
      "range": {
        "startLine": 2970,
        "startChar": 28,
        "endLine": 2970,
        "endChar": 47
      },
      "revId": "f578bb9e7136d9bca817ac2b870b1119e07d7209",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12ababd7_cf2016a6",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 14
      },
      "lineNbr": 2970,
      "author": {
        "id": 1001810
      },
      "writtenOn": "2024-06-14T06:02:23Z",
      "side": 1,
      "message": "Yes..in that case also it will work. Since it is based on user input that is supplied in redfish postman tool. For example, if user supplied https://\u003cBMC_IP\u003e/redfish/v1/Chassis/\u003cChassisID1\u003e/Sensors/\u003cSensor1\u003e.Then , first api \"requestRoutesSensor\" is called which is based on app(user postman tool input) and will directly going call handleSensorGet, where validity of ChassisID(Chassis1 or Chassis2) is checked and once ChassisID is valid, then it is going to check for DoSensorGet (will get the valid sensors for that particular chassis). from the async call \n redfish::chassis_utils::getValidChassisPath(asyncResp, chassisId,\n        std::bind_front(doSensorGet, asyncResp, chassisId, sensorId)); \n        \nboth getValidChassisPath and doSensorGet are handled together.",
      "parentUuid": "d65e8457_2de6f32e",
      "range": {
        "startLine": 2970,
        "startChar": 28,
        "endLine": 2970,
        "endChar": 47
      },
      "revId": "f578bb9e7136d9bca817ac2b870b1119e07d7209",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}