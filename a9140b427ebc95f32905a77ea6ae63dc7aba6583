{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "06691b58_d699d61f",
        "filename": "http/http_response.hpp",
        "patchSetId": 7
      },
      "lineNbr": 154,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-05-18T19:29:07Z",
      "side": 1,
      "message": "Are we suppose to do \"*pSize \u003d 0\"?",
      "range": {
        "startLine": 154,
        "startChar": 12,
        "endLine": 154,
        "endChar": 19
      },
      "revId": "a9140b427ebc95f32905a77ea6ae63dc7aba6583",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "842b432b_53286d47",
        "filename": "http/http_response.hpp",
        "patchSetId": 7
      },
      "lineNbr": 154,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-05-18T19:36:24Z",
      "side": 1,
      "message": "no.  std::optional has an operator\u003d overload",
      "parentUuid": "06691b58_d699d61f",
      "range": {
        "startLine": 154,
        "startChar": 12,
        "endLine": 154,
        "endChar": 19
      },
      "revId": "a9140b427ebc95f32905a77ea6ae63dc7aba6583",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d2981cf_b523c0ee",
        "filename": "http/http_response.hpp",
        "patchSetId": 7
      },
      "lineNbr": 154,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-05-18T19:37:04Z",
      "side": 1,
      "message": "It is not clear whether pSize is pointer or not. Here pSize is already zero and then we are setting it to zero. Also below we are de-referencing so I am not clear.",
      "parentUuid": "06691b58_d699d61f",
      "range": {
        "startLine": 154,
        "startChar": 12,
        "endLine": 154,
        "endChar": 19
      },
      "revId": "a9140b427ebc95f32905a77ea6ae63dc7aba6583",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc181fc3_fdfc1d2f",
        "filename": "http/http_response.hpp",
        "patchSetId": 7
      },
      "lineNbr": 167,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-05-18T19:29:07Z",
      "side": 1,
      "message": "Not sure why formatting did not handle longer than 80 characters. Should we just have two strings on different line.",
      "range": {
        "startLine": 167,
        "startChar": 42,
        "endLine": 167,
        "endChar": 50
      },
      "revId": "a9140b427ebc95f32905a77ea6ae63dc7aba6583",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eefe20b1_c72c685a",
        "filename": "http/http_response.hpp",
        "patchSetId": 7
      },
      "lineNbr": 167,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-05-18T19:36:24Z",
      "side": 1,
      "message": "\u003e Not sure why formatting did not handle longer than 80 characters.\n\nThe formatting allows for lines longer than 80 characters\n\n\u003e Should we just have two strings on different line.\n\nThat\u0027s not what the formatter rules say, but I\u0027m happy to have that discussion outside this patch.",
      "parentUuid": "dc181fc3_fdfc1d2f",
      "range": {
        "startLine": 167,
        "startChar": 42,
        "endLine": 167,
        "endChar": 50
      },
      "revId": "a9140b427ebc95f32905a77ea6ae63dc7aba6583",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}