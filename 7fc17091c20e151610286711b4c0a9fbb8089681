{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "488a4fc1_8ecd7b96",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-11-14T20:16:05Z",
      "side": 1,
      "message": "I would expect for testing, PATCH, GET, POST, PUT, and DELETE tested. (e.g.  added a user (POST), Verified the new user created (GET), updated the user\u0027s permission (PATCH),  deleted the user)",
      "revId": "7fc17091c20e151610286711b4c0a9fbb8089681",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "578cfde6_1c20cce2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-15T18:00:54Z",
      "side": 1,
      "message": "Yep.  I think ServiceValidator Covers GET and POST.  I need to see what we have that actually takes PUT, and PATCH.  Redfish-protocol-validator I think tests the rest, except for PUT, but I\u0027m not sure where we use that.",
      "parentUuid": "488a4fc1_8ecd7b96",
      "revId": "7fc17091c20e151610286711b4c0a9fbb8089681",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0363a3ae_8def7b8d",
        "filename": "http/routing.hpp",
        "patchSetId": 3
      },
      "lineNbr": 443,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-14T18:30:21Z",
      "side": 1,
      "message": "This fails silently if |verb| is nullopt, is that what we want?",
      "range": {
        "startLine": 443,
        "startChar": 8,
        "endLine": 443,
        "endChar": 17
      },
      "revId": "7fc17091c20e151610286711b4c0a9fbb8089681",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef1ec307_16bb21b1",
        "filename": "http/routing.hpp",
        "patchSetId": 3
      },
      "lineNbr": 443,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-14T20:07:43Z",
      "side": 1,
      "message": "Yes, that\u0027s what I intended, unless someone proposes other behavior they\u0027d like to see.",
      "parentUuid": "0363a3ae_8def7b8d",
      "range": {
        "startLine": 443,
        "startChar": 8,
        "endLine": 443,
        "endChar": 17
      },
      "revId": "7fc17091c20e151610286711b4c0a9fbb8089681",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b2d8591_d4f1d689",
        "filename": "http/verb.hpp",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-14T18:29:42Z",
      "side": 1,
      "message": "Please write a unit test for this.",
      "revId": "7fc17091c20e151610286711b4c0a9fbb8089681",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48c61375_f1990512",
        "filename": "http/verb.hpp",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-14T20:07:07Z",
      "side": 1,
      "message": "???? For an enum?  I\u0027m not sure how to write a unit test for an enum.  Can you be more specific?",
      "parentUuid": "6b2d8591_d4f1d689",
      "revId": "7fc17091c20e151610286711b4c0a9fbb8089681",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fbecd336_6af38832",
        "filename": "http/verb.hpp",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-11-14T20:16:05Z",
      "side": 1,
      "message": "Could you write tests for httpVerbToString / httpVerbFromBoost ?",
      "parentUuid": "48c61375_f1990512",
      "revId": "7fc17091c20e151610286711b4c0a9fbb8089681",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45dd83b7_cf0a1998",
        "filename": "http/verb.hpp",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-14T23:17:52Z",
      "side": 1,
      "message": "\u003e Could you write tests for httpVerbToString / httpVerbFromBoost ?\n\nYes, this is what I meant.",
      "parentUuid": "fbecd336_6af38832",
      "revId": "7fc17091c20e151610286711b4c0a9fbb8089681",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79d7c66c_1127240d",
        "filename": "http/verb.hpp",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-15T18:00:54Z",
      "side": 1,
      "message": "I can do that (and I\u0027m happy to), but that\u0027s not the line the comment was left on.",
      "parentUuid": "fbecd336_6af38832",
      "revId": "7fc17091c20e151610286711b4c0a9fbb8089681",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a1e5f31_fa52a794",
        "filename": "http/verb.hpp",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-15T18:09:32Z",
      "side": 1,
      "message": "I can reword,\n\n\"Please write a unit test for this file\"",
      "parentUuid": "79d7c66c_1127240d",
      "revId": "7fc17091c20e151610286711b4c0a9fbb8089681",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0af9cbc2_1041df2f",
        "filename": "http/verb.hpp",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-14T18:29:42Z",
      "side": 1,
      "message": "Does switch work better here?",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 48
      },
      "revId": "7fc17091c20e151610286711b4c0a9fbb8089681",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87968cce_d8ab8c3b",
        "filename": "http/verb.hpp",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-14T20:07:07Z",
      "side": 1,
      "message": "Probably does.  ACK.",
      "parentUuid": "0af9cbc2_1041df2f",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 48
      },
      "revId": "7fc17091c20e151610286711b4c0a9fbb8089681",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c35e3528_f15470e4",
        "filename": "http/verb.hpp",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-14T18:29:42Z",
      "side": 1,
      "message": "This can be std::string_view",
      "range": {
        "startLine": 52,
        "startChar": 12,
        "endLine": 52,
        "endChar": 18
      },
      "revId": "7fc17091c20e151610286711b4c0a9fbb8089681",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1ae5802_4c21259e",
        "filename": "http/verb.hpp",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-14T20:07:07Z",
      "side": 1,
      "message": "As a general rule I don\u0027t think string_view output parameters are recommended given the subtleties in rvalue semantics.  Is there something in the coding standard you\u0027re referencing that says that?",
      "parentUuid": "c35e3528_f15470e4",
      "range": {
        "startLine": 52,
        "startChar": 12,
        "endLine": 52,
        "endChar": 18
      },
      "revId": "7fc17091c20e151610286711b4c0a9fbb8089681",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c44b9a6a_6d938ba0",
        "filename": "http/verb.hpp",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-14T23:17:52Z",
      "side": 1,
      "message": "I didn\u0027t say string_view are preferred anywhere as output parameters. \n\nThese are string literals with static storage. There is an example below.\n\nhttps://abseil.io/docs/cpp/guides/strings#string_view\n\nDoes string_view save a temporary string construction when you do \n\n```\nif (httpVerbToString(HttpVerb::Delete) \u003d\u003d \"DELETE\")\n```",
      "parentUuid": "b1ae5802_4c21259e",
      "range": {
        "startLine": 52,
        "startChar": 12,
        "endLine": 52,
        "endChar": 18
      },
      "revId": "7fc17091c20e151610286711b4c0a9fbb8089681",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1c922db_a9b36838",
        "filename": "http/verb.hpp",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-15T18:00:54Z",
      "side": 1,
      "message": "Right, I get it.  I\u0027m just looking for reference in the coding standard where it says that\u0027s preferred.",
      "parentUuid": "c44b9a6a_6d938ba0",
      "range": {
        "startLine": 52,
        "startChar": 12,
        "endLine": 52,
        "endChar": 18
      },
      "revId": "7fc17091c20e151610286711b4c0a9fbb8089681",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}