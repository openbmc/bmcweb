{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1b89bff4_e178df3a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-12T23:32:12Z",
      "side": 1,
      "message": "Missing testing.",
      "revId": "411e86cc76298313db83e605833a29f1751a4534",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01aef9c1_c8c7de08",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 1
      },
      "lineNbr": 485,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-12T23:33:10Z",
      "side": 1,
      "message": "Isn\u0027t this incorrect?  Shouldn\u0027t we be setting it to null, per Redfish?",
      "range": {
        "startLine": 484,
        "startChar": 56,
        "endLine": 485,
        "endChar": 44
      },
      "revId": "411e86cc76298313db83e605833a29f1751a4534",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69e5c2e7_c9f88d11",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 1
      },
      "lineNbr": 485,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-03-13T08:22:54Z",
      "side": 1,
      "message": "The default means, unknown in this case? Not unsupported? If not unsupported, leave off. If unknown, then null. \n\nFrom https://gerrit.openbmc.org/c/openbmc/bmcweb/+/69864\n\n9.6.1 Properties Overview Page 88 in\nhttps://www.dmtf.org/sites/default/files/standards/documents/DSP0266_1.19.0.pdf\n\n\"If an implementation supports a property, it shall always provide a value for that property. If a value is unknown at the time of the operation due to an internal error, or inaccessibility of the data, the value of null is an acceptable value if supported by the schema definition.\"",
      "parentUuid": "01aef9c1_c8c7de08",
      "range": {
        "startLine": 484,
        "startChar": 56,
        "endLine": 485,
        "endChar": 44
      },
      "revId": "411e86cc76298313db83e605833a29f1751a4534",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cf72fe3_d92c6d2e",
        "filename": "redfish-core/lib/pcie.hpp",
        "patchSetId": 1
      },
      "lineNbr": 485,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-14T03:48:33Z",
      "side": 1,
      "message": "What we need defined in phosphor-dbus-interfaces (if we\u0027re not going to just do it in code) is a definition for:\n\n1. When the value can\u0027t be gotten because of an error.\n2. When a value can\u0027t be gotten because it\u0027s not supported on this system.\n3. When a value can\u0027t be gotten because it\u0027s unavailable (power is off).\n\nLooking at the PDI patchset, it\u0027s not clear to me that those 3 cases are covered.\n\nWhat I would expect is that we\u0027d have a new optional interface for pcie lanes in use.\n\n1. Can\u0027t be gotten because of an error?  Dbus error\n2. Can\u0027t be gotten because it\u0027s not supported on this system?  Don\u0027t expose the DBUS interface\n3. Value can\u0027t be gotten because it\u0027s unavailable, return MAXINT.\n\n\nThen Redfish would respond with\n\n1. Return a 500 internal error to the user\n2. Omitting the property\n3. Returning the value as null.\n\n\n\nThis commit looks like it does only part of the fix.",
      "parentUuid": "69e5c2e7_c9f88d11",
      "range": {
        "startLine": 484,
        "startChar": 56,
        "endLine": 485,
        "endChar": 44
      },
      "revId": "411e86cc76298313db83e605833a29f1751a4534",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}