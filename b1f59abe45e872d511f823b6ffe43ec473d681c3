{
  "comments": [
    {
      "key": {
        "uuid": "746b6835_af14978f",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 25
      },
      "lineNbr": 279,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2021-01-27T10:27:22Z",
      "side": 1,
      "message": "Can you move getLocationIndicatorActive and setLocationIndicatorActivefunction functions to redfish-core/lib/processor.hpp to avoid including additional header in processor.hpp? Adding extra headers can be very problematic, please, keep the amount of included header as minimal as possible. Thanks in advance",
      "range": {
        "startLine": 279,
        "startChar": 12,
        "endLine": 279,
        "endChar": 38
      },
      "revId": "b1f59abe45e872d511f823b6ffe43ec473d681c3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bc1e0c4_a0002f03",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 25
      },
      "lineNbr": 279,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-01-27T11:22:12Z",
      "side": 1,
      "message": "Hello, This will be a generic code for LocationIndicatorActive that is present in the Memory/Port/PcieSlot/Assembly... etc and hence it\u0027s here.\n\nAll those other schemas will include this file and utilise these APIs.",
      "parentUuid": "746b6835_af14978f",
      "range": {
        "startLine": 279,
        "startChar": 12,
        "endLine": 279,
        "endChar": 38
      },
      "revId": "b1f59abe45e872d511f823b6ffe43ec473d681c3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "673035a0_1b1aa174",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 25
      },
      "lineNbr": 279,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-01-28T10:49:32Z",
      "side": 1,
      "message": "\u003e Hello, This will be a generic code for LocationIndicatorActive that is present in the Memory/Port/PcieSlot/Assembly... etc and hence it\u0027s here.\n\n+1",
      "parentUuid": "2bc1e0c4_a0002f03",
      "range": {
        "startLine": 279,
        "startChar": 12,
        "endLine": 279,
        "endChar": 38
      },
      "revId": "b1f59abe45e872d511f823b6ffe43ec473d681c3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "804539ef_e0234fba",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 25
      },
      "lineNbr": 279,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2021-01-28T16:47:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "673035a0_1b1aa174",
      "range": {
        "startLine": 279,
        "startChar": 12,
        "endLine": 279,
        "endChar": 38
      },
      "revId": "b1f59abe45e872d511f823b6ffe43ec473d681c3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cdd1e3c3_b8249cbb",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 25
      },
      "lineNbr": 396,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2021-01-27T10:27:22Z",
      "side": 1,
      "message": "nit I guess you can move shared_ptr here, because after async_method_call you are breaking a loop. No copy is required",
      "range": {
        "startLine": 396,
        "startChar": 25,
        "endLine": 396,
        "endChar": 30
      },
      "revId": "b1f59abe45e872d511f823b6ffe43ec473d681c3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc494f3f_00c3b64c",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 25
      },
      "lineNbr": 396,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-01-28T10:49:32Z",
      "side": 1,
      "message": "this is move, not copy, see L:366",
      "parentUuid": "cdd1e3c3_b8249cbb",
      "range": {
        "startLine": 396,
        "startChar": 25,
        "endLine": 396,
        "endChar": 30
      },
      "revId": "b1f59abe45e872d511f823b6ffe43ec473d681c3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6efa6f3_0c75c385",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 25
      },
      "lineNbr": 396,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2021-01-28T16:47:51Z",
      "side": 1,
      "message": "You are pointing at other location that is not related to my comment. You can move it here. Right now you are making a copy here.",
      "parentUuid": "bc494f3f_00c3b64c",
      "range": {
        "startLine": 396,
        "startChar": 25,
        "endLine": 396,
        "endChar": 30
      },
      "revId": "b1f59abe45e872d511f823b6ffe43ec473d681c3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4f1b4e1_75be1e99",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 25
      },
      "lineNbr": 396,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-01-28T20:43:38Z",
      "side": 1,
      "message": "It\u0027s subtle that asyncResp can be moved here, and doesn\u0027t need copied.  I really prefer whats there currently, because it\u0027s really obvious that it\u0027s correct, and unlikely to break, whereas moves can subtly break. \n Considering openbmc runs single threaded, and a shared_ptr move copy is really really cheap, I\u0027m not concerned about this level of optimization.  I suspect the compiler can generate the same code either way (although I haven\u0027t verified that).\n\nIt should be noted, we need to come up with a good set of rules for handling async resp (when to take them by value, when to take by reference, ect) and apply it universally across the project.  At the moment, we\u0027re inconsistent, which doesn\u0027t hurt us much, but it would be good to have one solid pattern for this.",
      "parentUuid": "d6efa6f3_0c75c385",
      "range": {
        "startLine": 396,
        "startChar": 25,
        "endLine": 396,
        "endChar": 30
      },
      "revId": "b1f59abe45e872d511f823b6ffe43ec473d681c3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}