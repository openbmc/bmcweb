{
  "comments": [
    {
      "key": {
        "uuid": "deb641a0_778c5658",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 41
      },
      "lineNbr": 305,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2020-12-11T14:46:59Z",
      "side": 1,
      "message": "This looks quite complicated. Is it same as pseudo code below?\n\nstd::string sensorType, tmp;\ndbus::utility::getNthStringFromPath(uris[0].second, 3, sensorType);\n\nbool invalidType \u003d ! std::all_of(std::begin(uris[1], uris[uris.size()-1],\n  [\u0026sensorType, \u0026tmp](const auto\u0026 uri) {\n    dbus::utility::getNthStringFromPath(uris[0].second, 3, tmp);\n    return sensorType \u003d\u003d tmp;\n  }\n);\n\nIf so, it might be better to refactor it so it will clearly show the intend what is happening here.",
      "range": {
        "startLine": 292,
        "startChar": 0,
        "endLine": 305,
        "endChar": 21
      },
      "revId": "8a540e4aa025193e92ff3c3f9dba3264d5090d82",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24854cee_6aaa21ee",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 41
      },
      "lineNbr": 305,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-12-14T11:30:49Z",
      "side": 1,
      "message": "Ok, I will try to refactor it. Thanks for code",
      "parentUuid": "deb641a0_778c5658",
      "range": {
        "startLine": 292,
        "startChar": 0,
        "endLine": 305,
        "endChar": 21
      },
      "revId": "8a540e4aa025193e92ff3c3f9dba3264d5090d82",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54a6bc69_fd5ee63a",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 41
      },
      "lineNbr": 305,
      "author": {
        "id": 1000677
      },
      "writtenOn": "2020-12-15T13:28:06Z",
      "side": 1,
      "message": "Simplify a little, hope it is enough. If not I am able to add all_of algorithm",
      "parentUuid": "24854cee_6aaa21ee",
      "range": {
        "startLine": 292,
        "startChar": 0,
        "endLine": 305,
        "endChar": 21
      },
      "revId": "8a540e4aa025193e92ff3c3f9dba3264d5090d82",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98bdc945_e34b9028",
        "filename": "redfish-core/lib/metric_report_definition.hpp",
        "patchSetId": 41
      },
      "lineNbr": 305,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2020-12-17T09:01:43Z",
      "side": 1,
      "message": "In my opinion new code is just different, it is only easier to understand because there is additional log messege.\n\nYou seem to want to place it in same loop, why is that? The thing is if you want to place it in same loop there not much you can do. What are the benefits? If you say performance the answer is it depends: https://stackoverflow.com/questions/29716585/c-one-big-loop-vs-many-loops\nThere are two solutions we can measure it if this code is critical, if not we can go for something smaller and easier for programmers.",
      "parentUuid": "54a6bc69_fd5ee63a",
      "range": {
        "startLine": 292,
        "startChar": 0,
        "endLine": 305,
        "endChar": 21
      },
      "revId": "8a540e4aa025193e92ff3c3f9dba3264d5090d82",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}