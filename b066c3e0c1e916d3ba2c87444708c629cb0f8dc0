{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1043343d_29a6380e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1001489
      },
      "writtenOn": "2022-07-25T09:43:27Z",
      "side": 1,
      "message": "This commit can help with this problem https://gerrit.openbmc.org/c/openbmc/bmcweb/+/54292\nI think it would be worth merging it ",
      "revId": "b066c3e0c1e916d3ba2c87444708c629cb0f8dc0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8940d452_b3c0c7d1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-25T14:51:43Z",
      "side": 1,
      "message": "NO disagreement, it needs better testing.",
      "parentUuid": "1043343d_29a6380e",
      "revId": "b066c3e0c1e916d3ba2c87444708c629cb0f8dc0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f10fc64_5ede06c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2022-08-16T11:31:17Z",
      "side": 1,
      "message": "I\u0027ve tried to test this change on our platforms, by performing simple mount and unmount scenario on prepared image. Unfortunately, this code doesn\u0027t seem to work for now, as either mount was failing, or bmcweb crashed completely. I\u0027ve pointed out some more details in comments below.",
      "revId": "b066c3e0c1e916d3ba2c87444708c629cb0f8dc0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23beb164_918b0480",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-16T18:12:58Z",
      "side": 1,
      "message": "Excellent!  Thanks for testing it!",
      "parentUuid": "8f10fc64_5ede06c7",
      "revId": "b066c3e0c1e916d3ba2c87444708c629cb0f8dc0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e9f7ef1_610af4d3",
        "filename": "include/nbd_proxy.hpp",
        "patchSetId": 5
      },
      "lineNbr": 134,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2022-08-16T11:31:17Z",
      "side": 1,
      "message": "In alternative scenario, when situation from another comment doesn\u0027t occur, this async_write always results with \"Bad file descriptor\" error. When attempting to call close() method, bmcweb crashes with a message that pure virtual method is trying to be called here. Below is gdb call-stack from crash moment for reference:\n\nProgram received signal SIGABRT, Aborted.\nPython Exception \u003cclass \u0027NameError\u0027\u003e: Installation error: gdb._execute_unwinders function is missing\n0x7687e5f4 in ?? () from target:/lib/libc.so.6\nPython Exception \u003cclass \u0027NameError\u0027\u003e: Installation error: gdb._execute_unwinders function is missing\nPython Exception \u003cclass \u0027ModuleNotFoundError\u0027\u003e: No module named \u0027gdb\u0027\n#0  0x7687e5f4 in ?? () from target:/lib/libc.so.6\n#1  0x76844164 in raise () from target:/lib/libc.so.6\nPython Exception \u003cclass \u0027NameError\u0027\u003e: Installation error: gdb._execute_unwinders function is missing\n#2  0x76831638 in abort () from target:/lib/libc.so.6\nPython Exception \u003cclass \u0027NameError\u0027\u003e: Installation error: gdb._execute_unwinders function is missing\n#3  0x76a74e10 in __gnu_cxx::__verbose_terminate_handler() () from target:/usr/lib/libstdc++.so.6\nPython Exception \u003cclass \u0027NameError\u0027\u003e: Installation error: gdb._execute_unwinders function is missing\n#4  0x76a72e34 in ?? () from target:/usr/lib/libstdc++.so.6\nPython Exception \u003cclass \u0027NameError\u0027\u003e: Installation error: gdb._execute_unwinders function is missing\n#5  0x76a72eb8 in std::terminate() () from target:/usr/lib/libstdc++.so.6\nPython Exception \u003cclass \u0027NameError\u0027\u003e: Installation error: gdb._execute_unwinders function is missing\n#6  0x76a73cc4 in __cxa_pure_virtual () from target:/usr/lib/libstdc++.so.6\nPython Exception \u003cclass \u0027NameError\u0027\u003e: Installation error: gdb._execute_unwinders function is missing\n#7  0x0063a4cc in crow::nbd_proxy::NbdProxyServer::send(std::basic_string_view\u003cchar, std::char_traits\u003cchar\u003e \u003e, std::function\u003cvoid ()\u003e\u0026\u0026)::{lambda(boost::system::error_code, unsigned int)#1}::operator()(boost::system::error_code, unsigned int) const (\n    Python Exception \u003cclass \u0027NameError\u0027\u003e: Installation error: gdb._execute_unwinders function is missing\nPython Exception \u003cclass \u0027NameError\u0027\u003e: Installation error: gdb._execute_unwinders function is missing\n__closure\u003d0x7eee35c4, __closure@entry\u003d0x7eee35bc, ec\u003d...) at ../../../../../../workspace/sources/bmcweb/include/nbd_proxy.hpp:140\n#8  0x00854ff8 in boost::asio::detail::write_op\u003cboost::asio::basic_stream_socket\u003cboost::asio::local::stream_protocol, boost::asio::any_io_executor\u003e, boost::asio::const_buffer, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, crow::nbd_proxy::NbdProxyServer::send(std::basic_string_view\u003cchar, std::char_traits\u003cchar\u003e \u003e, std::function\u003cvoid ()\u003e\u0026\u0026)::{lambda(boost::system::error_code, unsigned int)#1}\u003e::operator()(boost::system::error_code, unsigned int, int) (start\u003d0, bytes_transferred\u003d\u003coptimized out\u003e, ec\u003d..., this\u003d0x7eee35a8) at /usr/include/boost/asio/impl/write.hpp:363\n#9  boost::asio::detail::binder2\u003cboost::asio::detail::write_op\u003cboost::asio::basic_stream_socket\u003cboost::asio::local::stream_protocol, boost::asio::any_io_executor\u003e, boost::asio::const_buffer, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, crow::nbd_proxy::NbdProxyServer::send(std::basic_string_view\u003cchar, std::char_traits\u003cchar\u003e \u003e, std::function\u003cvoid ()\u003e\u0026\u0026)::{lambda(boost::system::error_code, unsigned int)#1}\u003e, boost::system::error_code, unsigned int\u003e::operator()() (this\u003d0x7eee35a8) at /usr/include/boost/asio/detail/bind_handler.hpp:289\n#10 boost_asio_handler_invoke_helpers::invoke\u003cboost::asio::detail::binder2\u003cboost::asio::detail::write_op\u003cboost::asio::basic_stream_socket\u003cboost::asio::local::stream_protocol, boost::asio::any_io_executor\u003e, boost::asio::const_buffer, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, crow::nbd_proxy::NbdProxyServer::send(std::basic_string_view\u003cchar, std::char_traits\u003cchar\u003e \u003e, std::function\u003cvoid ()\u003e\u0026\u0026)::{lambda(boost::system::error_code, unsigned int)#1}\u003e, boost::system::error_code, unsigned int\u003e, boost::asio::detail::binder2\u003cboost::asio::detail::write_op\u003cboost::asio::basic_stream_socket\u003cboost::asio::local::stream_protocol, boost::asio::any_io_executor\u003e, boost::asio::const_buffer, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, crow::nbd_proxy::NbdProxyServer::send(std::basic_string_view\u003cchar, std::char_traits\u003cchar\u003e \u003e, std::function\u003cvoid ()\u003e\u0026\u0026)::{lambda(boost::system::error_code, unsigned int)#1}\u003e, boost::system::error_code, unsigned int\u003e \u003e(boost::asio::detail::binder2\u003cboost::asio::detail::write_op\u003cboost::asio::basic_stream_socket\u003cboost::asio::local::stream_protocol, boost::asio::any_io_executor\u003e, boost::asio::const_buffer, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, crow::nbd_proxy::NbdProxyServer::send(std::basic_string_view\u003cchar, std::char_traits\u003cchar\u003e \u003e, std::function\u003cvoid ()\u003e\u0026\u0026)::{lambda(boost::system::error_code, unsigned int)#1}\u003e, boost::system::error_code, unsigned int\u003e\u0026, boost::asio::detail::binder2\u003cboost::asio::detail::write_op\u003cboost::asio::basic_stream_socket\u003cboost::asio::local::stream_protocol, boost::asio::any_io_executor\u003e, boost::asio::const_buffer, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, crow::nbd_proxy::NbdProxyServer::send(std::basic_string_view\u003cchar, std::char_traits\u003cchar\u003e \u003e, std::function\u003cvoid ()\u003e\u0026\u0026)::{lambda(boost::system::error_code, unsigned int)#1}\u003e, boost::system::error_code, unsigned int\u003e\u0026) (context\u003d..., function\u003d...) at /usr/include/boost/asio/detail/handler_invoke_helpers.hpp:51\n#11 boost::asio::detail::executor_function::complete\u003cboost::asio::detail::binder2\u003cboost::asio::detail::write_op\u003cboost::asio::basic_stream_socket\u003cboost::asio::local::stream_protocol, boost::asio::any_io_executor\u003e, boost::asio::const_buffer, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, crow::nbd_proxy::NbdProxyServer::send(std::basic_string_view\u003cchar, std::char_traits\u003cchar\u003e \u003e, std::function\u003cvoid ()\u003e\u0026\u0026)::{lambda(boost::system::error_code, unsigned int)#1}\u003e, boost::system::error_code, unsigned int\u003e, std::allocator\u003cvoid\u003e \u003e(boost::asio::detail::executor_function::impl_base*, bool) (base\u003d\u003coptimized out\u003e, call\u003d\u003coptimized out\u003e) at /usr/include/boost/asio/detail/executor_function.hpp:116\n#12 0x0080c088 in boost::asio::detail::executor_function::operator() (Python Exception \u003cclass \u0027NameError\u0027\u003e: Installation error: gdb._execute_unwinders function is missing\nthis\u003d0x7eee35f8) at /usr/include/boost/asio/detail/executor_function.hpp:64\n#13 boost_asio_handler_invoke_helpers::invoke\u003cboost::asio::detail::executor_function, boost::asio::detail::executor_function\u003e (context\u003d..., function\u003d...) at /usr/include/boost/asio/detail/handler_invoke_helpers.hpp:51\n#14 boost::asio::io_context::basic_executor_type\u003cstd::allocator\u003cvoid\u003e, 4u\u003e::execute\u003cboost::asio::detail::executor_function\u003e (this\u003d0x7eee3688, Python Exception \u003cclass \u0027NameError\u0027\u003e: Installation error: gdb._execute_unwinders function is missing\nf\u003d...) at /usr/include/boost/asio/impl/io_context.hpp:288\n#15 0x0080c180 in boost_asio_execution_execute_fn::impl::operator()\u003cboost::asio::io_context::basic_executor_type\u003cstd::allocator\u003cvoid\u003e, 4u\u003e const\u0026, boost::asio::detail::executor_function\u003e (f\u003d..., t\u003d..., this\u003d\u003csynthetic pointer\u003e) at /usr/include/boost/asio/execution/execute.hpp:208\n#16 boost::asio::execution::detail::any_executor_base::execute_ex\u003cboost::asio::io_context::basic_executor_type\u003cstd::allocator\u003cvoid\u003e, 4u\u003e \u003e (ex\u003d..., f\u003d...) at /usr/include/boost/asio/execution/any_executor.hpp:894\n#17 0x007da6fc in boost::asio::execution::detail::any_executor_base::execute\u003cboost::asio::detail::binder2\u003cboost::asio::detail::write_op\u003cboost::asio::basic_stream_socket\u003cboost::asio::local::stream_protocol, boost::asio::any_io_executor\u003e, boost::asio::const_buffer, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, crow::nbd_proxy::NbdProxyServer::send(std::basic_string_view\u003cchar, std::char_traits\u003cchar\u003e \u003e, std::function\u003cvoid ()\u003e\u0026\u0026)::{lambda(boost::system::error_code, unsigned int)#1}\u003e, boost::system::error_code, unsigned int\u003e \u003e(boost::asio::detail::binder2\u003cboost::asio::detail::write_op\u003cboost::asio::basic_stream_socket\u003cboost::asio::local::stream_protocol, boost::asio::any_io_executor\u003e, boost::asio::const_buffer, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, crow::nbd_proxy::NbdProxyServer::send(std::basic_string_view\u003cchar, std::char_traits\u003cchar\u003e \u003e, std::function\u003cvoid ()\u003e\u0026\u0026)::{lambda(boost::system::error_code, unsigned int)#1}\u003e, boost::system::error_code, unsigned int\u003e\u0026\u0026) const (Python Exception \u003cclass \u0027NameError\u0027\u003e: Installation error: gdb._execute_unwinders function is missing\nf\u003d..., this\u003d0x7eee3680) at /usr/include/boost/asio/execution/any_executor.hpp:611\n#18 boost_asio_execution_execute_fn::impl::operator()\u003cboost::asio::any_io_executor, boost::asio::detail::binder2\u003cboost::asio::detail::write_op\u003cboost::asio::basic_stream_socket\u003cboost::asio::local::stream_protocol, boost::asio::any_io_executor\u003e, boost::asio::const_buffer, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, crow::nbd_proxy::NbdProxyServer::send(std::basic_string_view\u003cchar, std::char_traits\u003cchar\u003e \u003e, std::function\u003cvoid ()\u003e\u0026\u0026)::{lambda(boost::system::error_code, unsigned int)#1}\u003e, boost::system::error_code, unsigned int\u003e \u003e(boost::asio::any_io_executor\u0026\u0026, boost::asio::detail::binder2\u003cboost::asio::detail::write_op\u003cboost::asio::basic_stream_socket\u003cboost::asio::local::stream_protocol, boost::asio::any_io_executor\u003e, boost::asio::const_buffer, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, crow::nbd_proxy::NbdProxyServer::send(std::basic_string_view\u003cchar, std::char_traits\u003cchar\u003e \u003e, std::function\u003cvoid ()\u003e\u0026\u0026)::{lambda(boost::system::error_code, unsigned int)#1}\u003e, boost::system::error_code, unsigned int\u003e\u0026\u0026) const (f\u003d..., t\u003d..., this\u003d\u003csynthetic pointer\u003e) at /usr/include/boost/asio/execution/execute.hpp:208\n#19 boost::asio::detail::handler_work_base\u003cboost::asio::any_io_executor, void, boost::asio::io_context, boost::asio::executor, void\u003e::dispatch\u003cboost::asio::detail::binder2\u003cboost::asio::detail::write_op\u003cboost::asio::basic_stream_socket\u003cboost::asio::local::stream_protocol, boost::asio::any_io_executor\u003e, boost::asio::const_buffer, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, crow::nbd_proxy::NbdProxyServer::send(std::basic_string_view\u003cchar, std::char_traits\u003cchar\u003e \u003e, std::function\u003cvoid ()\u003e\u0026\u0026)::{lambda(boost::system::error_code, unsigned int)#1}\u003e, boost::system::error_code, unsigned int\u003e, boost::asio::detail::write_op\u003cboost::asio::basic_stream_socket\u003cboost::asio::local::stream_protocol, boost::asio::any_io_executor\u003e, boost::asio::const_buffer, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, crow::nbd_proxy::NbdProxyServer::send(std::basic_string_view\u003cchar, std::char_traits\u003cchar\u003e \u003e, std::function\u003cvoid ()\u003e\u0026\u0026)::{lambda(boost::system::error_code, unsigned int)#1}\u003e \u003e(boost::asio::detail::binder2\u003cboost::asio::detail::write_op\u003cboost::asio::basic_stream_socket\u003cboost::asio::local::stream_protocol, boost::asio::any_io_executor\u003e, boost::asio::const_buffer, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, crow::nbd_proxy::NbdProxyServer::send(std::basic_string_view\u003cchar, std::char_traits\u003cchar\u003e \u003e, std::function\u003cvoid ()\u003e\u0026\u0026)::{lambda(boost::system::error_code, unsigned int)#1}\u003e, boost::system::error_code, unsigned int\u003e\u0026, boost::asio::detail::write_op\u003cboost::asio::basic_stream_socket\u003cboost::asio::local::stream_protocol, boost::asio::any_io_executor\u003e, boost::asio::const_buffer, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, crow::nbd_proxy::NbdProxyServer::send(std::basic_string_view\u003cchar, std::char_traits\u003cchar\u003e \u003e, std::function\u003cvoid ()\u003e\u0026\u0026)::{lambda(boost::system::error_code, unsigned int)#1}\u003e\u0026) (function\u003d..., this\u003d0x7eee3664) at /usr/include/boost/asio/detail/handler_work.hpp:439\n#20 boost::asio::detail::handler_work\u003cboost::asio::detail::write_op\u003cboost::asio::basic_stream_socket\u003cboost::asio::local::stream_protocol, boost::asio::any_io_executor\u003e, boost::asio::const_buffer, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, crow::nbd_proxy::NbdProxyServer::send(std::basic_string_view\u003cchar, std::char_traits\u003cchar\u003e \u003e, std::function\u003cvoid ()\u003e\u0026\u0026)::{lambda(boost::system::error_code, unsigned int)#1}\u003e, boost::asio::any_io_executor, void\u003e::complete\u003cboost::asio::detail::binder2\u003cboost::asio::detail::write_op\u003cboost::asio::basic_stream_socket\u003cboost::asio::local::stream_protocol, boost::asio::any_io_executor\u003e, boost::asio::const_buffer, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, crow::nbd_proxy::NbdProxyServer::send(std::basic_string_view\u003cchar, std::char_traits\u003cchar\u003e \u003e, std::function\u003cvoid ()\u003e\u0026\u0026)::{lambda(boost::system::error_code, unsigned int)#1}\u003e, boost::system::error_code, unsigned int\u003e \u003e(boost::asio::detail::binder2\u003cboost::asio::detail::write_op\u003cboost::asio::basic_stream_socket\u003cboost::asio::local::stream_protocol, boost::asio::any_io_executor\u003e, boost::asio::const_buffer, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, crow::nbd_proxy::NbdProxyServer::send(std::basic_string_view\u003cchar, std::char_traits\u003cchar\u003e \u003e, std::function\u003cvoid ()\u003e\u0026\u0026)::{lambda(boost::system::error_code, unsigned int)#1}\u003e, boost::system::error_code, unsigned int\u003e\u0026, boost::asio::detail::write_op\u003cboost::asio::basic_stream_socket\u003cboost::asio::local::stream_protocol, boost::asio::any_io_executor\u003e, boost::asio::const_buffer, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, crow::nbd_proxy::NbdProxyServer::send(std::basic_string_view\u003cchar, std::char_traits\u003cchar\u003e \u003e, std::function\u003cvoid ()\u003e\u0026\u0026)::{lambda(boost::system::error_code, unsigned int)#1}\u003e\u0026) (handler\u003d..., function\u003d..., this\u003d0x7eee3664) at /usr/include/boost/asio/detail/handler_work.hpp:516\n#21 boost::asio::detail::reactive_socket_send_op\u003cboost::asio::const_buffer, boost::asio::detail::write_op\u003cboost::asio::basic_stream_socket\u003cboost::asio::local::stream_protocol, boost::asio::any_io_executor\u003e, boost::asio::const_buffer, boost::asio::const_buffer const*, boost::asio::detail::transfer_all_t, crow::nbd_proxy::NbdProxyServer::send(std::basic_string_view\u003cchar, std::char_traits\u003cchar\u003e \u003e, std::function\u003cvoid ()\u003e\u0026\u0026)::{lambda(boost::system::error_code, unsigned int)#1}\u003e, boost::asio::any_io_executor\u003e::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const\u0026, unsigned int) (owner\u003downer@entry\u003d0xf70d80, base\u003dbase@entry\u003d0x12f81d8) at /usr/include/boost/asio/detail/reactive_socket_send_op.hpp:148\n#22 0x00523b8c in boost::asio::detail::scheduler_operation::complete (bytes_transferred\u003d0, ec\u003d..., owner\u003d0xf70d80, this\u003d0x12f81d8) at /usr/include/boost/asio/detail/scheduler_operation.hpp:40\n#23 boost::asio::detail::scheduler::do_run_one (Python Exception \u003cclass \u0027NameError\u0027\u003e: Installation error: gdb._execute_unwinders function is missing\nthis\u003dthis@entry\u003d0xf70d80, Python Exception \u003cclass \u0027NameError\u0027\u003e: Installation error: gdb._execute_unwinders function is missing\nlock\u003d..., this_thread\u003d..., ec\u003d...) at /usr/include/boost/asio/detail/impl/scheduler.ipp:492\n#24 0x005321b8 in boost::asio::detail::scheduler::run (this\u003d0xf70d80, Python Exception \u003cclass \u0027NameError\u0027\u003e: Installation error: gdb._execute_unwinders function is missing\nec\u003d...) at /usr/include/boost/asio/detail/impl/scheduler.ipp:210\n#25 0x00535100 in boost::asio::io_context::run (Python Exception \u003cclass \u0027NameError\u0027\u003e: Installation error: gdb._execute_unwinders function is missing\nthis\u003dthis@entry\u003d0x0) at /usr/include/boost/asio/impl/io_context.ipp:63\n#26 0x005b80b0 in run () at /usr/include/c++/11.3.0/bits/shared_ptr_base.h:1295\n#27 0x005b8188 in main () at ../../../../../../workspace/sources/bmcweb/src/webserver_main.cpp:156\nPython Exception \u003cclass \u0027NameError\u0027\u003e: Installation error: gdb._execute_unwinders function is missing",
      "range": {
        "startLine": 124,
        "startChar": 12,
        "endLine": 134,
        "endChar": 57
      },
      "revId": "b066c3e0c1e916d3ba2c87444708c629cb0f8dc0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce4b4e7c_0df3ec7d",
        "filename": "include/nbd_proxy.hpp",
        "patchSetId": 5
      },
      "lineNbr": 319,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2022-08-16T11:31:17Z",
      "side": 1,
      "message": "In situation, when onMessage handler runs on parallel with onOpen, there might occur situation when NbdProxyServer instance is not yet created. In this situation, connection will immediately be closed even before onOpen handler completion. This can be observed in journal logs below (notice when onMessageEx is called, and when NbdProxyServer is actually constructed):\n\nAug 15 12:49:46 intel-obmc bmcweb[391]: (2022-08-15 12:49:46) [DEBUG \"websocket.hpp\":245] Websocket accepted connection\nAug 15 12:49:46 intel-obmc bmcweb[391]: (2022-08-15 12:49:46) [DEBUG \"websocket.hpp\":257] ConnectionImpl::doRead() entry\nAug 15 12:49:46 intel-obmc bmcweb[391]: (2022-08-15 12:49:46) [DEBUG \"nbd_proxy.hpp\":288] nbd-proxy.onopen(0x22e7120)\nAug 15 12:49:46 intel-obmc bmcweb[391]: (2022-08-15 12:49:46) [DEBUG \"websocket.hpp\":262] ConnectionImpl async read callback entry\nAug 15 12:49:46 intel-obmc bmcweb[391]: (2022-08-15 12:49:46) [DEBUG \"nbd_proxy.hpp\":318] nbd-proxy.onMessageEx(len \u003d 18)\nAug 15 12:49:46 intel-obmc bmcweb[391]: (2022-08-15 12:49:46) [DEBUG \"nbd_proxy.hpp\":329] Couldn\u0027t find NbdProxyServer instance for connection 0x22e7120\nAug 15 12:49:46 intel-obmc bmcweb[391]: (2022-08-15 12:49:46) [DEBUG \"websocket.hpp\":224] ConnectionImpl::close(\"internal error\") entry\nAug 15 12:49:46 intel-obmc bmcweb[391]: (2022-08-15 12:49:46) [DEBUG \"websocket.hpp\":257] ConnectionImpl::doRead() entry\nAug 15 12:49:46 intel-obmc bmcweb[391]: (2022-08-15 12:49:46) [DEBUG \"nbd_proxy.hpp\":207] afterGetManagedObjects() entry\nAug 15 12:49:46 intel-obmc bmcweb[391]: (2022-08-15 12:49:46) [DEBUG \"nbd_proxy.hpp\":278] Session is null for connection 0x22e7120\nAug 15 12:49:46 intel-obmc bmcweb[391]: (2022-08-15 12:49:46) [DEBUG \"nbd_proxy.hpp\":56] NbdProxyServer constructor\nAug 15 12:49:46 intel-obmc bmcweb[391]: (2022-08-15 12:49:46) [DEBUG \"nbd_proxy.hpp\":80] NbdProxyServer::run() entry\nAug 15 12:49:46 intel-obmc virtual-media[312]: [Info    ] [initial_state.hpp:283] operator()(): [App]: Mount called on /xyz/openbmc_project/VirtualMedia/Proxy/Slot_0\nAug 15 12:49:46 intel-obmc virtual-media[312]: [Info    ] [state_machine.hpp:68] emitEvent(): Slot_0 received MountEvent while in ReadyState\nAug 15 12:49:46 intel-obmc virtual-media[312]: [Info    ] [state_machine.hpp:58] changeState(): Slot_0 state changed to ActivatingState\nAug 15 12:49:46 intel-obmc bmcweb[391]: (2022-08-15 12:49:46) [DEBUG \"websocket.hpp\":228] ConnectionImpl: websocket async close callback entry\nAug 15 12:49:46 intel-obmc bmcweb[391]: (2022-08-15 12:49:46) [ERROR \"websocket.hpp\":236] Error closing websocket asio.ssl.stream:1\nAug 15 12:49:46 intel-obmc bmcweb[391]: (2022-08-15 12:49:46) [DEBUG \"websocket.hpp\":237] Error details: stream truncated [asio.ssl.stream:1]\nAug 15 12:49:46 intel-obmc bmcweb[391]: (2022-08-15 12:49:46) [DEBUG \"websocket.hpp\":262] ConnectionImpl async read callback entry\nAug 15 12:49:46 intel-obmc bmcweb[391]: (2022-08-15 12:49:46) [ERROR \"websocket.hpp\":267] doRead error system:125\nAug 15 12:49:46 intel-obmc bmcweb[391]: (2022-08-15 12:49:46) [DEBUG \"websocket.hpp\":268] Error details: Operation canceled [system:125]\nAug 15 12:49:46 intel-obmc bmcweb[391]: (2022-08-15 12:49:46) [DEBUG \"nbd_proxy.hpp\":303] nbd-proxy.onclose(reason \u003d \u0027internal error\u0027)\nAug 15 12:49:46 intel-obmc bmcweb[391]: (2022-08-15 12:49:46) [DEBUG \"nbd_proxy.hpp\":66] NbdProxyServer destructor\nAug 15 12:49:46 intel-obmc bmcweb[391]: (2022-08-15 12:49:46) [DEBUG \"nbd_proxy.hpp\":83] NbdProxyServer: Async accept callback entry\nAug 15 12:49:46 intel-obmc bmcweb[391]: (2022-08-15 12:49:46) [ERROR \"nbd_proxy.hpp\":86] UNIX socket: async_accept error \u003d Operation canceled\nAug 15 12:49:46 intel-obmc virtual-media[312]: [Info    ] [system.hpp:382] operator()(): [Process]: Start reading console from nbd-client\nAug 15 12:49:46 intel-obmc virtual-media[312]: [Info    ] [initial_state.hpp:214] operator()(): [App]: Unmount called on Slot_0\nAug 15 12:49:46 intel-obmc virtual-media[312]: [Info    ] [state_machine.hpp:68] emitEvent(): Slot_0 received UnmountEvent while in ActivatingState\nAug 15 12:49:46 intel-obmc virtual-media[312]: [Error   ] [activating_state.hpp:21] handleEvent(): Invalid event: UnmountEvent",
      "range": {
        "startLine": 314,
        "startChar": 4,
        "endLine": 319,
        "endChar": 5
      },
      "revId": "b066c3e0c1e916d3ba2c87444708c629cb0f8dc0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c706ca37_1db2ddfd",
        "filename": "include/nbd_proxy.hpp",
        "patchSetId": 5
      },
      "lineNbr": 319,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-16T18:12:58Z",
      "side": 1,
      "message": "In the above logs I\u0027m seeing ConnectionImpl::close(\"internal error\")\n\nWhich doesn\u0027t exist in bmcweb master.  \n\nSame thing with\n\n\u003e [DEBUG \"nbd_proxy.hpp\":329]\n\nWhich doesn\u0027t have a print statement on it.  If you\u0027ve made modifications to this patch, can you push them somewhere that I can seem them?  If not, are you sure that this is the patch you loaded?\n\n\n\u003e there might occur situation when NbdProxyServer instance is not yet created\n\ncan you describe this better?",
      "parentUuid": "ce4b4e7c_0df3ec7d",
      "range": {
        "startLine": 314,
        "startChar": 4,
        "endLine": 319,
        "endChar": 5
      },
      "revId": "b066c3e0c1e916d3ba2c87444708c629cb0f8dc0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a029681_3f6240d5",
        "filename": "include/nbd_proxy.hpp",
        "patchSetId": 5
      },
      "lineNbr": 319,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2022-08-17T09:28:11Z",
      "side": 1,
      "message": "\u003e Which doesn\u0027t have a print statement on it.  If you\u0027ve made modifications to this patch, can you push them somewhere that I can seem them?  If not, are you sure that this is the patch you loaded?\n\nThose additional logs have been by me in order to take a closer look on what might fail here. If You want, I\u0027ll open another work-in-progress article adding those traces for Your reference - of course with no intention to merge them later as I consider them debug-only.\n\n\n\u003e \n\u003e \u003e there might occur situation when NbdProxyServer instance is not yet created\n\u003e \n\u003e can you describe this better?\n\nI thought that attached logs describe this situation pretty well, but I might have been wrong. If You take a look at them, You\u0027ll notice that nbd-proxy.onopen and nbd-proxy.onmessageex start pretty much one after another. OnOpen handler, after confirming that endpoint parameters are OK, creates an instance of NbdProxyServer (nbd_proxy.hpp:267). The problem is that onMessage handler, which has been run on parallel with onOpen, tried to obtain the NbdProxyServer instance in a moment when it had not yet been created. This results with immediate connection close with message \"internal error\" (nbd_proxy.hpp:314-319).\n\nI hope that this describes the situation better.",
      "parentUuid": "c706ca37_1db2ddfd",
      "range": {
        "startLine": 314,
        "startChar": 4,
        "endLine": 319,
        "endChar": 5
      },
      "revId": "b066c3e0c1e916d3ba2c87444708c629cb0f8dc0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f574e11_2e9acea6",
        "filename": "include/nbd_proxy.hpp",
        "patchSetId": 5
      },
      "lineNbr": 319,
      "author": {
        "id": 1001329
      },
      "writtenOn": "2022-08-17T14:50:38Z",
      "side": 1,
      "message": "You can find the insertion of additonal log messages here: https://gerrit.openbmc.org/c/openbmc/bmcweb/+/56587",
      "parentUuid": "9a029681_3f6240d5",
      "range": {
        "startLine": 314,
        "startChar": 4,
        "endLine": 319,
        "endChar": 5
      },
      "revId": "b066c3e0c1e916d3ba2c87444708c629cb0f8dc0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}