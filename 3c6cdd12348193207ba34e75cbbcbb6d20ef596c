{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "04c89882_014e5407",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 41
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-02-22T14:41:49Z",
      "side": 1,
      "message": "@Ed you want another look here?",
      "revId": "3c6cdd12348193207ba34e75cbbcbb6d20ef596c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3807d2d7_a0ae105d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 41
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-22T17:34:08Z",
      "side": 1,
      "message": "I\u0027m having trouble even determining how many mapper calls are being done here, so I stopped trying.\n\nthe correct progression is \n\nHTTP request\nsingle mapper call\ncall to daemon(s) the mapper returns\nReturn value to user\n\n\nIn some places this looks like it\u0027s doing 3 chained mapper calls, then trying to parse the result in bmcweb.  That results in a ton of code below.  Lets get it down to a mapper call per object we\u0027re looking up, then we can go from there.",
      "revId": "3c6cdd12348193207ba34e75cbbcbb6d20ef596c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93602b45_2ba815c8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 41
      },
      "lineNbr": 0,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2024-07-19T15:25:34Z",
      "side": 1,
      "message": "I rewrite the powersupply code to decrease the number of mapper calls.\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/72423",
      "parentUuid": "3807d2d7_a0ae105d",
      "revId": "3c6cdd12348193207ba34e75cbbcbb6d20ef596c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d9982c58_e7f7bcf2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 41
      },
      "lineNbr": 0,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2024-11-25T14:34:23Z",
      "side": 1,
      "message": "I believe Lakshmi addressed this comment. Please reopen if I\u0027m incorrect.",
      "parentUuid": "93602b45_2ba815c8",
      "revId": "3c6cdd12348193207ba34e75cbbcbb6d20ef596c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af78c43d_7ef75586",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 41
      },
      "lineNbr": 0,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2024-11-25T14:34:23Z",
      "side": 1,
      "message": "Marking resolved to make it clear there are not any unaddressed review comments.",
      "parentUuid": "04c89882_014e5407",
      "revId": "3c6cdd12348193207ba34e75cbbcbb6d20ef596c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cbb8eea_19208c18",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 41
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-12-05T20:50:39Z",
      "side": 1,
      "message": "We\u0027re still chaining multiple mapper calls in this patch.\n\nFirst chained call is in getValidPowerSupplyPath\n\nsecond mapper call is getLedGroupPath",
      "parentUuid": "d9982c58_e7f7bcf2",
      "revId": "3c6cdd12348193207ba34e75cbbcbb6d20ef596c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f203efee_8e16abe9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 41
      },
      "lineNbr": 0,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2024-12-05T23:01:22Z",
      "side": 1,
      "message": "I see, I understand now what this comment is about. Given the D-Bus relationships I\u0027m not seeing how two mapper calls can be avoided in this case. There are two separate D-Bus paths that provide the details for a power supply:\n 1) power supply (provides most of the properties of the power supply)\n 2) logical led group associated to power supply (provides LED setting for power supply)\n \nIs there a D-Bus interface I can use which will get the power supply associated with the chassis and its associated objects in one call?\n\nBusctl details showing the relationships:\n```\n/* Power supply itself is found through the powered_by association.\n * This path is used to get most of the power supply properties\n */\n# busctl --json\u003dpretty call xyz.openbmc_project.ObjectMapper /xyz/openbmc_project/object_mapper xyz.openbmc_project.ObjectMapper GetAssociatedSubTreeById ssassas chassis /xyz/openbmc_project/inventory 2 xyz.openbmc_project.Inventory.Item.Board xyz.openbmc_project.Inventory.Item.Chassis powered_by 1 xyz.openbmc_project.Inventory.Item.PowerSupply\n{\n        \"type\" : \"a{sa{sas}}\",\n        \"data\" : [\n                {\n                        \"/xyz/openbmc_project/inventory/system/chassis/motherboard/powersupply0\" : {\n                                \"xyz.openbmc_project.Inventory.Manager\" : [\n                                        \"org.freedesktop.DBus.Introspectable\",\n                                        \"org.freedesktop.DBus.Peer\",\n                                        \"org.freedesktop.DBus.Properties\",\n                                        \"xyz.openbmc_project.Association.Definitions\",\n                                        \"xyz.openbmc_project.Inventory.Decorator.Asset\",\n                                        \"xyz.openbmc_project.Inventory.Decorator.LocationCode\",\n                                        \"xyz.openbmc_project.Inventory.Item\",\n                                        \"xyz.openbmc_project.Inventory.Item.PowerSupply\",\n                                        \"xyz.openbmc_project.Object.Enable\",\n                                        \"xyz.openbmc_project.Software.Version\",\n                                        \"xyz.openbmc_project.State.Decorator.Availability\",\n                                        \"xyz.openbmc_project.State.Decorator.OperationalStatus\"\n                                ]\n                        },\n[...]\n\n\n/* The power supply has an association for the LED group path */\n# busctl introspect xyz.openbmc_project.Inventory.Manager /xyz/openbmc_project/inventory/system/chassis/motherboard/powersupply0 --full | grep Association\nxyz.openbmc_project.Association.Definitions           interface -         -\n.Associations                                         property  a(sss)    10 \n[...]\n\"identifying\" \"identified_by\" \"/xyz/openbmc_project/led/groups/powersupply0_identify\"\n[...]\n\n/* Second object which is the logical LED group path.\n * This is where the value for the LED is implemented.\n */\n# busctl --json\u003dpretty call xyz.openbmc_project.ObjectMapper /xyz/openbmc_project/object_mapper xyz.openbmc_project.ObjectMapper GetAssociatedSubTree ooias /xyz/openbmc_project/inventory/system/chassis/motherboard/powersupply0/identifying /xyz/openbmc_project/led/groups 0 1 xyz.openbmc_project.Led.Group\n{\n        \"type\" : \"a{sa{sas}}\",\n        \"data\" : [\n                {\n                        \"/xyz/openbmc_project/led/groups/powersupply0_identify\" : {\n                                \"xyz.openbmc_project.LED.GroupManager\" : [\n                                        \"org.freedesktop.DBus.Introspectable\",\n                                        \"org.freedesktop.DBus.Peer\",\n                                        \"org.freedesktop.DBus.Properties\",\n                                        \"xyz.openbmc_project.Led.Group\"\n                                ]\n                        }\n                }\n        ]\n}\n\n# busctl get-property xyz.openbmc_project.LED.GroupManager /xyz/openbmc_project/led/groups/powersupply0_identify xyz.openbmc_project.Led.Group Asserted\nb false\n```",
      "parentUuid": "4cbb8eea_19208c18",
      "revId": "3c6cdd12348193207ba34e75cbbcbb6d20ef596c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "013ccd92_a1f6701d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 41
      },
      "lineNbr": 0,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2025-01-15T16:37:28Z",
      "side": 1,
      "message": "I believe this is resolved the best it can be given the LED architecture.",
      "parentUuid": "f203efee_8e16abe9",
      "revId": "3c6cdd12348193207ba34e75cbbcbb6d20ef596c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7bc1805_c2ff39e5",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 41
      },
      "lineNbr": 336,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-22T17:34:08Z",
      "side": 1,
      "message": "Looks like we\u0027re now duplicating a mapper call.",
      "revId": "3c6cdd12348193207ba34e75cbbcbb6d20ef596c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5b00494_01c3e365",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 41
      },
      "lineNbr": 336,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2024-07-19T15:25:34Z",
      "side": 1,
      "message": "I did not follow, which call we are we duplicating.",
      "parentUuid": "b7bc1805_c2ff39e5",
      "revId": "3c6cdd12348193207ba34e75cbbcbb6d20ef596c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1f42f77_d99fa6c5",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 41
      },
      "lineNbr": 336,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2024-10-30T19:19:45Z",
      "side": 1,
      "message": "I\u0027m not clear if there is still something that needs to be addressed for this comment. Did the change from getAssociatedSubTreePaths() to getAssociatedSubTree() address this comment?",
      "parentUuid": "a5b00494_01c3e365",
      "revId": "3c6cdd12348193207ba34e75cbbcbb6d20ef596c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "210d5bcb_d1118e09",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 41
      },
      "lineNbr": 336,
      "author": {
        "id": 1001621
      },
      "writtenOn": "2024-11-25T14:34:23Z",
      "side": 1,
      "message": "I believe this was addressed in the code restructure. Please reopen if I\u0027m incorrect.",
      "parentUuid": "c1f42f77_d99fa6c5",
      "revId": "3c6cdd12348193207ba34e75cbbcbb6d20ef596c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "062313e8_e062bd67",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 41
      },
      "lineNbr": 392,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-02-22T17:38:03Z",
      "side": 1,
      "message": "Please review the WIP aiming to change these calls.",
      "range": {
        "startLine": 392,
        "startChar": 21,
        "endLine": 392,
        "endChar": 32
      },
      "revId": "3c6cdd12348193207ba34e75cbbcbb6d20ef596c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a40ff3ec_ad1d8623",
        "filename": "redfish-core/lib/led.hpp",
        "patchSetId": 41
      },
      "lineNbr": 392,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2024-07-19T15:25:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "062313e8_e062bd67",
      "range": {
        "startLine": 392,
        "startChar": 21,
        "endLine": 392,
        "endChar": 32
      },
      "revId": "3c6cdd12348193207ba34e75cbbcbb6d20ef596c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}