{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "04294bd0_17189264",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2022-04-11T14:21:50Z",
      "side": 1,
      "message": "@Jia - If there are systems who support the dbus property ",
      "revId": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f67666c4_6905642d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2022-04-11T14:28:27Z",
      "side": 1,
      "message": "Please ignore this. Seems like I typed half sentence",
      "parentUuid": "04294bd0_17189264",
      "revId": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "341bede8_56fbf84e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-11T15:31:38Z",
      "side": 1,
      "message": "I left a long comment in one of the threads, but haven\u0027t looked at the full content of the patch in depth.  Lets figure out what we\u0027d like to do long-term about this hypervisor node (and ComputerSystem collection in general) which will need input from the other maintainers, then, once we have a reasonable direction, we can start talking about what specific patches get us from point A to point B.\n\nI find it very likely that we\u0027ll need something like this patch as an intermediate step, but I really don\u0027t want it to spawn into a design pattern of if(ibm_oem), if(google_oem) for anything more than the \u003coem\u003e/v1 namespaces (and even in that case, it\u0027s a mediocre design pattern, for the moment it\u0027s the best we have).",
      "revId": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9f46449_cde2469a",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 2665,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-04-10T21:56:15Z",
      "side": 1,
      "message": "Currently, only IBM has implemented Hypervisor management but my understanding is that the DBus interfaces are generically defined so that others could support this in the future. Do we really want “IBM” here?  If so, should this be OEM code of some sort?  I’m not sure if it is good to add additional “only compiles on one machine that isn’t CI” code if we can help it.",
      "revId": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e8f79db_6b1f7efd",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 2665,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-04-11T03:00:53Z",
      "side": 1,
      "message": "The dbus interfaces are only defined in meta-ibm. e.g. https://github.com/openbmc/openbmc/blob/master/meta-ibm/recipes-phosphor/settings/phosphor-settings-manager/HypervisorInterface-default-p10bmc.override.yml\n\nThough other vendors can implement their own \"hypervisor\", but the API might be different. That\u0027s why I added IBM here.\n\nI\u0027m not familar with the CI, but by checking the CI logs, some other features are also not compiled like redfish-cpu-log, redfish-bmc-journal. If we need CI support, it might be better to add some CI rules to enable all meson options?",
      "parentUuid": "c9f46449_cde2469a",
      "revId": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08b01527_f30655a2",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 2665,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-04-11T13:22:59Z",
      "side": 1,
      "message": "\u003e I\u0027m not familar with the CI, but by checking the CI logs, some other features are also not compiled like redfish-cpu-log, redfish-bmc-journal. If we need CI support, it might be better to add some CI rules to enable all meson options?\n\nMy opinion is yes, but I\u0027m not the maintainer of this repo.  In most cases we want CI to cover the maximum code it can so we enable all options and then disable them as necessary in the bitbake recipe(s).",
      "parentUuid": "3e8f79db_6b1f7efd",
      "revId": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad91f7cf_203eb0d4",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 2665,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-11T15:31:38Z",
      "side": 1,
      "message": "Here\u0027s my take on this:\nAs a design principal in bmcweb, Redfish collections should:\n1. Call the mapper to determine what dbus interfaces exist on the system\n2. Use those dbus interface listings to construct the appropriate resources on Redfish.\n\nWe do that to avoid code duplication, and to avoid the exact problem being seen here, where because we\u0027ve duplicated a bunch of code, and hardcoded resource names, we\u0027re seeing inefficiencies in producing these interfaces properly, and having debates about a sea of options that are easily determined at runtime.  From my perspective, an OpenBMC system might have:\n\n1 host ComputerSystem resource\nN host ComputerSystem resources as is the case on yosemite and similar high density platforms\n0 host ComputerSystems, as is in the case of many JBOF BMC applications.\nMultiple classes of ComputerSystem (ie N \"hosts\" and M \"hypervisors\")\n1 host ComputerSystem representing the BMC itself (as has been discussed in DMTF before)\n\nAnd bmcweb will need to handle all of those cases;\n\nUnfortunately, the hypervisor code chose to do neither 1 or 2 of the above, and instead copied and pasted a bunch of code, hardcoding in the new resource.  This has been noted before, and why for the moment, the hypervisor code needs its own unique namespace to handle all the collisions.\nhttps://github.com/openbmc/bmcweb/blob/bacb216228c45ca715163f4c81717b1af39889ab/redfish-core/lib/hypervisor_system.hpp#L16\n\n\n\u003e Though other vendors can implement their own \"hypervisor\", but the API might be different. That\u0027s why I added IBM here.\n\nThe DBus API should be, to the limits possible, the same;  This keeps business logic code (that likely needs to be changed per application) out of bmcweb, and in the specific instances of the daemons where it belongs, while still being able to produce the correct Redfish API.\n\n\n\u003e If we need CI support, it might be better to add some CI rules to enable all meson options?\n\nWe already have ways to handle this, it\u0027s just this patchset chose not to implement them.  Not the fault of the author, as we have both patterns inside bmcweb at the moment (yay inconsistency).  Basically, put your option into the bmcweb_config.h file, and use if constexpr() to enable the logic needed.  This means that all code is \"compiled\" in all modes, then the code that we don\u0027t use gets deleted at link time.  For the things we\u0027ve moved to this pattern, we\u0027re already seeing builds break a lot less, and we can avoid mixing the repos opinions on what the \"defaults\" should be from being able to make sure all the code compiles.\n\nWith that said, in the ideal case, we should not have an option at all, but I realize that this code is already here, so I\u0027d like to get some input from the people that use it on:\nA. is it still being used?\nB. Are there any plans to refactor it in the future?",
      "parentUuid": "08b01527_f30655a2",
      "revId": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a22be0bc_04484650",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 2665,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-04-11T16:29:17Z",
      "side": 1,
      "message": "\u003e Basically, put your option into the bmcweb_config.h file, and use if constexpr() to enable the logic needed.\nCould you help explain this in more detail? I cannot figure out hot to do this. Any examples would be greatly appreciated.",
      "parentUuid": "ad91f7cf_203eb0d4",
      "revId": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73b41a30_c045d706",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 2665,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-11T16:52:32Z",
      "side": 1,
      "message": "Example that was checked in a couple days ago:\n\nhttps://github.com/openbmc/bmcweb/blob/142ec9aeb70c23a1aa98aa90d472ff11a76529ee/redfish-core/include/query.hpp#L28\n\nLots of other examples can be seen in the bmcweb_config.h file.",
      "parentUuid": "a22be0bc_04484650",
      "revId": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "448f3b5e_2a83b78e",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 2665,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-04-11T21:08:31Z",
      "side": 1,
      "message": "\u003e The dbus interfaces are only defined in meta-ibm. e.g. https://github.com/openbmc/openbmc/blob/master/meta-ibm/recipes-phosphor/settings/phosphor-settings-manager/HypervisorInterface-default-p10bmc.override.yml\n\nImplemented there but the D-Bus interfaces all look to be defined in https://github.com/openbmc/phosphor-dbus-interfaces\n\nI don\u0027t see why this is an IBM feature, \nhttps://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/hypervisor_system.hpp\nAll xyz.openbmc_project. interfaces and I would think other companies might have this use case\n\n\u003e A. is it still being used?\nYes\n\n\u003e B. Are there any plans to refactor it in the future?\nLet me try to get someone to do this",
      "parentUuid": "73b41a30_c045d706",
      "revId": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83800e79_58317f02",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 2665,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-04-11T21:10:38Z",
      "side": 1,
      "message": "And to be clear, by refactor you mostly mean addressing this comment, https://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/hypervisor_system.hpp#L16 ?",
      "parentUuid": "448f3b5e_2a83b78e",
      "revId": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20125eca_c39f0bc1",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 2665,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-11T22:49:52Z",
      "side": 1,
      "message": "\u003e Implemented there but the D-Bus interfaces all look to be defined in\n\nThe hardcoded dbus paths are not however, and considering those interfaces would conflict with the host based ones, that seems like something we should resolve at some point.\n\n\u003e And to be clear, by refactor you mostly mean addressing this comment, \nI mean what I said earlier in the thread.  The interfaces for a \"hypervisor\" aren\u0027t really special in comparison to a host.  Given where we need to go into the future, I don\u0027t think we can survive hardcoding \"has a hypervisor\" at this level, because you have to answer too many questions.\n\nWhat if it has 2 hypervisors?\nWhat if we need to handle a different kind of hypervisor on the same system?\nWhat if a bmc has both both (2 different kinds of hypervisors)?\nWhat if we have one of each type of hypervisor on N host systems?\n\nWe have answers for that at design level for most other things:  Declare a well defined dbus interface, then use the mapper to determine if those collections, and how many of items need to exist in the collection.\n\nIn a perfect world (where software is easy) I\u0027d love to see us completely remove the hardcoded dbus path names, and have the hypervisor guys participate in the design here: https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/52075 which is trying to abstract out how we deal with ComputerSystem collections.\n\nThat\u0027s really what I\u0027m getting at with refactoring.\n\n\nYes, ideally deduplicating the code in the process would be good too, but I think that\u0027s less important;  The end goal is getting it to be like the other subsystems.  For example, bmcweb doesn\u0027t have a \"# of sensors\" configure option.  ComputerSystem should ideally work the same.\n\nI think the more we can do this, the easier it will be to extend things in the future when new hypervisor and host interface things come online.",
      "parentUuid": "83800e79_58317f02",
      "revId": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d4e48e8_3405ef7b",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 2668,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-04-10T21:56:15Z",
      "side": 1,
      "message": "This seems to be the genesis of the problem here. These settings should not exist on any system that doesn’t intend to support the feature.\n\nI suspect we have a mistake in the default setting somewhere and this is getting included in them.",
      "revId": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ad42717_af87dfbb",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 2668,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-04-11T03:00:53Z",
      "side": 1,
      "message": "I checked the code, these settings are only defined in meta-ibm. In meta-phosphor, there is no such settings.\n\nhttps://github.com/openbmc/openbmc/blob/master/meta-ibm/recipes-phosphor/settings/phosphor-settings-manager_%25.bbappend\n\nI did a quick search, there is no hypervisor-related interface defined outside meta-ibm.",
      "parentUuid": "0d4e48e8_3405ef7b",
      "revId": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a80aa2b3_1e4e44f4",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 2668,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-04-11T13:22:59Z",
      "side": 1,
      "message": "If that is the case, why is this code doing anything on your system?",
      "parentUuid": "6ad42717_af87dfbb",
      "revId": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eee4cf32_0435ccd2",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 2668,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-04-11T15:03:53Z",
      "side": 1,
      "message": "It adds specific handler for /redfish/v1/Systems/hypervisor. Though it always gives error, but the behavior is not the same as accessing /redfish/v1/Systems/\u003csome_random_value\u003e. And I\u0027d like to reduce the binary size of bmcweb on systems that not support hypervisor.",
      "parentUuid": "a80aa2b3_1e4e44f4",
      "revId": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b87c9bd_8988f25a",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 2668,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-11T15:31:38Z",
      "side": 1,
      "message": "FWIW, this is the only place where we use a settings string to determine whether something is supported.  The mapper is far more reliable and preferred.\n\nIf this is moving to an option flag, should we be checking settings at all?  I suspect not.",
      "parentUuid": "a80aa2b3_1e4e44f4",
      "revId": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2b47c53_863c54eb",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 2668,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-04-11T16:29:17Z",
      "side": 1,
      "message": "Yes checking the setting is strange here. I will remove the dbus call.\n\nFrom my personal opinion, I would suggest Hypervisor using a interface like xyz.openbmc_project.State.Host later for probing it dynamically. https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/52075 This change implements such logic.",
      "parentUuid": "5b87c9bd_8988f25a",
      "revId": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5bcf8b2f_84cf542c",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 2668,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-11T16:52:32Z",
      "side": 1,
      "message": "\u003e Yes checking the setting is strange here. I will remove the dbus call.\n\u003e \n\u003e From my personal opinion, I would suggest Hypervisor using a interface like xyz.openbmc_project.State.Host later for probing it dynamically. https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/52075 This change implements such logic.\n\nYes, that\u0027s essentially what I said in the other comment (ie, use the mapper).",
      "parentUuid": "f2b47c53_863c54eb",
      "revId": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6c0fa79_c6d1802a",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 2669,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2022-04-11T14:21:50Z",
      "side": 1,
      "message": "Is this path implemented on a system which does not support the hypervisor ? And those systems do not want the hypervisor resource listed under Systems collection?",
      "range": {
        "startLine": 2669,
        "startChar": 20,
        "endLine": 2669,
        "endChar": 61
      },
      "revId": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03e6869f_0cb35c88",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 2669,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-04-11T15:03:53Z",
      "side": 1,
      "message": "It will not appear in SystemsCollection, but it implementes /redfish/v1/Systems/hypervisor and will give specific response (mostly errors).",
      "parentUuid": "c6c0fa79_c6d1802a",
      "range": {
        "startLine": 2669,
        "startChar": 20,
        "endLine": 2669,
        "endChar": 61
      },
      "revId": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf4d468a_ee5b34b3",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 2698,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-11T15:31:38Z",
      "side": 1,
      "message": "In terms of logic, please don\u0027t duplicate this between the paths.  This code is essentially the same as what\u0027s on 2679.  Please deduplicate",
      "range": {
        "startLine": 2692,
        "startChar": 0,
        "endLine": 2698,
        "endChar": 38
      },
      "revId": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24002153_b1e3e181",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 1
      },
      "lineNbr": 2698,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-04-11T16:29:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cf4d468a_ee5b34b3",
      "range": {
        "startLine": 2692,
        "startChar": 0,
        "endLine": 2698,
        "endChar": 38
      },
      "revId": "7f7020de1230549e8f6f8f2b0f7423d337b6c84d",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}