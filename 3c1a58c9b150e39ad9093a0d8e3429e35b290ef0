{
  "comments": [
    {
      "key": {
        "uuid": "a7cbc4eb_8671bee1",
        "filename": "DEVELOPING.md",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2021-08-18T17:50:03Z",
      "side": 1,
      "message": "Should any of this go in openbmc/docs or should we link there? I like to see as much of our contributing documentation go there so it spans the whole project. \n\nE.g. \n\n\"14. ### Commit messages\n   Commit messages should answer the following questions:\n\n   - Why are the changes useful?  Given that bmcweb is a user-facing daemon,\n      commits adding new functionality should include statements about how the\n      commit in question is useful to the user.\n      Exception: documentation changes, and bug fixes do not need justification.\n\n   - What changes would a user expect to see?  This includes new parameters, new\n     resources, and new or changed properties.  Any route changes should be\n     explicitly called out.\n\n   - Are there compatibility concerns?  Is this change backward compatible for\n     clients?  if not, what commit would be broken, and how old is it?   have\n     clients been warned? (ideally on the mailing list)  link the discussion.\n\nAs documented in https://github.com/openbmc/docs/blob/master/CONTRIBUTING.md#formatting-commit-messages we follow https://chris.beams.io/posts/git-commit/. As documented, commit messages should be line wrapped at 50/72.\"\n\nor \n\n14. ### Commit messages\nbmcweb follows https://github.com/openbmc/docs/blob/master/CONTRIBUTING.md#formatting-commit-messages. \n\nSome bmcweb specific things to consider in a commit message: \n   - Why are the changes useful?  Given that bmcweb is a user-facing daemon,\n      commits adding new functionality should include statements about how the\n      commit in question is useful to the user.\n      Exception: documentation changes, and bug fixes do not need justification.\n\n   - What changes would a user expect to see?  This includes new parameters, new\n     resources, and new or changed properties.  Any route changes should be\n     explicitly called out.\n\n   - Are there compatibility concerns?  Is this change backward compatible for\n     clients?  if not, what commit would be broken, and how old is it?   have\n     clients been warned? (ideally on the mailing list)  link the discussion.",
      "range": {
        "startLine": 129,
        "startChar": 0,
        "endLine": 144,
        "endChar": 48
      },
      "revId": "3c1a58c9b150e39ad9093a0d8e3429e35b290ef0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f013ca9_6673f0c8",
        "filename": "DEVELOPING.md",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-19T16:44:18Z",
      "side": 1,
      "message": "\u003e Should any of this go in openbmc/docs or should we link there? I like to see as much of our contributing documentation go there so it spans the whole project. \n\nAgreed, we should link there.  I suspect that we\u0027ll always have a bmcweb specific section, as there are specifics to redfish that need documented somewhere.\n\n\u003e \n\u003e E.g. \n\u003e \n\u003e \"14. ### Commit messages\n\u003e    Commit messages should answer the following questions:\n\u003e \n\u003e    - Why are the changes useful?  Given that bmcweb is a user-facing daemon,\n\u003e       commits adding new functionality should include statements about how the\n\u003e       commit in question is useful to the user.\n\u003e       Exception: documentation changes, and bug fixes do not need justification.\n\u003e \n\u003e    - What changes would a user expect to see?  This includes new parameters, new\n\u003e      resources, and new or changed properties.  Any route changes should be\n\u003e      explicitly called out.\n\u003e \n\u003e    - Are there compatibility concerns?  Is this change backward compatible for\n\u003e      clients?  if not, what commit would be broken, and how old is it?   have\n\u003e      clients been warned? (ideally on the mailing list)  link the discussion.\n\u003e \n\u003e As documented in https://github.com/openbmc/docs/blob/master/CONTRIBUTING.md#formatting-commit-messages we follow https://chris.beams.io/posts/git-commit/. As documented, commit messages should be line wrapped at 50/72.\"\n\nI can add this link.  That seems good to include.\n\n\u003e \n\u003e or \n\u003e \n\u003e 14. ### Commit messages\n\u003e bmcweb follows https://github.com/openbmc/docs/blob/master/CONTRIBUTING.md#formatting-commit-messages. \n\u003e \n\u003e Some bmcweb specific things to consider in a commit message: \n\u003e    - Why are the changes useful?  Given that bmcweb is a user-facing daemon,\n\u003e       commits adding new functionality should include statements about how the\n\u003e       commit in question is useful to the user.\n\u003e       Exception: documentation changes, and bug fixes do not need justification.\n\u003e \n\u003e    - What changes would a user expect to see?  This includes new parameters, new\n\u003e      resources, and new or changed properties.  Any route changes should be\n\u003e      explicitly called out.\n\u003e \n\u003e    - Are there compatibility concerns?  Is this change backward compatible for\n\u003e      clients?  if not, what commit would be broken, and how old is it?   have\n\u003e      clients been warned? (ideally on the mailing list)  link the discussion.",
      "parentUuid": "a7cbc4eb_8671bee1",
      "range": {
        "startLine": 129,
        "startChar": 0,
        "endLine": 144,
        "endChar": 48
      },
      "revId": "3c1a58c9b150e39ad9093a0d8e3429e35b290ef0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e06df0d_33b0243a",
        "filename": "DEVELOPING.md",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2021-08-18T17:50:03Z",
      "side": 1,
      "message": "C",
      "range": {
        "startLine": 146,
        "startChar": 8,
        "endLine": 146,
        "endChar": 9
      },
      "revId": "3c1a58c9b150e39ad9093a0d8e3429e35b290ef0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33b173f1_3b740bfd",
        "filename": "DEVELOPING.md",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-19T16:44:18Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0e06df0d_33b0243a",
      "range": {
        "startLine": 146,
        "startChar": 8,
        "endLine": 146,
        "endChar": 9
      },
      "revId": "3c1a58c9b150e39ad9093a0d8e3429e35b290ef0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca5ad412_ae3a5df8",
        "filename": "DEVELOPING.md",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2021-08-18T17:50:03Z",
      "side": 1,
      "message": "nitpick: just seems like odd styling of a name. Greg Kroah-Hartman ? Greg K-H as from https://twitter.com/gregkh?lang\u003den?",
      "range": {
        "startLine": 147,
        "startChar": 31,
        "endLine": 147,
        "endChar": 38
      },
      "revId": "3c1a58c9b150e39ad9093a0d8e3429e35b290ef0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eebedcac_69cdee10",
        "filename": "DEVELOPING.md",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-19T16:44:18Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ca5ad412_ae3a5df8",
      "range": {
        "startLine": 147,
        "startChar": 31,
        "endLine": 147,
        "endChar": 38
      },
      "revId": "3c1a58c9b150e39ad9093a0d8e3429e35b290ef0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9c7f6cd_74465599",
        "filename": "DEVELOPING.md",
        "patchSetId": 1
      },
      "lineNbr": 163,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2021-08-18T17:50:03Z",
      "side": 1,
      "message": "I would like to see some more concrete rules here. E.g \n\nAny breaking api change even if behind a compile flag will be sent to the mailing list. \nAny breaking api change will have a transition period of 1 openbmc release, roughly 6 months.\n\nA breaking api change might look like the following: \nSend email to the list and place new behavior behind a meson option defaulted to the existing behavior.\nFollowing the release, change the default to be the new behavior and added appropriate deprecation warnings to the old behavior. \nFollowing the 2nd release, remove the meson option and the old behavior.\n\nNote: Are we having openbmc releases anymore?\nThink we need to have some more discussion here.",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 163,
        "endChar": 39
      },
      "revId": "3c1a58c9b150e39ad9093a0d8e3429e35b290ef0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8eecb3aa_d5c63f6e",
        "filename": "DEVELOPING.md",
        "patchSetId": 1
      },
      "lineNbr": 163,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-19T16:44:18Z",
      "side": 1,
      "message": "\u003e I would like to see some more concrete rules here. E.g \n\u003e \n\u003e Any breaking api change even if behind a compile flag will be sent to the mailing list. \n\u003e Any breaking api change will have a transition period of 1 openbmc release, roughly 6 months.\n\nI\u0027d like rules here too, but I intentionally avoided them because this was supposed to be the uncontroversial commit 😊  I\u0027m sure people will have strong opinions on compatibility and breakages considering how many patches try to break compatibility.\n\n\u003e \n\u003e A breaking api change might look like the following: \n\u003e Send email to the list and place new behavior behind a meson option defaulted to the existing behavior.\n\u003e Following the release, change the default to be the new behavior and added appropriate deprecation warnings to the old behavior. \n\u003e Following the 2nd release, remove the meson option and the old behavior.\n\nAll of this is great, but unless it\u0027s really needed as part of this, I\u0027d like to do it in the next patch (which I\u0027m happy to write).  For the moment, I\u0027d like to keep this scoped on documenting \"What is a breaking change?\"  Once everyone is agreed on that, we can start on a \"So you want to make a breaking change?\" section, which is kind of what you\u0027re getting at.\n\n\u003e \n\u003e Note: Are we having openbmc releases anymore?\n\nIDK, but when we write this, lets scope it on dates that line up with the approximate release boundaries so that we\u0027re not explicitly tied to them, but can tie ourselves to them if we choose.\n\n\u003e Think we need to have some more discussion here.",
      "parentUuid": "a9c7f6cd_74465599",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 163,
        "endChar": 39
      },
      "revId": "3c1a58c9b150e39ad9093a0d8e3429e35b290ef0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}