{
  "comments": [
    {
      "key": {
        "uuid": "1c86037c_9d83e702",
        "filename": "CMakeLists.txt",
        "patchSetId": 21
      },
      "lineNbr": 391,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T01:36:34Z",
      "side": 1,
      "message": "Please document how much this adds to the binary size of the openbmc image.",
      "range": {
        "startLine": 391,
        "startChar": 31,
        "endLine": 391,
        "endChar": 39
      },
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa9d0122_37659ec1",
        "filename": "CMakeLists.txt",
        "patchSetId": 21
      },
      "lineNbr": 391,
      "author": {
        "id": 1000401
      },
      "writtenOn": "2020-07-07T06:55:32Z",
      "side": 1,
      "message": "Hi Ed,\n\nThere was a difference of 71.68 KB in the openbmc flash size.\n\nThis was mailed to the community before this library was pulled in openbmc.",
      "parentUuid": "1c86037c_9d83e702",
      "range": {
        "startLine": 391,
        "startChar": 31,
        "endLine": 391,
        "endChar": 39
      },
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d2a3890_7de86d23",
        "filename": "CMakeLists.txt",
        "patchSetId": 21
      },
      "lineNbr": 391,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-09T06:40:29Z",
      "side": 1,
      "message": "I must\u0027ve missed that.  Apologies.  Have you tried to reduce the size at all?  For simply parsing MIME types, 71kB is a lot of code.",
      "parentUuid": "fa9d0122_37659ec1",
      "range": {
        "startLine": 391,
        "startChar": 31,
        "endLine": 391,
        "endChar": 39
      },
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68927832_09f7acd0",
        "filename": "CMakeLists.txt",
        "patchSetId": 21
      },
      "lineNbr": 391,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-07-09T10:03:17Z",
      "side": 1,
      "message": "I am sorry, I have not followed it.\n\n@Asmitha, could u explain it?\nthanks :)",
      "parentUuid": "5d2a3890_7de86d23",
      "range": {
        "startLine": 391,
        "startChar": 31,
        "endLine": 391,
        "endChar": 39
      },
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fda69059_01cbed70",
        "filename": "CMakeLists.txt",
        "patchSetId": 21
      },
      "lineNbr": 391,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-13T22:03:03Z",
      "side": 1,
      "message": "So, for example, this parser: https://github.com/FooBarWidget/multipart-parser\n\nIs a single header that we could just include here.  When compiled with the same flags that bmcweb uses, and gzip compressed, it compresses down to 8.3kB, which is much closer to what I would expect for a simple parser like this, and nearly 10X smaller.  By any chance, did you take a look at that parser before you included this one?  Looking at the API, it\u0027s also a parser style, which means that we can directly link it to the request body type in beast, and reduce our memory footprint for large files even more.\n\n\ncompile flags:\ng++ --std\u003dc++17 -Os -flto -fno-rtti -fvisibility\u003dhidden -fvisibility-inlines-hidden -Wl,--exclude-libs,ALL multipart.cpp\ngzip a.out\nls -alh a.out.gz\n➜  multipart-parser git:(master) ✗ ls -alh a.out.gz\n-rwxrwxr-x 1 ed ed 8.3K Jul 13 14:34 a.out.gz\n\n\nDigging more into mimetic it\u0027s very clear why it\u0027s large: it implements a number of library features for internal data structures (presumably for speed).  The one i linked relies on std library implementations, which the bmc already has, so it requires nothing to add.\n\nIt should be noted, in the case where I pointed out that mimetic can\u0027t tell the difference between a parse error and a missing key, this one has a feed() call, that returns the characters parsed, and can be compared directly.\n\nOverall, on first glance, I suspect it\u0027s a much better fit for the project.",
      "parentUuid": "68927832_09f7acd0",
      "range": {
        "startLine": 391,
        "startChar": 31,
        "endLine": 391,
        "endChar": 39
      },
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c48ddf6_d72d7b85",
        "filename": "CMakeLists.txt",
        "patchSetId": 21
      },
      "lineNbr": 391,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-07-14T09:57:04Z",
      "side": 1,
      "message": "sure.\nbut can we customize resolution without relying on any library?\nlike this:\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/32174/6/redfish-core/lib/update_service.hpp#658",
      "parentUuid": "fda69059_01cbed70",
      "range": {
        "startLine": 391,
        "startChar": 31,
        "endLine": 391,
        "endChar": 39
      },
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c413245_d5c3de7b",
        "filename": "CMakeLists.txt",
        "patchSetId": 21
      },
      "lineNbr": 391,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-14T14:27:31Z",
      "side": 1,
      "message": "If you want to write a compliant single-pass parser that doesn\u0027t hardcode the paths you need, then sure, that\u0027s fine, but the one you linked is definitely not compliant.  If you want to write your own parser, I\u0027d start with something like the MultiPartParser object from the library I linked, then adapt it to your needs in a generic way that can be used by others.",
      "parentUuid": "2c48ddf6_d72d7b85",
      "range": {
        "startLine": 391,
        "startChar": 31,
        "endLine": 391,
        "endChar": 39
      },
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "035ad007_9783f8af",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 30,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2020-07-06T16:40:50Z",
      "side": 1,
      "message": "please avoid using namespace, it pollutes the namespace.. the line below, using json \u003d nlohmann::json style is prefered.",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 30,
        "endChar": 24
      },
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46ddca31_9864bcbf",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 30,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-07-07T00:31:52Z",
      "side": 1,
      "message": "Done\nreplace it with mimetic::xxx.",
      "parentUuid": "035ad007_9783f8af",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 30,
        "endChar": 24
      },
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79ca506a_2ff3aebb",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 31,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2020-07-06T16:40:50Z",
      "side": 1,
      "message": "is this used? looks like unused.",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 28
      },
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "062eafc0_ecb1cb43",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 31,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-07-07T00:31:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "79ca506a_2ff3aebb",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 28
      },
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15f54e44_f6e948e0",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 699,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T01:36:34Z",
      "side": 1,
      "message": "Either a: put all of the verbs in the list\nor\nb: only put the verbs you\u0027ve defined handlers for.  Either way, you need to fix this.",
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1426ad60_a5159430",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 699,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-07-09T10:00:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "15f54e44_f6e948e0",
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8d705f8_eaa2ec30",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 748,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T01:36:34Z",
      "side": 1,
      "message": "please handle your errors properly here (return a message about the failure).",
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e3798a5_b0d7800d",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 748,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-07-09T10:00:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e8d705f8_eaa2ec30",
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c430b6b6_cda07df0",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 769,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T01:36:34Z",
      "side": 1,
      "message": "Please handle your errors properly here.",
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a347d2b1_ed8a10a8",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 769,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-07-09T10:00:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c430b6b6_cda07df0",
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f4ed0da_38f3bc35",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 787,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T01:36:34Z",
      "side": 1,
      "message": "Shouldn\u0027t this be an exact match instead of a find.\n\nConsidering this is relatively common (and not specific to redfish, and or this handler) this is something I would like to see moved into a higher layer the the request is built, rather than copied and pasted everywhere.",
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27d9b768_ad5be1e7",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 787,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-07-09T10:00:52Z",
      "side": 1,
      "message": "thanks, moved http/http_request.h",
      "parentUuid": "3f4ed0da_38f3bc35",
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "087e9bc8_51034e39",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 789,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T01:36:34Z",
      "side": 1,
      "message": "This is unnecessary?",
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "114a1f22_475dbf7b",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 789,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-07-09T10:00:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "087e9bc8_51034e39",
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d12aa4cf_c98957f8",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 795,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T01:36:34Z",
      "side": 1,
      "message": "you\u0027ve already done a string compare on the header here, it can be hardcoded (to avoid weird injection issues)\n\nAlso, I suspect you should be using a different API, as injecting a header as part of the payload seems incorrect.",
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d8f03cd_1eada2e8",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 795,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-07-09T10:00:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d12aa4cf_c98957f8",
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8fc6866e_b7156e70",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 798,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T01:36:34Z",
      "side": 1,
      "message": "I would expect to see error handling here for bad form strings.  Please add where appropriate.",
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2db7ee3e_8c1c1f48",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 798,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-07-09T10:00:52Z",
      "side": 1,
      "message": "handle the error format in the parseMultpartData method, the key property will be empty for bad form strings.",
      "parentUuid": "8fc6866e_b7156e70",
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08e4cf2a_4b89e7c3",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 798,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-13T03:37:23Z",
      "side": 1,
      "message": "If the library doesn\u0027t have a way to differentiate between a failed parse, and a missing key, then frankly, we need to find a new library.\n\nAlso, in the line you reference, you also don\u0027t properly handle your errors (by returning some kind of code), so my comment is still valid.",
      "parentUuid": "2db7ee3e_8c1c1f48",
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9b3e485_4442aa66",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 808,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T01:36:34Z",
      "side": 1,
      "message": "Please use a variant of this that doesn\u0027t throw on non existence.",
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "243ca7da_8c3ecd7c",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 808,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-07-09T10:00:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f9b3e485_4442aa66",
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33bae0c1_44e6e455",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 809,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T01:36:34Z",
      "side": 1,
      "message": "please don\u0027t use auto here.",
      "range": {
        "startLine": 809,
        "startChar": 8,
        "endLine": 809,
        "endChar": 13
      },
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2e202a2_40cdc051",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 809,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-07-09T10:00:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "33bae0c1_44e6e455",
      "range": {
        "startLine": 809,
        "startChar": 8,
        "endLine": 809,
        "endChar": 13
      },
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6479bae6_37a187a5",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 812,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T01:36:34Z",
      "side": 1,
      "message": "Apply time is not required in the spec.  Please fix.",
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9bbc1a4d_cfd2f7c8",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 812,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-07-09T10:00:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6479bae6_37a187a5",
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e325437_0fbd99a8",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 813,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T01:36:34Z",
      "side": 1,
      "message": "not needed",
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6dc2e921_fd5a48ef",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 813,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-07-09T10:00:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8e325437_0fbd99a8",
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c22637ed_0ae7b2b8",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 817,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T01:36:34Z",
      "side": 1,
      "message": "You don\u0027t wait for this to return before continuing to write the file.  This is a race.",
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aed68184_69aaacbe",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 817,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-07-09T10:00:52Z",
      "side": 1,
      "message": "sorry, I think this is an async method and did not wait for a return value.\nplease correct me if I am wrong, thanks :)",
      "parentUuid": "c22637ed_0ae7b2b8",
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7762b96_4eb00891",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 834,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T01:36:34Z",
      "side": 1,
      "message": "Please do not use at in bmcweb.",
      "range": {
        "startLine": 834,
        "startChar": 29,
        "endLine": 834,
        "endChar": 31
      },
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "540f23e1_9980f406",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 834,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2020-07-07T23:52:10Z",
      "side": 1,
      "message": "+1 at throws",
      "parentUuid": "b7762b96_4eb00891",
      "range": {
        "startLine": 834,
        "startChar": 29,
        "endLine": 834,
        "endChar": 31
      },
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62c72a7c_f67dc29e",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 834,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-07-09T10:00:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "540f23e1_9980f406",
      "range": {
        "startLine": 834,
        "startChar": 29,
        "endLine": 834,
        "endChar": 31
      },
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a502c78_f8ba6e2d",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 836,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-07T01:36:34Z",
      "side": 1,
      "message": "This logic is duplicated from the other handler.  Can we abstract and deduplicate please?",
      "range": {
        "startLine": 828,
        "startChar": 0,
        "endLine": 836,
        "endChar": 5
      },
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03f4260f_69a5f51c",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 21
      },
      "lineNbr": 836,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2020-07-09T10:00:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7a502c78_f8ba6e2d",
      "range": {
        "startLine": 828,
        "startChar": 0,
        "endLine": 836,
        "endChar": 5
      },
      "revId": "fd9ed9fc1f0775a51abe6b078516ec69a59a8d3c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}