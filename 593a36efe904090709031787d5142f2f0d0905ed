{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fd2dc1a2_ddca41a9",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 3
      },
      "lineNbr": 696,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-02T16:02:08Z",
      "side": 1,
      "message": "I\u0027m not following why this is here.  Don\u0027t we need a branch for dumpType \u003d \"FaultLog\"?\n\nAt a minimum, we shouldn\u0027t be looking this up after immediately setting it just put the AdditionalDataSizeBytes inside each branch above.",
      "range": {
        "startLine": 696,
        "startChar": 0,
        "endLine": 696,
        "endChar": 75
      },
      "revId": "593a36efe904090709031787d5142f2f0d0905ed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9394e40c_4a6c6608",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 3
      },
      "lineNbr": 696,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-05-13T00:28:15Z",
      "side": 1,
      "message": "Will change to set AdditionalDataSizeBytes inside each branch.\n\nYes in the future there will be a branch for dumpType\u003d\"FaultLog\", just not in this initial commit as it would be empty for now.\n\nI just wanted to avoid outputting AdditionalDataSizeBytes (previously in line 665) for Fault Log without a corresponding AdditionalDataURI (which we aren\u0027t ready to populate for Fault Log yet).",
      "parentUuid": "fd2dc1a2_ddca41a9",
      "range": {
        "startLine": 696,
        "startChar": 0,
        "endLine": 696,
        "endChar": 75
      },
      "revId": "593a36efe904090709031787d5142f2f0d0905ed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee42fdc7_84eaa673",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 3
      },
      "lineNbr": 696,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-06-01T02:43:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9394e40c_4a6c6608",
      "range": {
        "startLine": 696,
        "startChar": 0,
        "endLine": 696,
        "endChar": 75
      },
      "revId": "593a36efe904090709031787d5142f2f0d0905ed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba6628ee_49275459",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 3
      },
      "lineNbr": 865,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-02T16:02:08Z",
      "side": 1,
      "message": "This is the wrong error code for \"no-op\".  Method not supported would be the http code we should use, not success.\n\nAlso, shouldn\u0027t we be doing this on line 800?",
      "range": {
        "startLine": 863,
        "startChar": 0,
        "endLine": 865,
        "endChar": 42
      },
      "revId": "593a36efe904090709031787d5142f2f0d0905ed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0664efc6_16a87ebf",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 3
      },
      "lineNbr": 865,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-05-13T00:28:15Z",
      "side": 1,
      "message": "Will change to HTTP 405 (method_not_allowed).\n\nAnd I\u0027ll move the response creation to line 800 and remove the action parameter checking for FaultLog in line 842.",
      "parentUuid": "ba6628ee_49275459",
      "range": {
        "startLine": 863,
        "startChar": 0,
        "endLine": 865,
        "endChar": 42
      },
      "revId": "593a36efe904090709031787d5142f2f0d0905ed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c0f6389c_7560f82c",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 3
      },
      "lineNbr": 865,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-06-01T02:43:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0664efc6_16a87ebf",
      "range": {
        "startLine": 863,
        "startChar": 0,
        "endLine": 865,
        "endChar": 42
      },
      "revId": "593a36efe904090709031787d5142f2f0d0905ed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff924e32_0887c0e4",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 3
      },
      "lineNbr": 2138,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-02T16:02:08Z",
      "side": 1,
      "message": "This needs a dbus check to see if the FaultLog interfaces exist, like we do elsewhere.  I realize that the existing dump did it with a compile option, but we can\u0027t reuse the same option flag, given that there will be systems with dump support and not faultlog support, and vice version.  current best practice is to rely on mapper lookups for resources on dbus, so that\u0027s what we should do here.  take a look at the getCollectionMembers() method for examples of how we do the mapper lookup and create collections.\n\nIdeally at the same time you would clean up the \"Dump\" endpoint to also use mapper lookups, but obviously that\u0027s not required.",
      "range": {
        "startLine": 2136,
        "startChar": 0,
        "endLine": 2138,
        "endChar": 73
      },
      "revId": "593a36efe904090709031787d5142f2f0d0905ed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "051f0409_efb28513",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 3
      },
      "lineNbr": 2138,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-06-01T02:43:51Z",
      "side": 1,
      "message": "Working on it for the next patch",
      "parentUuid": "ff924e32_0887c0e4",
      "range": {
        "startLine": 2136,
        "startChar": 0,
        "endLine": 2138,
        "endChar": 73
      },
      "revId": "593a36efe904090709031787d5142f2f0d0905ed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f127f9c_b473b703",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 3
      },
      "lineNbr": 2138,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-06-06T18:22:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "051f0409_efb28513",
      "range": {
        "startLine": 2136,
        "startChar": 0,
        "endLine": 2138,
        "endChar": 73
      },
      "revId": "593a36efe904090709031787d5142f2f0d0905ed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aba3a304_7812cbc5",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 3
      },
      "lineNbr": 2550,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-02T16:02:08Z",
      "side": 1,
      "message": "Please don\u0027t use lambdas for new code.  use an explicit method with std::Bind_front.\n\nPlease do that for all your handlers.",
      "range": {
        "startLine": 2550,
        "startChar": 0,
        "endLine": 2550,
        "endChar": 73
      },
      "revId": "593a36efe904090709031787d5142f2f0d0905ed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "52024cd0_ae7ed174",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 3
      },
      "lineNbr": 2550,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-06-01T02:43:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aba3a304_7812cbc5",
      "range": {
        "startLine": 2550,
        "startChar": 0,
        "endLine": 2550,
        "endChar": 73
      },
      "revId": "593a36efe904090709031787d5142f2f0d0905ed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b940502_f15f0810",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 3
      },
      "lineNbr": 2550,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-06-06T18:22:09Z",
      "side": 1,
      "message": "I tried to use std::bind_front in Patchset 13 and it built okay here in the bmcweb repo, but when I tried building it as part of ___ (adding changes using \"devtool modify bmcweb\") the build failed. Do you have a suggestion on how to fix Patchset 13, or is it ok to use a lambda as shown in Patchset 14? (Compare Patchset 13 \u003c-\u003e 14).",
      "parentUuid": "52024cd0_ae7ed174",
      "range": {
        "startLine": 2550,
        "startChar": 0,
        "endLine": 2550,
        "endChar": 73
      },
      "revId": "593a36efe904090709031787d5142f2f0d0905ed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd78482b_e080b37e",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 3
      },
      "lineNbr": 2550,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-06T18:25:08Z",
      "side": 1,
      "message": "I\u0027m a little confused at what you\u0027re saying.  Patchset 14 did pass CI (there was one failure because the worker ran out of hard drive space, but that had nothing to do with your patch).\n\nI\u0027m also not sure what this has to do with devtool  Can you elaborate?",
      "parentUuid": "8b940502_f15f0810",
      "range": {
        "startLine": 2550,
        "startChar": 0,
        "endLine": 2550,
        "endChar": 73
      },
      "revId": "593a36efe904090709031787d5142f2f0d0905ed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01c653fb_bfe74dc5",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 3
      },
      "lineNbr": 2550,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-06-06T18:37:56Z",
      "side": 1,
      "message": "Oops, the incomplete comment got posted. Here\u0027s what I meant to say:\n\n\"I tried to use std::bind_front in Patchset 13 and it built okay here in the bmcweb repo, but when I tried building it as part of obmc-phosphor-image via \"bitbake bmcweb\" or \"bitbake obmc-phosphor-image\" (after adding the changes using \"devtool modify bmcweb\"), the build failed. Do you have a suggestion on how to fix Patchset 13, or is it ok to use a lambda as shown in Patchset 14? (Compare Patchset 13 \u003c-\u003e 14).\"\n\nSo basically even though Patchset 13 (using std::bind_front) passed CI here, I couldn\u0027t get it to build in the obmc-phosphor-image. I\u0027ll message you the build error log separately. Patchset 14 (using lambda) passed CI here and builds successfully in obmc-phosphor-image.",
      "parentUuid": "cd78482b_e080b37e",
      "range": {
        "startLine": 2550,
        "startChar": 0,
        "endLine": 2550,
        "endChar": 73
      },
      "revId": "593a36efe904090709031787d5142f2f0d0905ed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d851cc9_9b2ea509",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 3
      },
      "lineNbr": 2550,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-06-06T18:51:53Z",
      "side": 1,
      "message": "From chat:\n\n---\nEd:\n\"you tried to use bind_front on an async_method_call?\nI probably wasn\u0027t clear enough in my message;  We shouldn\u0027t use lambdas in BMCWEB_ROUTE declarations.\nideally we shouldn\u0027t use them in async_metho_call either, but there\u0027s an incompatibility that we haven\u0027t been able to sort out.\nIe: https://github.com/boostorg/callable_traits/issues/192\"\n\nClaire:\nAhh okay. Please ignore Patchset 13 then and just look at Patchset 14 which uses a lambda as usual.",
      "parentUuid": "01c653fb_bfe74dc5",
      "range": {
        "startLine": 2550,
        "startChar": 0,
        "endLine": 2550,
        "endChar": 73
      },
      "revId": "593a36efe904090709031787d5142f2f0d0905ed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "036d97fb_1371bee3",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 3
      },
      "lineNbr": 2674,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-02T16:02:08Z",
      "side": 1,
      "message": "Most of the code in the block above looks copied from the other dump handlers.  Is there a way we can avoid copying the code here and have a more generic route?",
      "revId": "593a36efe904090709031787d5142f2f0d0905ed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90f36523_37a2de00",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 3
      },
      "lineNbr": 2674,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-06-01T02:43:51Z",
      "side": 1,
      "message": "Done, merged with the \"requestRoutesBMCDump\" functions",
      "parentUuid": "036d97fb_1371bee3",
      "revId": "593a36efe904090709031787d5142f2f0d0905ed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2449a8c2_0236c621",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 3
      },
      "lineNbr": 2674,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-06-08T22:21:03Z",
      "side": 1,
      "message": "Just realized that the current patchset\u0027s way of merging FaultLog handling with the \"requestRoutesBMCDump\" functions breaks /redfish/v1/Managers/bmc/LogServices/Journal.\n\nEssentially the problem is that the route\nBMCWEB_ROUTE(app, \"/redfish/v1/Managers/bmc/LogServices/\u003cstr\u003e/\")\nwould match not only with dumps\n(\"/redfish/v1/Managers/bmc/LogServices/Dump\" and\n/redfish/v1/Managers/bmc/LogServices/FaultLog\")\nbut also with the journal (/redfish/v1/Managers/bmc/LogServices/Journal)\n\nWorking on another patchset.",
      "parentUuid": "90f36523_37a2de00",
      "revId": "593a36efe904090709031787d5142f2f0d0905ed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "58648b63_7e49cda9",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 3
      },
      "lineNbr": 2674,
      "author": {
        "id": 1001143
      },
      "writtenOn": "2022-06-09T08:00:04Z",
      "side": 1,
      "message": "Fixed. Went back to using separate routes for \"/redfish/v1/Managers/bmc/LogServices/Dump\" and \"/redfish/v1/Managers/bmc/LogServices/FaultLog\", but the underlying handler functions remain unified.",
      "parentUuid": "2449a8c2_0236c621",
      "revId": "593a36efe904090709031787d5142f2f0d0905ed",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}