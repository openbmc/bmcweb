{
  "comments": [
    {
      "key": {
        "uuid": "b64133e4_777596c8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 23,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2021-02-15T00:36:07Z",
      "side": 1,
      "message": "PCIeSlots? typically our Id \u003d last segment of the uri.. I just don\u0027t see a good reason here for \"1\"",
      "range": {
        "startLine": 23,
        "startChar": 9,
        "endLine": 23,
        "endChar": 10
      },
      "revId": "5b5ee7eb995f81fc86092ab3ab6d3b3b9a1a7ffa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60a640f4_8aaec5af",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 23,
      "author": {
        "id": 1000014
      },
      "writtenOn": "2021-02-15T07:29:24Z",
      "side": 1,
      "message": "right.. ID has always been the last segment\n\nExample: ( from CPU ). And that \"cpu0\" is the last entry in D-Bus/object/path\n\n/redfish/v1/Systems/system/Processors\n{\n  \"@odata.id\": \"/redfish/v1/Systems/system/Processors/\",\n  \"@odata.type\": \"#ProcessorCollection.ProcessorCollection\",\n  \"Members\": [\n    {\n      \"@odata.id\": \"/redfish/v1/Systems/system/Processors/cpu0\"\n    },",
      "parentUuid": "b64133e4_777596c8",
      "range": {
        "startLine": 23,
        "startChar": 9,
        "endLine": 23,
        "endChar": 10
      },
      "revId": "5b5ee7eb995f81fc86092ab3ab6d3b3b9a1a7ffa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8188bda1_10c4a61e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 11
      },
      "lineNbr": 38,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2021-02-15T00:36:07Z",
      "side": 1,
      "message": "Is there a count for the number of PCIeSlots, I think that would be useful.. like Members@odata.count",
      "revId": "5b5ee7eb995f81fc86092ab3ab6d3b3b9a1a7ffa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b323534_cc80eda8",
        "filename": "redfish-core/lib/pcie_slots.hpp",
        "patchSetId": 11
      },
      "lineNbr": 39,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-02-02T09:47:58Z",
      "side": 1,
      "message": "I think we can define the method simple like filename.\nhttps://github.com/openbmc/sdbusplus/blob/master/include/sdbusplus/message/native_types.hpp#L144\n\n```\nstd::string typeName(std::string str) const\n{\n    auto index \u003d str.rfind(\u0027.\u0027);\n    if (index \u003d\u003d std::string::npos)\n    {\n        return \"\";\n    }\n    index++;\n    if (index \u003e\u003d str.size())\n    {\n        return \"\";\n    }\n\n    return str.substr(index);\n    }\n```",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 39,
        "endChar": 1
      },
      "revId": "5b5ee7eb995f81fc86092ab3ab6d3b3b9a1a7ffa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dba7ee68_5786a86f",
        "filename": "redfish-core/lib/pcie_slots.hpp",
        "patchSetId": 11
      },
      "lineNbr": 39,
      "author": {
        "id": 1000400
      },
      "writtenOn": "2021-02-03T00:47:01Z",
      "side": 1,
      "message": "I don\u0027t think so. Even if we use this method, we still need to match the return value to prevent other unpredictable strings.",
      "parentUuid": "6b323534_cc80eda8",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 39,
        "endChar": 1
      },
      "revId": "5b5ee7eb995f81fc86092ab3ab6d3b3b9a1a7ffa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1707dfd_4244bf26",
        "filename": "redfish-core/lib/pcie_slots.hpp",
        "patchSetId": 11
      },
      "lineNbr": 39,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-02-03T01:11:17Z",
      "side": 1,
      "message": "Ack.\n\n@Ed, @Gunnar\nAlso, Do we really need to use the `inline` method?",
      "parentUuid": "dba7ee68_5786a86f",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 39,
        "endChar": 1
      },
      "revId": "5b5ee7eb995f81fc86092ab3ab6d3b3b9a1a7ffa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43ca8674_0d5dca43",
        "filename": "redfish-core/lib/pcie_slots.hpp",
        "patchSetId": 11
      },
      "lineNbr": 39,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2021-02-15T00:36:07Z",
      "side": 1,
      "message": "We prefer inline convert D-Bus enum to redfish type function like this. \nI vote leaving as is.",
      "parentUuid": "f1707dfd_4244bf26",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 39,
        "endChar": 1
      },
      "revId": "5b5ee7eb995f81fc86092ab3ab6d3b3b9a1a7ffa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d00aea69_e53b30c0",
        "filename": "redfish-core/lib/pcie_slots.hpp",
        "patchSetId": 11
      },
      "lineNbr": 111,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2021-02-15T00:36:07Z",
      "side": 1,
      "message": "What if the chassis doesn\u0027t have PCIeSlots ?\nGoing to have a link to: \n\"/redfish/v1/Chassis/\" + chassisId + \"/PCIeSlots\"\nbut when the client requests /redfish/v1/Chassis/$chassisId/PCIeSlots they are going to get a 404 right? \n\nI would think the validator will flag this.\n\n2 options I think here: \n\n1) (my preference) leave the link as is and just return an empty array when the chassis doesn\u0027t have any PCIeslots E.g.\n\ncurl -k -H \"X-Auth-Token: $token\" -X GET\nhttps://${bmc}/redfish/v1/Chassis/chassis/PCIeSlots\n{\n  \"@odata.id\": \"/redfish/v1/Chassis/chassis/PCIeSlots\",\n  \"@odata.type\": \"#PCIeSlots.v1_4_0.PCIeSlots\",\n  \"Id\": \"PCIeSlots\",\n  \"Name\": \"PCIe Slot Information\",\n  \"Slots\": []\n}\n\n2) check in chassis for PCIeSlots before creating the link",
      "revId": "5b5ee7eb995f81fc86092ab3ab6d3b3b9a1a7ffa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "979340c9_6fc34209",
        "filename": "redfish-core/lib/pcie_slots.hpp",
        "patchSetId": 11
      },
      "lineNbr": 180,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2021-02-15T00:36:07Z",
      "side": 1,
      "message": "Should this really be an error if the D-Bus property is set to \"Unknown\" ?\nI guess I would vote more towards leaving it off if the D-Bus property is \"Unknown\" or others.. \nSo would suggest removing this else.",
      "revId": "5b5ee7eb995f81fc86092ab3ab6d3b3b9a1a7ffa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b9c97c4_e1f32c7e",
        "filename": "redfish-core/lib/pcie_slots.hpp",
        "patchSetId": 11
      },
      "lineNbr": 214,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2021-02-15T00:36:07Z",
      "side": 1,
      "message": "Should this really be an error if the D-Bus property is set to \"Unknown\" ?\nRemove the else?",
      "revId": "5b5ee7eb995f81fc86092ab3ab6d3b3b9a1a7ffa",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}