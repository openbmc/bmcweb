{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3142a5cc_2274c9a3",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 21
      },
      "lineNbr": 781,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-06T05:31:56Z",
      "side": 1,
      "message": "?  Why do we need a memory namespace, and if we do, why do we declare it so late?",
      "range": {
        "startLine": 780,
        "startChar": 0,
        "endLine": 781,
        "endChar": 1
      },
      "revId": "c78ce8b75a4816e8856b7897cd3315e9808d5800",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7db10af_98f6b085",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 21
      },
      "lineNbr": 781,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-06T18:27:10Z",
      "side": 1,
      "message": "I was trying to hide these codes. I can change it to details if you want.",
      "parentUuid": "3142a5cc_2274c9a3",
      "range": {
        "startLine": 780,
        "startChar": 0,
        "endLine": 781,
        "endChar": 1
      },
      "revId": "c78ce8b75a4816e8856b7897cd3315e9808d5800",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2c61b22_5cdee6eb",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 21
      },
      "lineNbr": 781,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-06T18:59:30Z",
      "side": 1,
      "message": "yes, a details namespace or an anonymous namespace would be better. here.",
      "parentUuid": "a7db10af_98f6b085",
      "range": {
        "startLine": 780,
        "startChar": 0,
        "endLine": 781,
        "endChar": 1
      },
      "revId": "c78ce8b75a4816e8856b7897cd3315e9808d5800",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c44b21d1_50cbdbdd",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 21
      },
      "lineNbr": 877,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-06T05:31:56Z",
      "side": 1,
      "message": "Generally in this case we would sort on insert into the array",
      "range": {
        "startLine": 877,
        "startChar": 8,
        "endLine": 877,
        "endChar": 79
      },
      "revId": "c78ce8b75a4816e8856b7897cd3315e9808d5800",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da21ebe2_a7a6443d",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 21
      },
      "lineNbr": 877,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-06T18:27:10Z",
      "side": 1,
      "message": "Apologize, you suggest using a sorted container like set? What\u0027s the difference compared to sorting at the end?",
      "parentUuid": "c44b21d1_50cbdbdd",
      "range": {
        "startLine": 877,
        "startChar": 8,
        "endLine": 877,
        "endChar": 79
      },
      "revId": "c78ce8b75a4816e8856b7897cd3315e9808d5800",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2755f130_79d36a14",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 21
      },
      "lineNbr": 877,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-06T18:59:30Z",
      "side": 1,
      "message": "no, we couldnt use a flat_set (because it would require declaring the comparator in the object type, which would make it incompatible with everything else).\n\nThe approximate code I meant was:\n\nvoid insert(nlohmann::json::array_t\u0026 members){\n   nlohmann::json::object_t myObjectMember;\n   auto it \u003d std::upper_bound(members.begin(), members.end(), AlphaNumObjectCmp);\n   \n   members.insert(it, myObjectMember);\n\n}\n\n\nDoing it this way means that:\n1. The array is always sorted, so there is no chance of us returning an unsorted array.\n2. If there happens to be an error, just those results will be omitted, and the partial results will still contain the working things, which helps in debug.",
      "parentUuid": "da21ebe2_a7a6443d",
      "range": {
        "startLine": 877,
        "startChar": 8,
        "endLine": 877,
        "endChar": 79
      },
      "revId": "c78ce8b75a4816e8856b7897cd3315e9808d5800",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "711647aa_70f38a78",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 21
      },
      "lineNbr": 877,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-06T19:13:37Z",
      "side": 1,
      "message": "Do you want me to abandon https://gerrit.openbmc.org/c/openbmc/bmcweb/+/55047/4?\n\nI can do this insertion sort.",
      "parentUuid": "2755f130_79d36a14",
      "range": {
        "startLine": 877,
        "startChar": 8,
        "endLine": 877,
        "endChar": 79
      },
      "revId": "c78ce8b75a4816e8856b7897cd3315e9808d5800",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb0a98c2_e0765228",
        "filename": "redfish-core/lib/memory.hpp",
        "patchSetId": 21
      },
      "lineNbr": 877,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-07T22:12:28Z",
      "side": 1,
      "message": "Lets figure out if we can even use ObjectManager in this case before you spend a bunch more time on this.  I suspect we can\u0027t.\n\nWe could use ObjectManager in sensor because there were only 2 sensor producing daemons (only 1 at the time we did it).  There are lots of inventory producing daemons, and the dbus interface spec for Memory doesn\u0027t require object manager, so this would be a breaking change (I think.  Lets get the data and figure out a plan.)",
      "parentUuid": "711647aa_70f38a78",
      "range": {
        "startLine": 877,
        "startChar": 8,
        "endLine": 877,
        "endChar": 79
      },
      "revId": "c78ce8b75a4816e8856b7897cd3315e9808d5800",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}