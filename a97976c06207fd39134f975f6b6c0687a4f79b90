{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7341bd3f_375ac272",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-10T20:41:47Z",
      "side": 1,
      "message": "nit, generally we don\u0027t do \u003d {} for objects that default construct with no arguments.  can be removed.",
      "range": {
        "startLine": 48,
        "startChar": 47,
        "endLine": 48,
        "endChar": 52
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f9161fb_82ddeeb2",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-10T23:41:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7341bd3f_375ac272",
      "range": {
        "startLine": 48,
        "startChar": 47,
        "endLine": 48,
        "endChar": 52
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c08a2ebb_5e3e1e40",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-10T23:43:38Z",
      "side": 1,
      "message": "Oh, right, I now remember why I add this.\n\n```\n../redfish-core/include/utils/query_param_test.cpp:122:73: error: missing initializer for member ‘redfish::query_param::Query::selectedProperties’ [-Werror\u003dmissing-field-initializers]\n  122 |                   Query{.expandLevel \u003d 1, .expandType \u003d ExpandType::Both}),\n      |\n```\n\nIf without explicit initialization, compiler will complain about missing field initializers.",
      "parentUuid": "5f9161fb_82ddeeb2",
      "range": {
        "startLine": 48,
        "startChar": 47,
        "endLine": 48,
        "endChar": 52
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98c70382_14224b3d",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-10T23:46:35Z",
      "side": 1,
      "message": "that honestly feels like a bug in using gcc libstdc++ with clang and partial initialization being a new feature.\n\nOk, fine as is.",
      "parentUuid": "c08a2ebb_5e3e1e40",
      "range": {
        "startLine": 48,
        "startChar": 47,
        "endLine": 48,
        "endChar": 52
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29b54272_b5c0dfa5",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 112,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-10T20:41:47Z",
      "side": 1,
      "message": "nit, this is a little subtle that delegated.selectedProperties is empty, so swapping will result in an empty query.selectedProperties\n\nwould it be more clear if we just did\n\ndelegated.selectedProperties \u003d std::move(query.selectedProperties);\nquery.selectedProperties.clear();\n\nJust so it\u0027s more obvious what\u0027s going on?",
      "range": {
        "startLine": 112,
        "startChar": 7,
        "endLine": 112,
        "endChar": 74
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19a031cd_cbf5f7eb",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 112,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-10T23:41:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "29b54272_b5c0dfa5",
      "range": {
        "startLine": 112,
        "startChar": 7,
        "endLine": 112,
        "endChar": 74
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "547d190e_cc9a8a77",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 270,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-10T20:41:47Z",
      "side": 1,
      "message": "What are the escaping rules on $select properties?\n\nis \"\\,\" a valid property name?",
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c84bc434_601adcc1",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 270,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-10T21:59:30Z",
      "side": 1,
      "message": "I didn\u0027t find any words in the spec talking about validating the properties",
      "parentUuid": "547d190e_cc9a8a77",
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "febfbaf4_c3bc9410",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 270,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-10T22:10:54Z",
      "side": 1,
      "message": "this goes beyond validation.  if I did\n\n$select\u003d\"\\,\"\nThat I think is valid?\n$select\u003d\",\"\nThat is invalid.\n\nwe should read through the odata spec and understand what the naming limitations are so we can at least detect the base escape case.",
      "parentUuid": "c84bc434_601adcc1",
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39e07704_8d4d2ed3",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 270,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-10T22:21:15Z",
      "side": 1,
      "message": "for other examples:\n\nis $select\u003d\"\\0\" allowed?\nwhat about $select\u003d\"\\x24\"?",
      "parentUuid": "febfbaf4_c3bc9410",
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91a6d498_cc352b5d",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 270,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-10T23:52:19Z",
      "side": 1,
      "message": "I didn\u0027t find anything in odata spec regarding this \n\nhttp://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#_Toc31358942. \n\nWhat\u0027s your suggestion?",
      "parentUuid": "39e07704_8d4d2ed3",
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "848ebd0b_a4d41a2c",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 270,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-10T23:57:53Z",
      "side": 1,
      "message": "you\u0027re looking under $select.  Look for a section dealing with property naming conventions/requirements.\n\nSurely it\u0027s not legal to put a null terminator in a property, we just need to find what the exact rulesset is.",
      "parentUuid": "91a6d498_cc352b5d",
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b998633f_74dba0ea",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 270,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-15T01:10:32Z",
      "side": 1,
      "message": "I did some research and added some basic validation. Please take a look at the |queryCapabilities| function.",
      "parentUuid": "848ebd0b_a4d41a2c",
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffc3cc88_28557fa0",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 622,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-10T20:41:47Z",
      "side": 1,
      "message": "Does redfish allow $select on arrays?  I\u0027ve never seen that before.  That seems odd, given that an array would be a collection, so $filter would be used, right?",
      "range": {
        "startLine": 621,
        "startChar": 0,
        "endLine": 622,
        "endChar": 59
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e11abe62_704b7888",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 622,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-10T21:59:30Z",
      "side": 1,
      "message": "This branch is needed because of the current algorithm goes to every leaf of the JSON tree.\n\nNo. I didn\u0027t see array can be selected in the spec.\n\nAnd yes, \"select\" arrays should be $filter.",
      "parentUuid": "ffc3cc88_28557fa0",
      "range": {
        "startLine": 621,
        "startChar": 0,
        "endLine": 622,
        "endChar": 59
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e3499be_f0cbbf0c",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 622,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-10T22:10:54Z",
      "side": 1,
      "message": "Oh, I see, so we need to select at every level, and an array might have a sublevel.  Ok.\n\nDo we have guidance on how select works for autoexpand resources?",
      "parentUuid": "e11abe62_704b7888",
      "range": {
        "startLine": 621,
        "startChar": 0,
        "endLine": 622,
        "endChar": 59
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6dc8d483_6fa13827",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 622,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-10T23:41:21Z",
      "side": 1,
      "message": "\u003e Do we have guidance on how select works for autoexpand resources?\n\nMy understanding is that this is the same as $expand + $select, which is unclear. In this commit, AutoExpand is not errored out. And expanded objects can be selected using nested keys.\n\nI can ask this question in the DMTF discussion.",
      "parentUuid": "2e3499be_f0cbbf0c",
      "range": {
        "startLine": 621,
        "startChar": 0,
        "endLine": 622,
        "endChar": 59
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2190d3f7_4745de55",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 645,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-10T20:41:47Z",
      "side": 1,
      "message": "This looks like it will give the wrong result if message objects are added when select is used.  I suspect we need to add more keys to this list.  Take a look at how the messages:: namespace works, we\u0027ll need to allow all messages through.",
      "range": {
        "startLine": 645,
        "startChar": 0,
        "endLine": 645,
        "endChar": 69
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91a04741_bd660a78",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 645,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-10T21:59:30Z",
      "side": 1,
      "message": "You mean all error messages should be just selected?\n\nI thought we won\u0027t execute Query parameters if the response is not OK. Is there a case where there are messages with OK response code?",
      "parentUuid": "2190d3f7_4745de55",
      "range": {
        "startLine": 645,
        "startChar": 0,
        "endLine": 645,
        "endChar": 69
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26626ebe_198175f7",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 645,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-10T22:10:54Z",
      "side": 1,
      "message": "\u003e You mean all error messages should be just selected?\nThat\u0027s one thing, there are others.  We need to determine the rules.  It might be if there\u0027s an @ in the key name?  but we need to research the specs and understand.\n\n\nYes.  not all messages are fatal.",
      "parentUuid": "91a04741_bd660a78",
      "range": {
        "startLine": 645,
        "startChar": 0,
        "endLine": 645,
        "endChar": 69
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "247e8feb_7b5b4b7e",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 645,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-10T23:57:35Z",
      "side": 1,
      "message": "In the Redfish spec, it only mentioned these four. It doesn\u0027t mention other @ properties.\n\n```\nThe @odata.id and @odata.type properties shall be in the response payload and contain the same values as if $select was omitted. If the @odata.context property is supported, it shall be in the response payload and should be in the context property recommended format. If the @odata.etag property is supported, it shall be in the response payload and contain the same values as if $select was omitted.\n```\n\nIf the message contains these four properties, they will be selected by default as well. What are the other keys?",
      "parentUuid": "26626ebe_198175f7",
      "range": {
        "startLine": 645,
        "startChar": 0,
        "endLine": 645,
        "endChar": 69
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5fac59a_510b2703",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 645,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-15T01:11:37Z",
      "side": 1,
      "message": "I will close this. Please reopen if you still have concerns.",
      "parentUuid": "247e8feb_7b5b4b7e",
      "range": {
        "startLine": 645,
        "startChar": 0,
        "endLine": 645,
        "endChar": 69
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f14b8d0_12c83d30",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 645,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-16T16:12:06Z",
      "side": 1,
      "message": "It doesn\u0027t mention other @ properties.\n\n\nThey\u0027re not @ properties, they\u0027re messages, for example, when errors occur, or there are warnings.  If you\u0027d like them to clarify the spec in that regard, we can discuss it in a meeting, but considering that messages sit outside the redfish schemas, it seems that they should not be effected by select.\n\n\"error\" is one type of these keys.",
      "parentUuid": "c5fac59a_510b2703",
      "range": {
        "startLine": 645,
        "startChar": 0,
        "endLine": 645,
        "endChar": 69
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba617682_efb4df0d",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 645,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-27T16:31:01Z",
      "side": 1,
      "message": "Adding error to this list should work, right?",
      "parentUuid": "9f14b8d0_12c83d30",
      "range": {
        "startLine": 645,
        "startChar": 0,
        "endLine": 645,
        "endChar": 69
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fadfab98_7b156d7d",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 645,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-27T16:55:09Z",
      "side": 1,
      "message": "it\u0027s just just error.  You will need to append all properties message, which to do that will require reading the spec.",
      "parentUuid": "ba617682_efb4df0d",
      "range": {
        "startLine": 645,
        "startChar": 0,
        "endLine": 645,
        "endChar": 69
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92379934_01b7e76b",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 645,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-27T17:50:42Z",
      "side": 1,
      "message": "First sentence should\u0027ve read \"It\u0027s not just error\"",
      "parentUuid": "fadfab98_7b156d7d",
      "range": {
        "startLine": 645,
        "startChar": 0,
        "endLine": 645,
        "endChar": 69
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f19c0fa6_dfce885f",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 670,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-10T20:41:47Z",
      "side": 1,
      "message": "in theory a select with nothing in it is invalid right?  We probably don\u0027t need an optimization for this case, I would expect it to return a query error earlier.",
      "range": {
        "startLine": 667,
        "startChar": 0,
        "endLine": 670,
        "endChar": 5
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "445e11e4_15eebb11",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 670,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-10T21:59:30Z",
      "side": 1,
      "message": "I believe what you mentioned here is a different thing. This branch handles that after $select, the result JSON becomes empty. And yeah, it can be just removed. \n\nAnd I can add a branch in the parsing part to error out when $select value is empty.",
      "parentUuid": "f19c0fa6_dfce885f",
      "range": {
        "startLine": 667,
        "startChar": 0,
        "endLine": 670,
        "endChar": 5
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16ead850_f914f698",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 670,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-10T22:10:54Z",
      "side": 1,
      "message": "I think you\u0027ve seen my concern.  I\u0027m going to resolve, and we\u0027ll reopen this if it\u0027s still an issue.",
      "parentUuid": "445e11e4_15eebb11",
      "range": {
        "startLine": 667,
        "startChar": 0,
        "endLine": 670,
        "endChar": 5
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3116985_78f03220",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 671,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-10T20:41:47Z",
      "side": 1,
      "message": "In terms of algorithms, this is making a complete copy of the data set, and several copies of each key in the dataset.  In general in bmcweb, we try to avoid complete replacement of the json object, as it has lead to subtle bugs in the past with async operations.\n\ncould we just, as part of recursiveSelect, do something like\n\n\nrecursiveSelect(json, selectList){\n\n    auto key \u003d json.begin();\n    while(key !\u003d json.end()){\n       if (key.first in selectLIst){\n          recursiveSelect(key.second, selectList);\n          continue;\n          key++;\n       }\n       \n       key \u003d json.erase(key);\n    }\n}\n\nI think this also greatly simplifies the \"parentSelected\" behavior.",
      "range": {
        "startLine": 671,
        "startChar": 0,
        "endLine": 671,
        "endChar": 29
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1319eac_8e21edfe",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 671,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-10T21:59:30Z",
      "side": 1,
      "message": "This doesn\u0027t work when selected properties are nested keys, for example, \"Parameters/AllowableValues\". We still need to do recursion and traverse to the leaves.\n\n\u003e this is making a complete copy of the data set, and several copies of each key in the dataset\n\nOnly $selected keys are copied. And only $selected values are copied.\n\nLet me think whether erase while doing recursion is possible",
      "parentUuid": "f3116985_78f03220",
      "range": {
        "startLine": 671,
        "startChar": 0,
        "endLine": 671,
        "endChar": 29
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d7a21cf_8d36fab0",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 671,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-10T22:10:54Z",
      "side": 1,
      "message": "\u003e This doesn\u0027t work when selected properties are nested keys, for example, \"Parameters/AllowableValues\". We still need to do recursion and traverse to the leaves.\n\nI\u0027m not following why this doesn\u0027t work.  Sure, I didn\u0027t handle the split on the key to do that matching and construct the new allowlist.  That would look nearly identical to the code in readJson, so it seems like it should be doable.\n\n\u003e \n\u003e \u003e this is making a complete copy of the data set, and several copies of each key in the dataset\n\u003e \n\u003e Only $selected keys are copied. And only $selected values are copied.\n\nYep, but they\u0027re still copied and reconstructed.\n\n\u003e \n\u003e Let me think whether erase while doing recursion is possible\n\nCool.  Let me know if you need help.",
      "parentUuid": "a1319eac_8e21edfe",
      "range": {
        "startLine": 671,
        "startChar": 0,
        "endLine": 671,
        "endChar": 29
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "740e23e8_fe7acc94",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 671,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-10T23:41:21Z",
      "side": 1,
      "message": "Please take a look at what I have now",
      "parentUuid": "3d7a21cf_8d36fab0",
      "range": {
        "startLine": 671,
        "startChar": 0,
        "endLine": 671,
        "endChar": 29
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d58e68d9_17f55409",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 730,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-10T20:41:47Z",
      "side": 1,
      "message": "We should be using a redfish message for this.",
      "range": {
        "startLine": 729,
        "startChar": 12,
        "endLine": 730,
        "endChar": 61
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c02c095d_c303a5b5",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 730,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-10T21:59:30Z",
      "side": 1,
      "message": "Right, that\u0027s what I wanted to do until I didn\u0027t find a not implemented message in https://github.com/openbmc/bmcweb/blob/24861a286eb148fcec22afecffb73b596752700f/redfish-core/include/error_messages.hpp",
      "parentUuid": "d58e68d9_17f55409",
      "range": {
        "startLine": 729,
        "startChar": 12,
        "endLine": 730,
        "endChar": 61
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce6dec89_49622a01",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 730,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-10T22:10:54Z",
      "side": 1,
      "message": "that file is losely based on the Base registry, which is defined by DMTF.  FWIW, I think this shouldn\u0027t use not_implemented, it should do queryParameterValueFormatError, given that it\u0027s a combination of query params that\u0027s not available (and isn\u0027t really defined by the standard yet).",
      "parentUuid": "c02c095d_c303a5b5",
      "range": {
        "startLine": 729,
        "startChar": 12,
        "endLine": 730,
        "endChar": 61
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4b9db72f_522c7b89",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 5
      },
      "lineNbr": 730,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-10T23:41:21Z",
      "side": 1,
      "message": "I changed to queryParameterValueFormatError and moved them into the parse function.",
      "parentUuid": "ce6dec89_49622a01",
      "range": {
        "startLine": 729,
        "startChar": 12,
        "endLine": 730,
        "endChar": 61
      },
      "revId": "a97976c06207fd39134f975f6b6c0687a4f79b90",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}