{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "26e6772b_fd2b3640",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-21T04:48:03Z",
      "side": 1,
      "message": "webserver_main.cpp isn\u0027t where we host configuration.  bmcweb_config.hpp is.",
      "range": {
        "startLine": 17,
        "startChar": 24,
        "endLine": 19,
        "endChar": 1
      },
      "revId": "d88786bd746036c3e291044d685342ea5029c706",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb9886f9_9d947f68",
        "filename": "redfish-core/lib/task.hpp",
        "patchSetId": 2
      },
      "lineNbr": 517,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-21T04:48:03Z",
      "side": 1,
      "message": "I kind of see what you\u0027re getting at here, but I suspect most cases are not this simple, where you would completely remove one static function from another.\n\nIf we want to make TaskService disablable, why wouldn\u0027t we do it with a meson option, like we do other things?  I suspect this same behavior can be accomplished in a 15 line diff.",
      "range": {
        "startLine": 508,
        "startChar": 0,
        "endLine": 517,
        "endChar": 7
      },
      "revId": "d88786bd746036c3e291044d685342ea5029c706",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d96ed801_99e2aff9",
        "filename": "redfish-core/lib/task.hpp",
        "patchSetId": 2
      },
      "lineNbr": 517,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-03-21T07:17:26Z",
      "side": 1,
      "message": "by meson option I believe you are referring something like -DTASK_EVENT(Correct me if I am wrong). \nIf that is the case, how may places you will use this compiler directive?. I wanted to restrict the usage of ifdef TASK_EVENT to one place, which is in webserver_main.cpp. \n\nWithout this patch I can see that it should be used in at-least in 3 files. \n1) messgae_registry.hpp\n2) server_root.hpp\n3) webserver_main.cpp\n\nThink about scenario where we have  sever such apps. These three files will be having several ifdef checks. \n\nMy want is that inclusion of application header file in wbserver_main.hpp is enough to enable everything about it",
      "parentUuid": "cb9886f9_9d947f68",
      "range": {
        "startLine": 508,
        "startChar": 0,
        "endLine": 517,
        "endChar": 7
      },
      "revId": "d88786bd746036c3e291044d685342ea5029c706",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5a9e8c0_10b872d9",
        "filename": "redfish-core/lib/task.hpp",
        "patchSetId": 2
      },
      "lineNbr": 517,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-21T16:03:07Z",
      "side": 1,
      "message": "\u003e by meson option I believe you are referring something like -DTASK_EVENT(Correct me if I am wrong). \n\nno, I mean something like\n\n```\nif constexpr (\u003cvariable from bmcweb_config.h\u003e)\n```\n\n\u003e If that is the case, how may places you will use this compiler directive?. \n\nAs many as are required to accomplish the task.\n\n\u003e I wanted to restrict the usage of ifdef TASK_EVENT to one place, which is in webserver_main.cpp. \n\nTaskEvent isn\u0027t defined in webserver_main.cpp at all.  If I understand what you\u0027re asking, you would first have to promote the registry routes to webserver_main.cpp?  What are you trying to accomplish by restricting the ifdef to one file?  If you want a complete list, they are all available in meson_options.txt.\n\n\u003e \n\u003e Without this patch I can see that it should be used in at-least in 3 files. \n\u003e 1) messgae_registry.hpp\n\ngit ls-files | grep message_registry.cpp\n\nDoesn\u0027t return any results.  Can you please just link to the line you\u0027re talking about on github.\n\n\u003e 2) server_root.hpp\n\nI\u0027m assuming this was meant to be \"service_root.hpp\" ?\nIndividual registries aren\u0027t registered in ServiceRoot, so no, this file wouldn\u0027t need to be modified.\n\n\u003e 3) webserver_main.cpp\n\u003e \n\u003e Think about scenario where we have  sever such apps. These three files will be having several ifdef checks. \n\nI\u0027m assuming you meant \"several such apps\"?  Yes, they will have several ifdef checks, just like we already do in redfish.hpp\n\nhttps://gerrit.openbmc.org/plugins/gitiles/openbmc/bmcweb/+/1f56a3a6031ba5992d52532cf2d32c76253c9167/redfish-core/include/redfish.hpp#74\n\n\u003e \n\u003e My want is that inclusion of application header file in wbserver_main.hpp is enough to enable everything about it\n\nWhy is that better?",
      "parentUuid": "d96ed801_99e2aff9",
      "range": {
        "startLine": 508,
        "startChar": 0,
        "endLine": 517,
        "endChar": 7
      },
      "revId": "d88786bd746036c3e291044d685342ea5029c706",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12857e98_8fe17f2a",
        "filename": "redfish-core/lib/task.hpp",
        "patchSetId": 2
      },
      "lineNbr": 517,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-21T16:14:42Z",
      "side": 1,
      "message": "I guess, before responding to the individual questions, what are you overall trying to accomplish?  You seem to want to put all the ifdefs in one file, but you don\u0027t really answer WHY you want to do that, or what doing that enables for you.\n\nThe one example you came up with, Removing TaskEvent registry, might not be the best example, given that technically anything in the system can return an async Task, so it needs to be enabled unless all callers have been changed to not use async.  Is there a different example you can come up with that might be simpler?\n\nReading between the lines a bit, is this related to the License changes?",
      "parentUuid": "f5a9e8c0_10b872d9",
      "range": {
        "startLine": 508,
        "startChar": 0,
        "endLine": 517,
        "endChar": 7
      },
      "revId": "d88786bd746036c3e291044d685342ea5029c706",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c94e2554_05cefd52",
        "filename": "redfish-core/lib/task.hpp",
        "patchSetId": 2
      },
      "lineNbr": 517,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-03-22T05:05:50Z",
      "side": 1,
      "message": "Look at message_registries.hpp line no 25 . The task related headers are removed.\nWhich means message_registry is no more depending on task.\nAt line 508 task.hpp, messages related to task is registered here.\n\nThis will be invoked by [redfish.hpp](https://github.com/openbmc/bmcweb/blob/master/redfish-core/include/redfish.hpp#L228)\n\nYes I took wrong example of task to demonstrate the usage. But you can get the overall idea here.\n\nIf you want to remove task feature , then we can do it at single place which is  [redfish.hpp](https://github.com/openbmc/bmcweb/blob/master/redfish-core/include/redfish.hpp#L228) \n\nFor other applications disabling will be done at  [webserver_main.cpp](https://github.com/openbmc/bmcweb/blob/master/src/webserver_main.cpp#L81). \n\nThe overall ideas is to co-locate all related data  to single place. It will be easier to enable or disable an application then. \n\nI wanted to even remove entire code starting from [here](https://github.com/openbmc/bmcweb/blob/master/src/webserver_main.cpp#L76) to [here](https://github.com/openbmc/bmcweb/blob/master/src/webserver_main.cpp#L130) with couple of lines. \nI thought that that would be bigger change set then. \n\nIf you are interested I can incorporate those changes too in this patch set. \n\nBut it all depends on how community see it as a valuable feature or not. Personally I feel it  will have value addition in long term maintenance point of view.",
      "parentUuid": "12857e98_8fe17f2a",
      "range": {
        "startLine": 508,
        "startChar": 0,
        "endLine": 517,
        "endChar": 7
      },
      "revId": "d88786bd746036c3e291044d685342ea5029c706",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d8e0305_576615ea",
        "filename": "redfish-core/lib/task.hpp",
        "patchSetId": 2
      },
      "lineNbr": 517,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-03-22T05:08:33Z",
      "side": 1,
      "message": "Yes for me it is license. But in general for any application that cannot be upstreamed at the moment for various reasons. We need some flexible customization points from bmcweb to help those application keep as downstream app.",
      "parentUuid": "c94e2554_05cefd52",
      "range": {
        "startLine": 508,
        "startChar": 0,
        "endLine": 517,
        "endChar": 7
      },
      "revId": "d88786bd746036c3e291044d685342ea5029c706",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff697a60_6d3b1905",
        "filename": "redfish-core/lib/task.hpp",
        "patchSetId": 2
      },
      "lineNbr": 517,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-22T05:43:58Z",
      "side": 1,
      "message": "\u003e But you can get the overall idea here.\n\nNo, I don\u0027t get the overall idea here.  I understand, you want things enabled/disabled with a single ifdef in one location.  Why is that helpful compared to having multiple locations?\n\n\u003e Yes for me it is license.\n\nUnderstood, then lets talk about this in terms of a license implementation.  Can you point me at how this makes license better?  Ideally in your codebase that you can show me how it makes supporting license easier?",
      "parentUuid": "8d8e0305_576615ea",
      "range": {
        "startLine": 508,
        "startChar": 0,
        "endLine": 517,
        "endChar": 7
      },
      "revId": "d88786bd746036c3e291044d685342ea5029c706",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e80ae8a_873d10f6",
        "filename": "redfish-core/lib/task.hpp",
        "patchSetId": 2
      },
      "lineNbr": 517,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-03-22T06:49:46Z",
      "side": 1,
      "message": "Right now changes belonging to license feature spread across multiple files(message_registry, server_root and webserver_main) . We wanted to move all those changes to licnese_sevice.hpp (as I shown in task.hpp ) . Then we just need to just include license_sevice.hpp in webserver_main.cpp to enable license feature. This is  going to be a single line change for every upstream rebase. the license service.hpp can be placed outside the bmcweb directories( meson include path change required in this case) .",
      "parentUuid": "ff697a60_6d3b1905",
      "range": {
        "startLine": 508,
        "startChar": 0,
        "endLine": 517,
        "endChar": 7
      },
      "revId": "d88786bd746036c3e291044d685342ea5029c706",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90e117e7_67d299f6",
        "filename": "redfish-core/lib/task.hpp",
        "patchSetId": 2
      },
      "lineNbr": 517,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-22T15:37:28Z",
      "side": 1,
      "message": "\u003e Right now changes belonging to license feature spread across multiple files(message_registry,\n\nThis is the part I\u0027m not understanding;  I would not expect License schema to effect message Registry at all.  They\u0027re two different schemas, used for two different purposes.\n\n\u003e , server_root \n\nWhat is \"server_root\"?\n\n\u003e and webserver_main)\n\nWhy does it make changes to webserver main? I would expect change to be made to redfish.hpp.  In addition, the schema would need to be added, that makes changes to update_schemas.py, and the static files directory.\n\n\u003e . We wanted to move all those changes to licnese_sevice.hpp (as I shown in task.hpp ) . Then we just need to just include license_sevice.hpp in webserver_main.cpp to enable license feature.\n\u003e This is  going to be a single line change for every upstream rebase. the license service.hpp can be placed outside the bmcweb directories( meson include path change required in this case) .\n\nCan\u0027t you already do that though?\n\nIn redfish.hpp, put:\nrequestRoutesLicenceCollection()\n\nand let your code do whatever it wants?\n\n\n\nOne thing that I\u0027ve thought for a long time is that the odata links:\n\nhttps://github.com/openbmc/bmcweb/blob/e10f0176d66a2737edefec71f40376566769712b/redfish-core/lib/service_root.hpp#L88C6-L88C76\n\nCould be generated automatically based on the registered routes in the router.  If the request would 404, we don\u0027t add the route.  Maybe that\u0027s an incremental improvement you could make?",
      "parentUuid": "8e80ae8a_873d10f6",
      "range": {
        "startLine": 508,
        "startChar": 0,
        "endLine": 517,
        "endChar": 7
      },
      "revId": "d88786bd746036c3e291044d685342ea5029c706",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d54e048_38cd2d24",
        "filename": "redfish-core/lib/task.hpp",
        "patchSetId": 2
      },
      "lineNbr": 517,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-03-25T04:59:04Z",
      "side": 1,
      "message": "\"This is the part I\u0027m not understanding; I would not expect License schema to effect message Registry at all. They\u0027re two different schemas, used for two different purposes.\"\n\n[This](https://redfish.dmtf.org/registries/License.1.0.0) is the DMTF approved license message. This should be served via /redfish/v1/Registries/\u003cstr\u003e/\u003cstr\u003e/ to redfish clients. How can we make it work with out modifying message_registries.hpp?\nShould BMCWEB_ROUTE(app, \"/redfish/v1/Registries/License/License\")  work ? Does bmcweb has logic to select more specific URL instead of parameterised one while routing?",
      "parentUuid": "90e117e7_67d299f6",
      "range": {
        "startLine": 508,
        "startChar": 0,
        "endLine": 517,
        "endChar": 7
      },
      "revId": "d88786bd746036c3e291044d685342ea5029c706",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "847fe83e_5ee733ed",
        "filename": "redfish-core/lib/task.hpp",
        "patchSetId": 2
      },
      "lineNbr": 517,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-03-25T05:03:09Z",
      "side": 1,
      "message": "What is \"server_root\"? \nSorry It was typo, I mean service_root here. \n\nWhy does it make changes to webserver main? \nI could see modification are going in  both  webserver_main.hpp and redfish.hpp. I don\u0027t know which one to choose. I thought OEM specific changes will fall in webserver_main.hpp",
      "parentUuid": "6d54e048_38cd2d24",
      "range": {
        "startLine": 508,
        "startChar": 0,
        "endLine": 517,
        "endChar": 7
      },
      "revId": "d88786bd746036c3e291044d685342ea5029c706",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06afbb00_75072aa9",
        "filename": "redfish-core/lib/task.hpp",
        "patchSetId": 2
      },
      "lineNbr": 517,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-03-25T05:48:03Z",
      "side": 1,
      "message": "\"Could be generated automatically based on the registered routes in the router\" I did not get it fully. \npopulating the service_root urls from the registered routes seems to be a good idea. Have you done it ? or you want some one to explore more on this idea?",
      "parentUuid": "847fe83e_5ee733ed",
      "range": {
        "startLine": 508,
        "startChar": 0,
        "endLine": 517,
        "endChar": 7
      },
      "revId": "d88786bd746036c3e291044d685342ea5029c706",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aba0801c_ca2abcf0",
        "filename": "redfish-core/lib/task.hpp",
        "patchSetId": 2
      },
      "lineNbr": 517,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-26T04:14:23Z",
      "side": 1,
      "message": "\u003e  Have you done it ? or you want some one to explore more on this idea?\n\nI have not attempted it yet, just something that would incrementally help with this plugability problem.\n\n\n\u003e Should BMCWEB_ROUTE(app, \"/redfish/v1/Registries/License/License\") work ? Does bmcweb has logic to select more specific URL instead of parameterised one while routing?\n\nToday this would result in a conflict, but that\u0027s just behavior in the router.  We could make this kind of thing call both or override a specific path.\n\nThe other option is we could just register 3 routes, one for each registry, that way your downstream registry route wouldn\u0027t conflict.\n\n\n\u003e How can we make it work with out modifying message_registries.hpp?\n\nYou didn\u0027t mention that you\u0027re adding two things, Licence registry AND license service.  Adding pluggable registries is considerably harder than adding pluggable routes, because the registry needs to be made available.  What I would do is\n\n1. Move the registry generation script to run during the build, instead of running on checkin.\n2. Add code to make the script search for new registry file\n3. Have the script generate all the possible registries and error_messages.hpp/cpp files.\n4. As part of your bbappend, install the new registry file into the rootfs for bmcweb to find.\n5(optional) make all the registries installed with their own recipe, and have bmcweb generate all of them.\n\nThis way, nobody is maintaining a patch, even a single line, and people can trivially plug in their own registries if they like.\n\n\n\nI think that, combined with the above automatic hyperlinking, and BMCWEB_ROUTE overriding would get you everything you want, right?",
      "parentUuid": "06afbb00_75072aa9",
      "range": {
        "startLine": 508,
        "startChar": 0,
        "endLine": 517,
        "endChar": 7
      },
      "revId": "d88786bd746036c3e291044d685342ea5029c706",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f5656f7_4aaded4d",
        "filename": "redfish-core/lib/task.hpp",
        "patchSetId": 2
      },
      "lineNbr": 517,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-03-26T05:42:54Z",
      "side": 1,
      "message": "Yes auto generation or registry during build time is a better solution for plug-ability. I am happy to manage it via bbappend than a code patch. Combining auto registration of registry and auto population of service root from bmc-route will solve the plug-ability issue I have with license manager. If that is the plan then I no more required this commit.",
      "parentUuid": "aba0801c_ca2abcf0",
      "range": {
        "startLine": 508,
        "startChar": 0,
        "endLine": 517,
        "endChar": 7
      },
      "revId": "d88786bd746036c3e291044d685342ea5029c706",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}