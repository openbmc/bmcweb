{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8405313f_ca8aec68",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 22,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-15T22:37:34Z",
      "side": 1,
      "message": "Validator?",
      "revId": "65c234103e5d96f2747909f1794a47214bc73ec8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e098d55_71993149",
        "filename": "/COMMIT_MSG",
        "patchSetId": 13
      },
      "lineNbr": 22,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-07-16T01:42:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8405313f_ca8aec68",
      "revId": "65c234103e5d96f2747909f1794a47214bc73ec8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4925b6f1_45774741",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 13
      },
      "lineNbr": 965,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-15T22:37:34Z",
      "side": 1,
      "message": "For here and everywhere else, shall be handle path failures here?",
      "range": {
        "startLine": 965,
        "startChar": 21,
        "endLine": 965,
        "endChar": 29
      },
      "revId": "65c234103e5d96f2747909f1794a47214bc73ec8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf5a298d_e8ef0339",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 13
      },
      "lineNbr": 965,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-16T01:04:38Z",
      "side": 1,
      "message": "+1.  Also, if we\u0027re chaging this, it should be using urlFromPieces.",
      "parentUuid": "4925b6f1_45774741",
      "range": {
        "startLine": 965,
        "startChar": 21,
        "endLine": 965,
        "endChar": 29
      },
      "revId": "65c234103e5d96f2747909f1794a47214bc73ec8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a42238f0_02788ad7",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 13
      },
      "lineNbr": 965,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-07-16T01:42:24Z",
      "side": 1,
      "message": "It is changed to urlFromPieces in https://gerrit.openbmc.org/c/openbmc/bmcweb/+/54548/ Also this patchset\n\nAnd the path failure will be handled in getCertificateProperties() when calling DBus.",
      "parentUuid": "cf5a298d_e8ef0339",
      "range": {
        "startLine": 965,
        "startChar": 21,
        "endLine": 965,
        "endChar": 29
      },
      "revId": "65c234103e5d96f2747909f1794a47214bc73ec8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0103355e_fee8042d",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 13
      },
      "lineNbr": 1071,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-15T22:37:34Z",
      "side": 1,
      "message": "This is called several time, consider getting this as a string, and use it twice?",
      "range": {
        "startLine": 1071,
        "startChar": 21,
        "endLine": 1071,
        "endChar": 29
      },
      "revId": "65c234103e5d96f2747909f1794a47214bc73ec8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17179a7e_729d28d1",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 13
      },
      "lineNbr": 1071,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-07-16T01:42:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0103355e_fee8042d",
      "range": {
        "startLine": 1071,
        "startChar": 21,
        "endLine": 1071,
        "endChar": 29
      },
      "revId": "65c234103e5d96f2747909f1794a47214bc73ec8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34025d74_cbaf8134",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 13
      },
      "lineNbr": 1103,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-15T22:37:34Z",
      "side": 1,
      "message": "What\u0027s the convention here? I saw we construct this |object_path| just for contacting a path? Does it worth it?",
      "range": {
        "startLine": 1103,
        "startChar": 40,
        "endLine": 1103,
        "endChar": 44
      },
      "revId": "65c234103e5d96f2747909f1794a47214bc73ec8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64889452_82745be4",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 13
      },
      "lineNbr": 1103,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-16T01:04:38Z",
      "side": 1,
      "message": "unfortunately we\u0027re inconsistent on dbus between our usage of object_path and string.  Also, object_path doesn\u0027t have a constexpr constructor, so there\u0027s no way to make ldapObjectPath constexpr, so this is what we have for the moment.  If someone wanted to, they could come up with a patches with the mods to sdbusplus::message::object_path to allow it to be constexpr (or maybe a constexpr specific type)\n\n\nFor the moment, I think this is the best we have.",
      "parentUuid": "34025d74_cbaf8134",
      "range": {
        "startLine": 1103,
        "startChar": 40,
        "endLine": 1103,
        "endChar": 44
      },
      "revId": "65c234103e5d96f2747909f1794a47214bc73ec8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ea70ce4_8ae8901b",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 13
      },
      "lineNbr": 1103,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-07-16T01:42:24Z",
      "side": 1,
      "message": "Agreed",
      "parentUuid": "64889452_82745be4",
      "range": {
        "startLine": 1103,
        "startChar": 40,
        "endLine": 1103,
        "endChar": 44
      },
      "revId": "65c234103e5d96f2747909f1794a47214bc73ec8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12eab313_8ed74839",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 13
      },
      "lineNbr": 1103,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-18T16:36:10Z",
      "side": 1,
      "message": "I can actually asking this:\n\n```\nstd::string certURL \u003d\n            \"/redfish/v1/AccountService/LDAP/Certificates/\" + id;\nsdbusplus::message::object_path path(certs::ldapObjectPath);\npath /\u003d id;\n```\n\nThere are two styles of contacting paths (\"${a}/\" + b, vs using sdbusplus) in the same code. Should we use the same way? \n\nWhy is it related to constexpr constructor of object_path?",
      "parentUuid": "7ea70ce4_8ae8901b",
      "range": {
        "startLine": 1103,
        "startChar": 40,
        "endLine": 1103,
        "endChar": 44
      },
      "revId": "65c234103e5d96f2747909f1794a47214bc73ec8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99381757_7cd1830c",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 13
      },
      "lineNbr": 1103,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-18T16:40:46Z",
      "side": 1,
      "message": "\u003e I can actually asking this:\n\u003e \n\u003e ```\n\u003e std::string certURL \u003d\n\u003e             \"/redfish/v1/AccountService/LDAP/Certificates/\" + id;\n\u003e sdbusplus::message::object_path path(certs::ldapObjectPath);\n\u003e path /\u003d id;\n\u003e ```\n\u003e \n\u003e There are two styles of contacting paths (\"${a}/\" + b, vs using sdbusplus) in the same code. Should we use the same way? \n\nThese are two different paths, one is a url, one is a dbus object path.  There are minor differences in how we use them.  Yes, ideally everything should be using sdbusplus these days, but it didn\u0027t always exist, so there\u0027s a lot of code that does the string concat on its own.\n\n\u003e \n\u003e Why is it related to constexpr constructor of object_path?\n\nBecause ideally we\u0027d be able to do\n\nconstexpr sdbusplus::message::object_path ldapObjectPath \u003d \"...\";\n\nand avoid the intermediate object_path construction that you mentioned entirely.",
      "parentUuid": "12eab313_8ed74839",
      "range": {
        "startLine": 1103,
        "startChar": 40,
        "endLine": 1103,
        "endChar": 44
      },
      "revId": "65c234103e5d96f2747909f1794a47214bc73ec8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a9e1744_457a6a85",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 13
      },
      "lineNbr": 1103,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-19T00:19:54Z",
      "side": 1,
      "message": "\u003e constexpr sdbusplus::message::object_path ldapObjectPath \u003d \"...\";\n\nI see. You want to declare the global variable constexpr. Makes sense.",
      "parentUuid": "99381757_7cd1830c",
      "range": {
        "startLine": 1103,
        "startChar": 40,
        "endLine": 1103,
        "endChar": 44
      },
      "revId": "65c234103e5d96f2747909f1794a47214bc73ec8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e93f766_446878be",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 13
      },
      "lineNbr": 1103,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-07-19T08:19:46Z",
      "side": 1,
      "message": "\u003e constexpr sdbusplus::message::object_path ldapObjectPath \u003d \"...\";\n\nCurrently object_path is a wrapper of std::string, which cannot be constexpr. (I know C++20 supports constexpr std::string, but it requires the allocation being cleaned up in constexpr evaluation time, which is not our case)\n\nOr something like `static const sdbusplus::message::object_path ldapObjPath(\"...\");` can be used, but it is not as clean as we want I think.",
      "parentUuid": "8a9e1744_457a6a85",
      "range": {
        "startLine": 1103,
        "startChar": 40,
        "endLine": 1103,
        "endChar": 44
      },
      "revId": "65c234103e5d96f2747909f1794a47214bc73ec8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}