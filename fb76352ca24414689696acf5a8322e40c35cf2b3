{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1a5a55ec_f0eabb59",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 10,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-24T16:57:51Z",
      "side": 1,
      "message": "What does type safety refer to here? Response is always a JSON Dict?",
      "range": {
        "startLine": 10,
        "startChar": 34,
        "endLine": 10,
        "endChar": 45
      },
      "revId": "fb76352ca24414689696acf5a8322e40c35cf2b3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14dc7a6a_8e7fd6ad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-25T01:43:45Z",
      "side": 1,
      "message": "the rest of the sentence says literally that, “it’s possible to return a non object json response”.  is there a way to word this to make it more clear?\n\nbasically, yes, a nlohmann json object lets you return a bool or a double without it being wrapped in an object.",
      "parentUuid": "1a5a55ec_f0eabb59",
      "range": {
        "startLine": 10,
        "startChar": 34,
        "endLine": 10,
        "endChar": 45
      },
      "revId": "fb76352ca24414689696acf5a8322e40c35cf2b3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f8e9cf6_335369b4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 10,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-25T20:27:48Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "14dc7a6a_8e7fd6ad",
      "range": {
        "startLine": 10,
        "startChar": 34,
        "endLine": 10,
        "endChar": 45
      },
      "revId": "fb76352ca24414689696acf5a8322e40c35cf2b3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9482284_508875b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-07-25T07:08:49Z",
      "side": 1,
      "message": "LGTM, It\u0027s marked as WIP, but if this compiles it should be working ok.",
      "revId": "fb76352ca24414689696acf5a8322e40c35cf2b3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ece9aa21_7bab8670",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-07-25T07:11:49Z",
      "side": 1,
      "message": "As a sanity check Redfish Validator can be executed.",
      "parentUuid": "b9482284_508875b7",
      "revId": "fb76352ca24414689696acf5a8322e40c35cf2b3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2a77300_01c16299",
        "filename": "redfish-core/include/utils/json_utils.hpp",
        "patchSetId": 6
      },
      "lineNbr": 204,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-07-25T20:30:06Z",
      "side": 1,
      "message": "Is this change supposed to be here?",
      "range": {
        "startLine": 204,
        "startChar": 16,
        "endLine": 204,
        "endChar": 25
      },
      "revId": "fb76352ca24414689696acf5a8322e40c35cf2b3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}