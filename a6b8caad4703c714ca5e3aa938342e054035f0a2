{
  "comments": [
    {
      "key": {
        "uuid": "37ebec01_0aa779f8",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 7
      },
      "lineNbr": 126,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2020-12-15T16:11:35Z",
      "side": 1,
      "message": "Is string::capacity correct?  Per the C++ spec, it does not necessarily reflect the length of the string.  Should this be string::length?",
      "range": {
        "startLine": 126,
        "startChar": 52,
        "endLine": 126,
        "endChar": 60
      },
      "revId": "a6b8caad4703c714ca5e3aa938342e054035f0a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6e73707_d36f5fd4",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 7
      },
      "lineNbr": 126,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2020-12-15T16:11:35Z",
      "side": 1,
      "message": "spelling",
      "range": {
        "startLine": 126,
        "startChar": 30,
        "endLine": 126,
        "endChar": 39
      },
      "revId": "a6b8caad4703c714ca5e3aa938342e054035f0a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d46b84e_b7a8189b",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 7
      },
      "lineNbr": 155,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2020-12-15T16:11:35Z",
      "side": 1,
      "message": "This computation seems incorrect.  Does newSizeToWrite represent the amount changeAreaDirSize will change after the PUT request completes?  Should this number get smaller when the new file is smaller than the existing file?  How can that happen when newSizeToWrite is unsigned?\n\nWas this code copied from elsewhere (as indicated by previous comments in this review)?  If so, please investigate that usage.",
      "range": {
        "startLine": 155,
        "startChar": 12,
        "endLine": 155,
        "endChar": 76
      },
      "revId": "a6b8caad4703c714ca5e3aa938342e054035f0a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b7c60d2_f0d4b3ea",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 7
      },
      "lineNbr": 671,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2020-12-15T16:11:35Z",
      "side": 1,
      "message": "The BMCWEB_LOG message is not provided as part of the HTTP response, so the requester has no way to determine why the request was bad.  They need to know so that can correct their problem.\nCan we add a res.jsonValue[\"Description\"] as is done elsewhere in this code?",
      "range": {
        "startLine": 671,
        "startChar": 59,
        "endLine": 671,
        "endChar": 70
      },
      "revId": "a6b8caad4703c714ca5e3aa938342e054035f0a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fe7f735_3a26cf8a",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 7
      },
      "lineNbr": 680,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2020-12-15T16:11:35Z",
      "side": 1,
      "message": "Same request as above to return more information.\nAnd again for the validation message 10 lines down.",
      "range": {
        "startLine": 680,
        "startChar": 59,
        "endLine": 680,
        "endChar": 70
      },
      "revId": "a6b8caad4703c714ca5e3aa938342e054035f0a2",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}