{
  "comments": [
    {
      "key": {
        "uuid": "b1e5ce0c_1a88aa38",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-17T00:56:34Z",
      "side": 1,
      "message": "init your variables.",
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f15e4ca_0b6e1d3f",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 121,
      "author": {
        "id": 1000658
      },
      "writtenOn": "2020-07-17T06:40:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b1e5ce0c_1a88aa38",
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7f94ad7_598d9f57",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-17T00:56:34Z",
      "side": 1,
      "message": "This should really be logging the error and returning MAX_INT or 0.  If this gets hit, the daemon has broken the dbus contract.",
      "range": {
        "startLine": 130,
        "startChar": 18,
        "endLine": 130,
        "endChar": 48
      },
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27d8e5cf_49ee52df",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 1000658
      },
      "writtenOn": "2020-07-20T07:15:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b7f94ad7_598d9f57",
      "range": {
        "startLine": 130,
        "startChar": 18,
        "endLine": 130,
        "endChar": 48
      },
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2268af25_6c49ad47",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 135,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-17T00:56:34Z",
      "side": 1,
      "message": "Simply declare a duration type that uses the correct rep type, instead of casting to the wrong type, then casting again.  Something like\n\nreturn std::chrono::duration_cast\u003cstd::chrono::duration\u003cuint64_t, std::ratio\u003c1, 100000\u003e\u003e(std::chrono::seconds(timeout)).count();\n\nWith that said, are you sure you want to be returning a uint here?  int seems like a better choice.",
      "range": {
        "startLine": 135,
        "startChar": 23,
        "endLine": 135,
        "endChar": 31
      },
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc76c5ff_5b8fa1e1",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 135,
      "author": {
        "id": 1000658
      },
      "writtenOn": "2020-07-17T06:40:02Z",
      "side": 1,
      "message": "Done with duration type and cast.\nuint64_t is used because sync_method_call_timed() has an uint64_t timeout parameter.",
      "parentUuid": "2268af25_6c49ad47",
      "range": {
        "startLine": 135,
        "startChar": 23,
        "endLine": 135,
        "endChar": 31
      },
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f680b0b9_fafad852",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 135,
      "author": {
        "id": 1000658
      },
      "writtenOn": "2020-07-20T07:15:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc76c5ff_5b8fa1e1",
      "range": {
        "startLine": 135,
        "startChar": 23,
        "endLine": 135,
        "endChar": 31
      },
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be10ba13_98d3b58b",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 837,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-17T00:56:34Z",
      "side": 1,
      "message": "This seems really odd that we\u0027re letting a dbus call (which might itself time out) determine what our timeouts should be.\n\nThis whole patch really feels like a bug in the dbus daemon thats being called (to return a response in a timely mannger), not fixed in bmcweb.",
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "763f7635_dbae396c",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 837,
      "author": {
        "id": 1000658
      },
      "writtenOn": "2020-07-17T06:40:02Z",
      "side": 1,
      "message": "VirtualMedia deamon can actually block for quite some time in cases when resources are unavailable or just simply when there is huge delay getting them over the network.\nThis was solved by adding settable timeout in the deamon itself.\n\nIssue with that approach is any default dbus call on mount or unmount will timeout under such conditions.\n\nI agree that this seems more like an issue of the service itself, but to be able to use short dbus timeout values we would need to change simple mount/unmount calls to some kind of polling protocol with requests and responses.\nOther solution would be to limit users to have quickly accessible resources which I don\u0027t think is feasible.",
      "parentUuid": "be10ba13_98d3b58b",
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2027664_19fa68e5",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 837,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-18T15:42:18Z",
      "side": 1,
      "message": "\"VirtualMedia deamon can actually block for quite some time in cases when resources are unavailable or just simply when there is huge delay getting them over the network.\"\n\nSo it\u0027s breaking the dbus contract.  That\u0027s a bug that should be fixed in the virtual media daemon.  If it needs an incremental or status based api, that seems like what\u0027s needed here, not getting bmcweb to set arbitrarily long timeouts.\n\n\"I agree that this seems more like an issue of the service itself, but to be able to use short dbus timeout values we would need to change simple mount/unmount calls to some kind of polling protocol with requests and responses.\"\nOr do the mount/unmount in a separate thread/task, with a timer running that is able to fire a response if it takes too long?  Given the complexities with mounting filesystems, that seems like a good separation to have anyway.\n\n\"Other solution would be to limit users to have quickly accessible resources which I don\u0027t think is feasible\"\nYeah, that seems like a non-starter.",
      "parentUuid": "763f7635_dbae396c",
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5edc2fa3_ba02e24b",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 840,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2020-07-15T16:33:43Z",
      "side": 1,
      "message": "nit: int is small, can just be by copy",
      "range": {
        "startLine": 840,
        "startChar": 48,
        "endLine": 840,
        "endChar": 49
      },
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c87d918c_5d192b36",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 840,
      "author": {
        "id": 1000658
      },
      "writtenOn": "2020-07-16T08:48:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5edc2fa3_ba02e24b",
      "range": {
        "startLine": 840,
        "startChar": 48,
        "endLine": 840,
        "endChar": 49
      },
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0af3d83a_92b9ba48",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 848,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2020-07-15T16:33:43Z",
      "side": 1,
      "message": "avoid auto here, can\u0027t tell by the right size what timeout is",
      "range": {
        "startLine": 848,
        "startChar": 16,
        "endLine": 848,
        "endChar": 21
      },
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33cc241e_63f24d90",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 848,
      "author": {
        "id": 1000658
      },
      "writtenOn": "2020-07-16T08:48:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0af3d83a_92b9ba48",
      "range": {
        "startLine": 848,
        "startChar": 16,
        "endLine": 848,
        "endChar": 21
      },
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da82bedd_93e7bf90",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 853,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2020-07-15T16:33:43Z",
      "side": 1,
      "message": "kind of surprised this doesn\u0027t just respond with an ec on error, instead of a bool.. but that\u0027s not really part of this review",
      "range": {
        "startLine": 850,
        "startChar": 16,
        "endLine": 853,
        "endChar": 31
      },
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75a8ee14_d45265cd",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 853,
      "author": {
        "id": 1000658
      },
      "writtenOn": "2020-07-16T08:48:05Z",
      "side": 1,
      "message": "I agree, it feels like it would simplify things here.",
      "parentUuid": "da82bedd_93e7bf90",
      "range": {
        "startLine": 850,
        "startChar": 16,
        "endLine": 853,
        "endChar": 31
      },
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e22cc53_cbb65e2d",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 853,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-07-18T15:42:18Z",
      "side": 1,
      "message": "So go fix it?",
      "parentUuid": "75a8ee14_d45265cd",
      "range": {
        "startLine": 850,
        "startChar": 16,
        "endLine": 853,
        "endChar": 31
      },
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd0ccda9_f2eb9ec0",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 1016,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2020-07-15T16:33:43Z",
      "side": 1,
      "message": "same nit as above",
      "range": {
        "startLine": 1016,
        "startChar": 20,
        "endLine": 1016,
        "endChar": 61
      },
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8755ad95_cc37b083",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 1016,
      "author": {
        "id": 1000658
      },
      "writtenOn": "2020-07-16T08:48:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bd0ccda9_f2eb9ec0",
      "range": {
        "startLine": 1016,
        "startChar": 20,
        "endLine": 1016,
        "endChar": 61
      },
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1ef185d_8bc17a84",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 1024,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2020-07-15T16:33:43Z",
      "side": 1,
      "message": "same as above about auto",
      "range": {
        "startLine": 1024,
        "startChar": 16,
        "endLine": 1024,
        "endChar": 21
      },
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7aa9f694_d5b6de14",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 1024,
      "author": {
        "id": 1000658
      },
      "writtenOn": "2020-07-16T08:48:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1ef185d_8bc17a84",
      "range": {
        "startLine": 1024,
        "startChar": 16,
        "endLine": 1024,
        "endChar": 21
      },
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2db1b683_7e006359",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 1029,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2020-07-15T16:33:43Z",
      "side": 1,
      "message": "neat, didn\u0027t know this was a thing",
      "range": {
        "startLine": 1029,
        "startChar": 50,
        "endLine": 1029,
        "endChar": 73
      },
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c3ffcf8_92a49d48",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 1029,
      "author": {
        "id": 1000658
      },
      "writtenOn": "2020-07-16T08:48:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2db1b683_7e006359",
      "range": {
        "startLine": 1029,
        "startChar": 50,
        "endLine": 1029,
        "endChar": 73
      },
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd60cbeb_1539de98",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 1075,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2020-07-15T16:33:43Z",
      "side": 1,
      "message": "if you use a variable for path you could combine these I think",
      "range": {
        "startLine": 1029,
        "startChar": 0,
        "endLine": 1075,
        "endChar": 33
      },
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "930efbe1_5e9c176c",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 1075,
      "author": {
        "id": 1000658
      },
      "writtenOn": "2020-07-16T08:48:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd60cbeb_1539de98",
      "range": {
        "startLine": 1029,
        "startChar": 0,
        "endLine": 1075,
        "endChar": 33
      },
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "518abfa0_c0cd3416",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 1080,
      "author": {
        "id": 1000164
      },
      "writtenOn": "2020-07-15T16:33:43Z",
      "side": 1,
      "message": "path variable might help to make this more clear?",
      "range": {
        "startLine": 1078,
        "startChar": 11,
        "endLine": 1080,
        "endChar": 71
      },
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d044280_11222072",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 2
      },
      "lineNbr": 1080,
      "author": {
        "id": 1000658
      },
      "writtenOn": "2020-07-16T08:48:05Z",
      "side": 1,
      "message": "Done, This was actually great idea. Function reduce to half of the original one and I feel like it\u0027s more readable now.",
      "parentUuid": "518abfa0_c0cd3416",
      "range": {
        "startLine": 1078,
        "startChar": 11,
        "endLine": 1080,
        "endChar": 71
      },
      "revId": "4322efc2903808ce096f3ff6e965649c4115e364",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}