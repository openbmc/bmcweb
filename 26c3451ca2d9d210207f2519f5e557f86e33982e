{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c58119d3_309da90a",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 22
      },
      "lineNbr": 809,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-05-11T17:14:58Z",
      "side": 1,
      "message": "not needed if we don\u0027t need to sort it.",
      "range": {
        "startLine": 804,
        "startChar": 20,
        "endLine": 809,
        "endChar": 0
      },
      "revId": "26c3451ca2d9d210207f2519f5e557f86e33982e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0fbb4d63_b21d444e",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 22
      },
      "lineNbr": 809,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-05-11T18:30:33Z",
      "side": 1,
      "message": "Maintainer (edd) requested this sort, \nsee https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/53325/16..22/redfish-core/lib/chassis.hpp#b814",
      "parentUuid": "c58119d3_309da90a",
      "range": {
        "startLine": 804,
        "startChar": 20,
        "endLine": 809,
        "endChar": 0
      },
      "revId": "26c3451ca2d9d210207f2519f5e557f86e33982e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd7d8073_56d16e7e",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 22
      },
      "lineNbr": 812,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-05-11T17:14:58Z",
      "side": 1,
      "message": "why do we need to sort it?\n\nThe order is in the order that you expose it. Shouldn\u0027t it be control there instead?",
      "range": {
        "startLine": 810,
        "startChar": 24,
        "endLine": 812,
        "endChar": 0
      },
      "revId": "26c3451ca2d9d210207f2519f5e557f86e33982e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98fa8a37_12a3a0f0",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 22
      },
      "lineNbr": 812,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-05-11T18:30:33Z",
      "side": 1,
      "message": "Maintainer (edd) requested this sort, \nsee https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/53325/16..22/redfish-core/lib/chassis.hpp#b814",
      "parentUuid": "dd7d8073_56d16e7e",
      "range": {
        "startLine": 810,
        "startChar": 24,
        "endLine": 812,
        "endChar": 0
      },
      "revId": "26c3451ca2d9d210207f2519f5e557f86e33982e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9af6eae2_e9807a34",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 22
      },
      "lineNbr": 818,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-05-11T17:14:58Z",
      "side": 1,
      "message": "just +?",
      "range": {
        "startLine": 818,
        "startChar": 62,
        "endLine": 818,
        "endChar": 64
      },
      "revId": "26c3451ca2d9d210207f2519f5e557f86e33982e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e16fc7c_3e107a42",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 22
      },
      "lineNbr": 818,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-05-11T18:30:33Z",
      "side": 1,
      "message": "Already answered\n\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/53325/19..22/redfish-core/lib/chassis.hpp#b819\n\nNot if you want to pass clang \n\n```\nerror: string concatenation results in allocation of unnecessary temporary strings; consider using \u0027operator+\u003d\u0027 or \u0027string::append()\u0027 instead [performance-inefficient-string-concatenation,-warnings-as-errors]\n```",
      "parentUuid": "9af6eae2_e9807a34",
      "range": {
        "startLine": 818,
        "startChar": 62,
        "endLine": 818,
        "endChar": 64
      },
      "revId": "26c3451ca2d9d210207f2519f5e557f86e33982e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a12d6e20_0ba30d89",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 22
      },
      "lineNbr": 818,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-11T20:03:45Z",
      "side": 1,
      "message": "The core of the problem here is you shoudl be using the urlFromPieces method, not constructing a URI yourself with string +\u003d.\n\nWith that said, if you still wanted to do that, you should ideally be constructing it on another line like we do elsewhere.",
      "parentUuid": "8e16fc7c_3e107a42",
      "range": {
        "startLine": 818,
        "startChar": 62,
        "endLine": 818,
        "endChar": 64
      },
      "revId": "26c3451ca2d9d210207f2519f5e557f86e33982e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9c6af7d_3519810d",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 22
      },
      "lineNbr": 831,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-05-11T17:17:07Z",
      "side": 1,
      "message": "shouldn\u0027t this be part of https://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/storage.hpp#L484.\n\njust another endpoint?",
      "revId": "26c3451ca2d9d210207f2519f5e557f86e33982e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfde4241_513ab206",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 22
      },
      "lineNbr": 831,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-05-11T17:19:29Z",
      "side": 1,
      "message": "actually, this is a collection, so maybe a new getDriveCollectrion",
      "parentUuid": "f9c6af7d_3519810d",
      "revId": "26c3451ca2d9d210207f2519f5e557f86e33982e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69473839_e4436075",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 22
      },
      "lineNbr": 831,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-05-11T18:30:33Z",
      "side": 1,
      "message": "\u003e shouldn\u0027t this be part of ..\n\nI don\u0027t think so the url is /redfish/v1/Chassis/\u003cChassisName\u003e/Drives/ only returns a list of drives that are in the chassis in question.\nThere is some shared logic, but most of that logic is in the getCollectionMembers logic, which can be unified across several places. And there is work in progress to do that.\n\n\u003e actually, this is a collection, so maybe a new getDriveCollectrion\nI assume this is for the comment below, and yes.",
      "parentUuid": "cfde4241_513ab206",
      "revId": "26c3451ca2d9d210207f2519f5e557f86e33982e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02ee3f43_a7b8a4fc",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 22
      },
      "lineNbr": 834,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-05-11T17:14:58Z",
      "side": 1,
      "message": "shouldn\u0027t this be getDriveCollection?",
      "range": {
        "startLine": 834,
        "startChar": 20,
        "endLine": 834,
        "endChar": 51
      },
      "revId": "26c3451ca2d9d210207f2519f5e557f86e33982e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "171ecd31_be5d60c0",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 22
      },
      "lineNbr": 834,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-05-11T18:30:33Z",
      "side": 1,
      "message": "The url starts with chasis, but it also returns drive information.\nSo I can change it from getChassis to getDriveCollection.\n\nThey are both privilegeSetLogin, under the hood",
      "parentUuid": "02ee3f43_a7b8a4fc",
      "range": {
        "startLine": 834,
        "startChar": 20,
        "endLine": 834,
        "endChar": 51
      },
      "revId": "26c3451ca2d9d210207f2519f5e557f86e33982e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f887fd7f_5f2609b5",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 22
      },
      "lineNbr": 834,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-11T20:03:45Z",
      "side": 1,
      "message": "Yes, but in theory someone could override this to something else.",
      "parentUuid": "171ecd31_be5d60c0",
      "range": {
        "startLine": 834,
        "startChar": 20,
        "endLine": 834,
        "endChar": 51
      },
      "revId": "26c3451ca2d9d210207f2519f5e557f86e33982e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2dc9857d_d88f6281",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 22
      },
      "lineNbr": 834,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-05-11T20:35:09Z",
      "side": 1,
      "message": "right, but by that logic the existing `getDrive` should be in `getSystems` or `getStorage` which might not make sense. Let\u0027s say that `getChassis` has stricter permission than `getDriveCollection` in that I can fetch `getDriveCollection`, but not `getChassis`. In that case, the user won\u0027t even know that this Chassis-\u003eDrive exists if it try to parse the redfish tree. Chassis is not exposed, so the link to the Drive is not exposed and such. At the end of the day, it would result in what you wanted.\n\n\nAnd yeah, adding it to the closes privilege allow us more control over each resource.",
      "parentUuid": "f887fd7f_5f2609b5",
      "range": {
        "startLine": 834,
        "startChar": 20,
        "endLine": 834,
        "endChar": 51
      },
      "revId": "26c3451ca2d9d210207f2519f5e557f86e33982e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "149d6336_8e4382a8",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 22
      },
      "lineNbr": 834,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-11T21:00:52Z",
      "side": 1,
      "message": "\u003e right, but by that logic the existing `getDrive` should be in `getSystems` or `getStorage` which might not make sense. Let\u0027s say that `getChassis` has stricter permission than `getDriveCollection` in that I can fetch `getDriveCollection`, but not `getChassis`.\n\nIn that hypothetical scenario, you would use the subpath overrides to declare the appropriate permissions for the \"chassis drive collection\" distinct from the \"storage drive collection\".  bmcweb doesn\u0027t do that properly today, so we latch everything back to the type interfaces.\n\n\u003e In that case, the user won\u0027t even know that this Chassis-\u003eDrive exists if it try to parse the redfish tree. Chassis is not exposed, so the link to the Drive is not exposed and such. At the end of the day, it would result in what you wanted.\n\u003e \n\u003e \n\u003e And yeah, adding it to the closes privilege allow us more control over each resource.",
      "parentUuid": "2dc9857d_d88f6281",
      "range": {
        "startLine": 834,
        "startChar": 20,
        "endLine": 834,
        "endChar": 51
      },
      "revId": "26c3451ca2d9d210207f2519f5e557f86e33982e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c965f15f_6cbfb5ca",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 22
      },
      "lineNbr": 834,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-05-11T21:01:44Z",
      "side": 1,
      "message": "The key here is that which permission to use is controlled by the odata.type you\u0027re returning.",
      "parentUuid": "149d6336_8e4382a8",
      "range": {
        "startLine": 834,
        "startChar": 20,
        "endLine": 834,
        "endChar": 51
      },
      "revId": "26c3451ca2d9d210207f2519f5e557f86e33982e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}