{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "46508b88_bacc1229",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-06T21:20:41Z",
      "side": 1,
      "message": "I would also do Service Validator check.",
      "revId": "0c09cc01501f311c1e7110f4b4c71459599b2d94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03529d8b_a333b3bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-06T18:31:57Z",
      "side": 1,
      "message": "Glad to see others are interested in cleaning this up;  I had a patchset here:\n\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/47220\n\nTo start cleaning this up in a more generalized sense.  Could please help to review it?",
      "revId": "0c09cc01501f311c1e7110f4b4c71459599b2d94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "478087f8_90cfdf5c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-06T21:21:13Z",
      "side": 1,
      "message": "Reasonable fix.\n\nNeed to fix the object path issue.",
      "revId": "0c09cc01501f311c1e7110f4b4c71459599b2d94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "033e4229_f31dc6b2",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 954,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-06-06T21:19:15Z",
      "side": 1,
      "message": "The previous message seems more informative to me.",
      "range": {
        "startLine": 954,
        "startChar": 38,
        "endLine": 954,
        "endChar": 46
      },
      "revId": "0c09cc01501f311c1e7110f4b4c71459599b2d94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be5450bd_22ae395e",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 954,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-06-07T16:09:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "033e4229_f31dc6b2",
      "range": {
        "startLine": 954,
        "startChar": 38,
        "endLine": 954,
        "endChar": 46
      },
      "revId": "0c09cc01501f311c1e7110f4b4c71459599b2d94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3c6ff6c_233cbf14",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 964,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-06T18:31:57Z",
      "side": 1,
      "message": "These appear to be urls.  Please use the boost::urls::url object for handing urls and to avoid common error #12",
      "range": {
        "startLine": 964,
        "startChar": 12,
        "endLine": 964,
        "endChar": 23
      },
      "revId": "0c09cc01501f311c1e7110f4b4c71459599b2d94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb06d99a_2ca20458",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 964,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-06-07T14:58:53Z",
      "side": 1,
      "message": "The certURL here is what bmcweb returns to the client, not a user input value. I think it\u0027s safe to simply concatenate the url string here.",
      "parentUuid": "f3c6ff6c_233cbf14",
      "range": {
        "startLine": 964,
        "startChar": 12,
        "endLine": 964,
        "endChar": 23
      },
      "revId": "0c09cc01501f311c1e7110f4b4c71459599b2d94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1aeb0581_14cefc65",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 964,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-06-08T03:01:47Z",
      "side": 1,
      "message": "They were strings before this change. But how heavy is boost::urls::url really.\n \nBut I don\u0027t have strong feelings either way.",
      "parentUuid": "cb06d99a_2ca20458",
      "range": {
        "startLine": 964,
        "startChar": 12,
        "endLine": 964,
        "endChar": 23
      },
      "revId": "0c09cc01501f311c1e7110f4b4c71459599b2d94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a09f9a0b_a7fa4a5e",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 964,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-08T15:35:14Z",
      "side": 1,
      "message": "\u003e The certURL here is what bmcweb returns to the client, not a user input value.\n\nI\u0027m not sure how that matters.  We use proper URL objects for cases where things are returned to the client, as well as for parsing user input.\n\n\n\u003e They were strings before this change. But how heavy is boost::urls::url really.\n\nsizeof(boost::urls::url) ~\u003d sizeof(std::string), given it\u0027s basically a bunch of helper functions around a string\n\n\u003e I think it\u0027s safe to simply concatenate the url string here.\n\nMy general policy here is \"When dealing with urls, use the url objects\", which is documented in common errors.  If your opinion differs, can you please help to document in COMMON_ERRORS.md what you think the policy should be, and we can go from there?  Given that this is a url, and the above statements, it isn\u0027t clear where we should draw the line.",
      "parentUuid": "1aeb0581_14cefc65",
      "range": {
        "startLine": 964,
        "startChar": 12,
        "endLine": 964,
        "endChar": 23
      },
      "revId": "0c09cc01501f311c1e7110f4b4c71459599b2d94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fb25466_1261e3ab",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 964,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-08T15:37:45Z",
      "side": 1,
      "message": "It should be noted, this code definitely has escaping issues because of this.  On line 987, where you concatenate the url, if the dbus path contains any escaped characters (\\0 for example) this will return unescaped data to the json object in @odata.id.",
      "parentUuid": "a09f9a0b_a7fa4a5e",
      "range": {
        "startLine": 964,
        "startChar": 12,
        "endLine": 964,
        "endChar": 23
      },
      "revId": "0c09cc01501f311c1e7110f4b4c71459599b2d94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a89a3ee9_cf5342e2",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 964,
      "author": {
        "id": 1000593
      },
      "writtenOn": "2022-06-09T02:23:55Z",
      "side": 1,
      "message": "Hmmm, according the bus spec path requirements is unlikely\n```Each element must only contain the ASCII characters \"[A-Z][a-z][0-9]_\"```\n\nI understand that is not the point, the potential escape issue should be addressed. \n\nAnd boost::url does looks light wight, I would recommend using it here.",
      "parentUuid": "1fb25466_1261e3ab",
      "range": {
        "startLine": 964,
        "startChar": 12,
        "endLine": 964,
        "endChar": 23
      },
      "revId": "0c09cc01501f311c1e7110f4b4c71459599b2d94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecc9c7c3_f66b7388",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 979,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-06T18:31:57Z",
      "side": 1,
      "message": "Please prefer to just do\n\n\nif (certUrl.empty()){\n  continue;\n}\n\n\nAs it saves horizontal space.",
      "range": {
        "startLine": 979,
        "startChar": 11,
        "endLine": 979,
        "endChar": 33
      },
      "revId": "0c09cc01501f311c1e7110f4b4c71459599b2d94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "afaaa297_1404b2b0",
        "filename": "redfish-core/lib/certificate_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 979,
      "author": {
        "id": 1001252
      },
      "writtenOn": "2022-06-07T16:09:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ecc9c7c3_f66b7388",
      "range": {
        "startLine": 979,
        "startChar": 11,
        "endLine": 979,
        "endChar": 33
      },
      "revId": "0c09cc01501f311c1e7110f4b4c71459599b2d94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}