{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e028b227_8708b22c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-06-13T15:36:13Z",
      "side": 1,
      "message": "Thank you for the review!",
      "revId": "28469f01ac391a2fde542d8ff6ce393a09c580cf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77d652d7_60a45902",
        "filename": "Redfish.md",
        "patchSetId": 2
      },
      "lineNbr": 721,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-13T14:40:47Z",
      "side": 1,
      "message": "I\u0027d rather this be documented in code, especially given we don\u0027t really document the specification correct path.  Technically this is \"redfish\" documentation, so it\u0027s a little confusing we only document the \"wrong\" parts.\n\n\nI do appreciate trying to document it though",
      "range": {
        "startLine": 719,
        "startChar": 0,
        "endLine": 721,
        "endChar": 23
      },
      "revId": "28469f01ac391a2fde542d8ff6ce393a09c580cf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11e06cfb_051a0574",
        "filename": "Redfish.md",
        "patchSetId": 2
      },
      "lineNbr": 721,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-06-13T15:36:13Z",
      "side": 1,
      "message": "\u003e I\u0027d rather this be documented in code, especially given we don\u0027t really document the specification correct path.  Technically this is \"redfish\" documentation, so it\u0027s a little confusing we only document the \"wrong\" parts.\n\nThis document is meant to give OpenBMC-specific information about Redfish implementation and serve as a quick reference for what\u0027s supported and what\u0027s not, right? I\u0027d say documenting all OEM specifics in it seems to be more useful compared to code comments here and there. Code comments are mostly useful to those working on this code and nearby while Redfish.md is suppposed to be useful to API consumers too, right?\n\nIf you sure it\u0027d be more helpful to move this comment to the code, no problem, it\u0027s just that the rationale isn\u0027t obvious to me, probably I\u0027m missing the intent behind Redfish.md.",
      "parentUuid": "77d652d7_60a45902",
      "range": {
        "startLine": 719,
        "startChar": 0,
        "endLine": 721,
        "endChar": 23
      },
      "revId": "28469f01ac391a2fde542d8ff6ce393a09c580cf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e5e02b8_86526aa5",
        "filename": "redfish-core/lib/redfish_sessions.hpp",
        "patchSetId": 2
      },
      "lineNbr": 258,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-13T14:40:47Z",
      "side": 1,
      "message": "Just thinking out loud for a second, could we instead use \n!req-\u003egetHeaderValue(\"X-Requested-With\").empty();\n\nThe UI currently sets this header to inform us it\u0027s doing an XHR request, so we don\u0027t accidentally send back basic auth.\n\nI think that might solve this here without having to invent another header?",
      "range": {
        "startLine": 258,
        "startChar": 0,
        "endLine": 258,
        "endChar": 2
      },
      "revId": "28469f01ac391a2fde542d8ff6ce393a09c580cf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d16b616_a6fee2aa",
        "filename": "redfish-core/lib/redfish_sessions.hpp",
        "patchSetId": 2
      },
      "lineNbr": 258,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-06-13T15:36:13Z",
      "side": 1,
      "message": "I\u0027m afraid I do not follow, I didn\u0027t add any other (than the regular OpenBMC cookies) header anywhere...",
      "parentUuid": "1e5e02b8_86526aa5",
      "range": {
        "startLine": 258,
        "startChar": 0,
        "endLine": 258,
        "endChar": 2
      },
      "revId": "28469f01ac391a2fde542d8ff6ce393a09c580cf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33c965a2_d974f699",
        "filename": "redfish-core/lib/redfish_sessions.hpp",
        "patchSetId": 2
      },
      "lineNbr": 262,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-13T15:01:39Z",
      "side": 1,
      "message": "Why are we setting path here?  The issue is more that this is different than the other calls, which might be fine, but we should put it in its own commit so we can document why we\u0027re doing it.",
      "range": {
        "startLine": 262,
        "startChar": 40,
        "endLine": 262,
        "endChar": 46
      },
      "revId": "28469f01ac391a2fde542d8ff6ce393a09c580cf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebd5543f_30c9e567",
        "filename": "redfish-core/lib/redfish_sessions.hpp",
        "patchSetId": 2
      },
      "lineNbr": 262,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-06-13T15:36:13Z",
      "side": 1,
      "message": "\u003e Why are we setting path here?  The issue is more that this is different than the other calls, which might be fine, but we should put it in its own commit so we can document why we\u0027re doing it.\n\nIt\u0027s actually not different because `/login` endpoint implies the same `/` path. But if it\u0027s not set here then the Path in the browser cookie storage gets limited to Sessions path so the cookie will be only sent for session listing and DELETE and no other endpoints :)",
      "parentUuid": "33c965a2_d974f699",
      "range": {
        "startLine": 262,
        "startChar": 40,
        "endLine": 262,
        "endChar": 46
      },
      "revId": "28469f01ac391a2fde542d8ff6ce393a09c580cf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81d19c47_05a5c783",
        "filename": "redfish-core/lib/redfish_sessions.hpp",
        "patchSetId": 2
      },
      "lineNbr": 266,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-13T15:01:39Z",
      "side": 1,
      "message": "Can we wrap this in a method please?  I see this same located two other places already, and it would be nice to be able to modify them in one spot.",
      "range": {
        "startLine": 260,
        "startChar": 0,
        "endLine": 266,
        "endChar": 63
      },
      "revId": "28469f01ac391a2fde542d8ff6ce393a09c580cf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f90bd4b5_10f5bf03",
        "filename": "redfish-core/lib/redfish_sessions.hpp",
        "patchSetId": 2
      },
      "lineNbr": 266,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-06-13T15:36:13Z",
      "side": 1,
      "message": "I thought about that but also thought that you might want to get rid of /login altogether when the standard Redfish reaches feature parity.\n\nAs to the other path, the MTLS one, it also sets `IsAuthenticated` cookie and never checks it or does anything else with it. I wonder if it was added in mistake.\n\nBut even if /login is removed then it\u0027d still be two and two is more than one, so DRY tells us a helper should be created instead, sure, agreed.",
      "parentUuid": "81d19c47_05a5c783",
      "range": {
        "startLine": 260,
        "startChar": 0,
        "endLine": 266,
        "endChar": 63
      },
      "revId": "28469f01ac391a2fde542d8ff6ce393a09c580cf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c78b1df2_fe31627f",
        "filename": "redfish-core/lib/redfish_sessions.hpp",
        "patchSetId": 2
      },
      "lineNbr": 270,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-13T14:40:47Z",
      "side": 1,
      "message": "We should add this header in either path.",
      "revId": "28469f01ac391a2fde542d8ff6ce393a09c580cf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2853fa46_ff553c5c",
        "filename": "redfish-core/lib/redfish_sessions.hpp",
        "patchSetId": 2
      },
      "lineNbr": 270,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-06-13T15:36:13Z",
      "side": 1,
      "message": "\u003e We should add this header in either path.\n\nWhy? If we know our client is special and asks for our special sauce why send the standard header? Also, it contains the token that\u0027s supposed to be secret from JS code if we claim the non-standard cookie auth is done for additional security the SESSION HttpOnly cookie provides but here we would be giving injected JS an opportunity to catch it.",
      "parentUuid": "c78b1df2_fe31627f",
      "revId": "28469f01ac391a2fde542d8ff6ce393a09c580cf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}