{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c5e407b0_592302f7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-09-19T16:48:55Z",
      "side": 1,
      "message": "Seems mostly reasonable, thanks for documenting ",
      "revId": "46b23dcab5c480b89a1ef1dc1cd92c30614da6c0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b5b4f08_43e91e4e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-09-20T20:08:51Z",
      "side": 1,
      "message": "I am good here",
      "revId": "46b23dcab5c480b89a1ef1dc1cd92c30614da6c0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a41aff7a_01626b67",
        "filename": "DBUS_USAGE.md",
        "patchSetId": 7
      },
      "lineNbr": 6,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-09-19T16:48:55Z",
      "side": 1,
      "message": "Is that all upstream openbmc implementers?\nIf you add a property to an existing interface at https://github.com/openbmc/phosphor-dbus-interfaces, then don\u0027t all implementers of that interface now have that property, they would get the default if they aren\u0027t setting but they would still have it?",
      "revId": "46b23dcab5c480b89a1ef1dc1cd92c30614da6c0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33940d5e_207b7d8b",
        "filename": "DBUS_USAGE.md",
        "patchSetId": 7
      },
      "lineNbr": 6,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-19T17:04:57Z",
      "side": 1,
      "message": "\u003e Is that all upstream openbmc implementers?\n\n\nI intentionally left this vague because while the project can\u0027t be holden to non-upstream code, unnecessarily breaking folks (even those that forked) is bad for the project overall, so in the end it\u0027s a judgement call.  In terms of \"rules\" yes, it would be all upstream.\n\n\u003e then don\u0027t all implementers of that interface now have that property\n\nNot all daemons in upstream implement PDI.  For those that do, yes, they would get the change automatically.",
      "parentUuid": "a41aff7a_01626b67",
      "revId": "46b23dcab5c480b89a1ef1dc1cd92c30614da6c0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bd7496b_4ecf81d9",
        "filename": "DBUS_USAGE.md",
        "patchSetId": 7
      },
      "lineNbr": 6,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-09-20T20:08:37Z",
      "side": 1,
      "message": "I guess I would prefer it says \"_all_ upstream implementers of the interface support that property.\" Do we have any plans to move all daemons to use PDI?",
      "parentUuid": "33940d5e_207b7d8b",
      "revId": "46b23dcab5c480b89a1ef1dc1cd92c30614da6c0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef326d77_20b6bcb2",
        "filename": "DBUS_USAGE.md",
        "patchSetId": 7
      },
      "lineNbr": 6,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2022-09-20T20:47:01Z",
      "side": 1,
      "message": "\u003e Do we have any plans to move all daemons to use PDI?\n\nI doubt this will ever happen.",
      "parentUuid": "4bd7496b_4ecf81d9",
      "revId": "46b23dcab5c480b89a1ef1dc1cd92c30614da6c0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55562f0f_87273d34",
        "filename": "DBUS_USAGE.md",
        "patchSetId": 7
      },
      "lineNbr": 9,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-09-19T16:48:55Z",
      "side": 1,
      "message": "Redfish sometimes has an unknown..\nhttps://github.com/openbmc/bmcweb/blob/b7ff344535c42af074c60bfb272ef66a2ba157b4/static/redfish/v1/JsonSchemas/LogService/LogService.json#L342\nhttps://github.com/openbmc/bmcweb/blob/10f270b41dee295f90dccac091883b94b82dd0d9/static/redfish/v1/JsonSchemas/Power/Power.json#L181\n\nBut I understand your point so I am fine with this (in most cases, an unknown should just be omitted)",
      "revId": "46b23dcab5c480b89a1ef1dc1cd92c30614da6c0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1cb0ba3_962d4892",
        "filename": "DBUS_USAGE.md",
        "patchSetId": 7
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-09-19T17:04:57Z",
      "side": 1,
      "message": "If there\u0027s a way to write this down in a way that makes that more clear, I\u0027m happy to do so, but to some extent, that\u0027s why this file is \"guidelines\" and not \"rules\" and I\u0027d like to avoid being overly lawyerly in some of these descriptions to make them reasonable to read.  there\u0027s subtlety in a lot of this stuff that\u0027s captured in code.",
      "parentUuid": "55562f0f_87273d34",
      "revId": "46b23dcab5c480b89a1ef1dc1cd92c30614da6c0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87658ce4_744ebf4e",
        "filename": "DBUS_USAGE.md",
        "patchSetId": 7
      },
      "lineNbr": 9,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-09-20T20:08:37Z",
      "side": 1,
      "message": "Ack. I am good here.",
      "parentUuid": "d1cb0ba3_962d4892",
      "revId": "46b23dcab5c480b89a1ef1dc1cd92c30614da6c0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}