{
  "comments": [
    {
      "key": {
        "uuid": "a5331517_2795431f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-30T15:19:23Z",
      "side": 1,
      "message": "50/72 please.",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 12,
        "endChar": 31
      },
      "revId": "5298997041609f32e7f1887180acd95e9b7a9f64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22ad4561_0a50254f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-10-01T02:31:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5331517_2795431f",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 12,
        "endChar": 31
      },
      "revId": "5298997041609f32e7f1887180acd95e9b7a9f64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b578929_3d66f36c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-30T15:19:23Z",
      "side": 1,
      "message": "Why is the NTPServer interface per-nic at all?  This seems like a phosphor-dbus-interfaces issue that needs fixed to make the NtpServers attribute settable systemwide, not per nic.",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 28
      },
      "revId": "5298997041609f32e7f1887180acd95e9b7a9f64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acdcc7ed_f94451e8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-30T18:40:27Z",
      "side": 1,
      "message": "I re-read through this patch, and while I still don\u0027t think the dbus interfaces are great here, I\u0027m ok with us taking the approach of \"Set NTP servers on the first interface we find\" as a temporary solution.  Lets get the code cleaned up, and this should be fine.",
      "parentUuid": "0b578929_3d66f36c",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 28
      },
      "revId": "5298997041609f32e7f1887180acd95e9b7a9f64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57599d59_659218f0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-10-01T02:31:37Z",
      "side": 1,
      "message": "\u003e Why is the NTPServer interface per-nic at all?  This seems like a phosphor-dbus-interfaces issue that needs fixed to make the NtpServers attribute settable systemwide, not per nic.\n\nYes, I think the best result should be that there is one in the xyz.openbmc_project.Network.EthernetInterface interface to identify whether the current Ethernet is active.\n\n\u003e I re-read through this patch, and while I still don\u0027t think the dbus interfaces are great here, I\u0027m ok with us taking the approach of \"Set NTP servers on the first interface we find\" as a temporary solution.  Lets get the code cleaned up, and this should be fine.\n\nFor systems that do not use eth0 by default, this is a bug. It cannot update NTPServer correctly, which will cause NTP synchronization to fail.\n\nOr we can use a global configuration to get the information of the currently active network card, like this:\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/47342/1",
      "parentUuid": "acdcc7ed_f94451e8",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 28
      },
      "revId": "5298997041609f32e7f1887180acd95e9b7a9f64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63db9805_c409e784",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2021-10-01T05:54:40Z",
      "side": 1,
      "message": "@edtanous, NTP server should be per interface basis, Systemd networkd also supports that.\nHowever Redfish DMTF doesn\u0027t model things that way because that brings more complexity.",
      "parentUuid": "57599d59_659218f0",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 28
      },
      "revId": "5298997041609f32e7f1887180acd95e9b7a9f64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e0e73d1_e1721995",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-01T16:25:58Z",
      "side": 1,
      "message": "The primary bug with this is that the response no longer follows restful CRUD semantics, because the response is sorted and aggregated between all the various things.\n\nFor example, if I called\nPATCH NTPServers: [\"2.2.2.2\", \"1.1.1.1\"]\nThen got a 200 back, re-reading would result in:\nGET NTPServers:[\"1.1.1.1\", \"2.2.2.2\"]\nWhich is a bug.  Ordering should not be changed server-side.\n\nThere\u0027s also a lot of questions around if we\u0027re looking at multiple interfaces, what happens when they don\u0027t contain the same data?  This patchset defines the behavior as \"the superset of all interfaces\", but that doesn\u0027t really follow CRUD either, because any modification to that, will now set it on all interfaces.\n\n\n\"to identify whether the current Ethernet is active.\"\nThat doesn\u0027t seem like it would matter in this case?\n\n\u003e @edtanous, NTP server should be per interface basis, Systemd networkd also supports that.\n\nFeel free to propose that to DMTF then?  In this context we\u0027re discussing how to get the existing interfaces to work and follow Restful semantics given that they don\u0027t match.  The initial patchset for this defaulted everything to eth0, because it was assumed that all BMCs had a dedicated NIC at the time.  That assumption clearly doesn\u0027t work for those platforms, so we need to figure out defined behavior for those cases.  Clearly my \"set it on the first interface found\" idea wouldn\u0027t meet the needs, but we need to come up with something that has defined, CRUD behavior, even when the interfaces don\u0027t match.  That might involve a change to the phosphor-networkd interfaces for this, but we\u0027ll see.",
      "parentUuid": "63db9805_c409e784",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 28
      },
      "revId": "5298997041609f32e7f1887180acd95e9b7a9f64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e1d57f3_280a75cc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-01T16:28:00Z",
      "side": 1,
      "message": "Also, please answer these questions of CRUD behavior when the interfaces are different in your commit message.",
      "parentUuid": "4e0e73d1_e1721995",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 28
      },
      "revId": "5298997041609f32e7f1887180acd95e9b7a9f64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cf35c53_49b83834",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-10-07T08:58:13Z",
      "side": 1,
      "message": "\u003e The primary bug with this is that the response no longer follows restful CRUD semantics, because the response is sorted and aggregated between all the various things.\n\nThis is handled in bmcweb, but I don\u0027t understand why the restful CRUD is not followed after sorting? Does this have any effect?\nhttps://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/network_protocol.hpp#L419-L423\n\n\u003e That doesn\u0027t seem like it would matter in this case?\n\nWhy? If we know which Ethernet is active, it is very convenient for us to update NTPServers.\n\n\u003e Also, please answer these questions of CRUD behavior when the interfaces are different in your commit message.\n\nAck",
      "parentUuid": "0e1d57f3_280a75cc",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 28
      },
      "revId": "5298997041609f32e7f1887180acd95e9b7a9f64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e7a2dbb_1eee0266",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-07T15:15:07Z",
      "side": 1,
      "message": "\u003e \u003e The primary bug with this is that the response no longer follows restful CRUD semantics, because the response is sorted and aggregated between all the various things.\n\u003e \n\u003e This is handled in bmcweb, but I don\u0027t understand why the restful CRUD is not followed after sorting?\n\nSee the section where I say \"for example, if I called\".  we should be writing the value as written, unless given special directives, like null, which redfish has specific non-crud rules for.\n\n\u003e Does this have any effect?\n\u003e https://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/network_protocol.hpp#L419-L423\n\u003e \n\u003e \u003e That doesn\u0027t seem like it would matter in this case?\n\u003e \n\u003e Why? If we know which Ethernet is active, it is very convenient for us to update NTPServers.\n\nI see no \"active\" check in this code.  If we were selecting ONE interface, that might be fine, or if we had a way to consistently do the \"merge\" of the interfaces, that might work fine too, but as written, this doesn\u0027t fit the rest semantics.\n\n\u003e \n\u003e \u003e Also, please answer these questions of CRUD behavior when the interfaces are different in your commit message.\n\u003e \n\u003e Ack",
      "parentUuid": "2cf35c53_49b83834",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 28
      },
      "revId": "5298997041609f32e7f1887180acd95e9b7a9f64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed92b300_1bc00113",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-10-08T05:50:05Z",
      "side": 1,
      "message": "\u003e See the section where I say \"for example, if I called\".  we should be writing the value as written, unless given special directives, like null, which redfish has specific non-crud rules for.\n\nOkay, got it.\n\n\u003e I see no \"active\" check in this code.  If we were selecting ONE interface, that might be fine, or if we had a way to consistently do the \"merge\" of the interfaces, that might work fine too, but as written, this doesn\u0027t fit the rest semantics.\n\nDo you agree this way?\nhttps://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/47342/1\n\nOr, Do you have any good opinions on this bug?",
      "parentUuid": "3e7a2dbb_1eee0266",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 28
      },
      "revId": "5298997041609f32e7f1887180acd95e9b7a9f64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e91646f2_e0eefa55",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000044
      },
      "writtenOn": "2021-10-08T09:11:53Z",
      "side": 1,
      "message": "\u003e There\u0027s also a lot of questions around if we\u0027re looking at multiple interfaces, what happens when they don\u0027t contain the same data?  This patchset defines the behavior as \"the superset of all interfaces\", but that doesn\u0027t really follow CRUD either, because any modification to that, will now set it on all interfaces.\n\nBefore we get DMTF update on Redfish schema, I prefer to set the same NTP servers for multiple interfaces, which does resolve the problem.\nFrom the Reffish perspective, we are sure that all the interfaces contain the same NTP data as long as we set the same data to all the interfaces.",
      "parentUuid": "ed92b300_1bc00113",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 15,
        "endChar": 28
      },
      "revId": "5298997041609f32e7f1887180acd95e9b7a9f64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc165f49_244a03c8",
        "filename": "redfish-core/lib/network_protocol.hpp",
        "patchSetId": 3
      },
      "lineNbr": 82,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-30T18:39:34Z",
      "side": 1,
      "message": "Once we match the interface, should we stop looping with a break right here?  That would remove the need to do the \"remove duplicates\" thing below.",
      "revId": "5298997041609f32e7f1887180acd95e9b7a9f64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec90ea91_fb3dc7c9",
        "filename": "redfish-core/lib/network_protocol.hpp",
        "patchSetId": 3
      },
      "lineNbr": 82,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-10-01T02:31:37Z",
      "side": 1,
      "message": "I do not think so.\nWe have two ethernets, eth0 and eth1, and we are using eth1 by default, and the first match will match eth0, which is wrong for our system.",
      "parentUuid": "bc165f49_244a03c8",
      "revId": "5298997041609f32e7f1887180acd95e9b7a9f64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae841999_b3f423e4",
        "filename": "redfish-core/lib/network_protocol.hpp",
        "patchSetId": 3
      },
      "lineNbr": 153,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-30T18:39:34Z",
      "side": 1,
      "message": "FWIW, this shouldn\u0027t be EthernetInterface, this should be ManagerNetworkProtocol (see line 121).  Lets fix this while we\u0027re here as well.",
      "range": {
        "startLine": 153,
        "startChar": 60,
        "endLine": 153,
        "endChar": 77
      },
      "revId": "5298997041609f32e7f1887180acd95e9b7a9f64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91158fc3_20cc77bc",
        "filename": "redfish-core/lib/network_protocol.hpp",
        "patchSetId": 3
      },
      "lineNbr": 153,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-10-01T02:31:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae841999_b3f423e4",
      "range": {
        "startLine": 153,
        "startChar": 60,
        "endLine": 153,
        "endChar": 77
      },
      "revId": "5298997041609f32e7f1887180acd95e9b7a9f64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e354dd4b_caab2ffd",
        "filename": "redfish-core/lib/network_protocol.hpp",
        "patchSetId": 3
      },
      "lineNbr": 154,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-30T18:39:34Z",
      "side": 1,
      "message": "This is going to the user, so technically eth0 is wrong as well, but it definitely shouldn\u0027t be ethX, we should be using the interface name we were given.  I suspect this should be hardcoded to \"NetworkProtocol\" as that\u0027s the Id of this resource (see line 125).",
      "range": {
        "startLine": 154,
        "startChar": 44,
        "endLine": 154,
        "endChar": 48
      },
      "revId": "5298997041609f32e7f1887180acd95e9b7a9f64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1b02bd2_30bb1530",
        "filename": "redfish-core/lib/network_protocol.hpp",
        "patchSetId": 3
      },
      "lineNbr": 154,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-10-01T02:31:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e354dd4b_caab2ffd",
      "range": {
        "startLine": 154,
        "startChar": 44,
        "endLine": 154,
        "endChar": 48
      },
      "revId": "5298997041609f32e7f1887180acd95e9b7a9f64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1cb7935b_4c0e102b",
        "filename": "redfish-core/lib/network_protocol.hpp",
        "patchSetId": 3
      },
      "lineNbr": 302,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2021-10-01T05:54:40Z",
      "side": 1,
      "message": "If there are mutiple D-bus objects implementing the xyz.openbmc_project.Network.EthernetInterface, Would you be writing the same dns server details on all the interface? or would it be fine to add it on one of the interface?",
      "range": {
        "startLine": 287,
        "startChar": 1,
        "endLine": 302,
        "endChar": 13
      },
      "revId": "5298997041609f32e7f1887180acd95e9b7a9f64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "165e06d5_96c9e7be",
        "filename": "redfish-core/lib/network_protocol.hpp",
        "patchSetId": 3
      },
      "lineNbr": 302,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-10-01T06:52:42Z",
      "side": 1,
      "message": "No, this patch only fixes NTP server properties.\nRegarding dns server, we can get/set according to the corresponding Ethernet ID\nhttps://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/ethernet.hpp#L1866-L1876",
      "parentUuid": "1cb7935b_4c0e102b",
      "range": {
        "startLine": 287,
        "startChar": 1,
        "endLine": 302,
        "endChar": 13
      },
      "revId": "5298997041609f32e7f1887180acd95e9b7a9f64",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}