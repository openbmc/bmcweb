{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "513243b2_426a01c5",
        "filename": "http/http_client.hpp",
        "patchSetId": 7
      },
      "lineNbr": 319,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-06-26T06:33:07Z",
      "side": 1,
      "message": "do we need timeout? Can\u0027t we keep receive indefinitely ? other timeouts will anyway closes the connection so that receive will be interrupted and new connection starts as usual.",
      "revId": "846e9e14aaafeaa36641fa31fd08d7233ae79451",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fa6417d_b5ef54fd",
        "filename": "http/http_client.hpp",
        "patchSetId": 7
      },
      "lineNbr": 319,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-26T06:59:31Z",
      "side": 1,
      "message": "I think if we\u0027re not expecting a response, we can receive indefinitely until we hit a TCP timeout.  If we\u0027re waiting on a response, we don\u0027t want to be waiting forever on a hung webserver.  We\u0027d rather retry faster than waiting for TCP to timeout if somehow the connection went away.",
      "parentUuid": "513243b2_426a01c5",
      "revId": "846e9e14aaafeaa36641fa31fd08d7233ae79451",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5ab351c_5ff52968",
        "filename": "http/http_client.hpp",
        "patchSetId": 7
      },
      "lineNbr": 319,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-06-26T13:52:25Z",
      "side": 1,
      "message": "I thought we made this change to achieve two things. \n1) to get the response from server. \n2) to monitor any possible break in the connection. \n1 is already achieved by existing implementation\n2 is what we were targeting with this patch set. \nIs it correct?",
      "parentUuid": "7fa6417d_b5ef54fd",
      "revId": "846e9e14aaafeaa36641fa31fd08d7233ae79451",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cafb1b52_d4411a1a",
        "filename": "http/http_client.hpp",
        "patchSetId": 7
      },
      "lineNbr": 319,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-26T15:32:12Z",
      "side": 1,
      "message": "\u003e 2 is what we were targeting with this patch set.\n\nYep.",
      "parentUuid": "b5ab351c_5ff52968",
      "revId": "846e9e14aaafeaa36641fa31fd08d7233ae79451",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb9845ee_eb4dbd1a",
        "filename": "http/http_client.hpp",
        "patchSetId": 7
      },
      "lineNbr": 319,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-26T15:33:48Z",
      "side": 1,
      "message": "#2 was the only thing I was trying to achieve",
      "parentUuid": "cafb1b52_d4411a1a",
      "revId": "846e9e14aaafeaa36641fa31fd08d7233ae79451",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "663bada6_b1faba36",
        "filename": "http/http_client.hpp",
        "patchSetId": 7
      },
      "lineNbr": 319,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-06-26T16:30:48Z",
      "side": 1,
      "message": "then why we need a timer to cancel the monitoring? let the monitoring continue forever till there is a tcp timeout or explicit connection termination by server",
      "parentUuid": "eb9845ee_eb4dbd1a",
      "revId": "846e9e14aaafeaa36641fa31fd08d7233ae79451",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8145408e_cbeb0fe1",
        "filename": "http/http_client.hpp",
        "patchSetId": 7
      },
      "lineNbr": 319,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-26T16:56:19Z",
      "side": 1,
      "message": "because if we\u0027re in the middle of waiting for a server to reply, we want a much shorter timeout than TCP.  TCP timeout is much longer than we want (on the order of minutes).\n\nThe intent is esentially\nIf we\u0027re waiting for a reply, set a 30 second timeout.\nif we\u0027re not waiting for a reply, let TCP determine our timeout.",
      "parentUuid": "663bada6_b1faba36",
      "revId": "846e9e14aaafeaa36641fa31fd08d7233ae79451",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7d8a5e8_6e70ccbd",
        "filename": "http/http_client.hpp",
        "patchSetId": 7
      },
      "lineNbr": 319,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-06-27T11:26:38Z",
      "side": 1,
      "message": "but line 355 will return in case of timer expiry and there is no more monitoring for the connection termination right?\n\nHow do we make sure that we don\u0027t want to wait for replay from server but will wait wait for connection termination?",
      "parentUuid": "8145408e_cbeb0fe1",
      "revId": "846e9e14aaafeaa36641fa31fd08d7233ae79451",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "053f93ce_a2b9d752",
        "filename": "http/http_client.hpp",
        "patchSetId": 7
      },
      "lineNbr": 319,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-27T16:27:12Z",
      "side": 1,
      "message": "Line 355 would only fire in the case where bmcweb is being shut down and the object is being destroyed.",
      "parentUuid": "e7d8a5e8_6e70ccbd",
      "revId": "846e9e14aaafeaa36641fa31fd08d7233ae79451",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b84b3ec_b5087e5c",
        "filename": "http/http_client.hpp",
        "patchSetId": 7
      },
      "lineNbr": 319,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-07-01T04:21:41Z",
      "side": 1,
      "message": "On timer expiry Line 513,shutdownConn(true) will be called right? That will not cause 355?",
      "parentUuid": "053f93ce_a2b9d752",
      "revId": "846e9e14aaafeaa36641fa31fd08d7233ae79451",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ceedc882_e3d82e29",
        "filename": "http/http_client.hpp",
        "patchSetId": 7
      },
      "lineNbr": 319,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-07-01T16:48:24Z",
      "side": 1,
      "message": "Yes, that\u0027s true, shutdownConn would cause that as well, but I don\u0027t think that\u0027s a problem in this case?  Restarting would restart the read?",
      "parentUuid": "9b84b3ec_b5087e5c",
      "revId": "846e9e14aaafeaa36641fa31fd08d7233ae79451",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5440a996_eda5da15",
        "filename": "http/http_client.hpp",
        "patchSetId": 7
      },
      "lineNbr": 319,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-07-02T04:20:11Z",
      "side": 1,
      "message": "yes, there is no technical problem there. My question was do we really want to restart? \nfor eg: in case of redfish events, it is ok if server does not send back any response. In this case just monitoring for server disconnect will do the job. Since we are waiting asynchronously a server hang may not have much impact.",
      "parentUuid": "ceedc882_e3d82e29",
      "revId": "846e9e14aaafeaa36641fa31fd08d7233ae79451",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2871b10c_d729f912",
        "filename": "http/http_client.hpp",
        "patchSetId": 7
      },
      "lineNbr": 319,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2024-07-25T18:56:06Z",
      "side": 1,
      "message": "\u003e Since we are waiting asynchronously a server hang may not have much impact.\n\nServer hang may be alright for redfish events, but it would have an impact on Redfish aggregation.  We can\u0027t return the overall response until either we receive a response from the satellite BMC or we timeout/fail in the connect-\u003esend-\u003ereceive flow.  The timeout at least helps mitigate that.\n\n\u003e The intent is esentially\n\u003e If we\u0027re waiting for a reply, set a 30 second timeout.\n\u003e if we\u0027re not waiting for a reply, let TCP determine our timeout.\n\nThis sounds reasonable to me since it preserves the current aggregation behavior.",
      "parentUuid": "5440a996_eda5da15",
      "revId": "846e9e14aaafeaa36641fa31fd08d7233ae79451",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "394e27f5_2dbd625d",
        "filename": "http/http_client.hpp",
        "patchSetId": 7
      },
      "lineNbr": 319,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-07-26T17:48:47Z",
      "side": 1,
      "message": "\u003e In this case just monitoring for server disconnect will do the job\n\nThat\u0027s effectively what we\u0027re doing by using the Read.",
      "parentUuid": "2871b10c_d729f912",
      "revId": "846e9e14aaafeaa36641fa31fd08d7233ae79451",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f45a7983_2bf0f717",
        "filename": "http/http_client.hpp",
        "patchSetId": 7
      },
      "lineNbr": 319,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-07-29T15:52:57Z",
      "side": 1,
      "message": "@Carson ,True. I did not think about the case where read response is a must. \nMy concern was that if we wanted to monitor the sever disconnect , we need an event to be sent first. Then after time out the monitoring is stopped. So we are not effectively monitoring the server disconnect beyond the timeout time.",
      "parentUuid": "394e27f5_2dbd625d",
      "revId": "846e9e14aaafeaa36641fa31fd08d7233ae79451",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42e8213c_ab87ba5c",
        "filename": "http/http_client.hpp",
        "patchSetId": 7
      },
      "lineNbr": 319,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-07-29T19:14:17Z",
      "side": 1,
      "message": "\u003e So we are not effectively monitoring the server disconnect beyond the timeout time.\n\nIn this patchset, we\u0027re always monitoring the connection.",
      "parentUuid": "f45a7983_2bf0f717",
      "revId": "846e9e14aaafeaa36641fa31fd08d7233ae79451",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ba2ad9b_b687b366",
        "filename": "http/http_client.hpp",
        "patchSetId": 7
      },
      "lineNbr": 319,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-07-30T04:46:05Z",
      "side": 1,
      "message": "How? After the read is aborted we are not reading again right(line 355) ?",
      "parentUuid": "42e8213c_ab87ba5c",
      "revId": "846e9e14aaafeaa36641fa31fd08d7233ae79451",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "198e97da_b52f12fb",
        "filename": "http/http_client.hpp",
        "patchSetId": 7
      },
      "lineNbr": 352,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-06-26T13:52:25Z",
      "side": 1,
      "message": "since we have two outstanding IO, what happens both fails(a common scenario). Would the retry code execute multiple times? How do we avoid that ?",
      "revId": "846e9e14aaafeaa36641fa31fd08d7233ae79451",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50d9493e_25d5b615",
        "filename": "http/http_client.hpp",
        "patchSetId": 7
      },
      "lineNbr": 352,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-26T15:32:12Z",
      "side": 1,
      "message": "I don\u0027t think this one can execute twice, because it\u0027s only ever started once.",
      "parentUuid": "198e97da_b52f12fb",
      "revId": "846e9e14aaafeaa36641fa31fd08d7233ae79451",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a26ba032_a41563c1",
        "filename": "http/http_client.hpp",
        "patchSetId": 7
      },
      "lineNbr": 352,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-06-26T16:30:48Z",
      "side": 1,
      "message": "I mean both afterWrite and afterRead will be called and hence the code inside that will executed twice. That means waitAndRetry will be called twice.",
      "parentUuid": "50d9493e_25d5b615",
      "revId": "846e9e14aaafeaa36641fa31fd08d7233ae79451",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25d6286d_c4163ea2",
        "filename": "http/http_client.hpp",
        "patchSetId": 7
      },
      "lineNbr": 352,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-26T16:56:19Z",
      "side": 1,
      "message": "afterWrite and afterRead do different things though.  Which code exactly will be executed twice?",
      "parentUuid": "a26ba032_a41563c1",
      "revId": "846e9e14aaafeaa36641fa31fd08d7233ae79451",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06702ca5_09c4eab4",
        "filename": "http/http_client.hpp",
        "patchSetId": 7
      },
      "lineNbr": 352,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-06-27T11:26:38Z",
      "side": 1,
      "message": "line 312 and line 367 will not execute concurrently?",
      "parentUuid": "25d6286d_c4163ea2",
      "revId": "846e9e14aaafeaa36641fa31fd08d7233ae79451",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c32f2a69_9a506a12",
        "filename": "http/http_client.hpp",
        "patchSetId": 7
      },
      "lineNbr": 352,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-27T16:27:12Z",
      "side": 1,
      "message": "You\u0027re right, 367 is wrong, it should be checking to see if we have a request in flight before returning.",
      "parentUuid": "06702ca5_09c4eab4",
      "revId": "846e9e14aaafeaa36641fa31fd08d7233ae79451",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}