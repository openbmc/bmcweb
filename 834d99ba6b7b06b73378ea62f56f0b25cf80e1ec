{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3c92add1_a4dc3dfb",
        "filename": ".clang-tidy",
        "patchSetId": 1
      },
      "lineNbr": 278,
      "author": {
        "id": 1000002
      },
      "writtenOn": "2025-08-13T15:04:26Z",
      "side": 0,
      "message": "This is a good one to keep IMO.",
      "revId": "834d99ba6b7b06b73378ea62f56f0b25cf80e1ec",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "704fe9e8_41f751af",
        "filename": ".clang-tidy",
        "patchSetId": 1
      },
      "lineNbr": 278,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-08-13T23:59:17Z",
      "side": 0,
      "message": "Lets have that discussion on discord at some point.  std::source_location is kind of an annoying case where it by design needs to defeat this check.\n(example)\nhttps://github.com/openbmc/bmcweb/blob/ac2ff47405b7ae136f10a6407c3c63b666a384dc/http/logging.hpp#L103\n\nwhich isn\u0027t great that we have a rule that we MUST bypass for the normal expected std usage.  FWIW, I was also trying to boil out all the company specific checks for the reference to avoid objections, but I could see us making an exception for this one.\n\n\nI don\u0027t have a super strong opinion either way until something breaks.",
      "parentUuid": "3c92add1_a4dc3dfb",
      "revId": "834d99ba6b7b06b73378ea62f56f0b25cf80e1ec",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}