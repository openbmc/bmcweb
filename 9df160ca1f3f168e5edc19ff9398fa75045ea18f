{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "91588ee1_61530500",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-04T18:39:46Z",
      "side": 1,
      "message": "Before I review this further, please review my attempted fixes, which rely on async_wait, and introducing the idea of a channel between the client and its connections.",
      "revId": "9df160ca1f3f168e5edc19ff9398fa75045ea18f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "584c84e2_a285a589",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2023-12-06T05:55:56Z",
      "side": 1,
      "message": "I have gone through the https://gerrit.openbmc.org/c/openbmc/bmcweb/+/56711.\nIt is an old commit and a WIP. The main difference is the usage of channels to enable async reading of event requests and monitoring connection termination in idle time. However, the change set does not address the SSL stream reuse issue. Which is one of the reasons for reconnecting did not work well.",
      "parentUuid": "91588ee1_61530500",
      "revId": "9df160ca1f3f168e5edc19ff9398fa75045ea18f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "379a907d_72154477",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-04T18:39:46Z",
      "side": 1,
      "message": "Why does this need to be a unique ptr?",
      "range": {
        "startLine": 159,
        "startChar": 4,
        "endLine": 159,
        "endChar": 19
      },
      "revId": "9df160ca1f3f168e5edc19ff9398fa75045ea18f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f7db5ce_41fbcb01",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2023-12-05T17:09:25Z",
      "side": 1,
      "message": "can we reuse the same socket object for establishing a new connection? Even if it works is it the right thing to do? I did not see any boost documentation recommending such a reuse.",
      "parentUuid": "379a907d_72154477",
      "range": {
        "startLine": 159,
        "startChar": 4,
        "endLine": 159,
        "endChar": 19
      },
      "revId": "9df160ca1f3f168e5edc19ff9398fa75045ea18f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14d9c055_c575a4bf",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-05T17:50:29Z",
      "side": 1,
      "message": "\u003e can we reuse the same socket object for establishing a new connection?\n\nGenerally I would recommend completely destroying the ConnectionInfo object at a higher level and constructing a new one.\n\n\u003e Even if it works is it the right thing to do? I did not see any boost documentation recommending such a reuse.\n\nWe really shouldn\u0027t be reusing any of these structures, including the resolver.",
      "parentUuid": "4f7db5ce_41fbcb01",
      "range": {
        "startLine": 159,
        "startChar": 4,
        "endLine": 159,
        "endChar": 19
      },
      "revId": "9df160ca1f3f168e5edc19ff9398fa75045ea18f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}