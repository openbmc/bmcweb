{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "91588ee1_61530500",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-04T18:39:46Z",
      "side": 1,
      "message": "Before I review this further, please review my attempted fixes, which rely on async_wait, and introducing the idea of a channel between the client and its connections.",
      "revId": "9df160ca1f3f168e5edc19ff9398fa75045ea18f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "584c84e2_a285a589",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2023-12-06T05:55:56Z",
      "side": 1,
      "message": "I have gone through the https://gerrit.openbmc.org/c/openbmc/bmcweb/+/56711.\nIt is an old commit and a WIP. The main difference is the usage of channels to enable async reading of event requests and monitoring connection termination in idle time. However, the change set does not address the SSL stream reuse issue. Which is one of the reasons for reconnecting did not work well.",
      "parentUuid": "91588ee1_61530500",
      "revId": "9df160ca1f3f168e5edc19ff9398fa75045ea18f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e821606_8586bbc8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-07T17:19:53Z",
      "side": 1,
      "message": "\u003e I have gone through the https://gerrit.openbmc.org/c/openbmc/bmcweb/+/56711.\n\u003e It is an old commit and a WIP. The main difference is the usage of channels to enable async reading of event requests and monitoring connection termination in idle time. However, the change set does not address the SSL stream reuse issue. \n\nHow so?  Connections are now tied to the ConnectionInfo object, and not recreated.\n\n\u003e Which is one of the reasons for reconnecting did not work well.",
      "parentUuid": "584c84e2_a285a589",
      "revId": "9df160ca1f3f168e5edc19ff9398fa75045ea18f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6bc8ae11_6b5becf8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2023-12-11T05:18:15Z",
      "side": 1,
      "message": "Yes, the connection is tied to connection info which is the problem. The SSL stream is created in the constructor of connection info. Which will never be called again once the connection is broken. It simply tries to reattempt from the resolve state. But the SSL stream is still old truncated stream only.",
      "parentUuid": "4e821606_8586bbc8",
      "revId": "9df160ca1f3f168e5edc19ff9398fa75045ea18f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "379a907d_72154477",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-04T18:39:46Z",
      "side": 1,
      "message": "Why does this need to be a unique ptr?",
      "range": {
        "startLine": 159,
        "startChar": 4,
        "endLine": 159,
        "endChar": 19
      },
      "revId": "9df160ca1f3f168e5edc19ff9398fa75045ea18f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f7db5ce_41fbcb01",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2023-12-05T17:09:25Z",
      "side": 1,
      "message": "can we reuse the same socket object for establishing a new connection? Even if it works is it the right thing to do? I did not see any boost documentation recommending such a reuse.",
      "parentUuid": "379a907d_72154477",
      "range": {
        "startLine": 159,
        "startChar": 4,
        "endLine": 159,
        "endChar": 19
      },
      "revId": "9df160ca1f3f168e5edc19ff9398fa75045ea18f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14d9c055_c575a4bf",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-05T17:50:29Z",
      "side": 1,
      "message": "\u003e can we reuse the same socket object for establishing a new connection?\n\nGenerally I would recommend completely destroying the ConnectionInfo object at a higher level and constructing a new one.\n\n\u003e Even if it works is it the right thing to do? I did not see any boost documentation recommending such a reuse.\n\nWe really shouldn\u0027t be reusing any of these structures, including the resolver.",
      "parentUuid": "4f7db5ce_41fbcb01",
      "range": {
        "startLine": 159,
        "startChar": 4,
        "endLine": 159,
        "endChar": 19
      },
      "revId": "9df160ca1f3f168e5edc19ff9398fa75045ea18f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a93846c_d733094d",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2023-12-06T06:05:03Z",
      "side": 1,
      "message": "This required a complete rewriting of http_client. To recreate connection info we should let the connection pool know about the terminated connections. Don\u0027t know if we can keep the wait-and-retry logic anymore, as there is no point in starting from the resolve state. \nThe current change set is aimed at fixing the issue with a smaller number of modifications.",
      "parentUuid": "14d9c055_c575a4bf",
      "range": {
        "startLine": 159,
        "startChar": 4,
        "endLine": 159,
        "endChar": 19
      },
      "revId": "9df160ca1f3f168e5edc19ff9398fa75045ea18f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39db5872_a5153587",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2023-12-06T06:09:56Z",
      "side": 1,
      "message": "Considering the changes required, what is your take on this patch set?\nShould we write a brand new http_client addressing all issues? \nAlso, there is the requirement to store all events that are successfully sent for later retrieval. This will help in analyzing field issues. What is your take on this feature?",
      "parentUuid": "4a93846c_d733094d",
      "range": {
        "startLine": 159,
        "startChar": 4,
        "endLine": 159,
        "endChar": 19
      },
      "revId": "9df160ca1f3f168e5edc19ff9398fa75045ea18f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c60eb420_9f5428df",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-07T17:19:53Z",
      "side": 1,
      "message": "\u003e This required a complete rewriting of http_client. \n\nI suspect it\u0027s not a complete rewrite, just some minor changes to how connections are constructed and selected.\n\n\u003e To recreate connection info we should let the connection pool know about the terminated connections.\n\nRight, which seems doable.  We can just register the weak_ptr, and if they get destroyed, the connections are gone.\n\n\u003e as there is no point in starting from the resolve state.\n\nyes, there is.  Fault tolerant and load balanced systems will need to be re-resolved if there is a failure.\n\n\n\u003e Also, there is the requirement to store all events that are successfully sent for later retrieval. \n\nWhy?  I\u0027ve never heard this requirement.  Lets take that up in its own design document, outside of trying to fix this bug.",
      "parentUuid": "39db5872_a5153587",
      "range": {
        "startLine": 159,
        "startChar": 4,
        "endLine": 159,
        "endChar": 19
      },
      "revId": "9df160ca1f3f168e5edc19ff9398fa75045ea18f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78820e79_de3c2008",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-07T17:31:56Z",
      "side": 1,
      "message": "If you want this to be able to be destroyed and recreated, you want std::optional, not std::unique_ptr.",
      "range": {
        "startLine": 159,
        "startChar": 9,
        "endLine": 159,
        "endChar": 19
      },
      "revId": "9df160ca1f3f168e5edc19ff9398fa75045ea18f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "662cf4ca_301bfe91",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2023-12-11T05:18:15Z",
      "side": 1,
      "message": "Why? I\u0027ve never heard of this requirement. Lets take that up in its own design document, outside of trying to fix this bug.\n\nThis is one requirement that popped up during some recent field issues. We did not have enough data to troubleshoot the issue. Having history of past successfully sent event would be of much help here. I was just giving a heads up for it.Just wanted to know if it is ok to implement such a feature in http_client",
      "parentUuid": "c60eb420_9f5428df",
      "range": {
        "startLine": 159,
        "startChar": 4,
        "endLine": 159,
        "endChar": 19
      },
      "revId": "9df160ca1f3f168e5edc19ff9398fa75045ea18f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c62ec91_fab1c233",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 618,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-07T17:31:56Z",
      "side": 1,
      "message": "I suspect this doesn\u0027t need to return the socket itself, it can just set it directly, right?",
      "range": {
        "startLine": 618,
        "startChar": 4,
        "endLine": 618,
        "endChar": 49
      },
      "revId": "9df160ca1f3f168e5edc19ff9398fa75045ea18f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "630a2d17_174fef8c",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 625,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-07T17:31:56Z",
      "side": 1,
      "message": "You\u0027ve passed sslCtx by rvalue reference, but then you simply dereference it, instead of doing any sort of move.  Please pick one or the other and be consistent (either use move semantics or copy semantics).",
      "range": {
        "startLine": 625,
        "startChar": 44,
        "endLine": 625,
        "endChar": 51
      },
      "revId": "9df160ca1f3f168e5edc19ff9398fa75045ea18f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8602f63f_45870f9c",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 634,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-07T17:31:56Z",
      "side": 1,
      "message": "please don\u0027t use auto in this way.  It\u0027s non obvious what the type is.",
      "range": {
        "startLine": 634,
        "startChar": 12,
        "endLine": 634,
        "endChar": 16
      },
      "revId": "9df160ca1f3f168e5edc19ff9398fa75045ea18f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2c9c09d_44915c59",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 641,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-07T17:31:56Z",
      "side": 1,
      "message": "Can we deduplicate this with line 637?  Just declare sslContext on line 631, and there\u0027s no need to change this.",
      "range": {
        "startLine": 641,
        "startChar": 15,
        "endLine": 641,
        "endChar": 35
      },
      "revId": "9df160ca1f3f168e5edc19ff9398fa75045ea18f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2433d7a_5b578427",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 653,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-07T17:31:56Z",
      "side": 1,
      "message": "It would\u0027ve helped a lot if this refactoring (breaking out the constructor logic into its own method) was done in its own commit.  As-is, it\u0027s difficult to see what logic changes there were.  Not sure it\u0027s worth doing now, but oh well.",
      "range": {
        "startLine": 653,
        "startChar": 8,
        "endLine": 653,
        "endChar": 30
      },
      "revId": "9df160ca1f3f168e5edc19ff9398fa75045ea18f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}