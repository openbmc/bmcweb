{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "074b8ab7_32c38752",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1002325
      },
      "writtenOn": "2025-05-12T18:32:29Z",
      "side": 1,
      "message": "Test Results and performance charts for different scenarios are captured in this doc- https://docs.google.com/document/d/1EXFMc9tLzQsfyYtF6nuAVw6yadIjUQkwnalU34Vl4uU/edit?pli\u003d1\u0026tab\u003dt.0#heading\u003dh.ax2n0js5wlay",
      "revId": "9d932887e8471f3c437a601e96a65241a97beef5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5fdf221_ddad43f3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-12T22:31:44Z",
      "side": 1,
      "message": "Initial round of comments",
      "revId": "9d932887e8471f3c437a601e96a65241a97beef5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c24cf24_51a366cf",
        "filename": "http/http_body.hpp",
        "patchSetId": 10
      },
      "lineNbr": 345,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-15T22:58:34Z",
      "side": 1,
      "message": "This is one of the parts that should mark the failure in the response somehow.",
      "range": {
        "startLine": 344,
        "startChar": 0,
        "endLine": 345,
        "endChar": 54
      },
      "revId": "9d932887e8471f3c437a601e96a65241a97beef5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85ebc3e8_382de58a",
        "filename": "http/http_request.hpp",
        "patchSetId": 10
      },
      "lineNbr": 146,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-12T22:31:44Z",
      "side": 1,
      "message": "This API needs to give some indication to the caller when multipart parsing failed.",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 146,
        "endChar": 2
      },
      "revId": "9d932887e8471f3c437a601e96a65241a97beef5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "acd714c5_03e15432",
        "filename": "include/multipart_parser.hpp",
        "patchSetId": 10
      },
      "lineNbr": 68,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-15T22:58:34Z",
      "side": 1,
      "message": "This looks like it will fail if we\u0027ve converted content to a file.",
      "revId": "9d932887e8471f3c437a601e96a65241a97beef5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e48c428f_00fdb04b",
        "filename": "include/multipart_parser.hpp",
        "patchSetId": 10
      },
      "lineNbr": 73,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-15T22:58:34Z",
      "side": 1,
      "message": "This is a header, static isn\u0027t correct, inline might be correct.",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 73,
        "endChar": 6
      },
      "revId": "9d932887e8471f3c437a601e96a65241a97beef5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4ac404b_70eff9ad",
        "filename": "include/multipart_parser.hpp",
        "patchSetId": 10
      },
      "lineNbr": 82,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-15T22:58:34Z",
      "side": 1,
      "message": "?  How were these conditions chosen?  These look like they\u0027re hardcoding redfish specifics (ie UpdateFile).",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 82,
        "endChar": 1
      },
      "revId": "9d932887e8471f3c437a601e96a65241a97beef5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e132bf9_e4bf12d5",
        "filename": "include/multipart_parser.hpp",
        "patchSetId": 10
      },
      "lineNbr": 137,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-15T22:58:34Z",
      "side": 1,
      "message": "Why are we doing this in the finish() call?  Shouldn\u0027t this be done incrementally as parsing is completed?  Otherwise this is no more efficient than what we had (we still have to read the whole request into ram).",
      "range": {
        "startLine": 137,
        "startChar": 0,
        "endLine": 137,
        "endChar": 53
      },
      "revId": "9d932887e8471f3c437a601e96a65241a97beef5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97fef7b3_e5f58084",
        "filename": "include/temporary_releasable_file_handle.hpp",
        "patchSetId": 10
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-15T22:45:25Z",
      "side": 1,
      "message": "We have several file classes already with various levels of \"goodness\".  Please reuse one of the existing and add your logic to it.  DuplicatableFileHandle or TemporaryFileHandle might be similar?",
      "range": {
        "startLine": 10,
        "startChar": 6,
        "endLine": 10,
        "endChar": 35
      },
      "revId": "9d932887e8471f3c437a601e96a65241a97beef5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "530aa969_c1931ea3",
        "filename": "include/temporary_releasable_file_handle.hpp",
        "patchSetId": 10
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-15T22:45:25Z",
      "side": 1,
      "message": "should we make this just /tmp ?  we already have a bmcweb prefix.",
      "range": {
        "startLine": 17,
        "startChar": 49,
        "endLine": 17,
        "endChar": 68
      },
      "revId": "9d932887e8471f3c437a601e96a65241a97beef5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e8a74c5_e1488274",
        "filename": "include/temporary_releasable_file_handle.hpp",
        "patchSetId": 10
      },
      "lineNbr": 22,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-15T22:45:25Z",
      "side": 1,
      "message": "This error needs returned to the caller somehow, right?  Might need to move this all into a \"create\" method?",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 79
      },
      "revId": "9d932887e8471f3c437a601e96a65241a97beef5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a349b0b_ab23d9a3",
        "filename": "meson.build",
        "patchSetId": 10
      },
      "lineNbr": 445,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-05-15T22:49:17Z",
      "side": 1,
      "message": "I appreciate your attempt to keep things passing on every intermediate patch.  So long as the unit tests pass on the last patch, and you intend for them to all merge together, it\u0027s fine if only the last patch passes CI.",
      "range": {
        "startLine": 445,
        "startChar": 4,
        "endLine": 445,
        "endChar": 6
      },
      "revId": "9d932887e8471f3c437a601e96a65241a97beef5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}