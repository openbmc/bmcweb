{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7ed221e9_4d64f06f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-03T20:55:11Z",
      "side": 1,
      "message": "what is a \"developer test\"?\n\nPlease try to write your tested statements such that other people could run them.  I understand that this is subtle things, and that might not always be able to be cleanly documented, but lets give it a shot and see how well we can do.\n\nFWIW, I suspect that HTTP client needs more unit tests, similar to what we now have to HTTP connection.  Ideally we should be writing some of those.",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 21
      },
      "revId": "e84f9cd15c63f3fa9841410253ba479b2659130b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b763126_a746d89b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-06-05T03:54:54Z",
      "side": 1,
      "message": "I agree on the unit test coverage part. Let me see if I can help. I have already explained in the commit about the use case I tried manually. Developer test means manual execution of the test by the developer himself.",
      "parentUuid": "7ed221e9_4d64f06f",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 21
      },
      "revId": "e84f9cd15c63f3fa9841410253ba479b2659130b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef5d78f6_c82f10f3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-05T04:15:23Z",
      "side": 1,
      "message": "Right, but manual execution of WHAT test?",
      "parentUuid": "1b763126_a746d89b",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 15,
        "endChar": 21
      },
      "revId": "e84f9cd15c63f3fa9841410253ba479b2659130b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae944618_12328a46",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 709,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-03T20:53:54Z",
      "side": 1,
      "message": "Wouldn\u0027t we want to wait on this until we know that we have another request coming?\n\nWe don\u0027t want to open a connection if there isn\u0027t a request in progress.",
      "range": {
        "startLine": 709,
        "startChar": 0,
        "endLine": 709,
        "endChar": 2
      },
      "revId": "e84f9cd15c63f3fa9841410253ba479b2659130b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99b1e577_a4d6f3cc",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 709,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-06-05T03:43:56Z",
      "side": 1,
      "message": "May be, but this was the logic already present. We are anyway restarting the connection from doResolve(which will open a new connection anyway) previously. This patch just made sure that it is done properly.",
      "parentUuid": "ae944618_12328a46",
      "range": {
        "startLine": 709,
        "startChar": 0,
        "endLine": 709,
        "endChar": 2
      },
      "revId": "e84f9cd15c63f3fa9841410253ba479b2659130b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c31b5874_9be975de",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 709,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-06-05T03:47:24Z",
      "side": 1,
      "message": "Aren\u0027t we assuming too much about the beast internal implementation? Do you know exactly what happens if we call connect on previously connected sockets and do new ssl handshake etc?",
      "parentUuid": "99b1e577_a4d6f3cc",
      "range": {
        "startLine": 709,
        "startChar": 0,
        "endLine": 709,
        "endChar": 2
      },
      "revId": "e84f9cd15c63f3fa9841410253ba479b2659130b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31beb324_33afe100",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 709,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-05T04:15:23Z",
      "side": 1,
      "message": "I don\u0027t know that;  I wouldn\u0027t expect we should do it.\n\nWhat I wonder is if we\u0027d be better off just deleting this line entirely, set the state to idle, and let the connection reconnect on the next attempt.",
      "parentUuid": "c31b5874_9be975de",
      "range": {
        "startLine": 709,
        "startChar": 0,
        "endLine": 709,
        "endChar": 2
      },
      "revId": "e84f9cd15c63f3fa9841410253ba479b2659130b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6795b4e7_12e57526",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 709,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-06-05T10:18:46Z",
      "side": 1,
      "message": "I guess the state should be closed not idle right?\nkeep-alive false mean we should not reuse the channel.",
      "parentUuid": "31beb324_33afe100",
      "range": {
        "startLine": 709,
        "startChar": 0,
        "endLine": 709,
        "endChar": 2
      },
      "revId": "e84f9cd15c63f3fa9841410253ba479b2659130b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5cbd29b7_9f372579",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 709,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-07T15:12:01Z",
      "side": 1,
      "message": "Correct.",
      "parentUuid": "6795b4e7_12e57526",
      "range": {
        "startLine": 709,
        "startChar": 0,
        "endLine": 709,
        "endChar": 2
      },
      "revId": "e84f9cd15c63f3fa9841410253ba479b2659130b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d4e2041_cda6dfa6",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 763,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-03T20:53:54Z",
      "side": 1,
      "message": "I suspect we need to break this down by state\n\nidle should not require a connection restart. Initialized should already have the connection started.  As written, this will break keepalive.",
      "range": {
        "startLine": 763,
        "startChar": 26,
        "endLine": 763,
        "endChar": 43
      },
      "revId": "e84f9cd15c63f3fa9841410253ba479b2659130b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "854479d3_adc756ea",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 763,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-06-05T03:43:56Z",
      "side": 1,
      "message": "Doesn\u0027t it apply to previous code as well(when we use doResolve)?",
      "parentUuid": "4d4e2041_cda6dfa6",
      "range": {
        "startLine": 763,
        "startChar": 26,
        "endLine": 763,
        "endChar": 43
      },
      "revId": "e84f9cd15c63f3fa9841410253ba479b2659130b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "142576eb_9be41e95",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 763,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-05T04:15:23Z",
      "side": 1,
      "message": "I think it\u0027s different?  But I\"m not positive.",
      "parentUuid": "854479d3_adc756ea",
      "range": {
        "startLine": 763,
        "startChar": 26,
        "endLine": 763,
        "endChar": 43
      },
      "revId": "e84f9cd15c63f3fa9841410253ba479b2659130b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ec21df2_f3a41135",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 763,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-06-05T10:18:46Z",
      "side": 1,
      "message": "doResolve start from resolve -\u003econnect-\u003ehandshake-\u003e ....\nrestartConnection start from newsocket-\u003eresolve-\u003econnect-\u003ehanshake-\u003e...\nI don\u0027t see what difference old code would have made.\n\nAre you suggesting that we should handle the initialized condition differently from closed?\n\nThen what would be the initialized condition handler?\nI don\u0027t see any state between initialized and resolveInProgress. So we can safely assume that if it is not closed then resolve is not yet started. \nstarting from restartConnection and doResolve does not make much difference right?",
      "parentUuid": "142576eb_9be41e95",
      "range": {
        "startLine": 763,
        "startChar": 26,
        "endLine": 763,
        "endChar": 43
      },
      "revId": "e84f9cd15c63f3fa9841410253ba479b2659130b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb0beb7c_70d52a5b",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 763,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-07T15:12:01Z",
      "side": 1,
      "message": "\u003e doResolve start from resolve -\u003econnect-\u003ehandshake-\u003e ....\n\u003e restartConnection start from newsocket-\u003eresolve-\u003econnect-\u003ehanshake-\u003e...\n\u003e I don\u0027t see what difference old code would have made.\n\u003e \n\u003e Are you suggesting that we should handle the initialized condition differently from closed?\n\nYou\u0027re right, this is similar to what was previously there, but I don\u0027t think what was there was correct in all cases.\n\nBut I guess this is ok.\n\n\u003e \n\u003e Then what would be the initialized condition handler?\n\u003e I don\u0027t see any state between initialized and resolveInProgress. So we can safely assume that if it is not closed then resolve is not yet started. \n\u003e starting from restartConnection and doResolve does not make much difference right?\n\nMy overall thought is that the connection objects should destroy themselves on timeout, similar to how the HTTP connection works.  I haven\u0027t had a change to really test the below, but I think it\u0027s a lot simpler if a connection doesn\u0027t try to restart.  It would\u0027ve avoided this bug you see here.\n\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/56711\n\n\nWith that said, this patchset is fine.",
      "parentUuid": "0ec21df2_f3a41135",
      "range": {
        "startLine": 763,
        "startChar": 26,
        "endLine": 763,
        "endChar": 43
      },
      "revId": "e84f9cd15c63f3fa9841410253ba479b2659130b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}