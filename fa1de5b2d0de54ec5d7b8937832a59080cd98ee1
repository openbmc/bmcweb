{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9a713b0b_c6ffa664",
        "filename": "http/ut/utility_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-01-11T21:18:56Z",
      "side": 1,
      "message": "adding a comment explain why we have this result?",
      "range": {
        "startLine": 74,
        "startChar": 15,
        "endLine": 74,
        "endChar": 40
      },
      "revId": "fa1de5b2d0de54ec5d7b8937832a59080cd98ee1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aeab6de2_b6f90190",
        "filename": "http/ut/utility_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-01-12T02:13:46Z",
      "side": 1,
      "message": "adding a comment doesnâ€™t help make this code behavior correct.  in terms of the function, if it can fail, it needs to have a prototype where we return the error and handle it explicitly (probably returning 500 to the user).  it can be throwing an exception for a non fatal error.\n\neither we need to find a way to make boost throw, or use a different api to solve this problem.  does boost::chrono solve this problem better?",
      "parentUuid": "9a713b0b_c6ffa664",
      "range": {
        "startLine": 74,
        "startChar": 15,
        "endLine": 74,
        "endChar": 40
      },
      "revId": "fa1de5b2d0de54ec5d7b8937832a59080cd98ee1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9149c02d_44d1187b",
        "filename": "http/ut/utility_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 79,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-01-11T21:18:56Z",
      "side": 1,
      "message": "CamelCase",
      "range": {
        "startLine": 79,
        "startChar": 14,
        "endLine": 79,
        "endChar": 29
      },
      "revId": "fa1de5b2d0de54ec5d7b8937832a59080cd98ee1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9e2298e_ee14e936",
        "filename": "http/ut/utility_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 79,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-01-12T02:13:46Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9149c02d_44d1187b",
      "range": {
        "startLine": 79,
        "startChar": 14,
        "endLine": 79,
        "endChar": 29
      },
      "revId": "fa1de5b2d0de54ec5d7b8937832a59080cd98ee1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}