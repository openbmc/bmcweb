{
  "comments": [
    {
      "key": {
        "uuid": "fe94ad4b_446cd10c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 41
      },
      "lineNbr": 16,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-12T18:01:38Z",
      "side": 1,
      "message": "More details needed here.  You\u0027ve made several internal changes to data structures that need to be addressed in your commit message.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "d8ce8e6172caf6cc50a06d292d7f0965b3b916d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dacdbfa3_9ecf1b72",
        "filename": "/COMMIT_MSG",
        "patchSetId": 41
      },
      "lineNbr": 16,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2021-05-13T02:06:14Z",
      "side": 1,
      "message": "Sorry, I don’t know what else to say. The meaning of only is very simple, I think two sentences can make it clear. These are excerpts from the documentation.",
      "parentUuid": "fe94ad4b_446cd10c",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "d8ce8e6172caf6cc50a06d292d7f0965b3b916d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b062cc25_1d360cc9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 41
      },
      "lineNbr": 16,
      "author": {
        "id": 1000444
      },
      "writtenOn": "2021-05-14T03:44:42Z",
      "side": 1,
      "message": "You have modified http_connection, http_request and other files, which are widely used in other functions.In commit-msg, briefly explain why these files were modified and what modifications were made. Make it easier for reviewers to understand your logic.\nFor example, in http_response, ‘Due to the need for multiple layers of asynchronous calls, parameter processing in response.end() is less likely to cause call problems.’",
      "parentUuid": "dacdbfa3_9ecf1b72",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "d8ce8e6172caf6cc50a06d292d7f0965b3b916d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be79bc12_ffcd21f9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 41
      },
      "lineNbr": 16,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2021-05-17T02:54:53Z",
      "side": 1,
      "message": "ok",
      "parentUuid": "b062cc25_1d360cc9",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "d8ce8e6172caf6cc50a06d292d7f0965b3b916d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f10e46a_4893917d",
        "filename": "http/http_response.hpp",
        "patchSetId": 41
      },
      "lineNbr": 146,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-12T18:01:38Z",
      "side": 1,
      "message": "Why do we need this differently than completeRequest handler?  Can\u0027t we simply replace complete request handler with something that does the operation we need, then calls the former complete request handler?\n\nThat seems to be what you\u0027ve done in code, but I suspect can be done without adding another callback.\n\nAlso, for the later requests, we need to override completeRequestHandler, so that seems like a cleaner thing in the core.",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 146,
        "endChar": 46
      },
      "revId": "d8ce8e6172caf6cc50a06d292d7f0965b3b916d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08be3019_5511693d",
        "filename": "http/http_response.hpp",
        "patchSetId": 41
      },
      "lineNbr": 146,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2021-05-13T02:06:14Z",
      "side": 1,
      "message": "If I use class ProcessParam in struct Response, I can directly call processAllParam() without adding another callback. Can I do this?\nIn addition, I need to capture req. res and req appear in many places at the same time, where do you think I should capture req more appropriate?",
      "parentUuid": "7f10e46a_4893917d",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 146,
        "endChar": 46
      },
      "revId": "d8ce8e6172caf6cc50a06d292d7f0965b3b916d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9d6f399_e0584400",
        "filename": "redfish-core/include/node.hpp",
        "patchSetId": 41
      },
      "lineNbr": 83,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-12T18:01:38Z",
      "side": 1,
      "message": "FYI, the node class is going away.  This will need to be done in another context.",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 83,
        "endChar": 0
      },
      "revId": "d8ce8e6172caf6cc50a06d292d7f0965b3b916d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c44fbb7_55dea129",
        "filename": "redfish-core/include/node.hpp",
        "patchSetId": 41
      },
      "lineNbr": 83,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2021-05-13T02:06:14Z",
      "side": 1,
      "message": "Where do you think I should do this? I have no idea. I need to capture req to process the parameters.",
      "parentUuid": "a9d6f399_e0584400",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 83,
        "endChar": 0
      },
      "revId": "d8ce8e6172caf6cc50a06d292d7f0965b3b916d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a75c3d28_2a74b11a",
        "filename": "redfish-core/include/node.hpp",
        "patchSetId": 41
      },
      "lineNbr": 83,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-06-08T01:15:27Z",
      "side": 1,
      "message": "I suspect we\u0027ll need a \"redfish pre checks\" method that we can start all the redfish-specific resource things from;  It would be added to the begining of every redfish handler, or we could invent a \"REDFISH_ROUTE\" macro that\u0027s very similar to the BMCWEB_ROUTE macro.",
      "parentUuid": "3c44fbb7_55dea129",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 83,
        "endChar": 0
      },
      "revId": "d8ce8e6172caf6cc50a06d292d7f0965b3b916d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f103c691_02539f0c",
        "filename": "redfish-core/include/node.hpp",
        "patchSetId": 41
      },
      "lineNbr": 83,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2021-06-08T01:53:11Z",
      "side": 1,
      "message": "Like this？\ninline void requestRoutesSystems(App\u0026 app)\n{\n    BMCWEB_ROUTE(app, \"/redfish/v1/Systems/system/\")\n        .privileges({\"Login\"})\n        .methods(\n            boost::beast::http::verb::\n                get)([](const crow::Request\u0026 req,\n                        const std::shared_ptr\u003cbmcweb::AsyncResp\u003e\u0026 asyncResp) {\n\n            BMCWEB_ROUTE(app, req, asyncResp-\u003eres);\n            \n            asyncResp-\u003eres.jsonValue[\"@odata.type\"] \u003d\n                \"#ComputerSystem.v1_13_0.ComputerSystem\";\n            // ...\n        });",
      "parentUuid": "a75c3d28_2a74b11a",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 83,
        "endChar": 0
      },
      "revId": "d8ce8e6172caf6cc50a06d292d7f0965b3b916d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59440bbb_f70261af",
        "filename": "redfish-core/include/node.hpp",
        "patchSetId": 41
      },
      "lineNbr": 83,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2021-06-08T07:50:12Z",
      "side": 1,
      "message": "Sorry, there are some errors in the above.\n\n#define REDFISH_ROUTE(app, req, asyncResp)                                     \\\n    if (asyncResp-\u003eres.processParamHandler \u003d\u003d nullptr)                         \\\n    {                                                                          \\\n        auto processParam \u003d                                                    \\\n            std::make_shared\u003credfish::query_param::ProcessParam\u003e(              \\\n                app, asyncResp-\u003eres);                                          \\\n        asyncResp-\u003eres.processParamHandler \u003d [\u0026req, processParam]() -\u003e bool {  \\\n            return processParam-\u003eprocessAllParam(req);                         \\\n        };                                                                     \\\n    }\n\ninline void requestRoutesSystemsCollection(App\u0026 app)\n{\n    BMCWEB_ROUTE(app, \"/redfish/v1/Systems/\")\n        .privileges({\"Login\"})\n        .methods(boost::beast::http::verb::get)(\n            [\u0026app](const crow::Request\u0026 req,\n                   const std::shared_ptr\u003cbmcweb::AsyncResp\u003e\u0026 asyncResp) {\n\n                REDFISH_ROUTE(app, req, asyncResp)\n\n                asyncResp-\u003eres.jsonValue[\"@odata.id\"] \u003d \"/redfish/v1/Systems\";\n                // ...\n            });\n}",
      "parentUuid": "f103c691_02539f0c",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 83,
        "endChar": 0
      },
      "revId": "d8ce8e6172caf6cc50a06d292d7f0965b3b916d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c937d803_2594d10e",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 41
      },
      "lineNbr": 29,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-12T18:01:38Z",
      "side": 1,
      "message": "Typo?  I\u0027m not sure why this variable is here.",
      "range": {
        "startLine": 29,
        "startChar": 13,
        "endLine": 29,
        "endChar": 21
      },
      "revId": "d8ce8e6172caf6cc50a06d292d7f0965b3b916d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2aff6dcd_08165f2d",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 41
      },
      "lineNbr": 29,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2021-05-13T02:06:14Z",
      "side": 1,
      "message": "Yes, this is a typo. It should be \"isParsed\". Because the check parameter should be done only once, and then save the check result.",
      "parentUuid": "c937d803_2594d10e",
      "range": {
        "startLine": 29,
        "startChar": 13,
        "endLine": 29,
        "endChar": 21
      },
      "revId": "d8ce8e6172caf6cc50a06d292d7f0965b3b916d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ed0bc3c_5d134aec",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 41
      },
      "lineNbr": 49,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-12T18:01:38Z",
      "side": 1,
      "message": "?  This class has no inheritence.  Why are these protected instead of private?",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 49,
        "endChar": 12
      },
      "revId": "d8ce8e6172caf6cc50a06d292d7f0965b3b916d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8d2679d_f6159b45",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 41
      },
      "lineNbr": 49,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2021-05-13T02:06:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ed0bc3c_5d134aec",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 49,
        "endChar": 12
      },
      "revId": "d8ce8e6172caf6cc50a06d292d7f0965b3b916d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23d9e68d_4d7c61e2",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 41
      },
      "lineNbr": 111,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-05-12T18:01:38Z",
      "side": 1,
      "message": "capturing this by reference has ownership and lifetype issues.  I suspect this should be capturing by weak_ptr",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 111,
        "endChar": 24
      },
      "revId": "d8ce8e6172caf6cc50a06d292d7f0965b3b916d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d525a5db_9d74f2ce",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 41
      },
      "lineNbr": 111,
      "author": {
        "id": 1001027
      },
      "writtenOn": "2021-05-13T02:06:14Z",
      "side": 1,
      "message": "There is only one res in a connection. We process the parameters in res.end(), so I don\u0027t think there is a problem.",
      "parentUuid": "23d9e68d_4d7c61e2",
      "range": {
        "startLine": 111,
        "startChar": 0,
        "endLine": 111,
        "endChar": 24
      },
      "revId": "d8ce8e6172caf6cc50a06d292d7f0965b3b916d4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}