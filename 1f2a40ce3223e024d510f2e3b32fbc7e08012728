{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5ae65b86_7f31c61e",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 1
      },
      "lineNbr": 790,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-10T23:06:50Z",
      "side": 0,
      "message": "The old code was correct here.  If the parameters given in the action are incorrect, we need to return 400 and complete.",
      "range": {
        "startLine": 790,
        "startChar": 0,
        "endLine": 790,
        "endChar": 15
      },
      "revId": "1f2a40ce3223e024d510f2e3b32fbc7e08012728",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5280b5d_202df472",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 1
      },
      "lineNbr": 790,
      "author": {
        "id": 1000460
      },
      "writtenOn": "2023-01-12T14:36:04Z",
      "side": 0,
      "message": "See previous comment.\nThis return value is valid only for legacy mode. For proxy mode we shall return 404.",
      "parentUuid": "5ae65b86_7f31c61e",
      "range": {
        "startLine": 790,
        "startChar": 0,
        "endLine": 790,
        "endChar": 15
      },
      "revId": "1f2a40ce3223e024d510f2e3b32fbc7e08012728",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50a7dfae_62022597",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 1
      },
      "lineNbr": 790,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-12T22:33:30Z",
      "side": 0,
      "message": "Then register the two routes as different routes if they need to return 404 differently.  We cannot be ignoring errors.  As-written, this also doesn\u0027t work as you describe, it will set 400 errors within the response even in legacy mode.",
      "parentUuid": "a5280b5d_202df472",
      "range": {
        "startLine": 790,
        "startChar": 0,
        "endLine": 790,
        "endChar": 15
      },
      "revId": "1f2a40ce3223e024d510f2e3b32fbc7e08012728",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f40d3b57_37d2b1cc",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 1
      },
      "lineNbr": 790,
      "author": {
        "id": 1000460
      },
      "writtenOn": "2023-01-13T11:06:05Z",
      "side": 0,
      "message": "I understand your concern. Redfish path is the same for both modes (legacy and proxy). What differs is the path on DBus. We have to postpone validation to the time, when full validation is possible. I do not have other idea how to handle such case without redesign and having redfish endpoints names prefixed with mode.\n\nAlso, I see your point - json validation (when json is malformed) ends the connection and even if we change response later it does not matter. \nI would pass the whole readJsonAction() to dbus callback, but in one of previous reviews you asked me to not pass reference to request object in lambda capture list. How to deal with this problem then? Ignore and pass request down to dbus callback or pass as simple copy?",
      "parentUuid": "50a7dfae_62022597",
      "range": {
        "startLine": 790,
        "startChar": 0,
        "endLine": 790,
        "endChar": 15
      },
      "revId": "1f2a40ce3223e024d510f2e3b32fbc7e08012728",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8be2f44_93bdc6f7",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 1
      },
      "lineNbr": 790,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-13T18:18:24Z",
      "side": 0,
      "message": "\u003e We have to postpone validation to the time\n\nThen don\u0027t parse the values, or make all the values std::optional, then check the std::optionals later to see if they\u0027re filled in.",
      "parentUuid": "f40d3b57_37d2b1cc",
      "range": {
        "startLine": 790,
        "startChar": 0,
        "endLine": 790,
        "endChar": 15
      },
      "revId": "1f2a40ce3223e024d510f2e3b32fbc7e08012728",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}