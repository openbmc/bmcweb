{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5ae65b86_7f31c61e",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 1
      },
      "lineNbr": 790,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-10T23:06:50Z",
      "side": 0,
      "message": "The old code was correct here.  If the parameters given in the action are incorrect, we need to return 400 and complete.",
      "range": {
        "startLine": 790,
        "startChar": 0,
        "endLine": 790,
        "endChar": 15
      },
      "revId": "1f2a40ce3223e024d510f2e3b32fbc7e08012728",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5280b5d_202df472",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 1
      },
      "lineNbr": 790,
      "author": {
        "id": 1000460
      },
      "writtenOn": "2023-01-12T14:36:04Z",
      "side": 0,
      "message": "See previous comment.\nThis return value is valid only for legacy mode. For proxy mode we shall return 404.",
      "parentUuid": "5ae65b86_7f31c61e",
      "range": {
        "startLine": 790,
        "startChar": 0,
        "endLine": 790,
        "endChar": 15
      },
      "revId": "1f2a40ce3223e024d510f2e3b32fbc7e08012728",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50a7dfae_62022597",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 1
      },
      "lineNbr": 790,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-12T22:33:30Z",
      "side": 0,
      "message": "Then register the two routes as different routes if they need to return 404 differently.  We cannot be ignoring errors.  As-written, this also doesn\u0027t work as you describe, it will set 400 errors within the response even in legacy mode.",
      "parentUuid": "a5280b5d_202df472",
      "range": {
        "startLine": 790,
        "startChar": 0,
        "endLine": 790,
        "endChar": 15
      },
      "revId": "1f2a40ce3223e024d510f2e3b32fbc7e08012728",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f40d3b57_37d2b1cc",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 1
      },
      "lineNbr": 790,
      "author": {
        "id": 1000460
      },
      "writtenOn": "2023-01-13T11:06:05Z",
      "side": 0,
      "message": "I understand your concern. Redfish path is the same for both modes (legacy and proxy). What differs is the path on DBus. We have to postpone validation to the time, when full validation is possible. I do not have other idea how to handle such case without redesign and having redfish endpoints names prefixed with mode.\n\nAlso, I see your point - json validation (when json is malformed) ends the connection and even if we change response later it does not matter. \nI would pass the whole readJsonAction() to dbus callback, but in one of previous reviews you asked me to not pass reference to request object in lambda capture list. How to deal with this problem then? Ignore and pass request down to dbus callback or pass as simple copy?",
      "parentUuid": "50a7dfae_62022597",
      "range": {
        "startLine": 790,
        "startChar": 0,
        "endLine": 790,
        "endChar": 15
      },
      "revId": "1f2a40ce3223e024d510f2e3b32fbc7e08012728",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8be2f44_93bdc6f7",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 1
      },
      "lineNbr": 790,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-13T18:18:24Z",
      "side": 0,
      "message": "\u003e We have to postpone validation to the time\n\nThen don\u0027t parse the values, or make all the values std::optional, then check the std::optionals later to see if they\u0027re filled in.",
      "parentUuid": "f40d3b57_37d2b1cc",
      "range": {
        "startLine": 790,
        "startChar": 0,
        "endLine": 790,
        "endChar": 15
      },
      "revId": "1f2a40ce3223e024d510f2e3b32fbc7e08012728",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fe8dbaa_5f7f6493",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 1
      },
      "lineNbr": 790,
      "author": {
        "id": 1000460
      },
      "writtenOn": "2023-01-13T19:04:14Z",
      "side": 0,
      "message": "I would like to, but without request passed to DBus callback I would have to check it manually, first parse json then validate. But there is already a solution for this.",
      "parentUuid": "d8be2f44_93bdc6f7",
      "range": {
        "startLine": 790,
        "startChar": 0,
        "endLine": 790,
        "endChar": 15
      },
      "revId": "1f2a40ce3223e024d510f2e3b32fbc7e08012728",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b49c9e96_27cdd522",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 1
      },
      "lineNbr": 790,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-19T01:36:30Z",
      "side": 0,
      "message": "Why?  std::optional shouldn\u0027t have issues if all params are optional, it will only throw errors if they are the wrong type, which you want to anyway.",
      "parentUuid": "2fe8dbaa_5f7f6493",
      "range": {
        "startLine": 790,
        "startChar": 0,
        "endLine": 790,
        "endChar": 15
      },
      "revId": "1f2a40ce3223e024d510f2e3b32fbc7e08012728",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13c87792_8acc4d50",
        "filename": "redfish-core/lib/virtual_media.hpp",
        "patchSetId": 1
      },
      "lineNbr": 790,
      "author": {
        "id": 1000460
      },
      "writtenOn": "2023-01-30T12:19:00Z",
      "side": 0,
      "message": "The problem I have is that raedJsonAction (the utility which does right job and does it good) invokes res.end() when json couldn\u0027t be parsed (this is an issue when we don\u0027t provide json at all). It also fills jsonValue with appropriate messages related to the format of the data provided in json. \nThis is OK for legacy mode, but I would also like to have a possibility to discard all for proxy. For proxy we shall behave like this route does not exist at all.\nThe proposal how to deal with this is a subject of the next patchset.",
      "parentUuid": "b49c9e96_27cdd522",
      "range": {
        "startLine": 790,
        "startChar": 0,
        "endLine": 790,
        "endChar": 15
      },
      "revId": "1f2a40ce3223e024d510f2e3b32fbc7e08012728",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}