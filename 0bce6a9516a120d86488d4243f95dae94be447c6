{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f16d7f4a_fae80734",
        "filename": "scripts/parse_registries.py",
        "patchSetId": 2
      },
      "lineNbr": 329,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-27T02:27:47Z",
      "side": 0,
      "message": "Looks unrelated?",
      "range": {
        "startLine": 329,
        "startChar": 0,
        "endLine": 329,
        "endChar": 20
      },
      "revId": "0bce6a9516a120d86488d4243f95dae94be447c6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53860b5e_936ec203",
        "filename": "scripts/parse_registries.py",
        "patchSetId": 2
      },
      "lineNbr": 329,
      "author": {
        "id": 1002230
      },
      "writtenOn": "2025-02-27T09:40:48Z",
      "side": 0,
      "message": "No, this was intentional. Look at the code it looks like:\n```\nif argtypes:\n  # ...\n  # init argstring\n\nif argtypes:\n  # use argstring\n```\n\nSo, there were an issue and a nit here:\nissue - the argstring was declared and initialized in the first if block, but then, used in the second. So, type checker was complaining and was right. It worked because both of the blocks were reachable on the same condition, but if someone changes the first condition (for example adding `and bla`), the var will be init not in all the cases when it\u0027s used below.\nnit - 2 the same conditional blocks one by one did not make much of sense and could be merged.",
      "parentUuid": "f16d7f4a_fae80734",
      "range": {
        "startLine": 329,
        "startChar": 0,
        "endLine": 329,
        "endChar": 20
      },
      "revId": "0bce6a9516a120d86488d4243f95dae94be447c6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "039889d4_1834d7be",
        "filename": "scripts/parse_registries.py",
        "patchSetId": 2
      },
      "lineNbr": 668,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-02-27T02:27:47Z",
      "side": 0,
      "message": "Looks unrelated to type safety?  I guess we generated the same code, so this was. a duplicate.",
      "revId": "0bce6a9516a120d86488d4243f95dae94be447c6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2c5f392_ce0ccfa3",
        "filename": "scripts/parse_registries.py",
        "patchSetId": 2
      },
      "lineNbr": 668,
      "author": {
        "id": 1002230
      },
      "writtenOn": "2025-02-27T09:40:48Z",
      "side": 0,
      "message": "The def accepts this argument, but never used it, so the linter complained. Technically speaking you\u0027re right, but is it worth a separate diff?",
      "parentUuid": "039889d4_1834d7be",
      "revId": "0bce6a9516a120d86488d4243f95dae94be447c6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}