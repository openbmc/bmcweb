{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "958b04ad_00073be8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-08-07T15:33:59Z",
      "side": 1,
      "message": "Why do we care? \nWhy does bmcweb need this change? I get the returns turn when the feature is set to \u0027enabled\u0027 or \u0027auto\u0027 vs .enabled() which appears to return true only on \u0027enabled\u0027 but why is that important?",
      "revId": "9ba890abe8e76651f00403b47783bc1efa0182c4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0094e850_3e8f4611",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-08-07T15:36:15Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "958b04ad_00073be8",
      "revId": "9ba890abe8e76651f00403b47783bc1efa0182c4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da6c5746_62fb49a1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2023-08-08T03:26:17Z",
      "side": 1,
      "message": "Actually this commit solves two problems:\n1. To determine whether the tests function is enabled, most repoes use the logic of `not disabled`, which should be changed to `build_tests.enabled()` or `build_tests.allowed()`\n2. Based on the first question, @Patrick suggested that we should prefer `allowed` instead of `enabled`. Because the allowed method has been supported in meson0.59.0, and from meson1.1.0, it is supported feature.disable_if(), feature.enable_auto_if(), feature.enable_if() and other methods.\n\nhttps://gerrit.openbmc.org/c/openbmc/phosphor-gpio-monitor/+/65710/2..4/meson.build#b149\nhttps://mesonbuild.com/Reference-manual_returned_feature.html",
      "parentUuid": "0094e850_3e8f4611",
      "revId": "9ba890abe8e76651f00403b47783bc1efa0182c4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f408b59_70f03b6c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-08-08T15:30:22Z",
      "side": 1,
      "message": "\u003e Actually this commit solves two problems:\n\u003e 1. To determine whether the tests function is enabled, most repoes use the logic of `not disabled`, which should be changed to `build_tests.enabled()` or `build_tests.allowed()`\n\nThis repo doesn\u0027t do \"not enabled\", and uses enabled(), which should work properly if I understand your statement properly?\n\n\u003e 2. Based on the first question, @Patrick suggested that we should prefer `allowed` instead of `enabled`. Because the allowed method has been supported in meson0.59.0, and from meson1.1.0, it is supported feature.disable_if(), feature.enable_auto_if(), feature.enable_if() and other methods.\n\u003e \n\u003e https://gerrit.openbmc.org/c/openbmc/phosphor-gpio-monitor/+/65710/2..4/meson.build#b149\n\u003e https://mesonbuild.com/Reference-manual_returned_feature.html\n\nBut.... why?  Why is it better?",
      "parentUuid": "da6c5746_62fb49a1",
      "revId": "9ba890abe8e76651f00403b47783bc1efa0182c4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82b2ba4d_c5575c81",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-08-10T18:11:26Z",
      "side": 1,
      "message": "Please update the commit msg with why we need this. \nIt still isn\u0027t clear to me, why this is better",
      "revId": "9ba890abe8e76651f00403b47783bc1efa0182c4",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}