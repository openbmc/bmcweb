{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4d69a64e_2785cbfc",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 9
      },
      "lineNbr": 182,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-04-12T18:27:20Z",
      "side": 1,
      "message": "Where does this upper limit come from?",
      "range": {
        "startLine": 182,
        "startChar": 38,
        "endLine": 182,
        "endChar": 55
      },
      "revId": "268fdc9b1394c306d6244a3443db7209ea89b74e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b5d9306_50045484",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 9
      },
      "lineNbr": 182,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-04-12T18:27:20Z",
      "side": 1,
      "message": "Is zero illegal?\n\nFrom the spec, \"Minimum value is 0 , though a value of 0 returns an empty set of members.\"",
      "range": {
        "startLine": 182,
        "startChar": 14,
        "endLine": 182,
        "endChar": 17
      },
      "revId": "268fdc9b1394c306d6244a3443db7209ea89b74e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5fcd924b_08c71ed2",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 9
      },
      "lineNbr": 182,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-13T23:49:27Z",
      "side": 1,
      "message": "This was copied from the old $top code, so it had a bug, but yes, you\u0027re correct, zero is legal.",
      "parentUuid": "4b5d9306_50045484",
      "range": {
        "startLine": 182,
        "startChar": 14,
        "endLine": 182,
        "endChar": 17
      },
      "revId": "268fdc9b1394c306d6244a3443db7209ea89b74e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac9f6718_13b20462",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 9
      },
      "lineNbr": 182,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-13T23:49:27Z",
      "side": 1,
      "message": "This is what the old top code picked, and I\u0027m pretty sure it was arbitrary (Jason can weigh in if he remembers why it was picked).\n\nI suspect this is something we\u0027ll need to evaluate and tune, but 1000 seems like a reasonable default for most of our larger collections.",
      "parentUuid": "4d69a64e_2785cbfc",
      "range": {
        "startLine": 182,
        "startChar": 38,
        "endLine": 182,
        "endChar": 55
      },
      "revId": "268fdc9b1394c306d6244a3443db7209ea89b74e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "491457a4_1e1a9dfe",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 9
      },
      "lineNbr": 182,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-14T17:53:05Z",
      "side": 1,
      "message": "Fixed.",
      "parentUuid": "5fcd924b_08c71ed2",
      "range": {
        "startLine": 182,
        "startChar": 14,
        "endLine": 182,
        "endChar": 17
      },
      "revId": "268fdc9b1394c306d6244a3443db7209ea89b74e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9a99983_103fd944",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 9
      },
      "lineNbr": 182,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-04-14T21:45:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ac9f6718_13b20462",
      "range": {
        "startLine": 182,
        "startChar": 38,
        "endLine": 182,
        "endChar": 55
      },
      "revId": "268fdc9b1394c306d6244a3443db7209ea89b74e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2c0e617_ca589fab",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 9
      },
      "lineNbr": 1897,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-04-12T18:29:44Z",
      "side": 1,
      "message": "I missed this in the previous change, but can this be constexpr? That could save an allocation, right?",
      "range": {
        "startLine": 1897,
        "startChar": 12,
        "endLine": 1897,
        "endChar": 23
      },
      "revId": "268fdc9b1394c306d6244a3443db7209ea89b74e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a9b50a8_f1d8a1c3",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 9
      },
      "lineNbr": 1897,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-12T18:59:19Z",
      "side": 1,
      "message": "Could it be constexpr, maybe, but that imposes that QueryCapabilities always be constexpr constructible, so we don\u0027t necessarily want to do that.\n\nI\u0027m pretty sure constexpr or not these will generate the same code, so this isn\u0027t really the level of change that I would generally enforce.\n\nWith all that said, if there\u0027s a good reason to do that, I\u0027m happy to make the change, I\u0027m just not seeing what it would improve.  Does making this contexpr actually generate different code?",
      "parentUuid": "f2c0e617_ca589fab",
      "range": {
        "startLine": 1897,
        "startChar": 12,
        "endLine": 1897,
        "endChar": 23
      },
      "revId": "268fdc9b1394c306d6244a3443db7209ea89b74e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50ce2fa3_41f1300c",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 9
      },
      "lineNbr": 1897,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-04-13T22:24:32Z",
      "side": 1,
      "message": "https://godbolt.org/z/TjhsqYbqE\n\nI tried, codes are similar. I don\u0027t know if that will make a big difference. And yeah, I agree, when we have std::unordered_set introduced into QueryCapabilities, it won\u0027t be constexpr constructible",
      "parentUuid": "6a9b50a8_f1d8a1c3",
      "range": {
        "startLine": 1897,
        "startChar": 12,
        "endLine": 1897,
        "endChar": 23
      },
      "revId": "268fdc9b1394c306d6244a3443db7209ea89b74e",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}