{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0ec685ec_5bc375c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-05-25T16:26:13Z",
      "side": 1,
      "message": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/63702 is an alternative. \nI am fine with either",
      "revId": "9ea949f8d0bfd13102c53b86f7a95af63664d404",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7227c063_f4bd3092",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-05-26T20:26:39Z",
      "side": 1,
      "message": "I prefer this one because:\nA. it\u0027s not that much cruft to maintain as an API option\nB. if folks really relied on the old behavior, we can get them out of the woodwork and can maintain the option.\nC. if it eventually goes away, that\u0027s fine too.",
      "parentUuid": "0ec685ec_5bc375c6",
      "revId": "9ea949f8d0bfd13102c53b86f7a95af63664d404",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fd2bd16_1d916e43",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-05-31T19:06:11Z",
      "side": 1,
      "message": "Ack. I mostly agree. \n\n\u003e A. it\u0027s not that much cruft to maintain as an API option\n\nIt is a medium amount of work to maintain this, I wouldn\u0027t say trivial or not much (since it touches several core/frequently changed files)  \nIf it isn\u0027t wanted by anyone, then 63702 is cleaner. (I didn\u0027t see a reply on discord, unless I missed it?)\n\n\n\u003e B. if folks really relied on the old behavior, we can get them out of the woodwork and can maintain the option.\n\nBut yes, this is less likely to break folks. \n\n\u003e C. if it eventually goes away, that\u0027s fine too.\n\nWill we default this to off?\nThis punts the health discussion down the road and we go ahead with \n\nMultiple commits mapping Redfish \"Health\" -\u003e OperationalStatus\u0027s Functional. E.g. \nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/62447\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/57670\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/62850\n https://gerrit.openbmc.org/c/openbmc/bmcweb/+/62511/11/redfish-core/lib/fan.hpp\n\nAgree?",
      "parentUuid": "7227c063_f4bd3092",
      "revId": "9ea949f8d0bfd13102c53b86f7a95af63664d404",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "949c9b41_9505001e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-05-31T19:20:46Z",
      "side": 1,
      "message": "\u003e If it isn\u0027t wanted by anyone, then 63702 is cleaner. (I didn\u0027t see a reply on discord, unless I missed it?)\n\nPeople not replying is different than having a discussion with the original authors (intel) and them saying they don\u0027t use it anymore.  I suspect there are quite a few folks that rely on it and don\u0027t realize it.\n\nI\u0027m actually even ok if this option defaults to disabling health populate, and we can gauge interest by the number of folks that turn it back on.\n\n\u003e Will we default this to off?\n\nIMO, we can do this today.\n\n\u003e Multiple commits mapping Redfish \"Health\" -\u003e OperationalStatus\u0027s Functional. E.g.\n\nSo long as they implement the status properties correctly, I think that\u0027s ok, but I suspect there\u0027s no backend code for a lot of those (but lets evaluate in the patches).",
      "parentUuid": "8fd2bd16_1d916e43",
      "revId": "9ea949f8d0bfd13102c53b86f7a95af63664d404",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72ac493d_3e925bdd",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 3
      },
      "lineNbr": 255,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-05-25T16:16:53Z",
      "side": 1,
      "message": "please use if constexpr these days.  That prevents code from breaking if the ifdef is disabled and things below it change.\n\nthe variable here would go in the bmcweb.conf file.",
      "range": {
        "startLine": 255,
        "startChar": 0,
        "endLine": 255,
        "endChar": 22
      },
      "revId": "9ea949f8d0bfd13102c53b86f7a95af63664d404",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc169386_95c7bdab",
        "filename": "redfish-core/lib/chassis.hpp",
        "patchSetId": 3
      },
      "lineNbr": 255,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-05-25T19:49:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "72ac493d_3e925bdd",
      "range": {
        "startLine": 255,
        "startChar": 0,
        "endLine": 255,
        "endChar": 22
      },
      "revId": "9ea949f8d0bfd13102c53b86f7a95af63664d404",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f35bb15e_907d5ccf",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 3
      },
      "lineNbr": 3097,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-05-25T16:26:13Z",
      "side": 1,
      "message": "why not put this in the ifdef?",
      "revId": "9ea949f8d0bfd13102c53b86f7a95af63664d404",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e3d7c3e_1cda13d2",
        "filename": "redfish-core/lib/systems.hpp",
        "patchSetId": 3
      },
      "lineNbr": 3097,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2023-05-25T19:49:44Z",
      "side": 1,
      "message": "health is passed in `getComputerSystem(asyncResp, health);` at line 3153",
      "parentUuid": "f35bb15e_907d5ccf",
      "revId": "9ea949f8d0bfd13102c53b86f7a95af63664d404",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}