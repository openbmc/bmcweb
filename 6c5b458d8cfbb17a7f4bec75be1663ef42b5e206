{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e6a02272_86bcae49",
        "filename": "include/google_authenticator.hpp",
        "patchSetId": 9
      },
      "lineNbr": 19,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-10-01T19:47:27Z",
      "side": 1,
      "message": "Generally we would use normal methods, and just pass the function through the steps.  Any reason we needed to do a shared_ptr here?",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 19,
        "endChar": 71
      },
      "revId": "6c5b458d8cfbb17a7f4bec75be1663ef42b5e206",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "092a2d43_65499a86",
        "filename": "include/google_authenticator.hpp",
        "patchSetId": 9
      },
      "lineNbr": 19,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-10-02T12:07:17Z",
      "side": 1,
      "message": "Are you saying that instead of encapsulating the username and continuation handler in to an object , just move both of them through all of the asynchronous functions? I can do that. It is just that it will make it a bit more verbose and not easy to maintain in case if any more member needs to be added in future. Yes there is a small cost of increasing the shared counter.",
      "parentUuid": "e6a02272_86bcae49",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 19,
        "endChar": 71
      },
      "revId": "6c5b458d8cfbb17a7f4bec75be1663ef42b5e206",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf855e74_5367a528",
        "filename": "include/google_authenticator.hpp",
        "patchSetId": 9
      },
      "lineNbr": 19,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-10-03T03:00:28Z",
      "side": 1,
      "message": "I\u0027m saying that putting multiple async ops in an object (and not handling move/forward correctly) causes copies to be made, and code to be more verbose than otherwise.  I\u0027m ok with a class, so long as it\u0027s kept to a single debug flow, although I suspect this flow will become simple enough we won\u0027t need it",
      "parentUuid": "092a2d43_65499a86",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 19,
        "endChar": 71
      },
      "revId": "6c5b458d8cfbb17a7f4bec75be1663ef42b5e206",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d688ad92_8da1520f",
        "filename": "include/google_authenticator.hpp",
        "patchSetId": 9
      },
      "lineNbr": 19,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-10-03T04:24:13Z",
      "side": 1,
      "message": "I not sure if I followed you. Here we need three async function to be called before we make any decision on secret key generation required or not. check global mfa, check valid secret present, if not preset check if bypass is enabled or not. I am not sure how are you proposing to make it simpler? \nWhat I see is following options.\n1) Yes if we take out some error paths debug logs, then yes code will be a bit lesser.\n2) Use coroutine to make it look like sync call \n3) Use sync call (don\u0027t know if it is recommended)\n4) Use async call as done here but make it free functions and explicitly move the username and continuation in every async operation.\n5) Use the current implementation with shared pointer, that will make sure that there is no unnecessary copy of values at the cost of a share_ptr.\n6) If there is a batch request possible for multiple properties/methods use it. \n7) Use a single Dbus call to user-manager and let user-manager does needed checks and return the final answer.\n\nI am inclined towards 7 and if that is not possible go for 5 .",
      "parentUuid": "cf855e74_5367a528",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 19,
        "endChar": 71
      },
      "revId": "6c5b458d8cfbb17a7f4bec75be1663ef42b5e206",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e868238c_7a66b781",
        "filename": "include/google_authenticator.hpp",
        "patchSetId": 9
      },
      "lineNbr": 19,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-10-03T04:40:33Z",
      "side": 1,
      "message": "Or are you saying that remove the shared_ptr and just move the single object instead after making all of them free function? I can do that if we not going for 7 above.",
      "parentUuid": "d688ad92_8da1520f",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 19,
        "endChar": 71
      },
      "revId": "6c5b458d8cfbb17a7f4bec75be1663ef42b5e206",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35fd10ce_b778c5fb",
        "filename": "include/google_authenticator.hpp",
        "patchSetId": 9
      },
      "lineNbr": 59,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-10-01T19:47:27Z",
      "side": 1,
      "message": "Why are we checking this?  Isn\u0027t this something that should be enforced by pam/phosphor-user-manager?",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 59,
        "endChar": 55
      },
      "revId": "6c5b458d8cfbb17a7f4bec75be1663ef42b5e206",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32dcb217_992fe2d3",
        "filename": "include/google_authenticator.hpp",
        "patchSetId": 9
      },
      "lineNbr": 59,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-10-02T12:07:17Z",
      "side": 1,
      "message": "No, this check here has nothing to do with pam authentication. This is a redfish property. The entire utility is used in the first time TOTP setup of a user. Pam module can not be used for it. This is something similar to how we change the password after the first login.",
      "parentUuid": "35fd10ce_b778c5fb",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 59,
        "endChar": 55
      },
      "revId": "6c5b458d8cfbb17a7f4bec75be1663ef42b5e206",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf755ab0_b1b3fced",
        "filename": "include/google_authenticator.hpp",
        "patchSetId": 9
      },
      "lineNbr": 59,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-10-03T02:55:18Z",
      "side": 1,
      "message": "Yes, we can move this to phosphor-user-manager, with a new DBus method say isSecretKeyNeeded.",
      "parentUuid": "32dcb217_992fe2d3",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 59,
        "endChar": 55
      },
      "revId": "6c5b458d8cfbb17a7f4bec75be1663ef42b5e206",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75083e3b_780fd755",
        "filename": "include/google_authenticator.hpp",
        "patchSetId": 9
      },
      "lineNbr": 59,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-10-03T03:00:28Z",
      "side": 1,
      "message": "it wouldn\u0027t be a dbus method, it would be a return code from pam, right?  Similar to how the current password needs changed behavior is handled?",
      "parentUuid": "bf755ab0_b1b3fced",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 59,
        "endChar": 55
      },
      "revId": "6c5b458d8cfbb17a7f4bec75be1663ef42b5e206",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c70f288f_fd2144c8",
        "filename": "include/google_authenticator.hpp",
        "patchSetId": 9
      },
      "lineNbr": 59,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-10-03T04:08:20Z",
      "side": 1,
      "message": "pam verifies totp if secret key file is generated for the user ,otherwise it ignores the totp verification and prompts/uses the password to authenticate.See https://github.com/google/google-authenticator-libpam/blob/master/src/pam_google_authenticator.c#L2019 \n\nIt does not know about the redfish properties such as bypass, authenticator enabled/disabled etc.",
      "parentUuid": "75083e3b_780fd755",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 59,
        "endChar": 55
      },
      "revId": "6c5b458d8cfbb17a7f4bec75be1663ef42b5e206",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "337b4188_da5f7052",
        "filename": "include/google_authenticator.hpp",
        "patchSetId": 9
      },
      "lineNbr": 84,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-10-01T19:47:27Z",
      "side": 1,
      "message": "please don\u0027t use std::format for constructing dbus paths.  There are several instances of this, please fix all of them.",
      "range": {
        "startLine": 84,
        "startChar": 12,
        "endLine": 84,
        "endChar": 23
      },
      "revId": "6c5b458d8cfbb17a7f4bec75be1663ef42b5e206",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8b1a42f_bdc0a15b",
        "filename": "include/google_authenticator.hpp",
        "patchSetId": 9
      },
      "lineNbr": 84,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-10-02T12:07:17Z",
      "side": 1,
      "message": "I can change that . But curious to know why it is a problem to use std::format?",
      "parentUuid": "337b4188_da5f7052",
      "range": {
        "startLine": 84,
        "startChar": 12,
        "endLine": 84,
        "endChar": 23
      },
      "revId": "6c5b458d8cfbb17a7f4bec75be1663ef42b5e206",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "acb8e76b_03dede33",
        "filename": "include/google_authenticator.hpp",
        "patchSetId": 9
      },
      "lineNbr": 113,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-10-01T19:47:27Z",
      "side": 1,
      "message": "Same as above, this isn\u0027t something bmcweb should be enforcing.  bmcweb just triggers a pam login, and the pam module can enforce whether or not it\u0027s required or not",
      "range": {
        "startLine": 102,
        "startChar": 0,
        "endLine": 113,
        "endChar": 9
      },
      "revId": "6c5b458d8cfbb17a7f4bec75be1663ef42b5e206",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "413f568b_aa17c716",
        "filename": "include/google_authenticator.hpp",
        "patchSetId": 9
      },
      "lineNbr": 113,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-10-02T12:07:17Z",
      "side": 1,
      "message": "This is not a pam authentication use case. This is a case where a user who logged in for the first time should be prompted for mandatory creation of secret key or not.",
      "parentUuid": "acb8e76b_03dede33",
      "range": {
        "startLine": 102,
        "startChar": 0,
        "endLine": 113,
        "endChar": 9
      },
      "revId": "6c5b458d8cfbb17a7f4bec75be1663ef42b5e206",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9b2a5f0_0884a7aa",
        "filename": "include/google_authenticator.hpp",
        "patchSetId": 9
      },
      "lineNbr": 113,
      "author": {
        "id": 1001762
      },
      "writtenOn": "2024-10-03T02:55:18Z",
      "side": 1,
      "message": "I think you are right. Instead doing it in bmcweb, we can move all these check to user-manager. But Needed a new dbus property /method to check if secretKey required.",
      "parentUuid": "413f568b_aa17c716",
      "range": {
        "startLine": 102,
        "startChar": 0,
        "endLine": 113,
        "endChar": 9
      },
      "revId": "6c5b458d8cfbb17a7f4bec75be1663ef42b5e206",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "382ff6ba_205ad064",
        "filename": "include/google_authenticator.hpp",
        "patchSetId": 9
      },
      "lineNbr": 113,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-10-03T03:00:28Z",
      "side": 1,
      "message": "Clsoing this one, lets discuss in the thread above.",
      "parentUuid": "e9b2a5f0_0884a7aa",
      "range": {
        "startLine": 102,
        "startChar": 0,
        "endLine": 113,
        "endChar": 9
      },
      "revId": "6c5b458d8cfbb17a7f4bec75be1663ef42b5e206",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}