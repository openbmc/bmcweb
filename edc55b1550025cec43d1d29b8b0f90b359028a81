{
  "comments": [
    {
      "key": {
        "uuid": "72fa04a5_0b674634",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 40,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2021-02-08T16:19:05Z",
      "side": 1,
      "message": "is it single IP or multiple?",
      "range": {
        "startLine": 40,
        "startChar": 6,
        "endLine": 40,
        "endChar": 17
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88382481_2620f448",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 40,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-02-09T09:42:26Z",
      "side": 1,
      "message": "The resolved response is a(iiay)st\nThe resolvedIp will contain the array of iiay. \nThere can be multiple ip addresses in the response. Thus there is a vector of this struct",
      "parentUuid": "72fa04a5_0b674634",
      "range": {
        "startLine": 40,
        "startChar": 6,
        "endLine": 40,
        "endChar": 17
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa186e59_09709d57",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 86,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2021-02-08T16:19:05Z",
      "side": 1,
      "message": "You could have used resolvedIP defined in line no 40.",
      "range": {
        "startLine": 86,
        "startChar": 25,
        "endLine": 86,
        "endChar": 54
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "345d388f_0e3ab045",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 86,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-02-18T11:39:04Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "aa186e59_09709d57",
      "range": {
        "startLine": 86,
        "startChar": 25,
        "endLine": 86,
        "endChar": 54
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc8d0ebd_e0fa6f3a",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 111,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2021-02-08T16:19:05Z",
      "side": 1,
      "message": "I didn\u0027t get this logic, How the ipaddress at line no 103 looks like?\nCan you add some example?",
      "range": {
        "startLine": 103,
        "startChar": 15,
        "endLine": 111,
        "endChar": 21
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "150b9374_1143d548",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 111,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-02-09T09:42:26Z",
      "side": 1,
      "message": "The dbus response will be something like below\n\n   array [\n      struct {\n         int32 2\n         int32 2\n         array of bytes [\n            \u003cbyte1\u003e \u003cbyte2\u003e \u003cbyte3\u003e \u003cbyte4\u003e\n         ]\n      }\n   ]\n   string \"\u003chostname\u003e\"\n   uint64 1\n\nI will need to parse the array of bytes and add the \u0027dots\u0027 to form the IP address string",
      "parentUuid": "dc8d0ebd_e0fa6f3a",
      "range": {
        "startLine": 103,
        "startChar": 15,
        "endLine": 111,
        "endChar": 21
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7414e562_a18ae3cb",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 115,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2021-02-08T16:19:05Z",
      "side": 1,
      "message": "std::from_chars??",
      "range": {
        "startLine": 115,
        "startChar": 44,
        "endLine": 115,
        "endChar": 54
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2dca88f_a6104e0f",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 115,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-02-18T11:39:04Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7414e562_a18ae3cb",
      "range": {
        "startLine": 115,
        "startChar": 44,
        "endLine": 115,
        "endChar": 54
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd10907b_eb536298",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 129,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2021-02-10T07:11:34Z",
      "side": 1,
      "message": "Thanks for resolving this asynResolve issue. \n\nCan you load this change as new patch on top of existing one. So that makes easy for review and also keep isolation if some OEM\u0027s don\u0027t want to use this dbus method for resolving. Also makes easy if boost library fixes the original issue with async_resolve().",
      "range": {
        "startLine": 83,
        "startChar": 7,
        "endLine": 129,
        "endChar": 18
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f5b4996_96a007ab",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 129,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-02-15T06:04:47Z",
      "side": 1,
      "message": "@Appu - the comment is on this commit and many discussions have happened in this commit. I believe, we have to address all comments on the same commit. \nEd, please let us know if this can be another commit on top of this?",
      "parentUuid": "dd10907b_eb536298",
      "range": {
        "startLine": 83,
        "startChar": 7,
        "endLine": 129,
        "endChar": 18
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5b46f4c_c8e68a61",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 129,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-16T20:07:56Z",
      "side": 1,
      "message": "\u003e @Appu - the comment is on this commit and many discussions have happened in this commit. I believe, we have to address all comments on the same commit. \n\u003e Ed, please let us know if this can be another commit on top of this?\n\n\"if some OEM\u0027s don\u0027t want to use this dbus method for resolving\"\nThis should be kept as a non-openbmc option flag.  All OpenBMC systems I would expect to use resolved unless there\u0027s a good reason not to.\n\n\u003e Ed, please let us know if this can be another commit on top of this?\n\nI\u0027d like to see the async resolve in a separate patchset prior to adding SSL.  They are orthogonal.",
      "parentUuid": "2f5b4996_96a007ab",
      "range": {
        "startLine": 83,
        "startChar": 7,
        "endLine": 129,
        "endChar": 18
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "952e6aa5_d5101371",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 129,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-02-18T11:39:04Z",
      "side": 1,
      "message": "Done. Moved the async_resolve to new commit https://gerrit.openbmc-project.xyz/c/openbmc/bmcweb/+/40702. I will move this commit on top of 40702\nBut what is the way to get the async_resolve done for those OEMs who do not support the resolved?",
      "parentUuid": "d5b46f4c_c8e68a61",
      "range": {
        "startLine": 83,
        "startChar": 7,
        "endLine": 129,
        "endChar": 18
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ce7ea77_b5a5acae",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 200,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2021-02-08T16:19:05Z",
      "side": 1,
      "message": "If we have got the ssl(asio.ssl) error here, we need to restart the session from the scratch..\n\u003d\u003e Connect\n\u003d\u003e Handhake\n\nRight now it is keep retrying sending the message which is not going to help here.",
      "range": {
        "startLine": 194,
        "startChar": 10,
        "endLine": 200,
        "endChar": 13
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "895d5020_6ff35eab",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 200,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-02-09T09:42:26Z",
      "side": 1,
      "message": "It will not call sendMessage() straight away.\n\nThe state ConnState::retry triggers checkQueueAndRetry(). This performs the retries as per the retry policies set by the subscriber. \nIn checkQueueAndRetry() method:\n 1. Existing tcp connection will be closed\n 2. retryCount in incremented to validate it against the user settings\n 3. The state will be set to ConnState::resolved\n 4. This will trigger the fresh connect \u0026 handshake\n\nSo i believe, current changes do as you have suggested",
      "parentUuid": "4ce7ea77_b5a5acae",
      "range": {
        "startLine": 194,
        "startChar": 10,
        "endLine": 200,
        "endChar": 13
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d740f698_bbc7c6ac",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 200,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2021-02-10T07:11:34Z",
      "side": 1,
      "message": "When there send (or recv) error, retry loop will get triggers and does  gracefulshutdown previous connection -\u003e connect -\u003e handshake and then attempt sendMessage. So lgtm.",
      "parentUuid": "895d5020_6ff35eab",
      "range": {
        "startLine": 194,
        "startChar": 10,
        "endLine": 200,
        "endChar": 13
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1e78b00_eaf1c48f",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 200,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2021-02-16T04:00:06Z",
      "side": 1,
      "message": "No, that is not going to work at all..You need to re instantiate of the ssl stream.I explicitly said that if there is an ssl error:\n\nAfetr an ssl error even if you are creating the new tcp connection and doing a fresh handshake,It will get you an ssl error again and finally retry limit gets over so to fix this, you have to create a new SSL stream object which is not happening on this commit.",
      "parentUuid": "d740f698_bbc7c6ac",
      "range": {
        "startLine": 194,
        "startChar": 10,
        "endLine": 200,
        "endChar": 13
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "807482a2_363373fc",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 200,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-16T20:05:37Z",
      "side": 1,
      "message": "Re Appu,\nIf you get a recv or send error, there\u0027s no need for a graceful shutdown, the connection is already dead, we can just completely close it.\n\n+1 to what Ratan is saying.  The entire connection needs tore down and started over including dns resolution.  We can\u0027t just restart from where we left off.  This probably means that the http client connection needs separated from the http client class, so we can construct a new one.  This would probably need to be done anyway.",
      "parentUuid": "b1e78b00_eaf1c48f",
      "range": {
        "startLine": 194,
        "startChar": 10,
        "endLine": 200,
        "endChar": 13
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1abbe0a4_0d7cda9e",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 200,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-02-18T11:39:04Z",
      "side": 1,
      "message": "Agree. Working on the same",
      "parentUuid": "807482a2_363373fc",
      "range": {
        "startLine": 194,
        "startChar": 10,
        "endLine": 200,
        "endChar": 13
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a64ed3bc_088ba73b",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 202,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2021-02-08T16:19:05Z",
      "side": 1,
      "message": "There are two issues:\n\n1/ You have got two events at the same time so EventManager calls the send Message twice\n\nwhich internally calls the handle connection state twice..\n\nNow say during handling of first event you do  async_write and now you get the control back and handle connection state would be called again and this time it again tries to send the same event which would cause the same event to be sent twice.\n\nAs it always picks the message from top and you haven\u0027t popped up the message from the queue during send.\n\n\n2/ If you have sent the event successfully but haven\u0027t received the HTTP response then how you are going to handle this case.",
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8ac9121_13fbe6b5",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 202,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-02-09T09:42:26Z",
      "side": 1,
      "message": "The message was popped out of the queue once we receive the response from the subscriber. This was done to enable the retry mechanism, in case if the message was sent successfully - but response is not received.\n\nI agree with you that the BMC should not worry about receiving the response from the subscriber. It should only see if the send is successful. \n\nI think we can pop the message out of the queue when the sendMessage() is complete. If the recvMessage() returns any error, we should re-initialize the connection according to the relevant recvMessage error types. There will be no re-sending of the message for which the recvMessage() failed.\n\n@Ed, @Gunnar - Please share your views here.",
      "parentUuid": "a64ed3bc_088ba73b",
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec270f41_faed7f14",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 202,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2021-02-10T07:11:34Z",
      "side": 1,
      "message": "My initial patch has protect against two request comes at same time. If one of the operation is in progress(connect/send/recv), corresponding state machine is updated to inProgress and add new message to queue for getting it turn. But this latest code has some issue with state machine as Ratan pointed out. I did observed the issue and planning to fix work on it this week.",
      "parentUuid": "d8ac9121_13fbe6b5",
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcd02bd7_2f176f8d",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 202,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-02-15T06:04:47Z",
      "side": 1,
      "message": "Thanks Appu, The later patch sets were pushed to address the comments around this area. \nThe issues mentioned need to be addressed - since we have seen them in our test cycles. We have the changes ready to address these issues, and i will push them here. Please have a look at them and share your comments.",
      "parentUuid": "ec270f41_faed7f14",
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94950979_9c80205d",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 202,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-16T20:05:37Z",
      "side": 1,
      "message": "I wonder if we need a structure with a set of queues per host so we can rely on keepalive and just feed information.\n\nThinking out loud a bit.",
      "parentUuid": "bcd02bd7_2f176f8d",
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2eb5e736_e9b7358a",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 228,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2021-02-08T16:19:05Z",
      "side": 1,
      "message": "You need to handle the specific error: If it is ssl error then you can not use the same ssl stream, you need to create a new stream..\n\nDo you need to create new state like \"init\" which does creating of new ssl stream if there is ssl error? and set the state to \"Initialized\" so that it will go and do the resolve business..",
      "range": {
        "startLine": 228,
        "startChar": 1,
        "endLine": 228,
        "endChar": 47
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10ccd060_c77ec4a7",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 228,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-02-09T09:42:26Z",
      "side": 1,
      "message": "The state ConnState::retry does closes the existing socket and tries creating a fresh one",
      "parentUuid": "2eb5e736_e9b7358a",
      "range": {
        "startLine": 228,
        "startChar": 1,
        "endLine": 228,
        "endChar": 47
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7db978bd_806a5084",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 228,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2021-02-10T07:11:34Z",
      "side": 1,
      "message": "Agree with Sunitha.",
      "parentUuid": "10ccd060_c77ec4a7",
      "range": {
        "startLine": 228,
        "startChar": 1,
        "endLine": 228,
        "endChar": 47
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a69669ba_4b0766af",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 228,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2021-02-16T04:00:06Z",
      "side": 1,
      "message": "\u003e The state ConnState::retry does closes the existing socket and tries creating a fresh one\n\nYou need to think for the SSL connection, Not only the TCP connection...\n\n\u003d\u003e If you get an ssl error after send/Recv then creating a new connection and performing handshke is not sufficient, You need to create a new ssl stream object.\n\nGuys, please test this scenario and then let me know is it working?",
      "parentUuid": "7db978bd_806a5084",
      "range": {
        "startLine": 228,
        "startChar": 1,
        "endLine": 228,
        "endChar": 47
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a8ffc64_7e097c4b",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 228,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2021-02-16T04:14:10Z",
      "side": 1,
      "message": "Reference Link:\nhttps://stackoverflow.com/questions/49122521/cant-implement-boostasiosslstreamboostasioiptcpsocket-reconnect",
      "parentUuid": "a69669ba_4b0766af",
      "range": {
        "startLine": 228,
        "startChar": 1,
        "endLine": 228,
        "endChar": 47
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "338ad1c7_eb52530f",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 228,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-02-18T11:39:04Z",
      "side": 1,
      "message": "Agree. Working on the same",
      "parentUuid": "4a8ffc64_7e097c4b",
      "range": {
        "startLine": 228,
        "startChar": 1,
        "endLine": 228,
        "endChar": 47
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "743fc394_65f33e24",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 244,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2021-02-08T16:19:05Z",
      "side": 1,
      "message": "It\u0027s good you added this check as it may crash the bmcweb if request queue is empty.",
      "range": {
        "startLine": 243,
        "startChar": 0,
        "endLine": 244,
        "endChar": 13
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34172d1f_e35f6fbc",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 244,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-02-09T09:42:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "743fc394_65f33e24",
      "range": {
        "startLine": 243,
        "startChar": 0,
        "endLine": 244,
        "endChar": 13
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b214964a_5e7c4e21",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 324,
      "author": {
        "id": 1000022
      },
      "writtenOn": "2021-02-08T16:19:05Z",
      "side": 1,
      "message": "why to call the conn.close for both the cases? it is needed for the unsecure case but for secure case can we call sslConn.next_layer.close()?",
      "range": {
        "startLine": 324,
        "startChar": 8,
        "endLine": 324,
        "endChar": 21
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "656c001e_31005e7d",
        "filename": "http/http_client.hpp",
        "patchSetId": 20
      },
      "lineNbr": 324,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2021-02-10T07:11:34Z",
      "side": 1,
      "message": "Agree with Ratan. This seems to be reverted from old patch. Need to be corrected.",
      "parentUuid": "b214964a_5e7c4e21",
      "range": {
        "startLine": 324,
        "startChar": 8,
        "endLine": 324,
        "endChar": 21
      },
      "revId": "edc55b1550025cec43d1d29b8b0f90b359028a81",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}