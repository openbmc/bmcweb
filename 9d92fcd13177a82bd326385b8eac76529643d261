{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ea96ab72_604299b5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-01-13T17:44:22Z",
      "side": 1,
      "message": "If you don\u0027t want to fix the unit tests, let me know.",
      "revId": "9d92fcd13177a82bd326385b8eac76529643d261",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "095d4505_14739808",
        "filename": "test/redfish-core/include/dbus_log_watcher_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-01-13T17:43:29Z",
      "side": 1,
      "message": "We can do a little better than this for testing the timestamp worked correctly.",
      "revId": "9d92fcd13177a82bd326385b8eac76529643d261",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77a38930_e9fea517",
        "filename": "test/redfish-core/include/dbus_log_watcher_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-01-13T17:58:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "095d4505_14739808",
      "revId": "9d92fcd13177a82bd326385b8eac76529643d261",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "82048c3a_42cd1661",
        "filename": "test/redfish-core/include/dbus_log_watcher_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-01-13T17:43:29Z",
      "side": 1,
      "message": "I would expect at least one assert per key in propMapStub, to make sure it got translated like we expect.",
      "revId": "9d92fcd13177a82bd326385b8eac76529643d261",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd7217c1_fcb21288",
        "filename": "test/redfish-core/include/dbus_log_watcher_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-01-13T17:58:42Z",
      "side": 1,
      "message": "```struct EventLogObjectsType```\n\nonly has 4 properties.",
      "parentUuid": "82048c3a_42cd1661",
      "revId": "9d92fcd13177a82bd326385b8eac76529643d261",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86746312_0afde221",
        "filename": "test/redfish-core/include/dbus_log_watcher_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-01-13T18:06:37Z",
      "side": 1,
      "message": "Then why did we add a bunch of properties in the dbus call?  I guess I\u0027m not really worried about it.",
      "parentUuid": "fd7217c1_fcb21288",
      "revId": "9d92fcd13177a82bd326385b8eac76529643d261",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f72ca13e_61f3ca07",
        "filename": "test/redfish-core/include/dbus_log_watcher_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-01-13T17:43:29Z",
      "side": 1,
      "message": "Odd that we require resolved ( thought it was optional), but I guess this is the behavior now?\n\nAll good.",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 25
      },
      "revId": "9d92fcd13177a82bd326385b8eac76529643d261",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8575726_f7e6bdfc",
        "filename": "test/redfish-core/include/dbus_log_watcher_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-01-13T17:58:42Z",
      "side": 1,
      "message": "I\u0027m not sure the PDI supports optional dbus properties.\n\nAnd \u0027Resolved\u0027 is not documented as being optional in the interface yaml.",
      "parentUuid": "f72ca13e_61f3ca07",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 25
      },
      "revId": "9d92fcd13177a82bd326385b8eac76529643d261",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4af2d02_486698b7",
        "filename": "test/redfish-core/include/dbus_log_watcher_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-01-13T18:06:37Z",
      "side": 1,
      "message": "Correct, and this is one of the reasons that bmcweb has trouble using PDI for Redfish.  If you\u0027re interested I have a whole rant on the mailing list from years ago on this topic.",
      "parentUuid": "e8575726_f7e6bdfc",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 25
      },
      "revId": "9d92fcd13177a82bd326385b8eac76529643d261",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcda456e_f06ff3a4",
        "filename": "test/redfish-core/include/dbus_log_watcher_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-01-13T18:28:19Z",
      "side": 1,
      "message": "I would assume that not having optional properties makes it somewhat easier to generate the code.\n\nDid you ever try to add optional properties to the PDI, or know of someone that tried it? \n\nOptionality can also be represented by having another dbus interface which may or may not be present on the object path.\n\nWhich is a simpler design.",
      "parentUuid": "f4af2d02_486698b7",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 25
      },
      "revId": "9d92fcd13177a82bd326385b8eac76529643d261",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1e91f1f_7ec380fb",
        "filename": "test/redfish-core/include/dbus_log_watcher_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-01-13T18:41:27Z",
      "side": 1,
      "message": "\u003e I would assume that not having optional properties makes it somewhat easier to generate the code.\n\u003e \n\u003e Did you ever try to add optional properties to the PDI, or know of someone that tried it? \n\n(this was a long time ago, but as I remember) Brad was against it at the time when he maintained it.\n\n\u003e \n\u003e Optionality can also be represented by having another dbus interface which may or may not be present on the object path.\n\u003e \n\u003e Which is a simpler design.\n\n\"by having another dbus interface\" My understanding the last time I talked to him was that Patrick didn\u0027t want to support this because it would proliferate interfaces, but you\u0027re right, this is generally how DBus interfaces like systemd are maintained, they keep every optional value on a different interface, which would be one way to solve this problem.\n\nFWIW, this ecosystem could certainly be better;  The majority of my desires revolve around me as the maintainer not wanting to have to verify that every daemon has implemented a new interface just to merge a new feature in bmcweb.  Today, we can make optional properties, and if the new interface is merged or not, I (as the maintainer) don\u0027t really have to care about how much of the ecosystem is enabled with that new interface.  The old code works the way the old code worked, and new code can call the new path and populate redfish appropriately.",
      "parentUuid": "bcda456e_f06ff3a4",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 55,
        "endChar": 25
      },
      "revId": "9d92fcd13177a82bd326385b8eac76529643d261",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}