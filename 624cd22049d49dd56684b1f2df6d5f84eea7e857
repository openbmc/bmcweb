{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d2387a34_0c07e9db",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-11-04T19:26:19Z",
      "side": 1,
      "message": "https://github.com/openbmc/phosphor-dbus-interfaces/blob/388b58f9a878f45b8ec243152cac5eb44ec90ced/yaml/xyz/openbmc_project/Inventory/Item/Dimm/MemoryLocation.interface.yaml#L9",
      "revId": "624cd22049d49dd56684b1f2df6d5f84eea7e857",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a114e8b9_8c7d967a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1001210
      },
      "writtenOn": "2022-11-07T03:59:35Z",
      "side": 1,
      "message": "Do I need to add a link to my header?",
      "parentUuid": "d2387a34_0c07e9db",
      "revId": "624cd22049d49dd56684b1f2df6d5f84eea7e857",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c926b37b_aade3a17",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-11-16T05:38:29Z",
      "side": 1,
      "message": "Nah, it is good.",
      "parentUuid": "a114e8b9_8c7d967a",
      "revId": "624cd22049d49dd56684b1f2df6d5f84eea7e857",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "745f3e5b_e408cd6e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-16T20:40:58Z",
      "side": 1,
      "message": "Adding it to commit message is still good to have IMO since it makes it easier to find the source.",
      "parentUuid": "c926b37b_aade3a17",
      "revId": "624cd22049d49dd56684b1f2df6d5f84eea7e857",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68172ea0_c913727e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-11-04T19:26:19Z",
      "side": 1,
      "message": "0\n-: UC1 Line exceeds max length (74\u003e72).\n    It\u0027s possible you intended to use one of the following exceptions:\n    1. Put logs or shell script in a quoted section with triple quotes (\u0027\u0027\u0027) before and after the section\n    2. Put a long link at the bottom in a footnote.  example: [1] https://my_long_link.com\n    Line that was too long:\n: \"Channel, Slot properties of the MemoryLocation interface are of type byte.\"\nTraceback (most recent call last):\n  File \"/data0/jenkins/workspace/ci-repository/openbmc/unit-test.py\", line 1211, in \u003cmodule\u003e\n    check_call_cmd(f, CODE_SCAN_DIR)\n  File \"/data0/jenkins/workspace/ci-repository/openbmc/unit-test.py\", line 235, in check_call_cmd\n    check_call(cmd)\n  File \"/usr/lib/python3.10/subprocess.py\", line 369, in check_call\n    raise CalledProcessError(retcode, cmd)\nsubprocess.CalledProcessError: Command \u0027(\u0027/data0/jenkins/workspace/ci-repository/openbmc/format-code.sh\u0027, \u0027/data0/jenkins/workspace/ci-repository/openbmc/bmcweb\u0027)\u0027 returned non-zero exit status 1.\nTraceback (most recent call last):\n  File \"/data0/jenkins/workspace/ci-repository/openbmc/dbus-unit-test.py\", line 91, in \u003cmodule\u003e\n    check_call(UNIT_TEST.split(\u0027,\u0027), env\u003dos.environ)\n  File \"/usr/lib/python3.10/subprocess.py\", line 369, in check_call\n    raise CalledProcessError(retcode, cmd) \n\nis the CI failure",
      "revId": "624cd22049d49dd56684b1f2df6d5f84eea7e857",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce73a7fb_aa595398",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1001210
      },
      "writtenOn": "2022-11-07T03:59:35Z",
      "side": 1,
      "message": "I moved `byte`. Is that okay?",
      "parentUuid": "68172ea0_c913727e",
      "revId": "624cd22049d49dd56684b1f2df6d5f84eea7e857",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95408883_d95452b5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-11-04T19:26:19Z",
      "side": 1,
      "message": "Redfish validator passes?",
      "revId": "624cd22049d49dd56684b1f2df6d5f84eea7e857",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc06621a_17db046c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1001210
      },
      "writtenOn": "2022-11-07T03:59:35Z",
      "side": 1,
      "message": "I don\u0027t know how to run this validation yet. Manually it looks fine, because in Memory.json for these properties \"type\": [\"integer\", \"null\"]",
      "parentUuid": "95408883_d95452b5",
      "revId": "624cd22049d49dd56684b1f2df6d5f84eea7e857",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d1156ef_b289f025",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-16T20:40:05Z",
      "side": 1,
      "message": "Given this is just type change, I don\u0027t believe Redfish validator is required. It\u0027s unlikely to break other resources. The owner already tested this code path.",
      "parentUuid": "fc06621a_17db046c",
      "revId": "624cd22049d49dd56684b1f2df6d5f84eea7e857",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dea6a5cd_c92d8132",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-16T20:43:49Z",
      "side": 1,
      "message": "Type changes are EXACTLY the kind of thing that we need service validator run on.  Had the person that wrote this Memory code originally run service validator on it, it would\u0027ve found this bug, and this patchset would never have been required.",
      "parentUuid": "8d1156ef_b289f025",
      "revId": "624cd22049d49dd56684b1f2df6d5f84eea7e857",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38311cea_7a6854cb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-16T20:49:07Z",
      "side": 1,
      "message": "I don\u0027t understand. If the type is wrong, |MemoryLocation| is just omitted. Does Redfish Validator throw errors?",
      "parentUuid": "dea6a5cd_c92d8132",
      "revId": "624cd22049d49dd56684b1f2df6d5f84eea7e857",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d63de27_e087086e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2022-11-17T02:45:04Z",
      "side": 1,
      "message": "\u003e I don\u0027t understand. If the type is wrong, |MemoryLocation| is just omitted. Does Redfish Validator throw errors?\n\nI agree with Nan, The Redfish validator does not necessary, Because we have not yet implemented the doGet method, so I dont think  using Redfish validator will test any problems.\n\nAlso, Since we just implemented the doPath method, and the previous author should have tested with the following json, so there is no problem.\n\n```\n{“MemoryController”: \"1\"}\n```\n\nSo, @Glukhov Mikhail, could you add test messge for doPath method in tested?\n\nlike:\n\ninput a bad json:\n```\ncurl -k -H \"X-Auth-Token: $token\" -X PATCH -d \u0027{ \"MemoryController\": \"1\"}\u0027 https://${bmc}/redfish/v1/xxx\n```\n\nwithout this patch: it works fine.\nwith this patch: Failed to parse json.\n\ninput a good json:\n```\ncurl -k -H \"X-Auth-Token: $token\" -X PATCH -d \u0027{ \"MemoryController\": 1}\u0027 https://${bmc}/redfish/v1/xxx\n```\nwith this patch: it works fine.\n\n@Ed @Gunnar @Nan @Krzysztof\nWhat do you think?",
      "parentUuid": "38311cea_7a6854cb",
      "revId": "624cd22049d49dd56684b1f2df6d5f84eea7e857",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43865d8d_9a0a0954",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-17T17:16:32Z",
      "side": 1,
      "message": "\u003e If the type is wrong, |MemoryLocation| is just omitted\n\nThat\u0027s not true.  Take a look at lines 558-577.  These 4 types are loaded DIRECTLY into the Redfish output., and as-written are changing the type we put in the json output.  So some things that this patchset needs to answer are:\n\n1. How did we get this wrong in the first place (considering that everyone needs to test, and a test for this should\u0027ve failed).  Have the original authors of this been CCed?\n2. What backends do we have that are using the \"wrong\" API and need fixed.\n3. What does redfish-service-validator say about this.",
      "parentUuid": "1d63de27_e087086e",
      "revId": "624cd22049d49dd56684b1f2df6d5f84eea7e857",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8341ea68_cd7dc948",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-17T18:39:58Z",
      "side": 1,
      "message": "I still don\u0027t understand, wouldn\u0027t |channel| be nullptr if the type is wrong?",
      "parentUuid": "43865d8d_9a0a0954",
      "revId": "624cd22049d49dd56684b1f2df6d5f84eea7e857",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "307b31da_08c18a68",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-17T18:42:22Z",
      "side": 1,
      "message": "If the DBus type is wrong, yes, it would be nullptr.  If the Redfish/JSON type is wrong, there is nothing to stop it going out on the wire.  Also, FWIW, since nobody has tested this code at all, there\u0027s no guarantees that the type ISN\u0027T nullptr, and has an error there.",
      "parentUuid": "8341ea68_cd7dc948",
      "revId": "624cd22049d49dd56684b1f2df6d5f84eea7e857",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8070cad9_87524a3b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-17T18:56:41Z",
      "side": 1,
      "message": "I now get your point, you are worried about integers are not correct.\n\n```\nMemoryLocation {\tobject\t\tMemory connection information to sockets and memory controllers.\n      Channel\tinteger\tread-only\n(null)\tThe channel number to which the memory device is connected.\n      MemoryController\tinteger\tread-only\n(null)\tThe memory controller number to which the memory device is connected.\n      Slot\tinteger\tread-only\n(null)\tThe slot number to which the memory device is connected.\n      Socket\tinteger\tread-only\n(null)\tThe socket number to which the memory device is connected.\n}```\n\n\n\u003e 1. How did we get this wrong in the first place (considering that everyone needs to test, and a test for this should\u0027ve failed).  Have the original authors of this been CCed?\n\nThis won\u0027t be tested by Redfish Validator in the first place, unless the author inspects the payload of Memory, or the backend breaks PDI and implement attributes as strings. Do you agree with this? The whole |MemoryLocation| is just omitted if backends follow PDI and BMCWeb uses wrong types.\n\n\u003e 2. What backends do we have that are using the \"wrong\" API and need fixed.\n\nDon\u0027t understand this. The PDI said these are integers.  I didn\u0027t find any backend providing this in OpenBMC. The author of this commit used a fake object to hit these codes for testing. \n\nYou might have been thinking about this: there is a backend saying these attributes are strings, bmcweb reads them as strings, and publish them into Redfish as strings. We are wrong all the time.\n\nI don\u0027t believe this is true. I believe these types are just wrong in bmcweb.\n\n\u003e What does redfish-service-validator say about this.\n\nThe only way without backends in OpenBMC is to create mock objects, as the author has been done. Do you suggest they run validator on these mock objects?\n\nDo you have an idea if I missed something and there does be a backend?",
      "parentUuid": "307b31da_08c18a68",
      "revId": "624cd22049d49dd56684b1f2df6d5f84eea7e857",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05536afe_9b5154f3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-17T19:25:34Z",
      "side": 1,
      "message": "Yep, I\u0027m worried the schema wasn\u0027t followed, ESPECIALLY given that the code that already made it onto master apparently ignored the schema.  I want to get an understanding of how that made it on so it doesn\u0027t happen again.\n\n\u003e This won\u0027t be tested by Redfish Validator in the first place, unless the author inspects the payload \n\nRedfish service validator does inspect the payload, and it will be tested if the author has an example of this on their system.  If they don\u0027t, it\u0027s not clear why they would need this change.\n\n\u003e I didn\u0027t find any backend providing this in OpenBMC. \n\nWhat backend was used when this was submitted?  Someone tested this at some level.\n\n\u003e We are wrong all the time.\n\u003e I believe these types are just wrong in bmcweb.\n\nAgreed, and I\u0027d like to get an understanding of why that happened so it doesn\u0027t happen again.  At the very least it happened because folks didn\u0027t test their changes, or there\u0027s a bug in our testing methodology.  I\u0027d like to have an understanding of which of those it is.\n\n\u003e Do you suggest they run validator on these mock objects?\n\nNo, I suggest they put in review their code changes made to the backend.  Mocking objects is not an appropriate test.  That only tests that the code matches your assumptions, which we can clearly see work in this case.  There are lots of times where the backend has a disconnect with the front end, and that\u0027s what the point of this testing is.\n\nIf there\u0027s no ability to publish the backend, I\u0027m happy to have that discussion, but that needs to be a request made by the author.",
      "parentUuid": "8070cad9_87524a3b",
      "revId": "624cd22049d49dd56684b1f2df6d5f84eea7e857",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb0f2839_dabc08b8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-17T19:28:57Z",
      "side": 1,
      "message": "Do you suggest the owner of this commit takes action items, or the reviewers\n\nIIUC about your comments, you expect the author to take actions.",
      "parentUuid": "05536afe_9b5154f3",
      "revId": "624cd22049d49dd56684b1f2df6d5f84eea7e857",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f919086b_2eeacd01",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-17T19:40:59Z",
      "side": 1,
      "message": "\u003e Do you suggest the owner of this commit takes action items, or the reviewers\n\u003e \n\u003e IIUC about your comments, you expect the author to take actions.\n\nThe owner is what we document in the developing guide.  If there\u0027s parts that make that impossible for the owner to go, generally reviewers will step up to help, or us maintainers will make a judgement call but we can\u0027t be checking in completely un-run and un-tested code.  We\u0027ve done that in the past, and it lead to mass instability.",
      "parentUuid": "fb0f2839_dabc08b8",
      "revId": "624cd22049d49dd56684b1f2df6d5f84eea7e857",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e75d1616_f3d4d881",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1001210
      },
      "writtenOn": "2022-11-18T08:38:12Z",
      "side": 1,
      "message": "So my steps:\n1)\nbefore bmcweb patch. \n\n1.1) Run my mock dbus with string property\n```\norg.freedesktop.DBus.Introspectable                    interface -         -                                        -\n.Introspect                                            method    -         s                                        -\norg.freedesktop.DBus.Peer                              interface -         -                                        -\n.GetMachineId                                          method    -         s                                        -\n.Ping                                                  method    -         -                                        -\norg.freedesktop.DBus.Properties                        interface -         -                                        -\n.Get                                                   method    ss        v                                        -\n.GetAll                                                method    s         a{sv}                                    -\n.Set                                                   method    ssv       -                                        -\n.PropertiesChanged                                     signal    sa{sv}as  -                                        -\nxyz.openbmc_project.Inventory.Item.Dimm                interface -         -                                        -\n.FormFactor                                            property  s         \"xyz.openbmc_project.Inventory.Item.D... emits-change\n.MaxMemorySpeedInMhz                                   property  q         3200                                     emits-change\n.MemoryAttributes                                      property  y         2                                        emits-change\n.MemoryDataWidth                                       property  q         64                                       emits-change\n.MemoryDeviceLocator                                   property  s         \"CPUTest_DIMMTest\"                       emits-change\n.MemorySizeInKB                                        property  u         33554432                                 emits-change\n.MemoryTotalWidth                                      property  q         68                                       emits-change\n.MemoryType                                            property  s         \"xyz.openbmc_project.Inventory.Item.D... emits-change\nxyz.openbmc_project.Inventory.Item.Dimm.MemoryLocation interface -         -                                        -\n.Channel                                               property  s         \"3\"                                      emits-change\n.MemoryController                                      property  s         \"2\"                                      emits-change\n.Slot                                                  property  s         \"4\"                                      emits-change\n.Socket                                                property  s         \"1\"                                      emits-change\n```\nbmcweb: https://bmc/redfish/v1/Systems/system/Memory/dimmTest\n```\n{\n\"@odata.id\": \"/redfish/v1/Systems/system/Memory/dimmTest\",\n\"@odata.type\": \"#Memory.v1_11_0.Memory\",\n\"BaseModuleType\": \"RDIMM\",\n\"BusWidthBits\": 68,\n\"CapacityMiB\": 32768,\n\"DataWidthBits\": 64,\n\"Id\": \"dimmTest\",\n\"MemoryDeviceType\": \"DDR4\",\n\"MemoryLocation\": {\n\"Channel\": \"3\",\n\"MemoryController\": \"2\",\n\"Slot\": \"4\",\n\"Socket\": \"1\"\n},\n\"MemoryType\": \"DRAM\",\n\"Name\": \"DIMM Slot\",\n\"RankCount\": 2,\n\"Status\": {\n\"Health\": \"OK\",\n\"HealthRollup\": \"OK\",\n\"State\": \"Enabled\"\n}\n}\n```\n\nRedfishServiceValidator.py:\n```\n*** /redfish/v1/Systems/system/Memory/dimmTest\n\t Type (Memory.v1_11_0.Memory), GET SUCCESS (time: 0:00:00.056878)\nSocket: Expected int, got type class \u0027str\u0027\nMemoryController: Expected int, got type class \u0027str\u0027\nChannel: Expected int, got type class \u0027str\u0027\nSlot: Expected int, got type class \u0027str\u0027\n\t  FAIL...\n\n```\n\n1.2) Run my mock dbus with integer property\n```\nNAME                                                   TYPE      SIGNATURE RESULT/VALUE                             FLAGS\norg.freedesktop.DBus.Introspectable                    interface -         -                                        -\n.Introspect                                            method    -         s                                        -\norg.freedesktop.DBus.Peer                              interface -         -                                        -\n.GetMachineId                                          method    -         s                                        -\n.Ping                                                  method    -         -                                        -\norg.freedesktop.DBus.Properties                        interface -         -                                        -\n.Get                                                   method    ss        v                                        -\n.GetAll                                                method    s         a{sv}                                    -\n.Set                                                   method    ssv       -                                        -\n.PropertiesChanged                                     signal    sa{sv}as  -                                        -\nxyz.openbmc_project.Inventory.Item.Dimm                interface -         -                                        -\n.FormFactor                                            property  s         \"xyz.openbmc_project.Inventory.Item.D... emits-change\n.MaxMemorySpeedInMhz                                   property  q         3200                                     emits-change\n.MemoryAttributes                                      property  y         2                                        emits-change\n.MemoryDataWidth                                       property  q         64                                       emits-change\n.MemoryDeviceLocator                                   property  s         \"CPUTest_DIMMTest\"                       emits-change\n.MemorySizeInKB                                        property  u         33554432                                 emits-change\n.MemoryTotalWidth                                      property  q         68                                       emits-change\n.MemoryType                                            property  s         \"xyz.openbmc_project.Inventory.Item.D... emits-change\nxyz.openbmc_project.Inventory.Item.Dimm.MemoryLocation interface -         -                                        -\n.Channel                                               property  y         3                                        emits-change\n.MemoryController                                      property  y         2                                        emits-change\n.Slot                                                  property  y         4                                        emits-change\n.Socket                                                property  y         1                                        emits-change\n\n```\n\nbmcweb https://bmc/redfish/v1/Systems/system/Memory/dimmTest\n```\n{\n\"@odata.id\": \"/redfish/v1/Systems/system/Memory/dimmTest\",\n\"@odata.type\": \"#Memory.v1_11_0.Memory\",\n\"Id\": \"dimmTest\",\n\"Name\": \"DIMM Slot\",\n\"Status\": {\n\"Health\": \"OK\",\n\"HealthRollup\": \"OK\",\n\"State\": \"Enabled\"\n},\n\"error\": {\n\"@Message.ExtendedInfo\": [\n{\n\"@odata.type\": \"#Message.v1_1_1.Message\",\n\"Message\": \"The request failed due to an internal service error. The service is still operational.\",\n\"MessageArgs\": [],\n\"MessageId\": \"Base.1.13.0.InternalError\",\n\"MessageSeverity\": \"Critical\",\n\"Resolution\": \"Resubmit the request. If the problem persists, consider resetting the service.\"\n}\n],\n\"code\": \"Base.1.13.0.InternalError\",\n\"message\": \"The request failed due to an internal service error. The service is still operational.\"\n}\n}\n```\n\n2) After bmcweb patch\nRun my mock dbus with integer property: Similarly 1.2\n\nbmcweb https://bmc/redfish/v1/Systems/system/Memory/dimmTest\n\n{\n\"@odata.id\": \"/redfish/v1/Systems/system/Memory/dimmTest\",\n\"@odata.type\": \"#Memory.v1_11_0.Memory\",\n\"BaseModuleType\": \"RDIMM\",\n\"BusWidthBits\": 68,\n\"CapacityMiB\": 32768,\n\"DataWidthBits\": 64,\n\"Id\": \"dimmTest\",\n\"MemoryDeviceType\": \"DDR4\",\n\"MemoryLocation\": {\n\"Channel\": 3,\n\"MemoryController\": 2,\n\"Slot\": 4,\n\"Socket\": 1\n},\n\"MemoryType\": \"DRAM\",\n\"Name\": \"DIMM Slot\",\n\"RankCount\": 2,\n\"Status\": {\n\"Health\": \"OK\",\n\"HealthRollup\": \"OK\",\n\"State\": \"Enabled\"\n}\n}\n\nRedfishServiceValidator.py:\n```\n*** /redfish/v1/Systems/system/Memory/dimmTest\n\t Type (Memory.v1_11_0.Memory), GET SUCCESS (time: 0:00:00.065648)\n\t PASS\n```",
      "parentUuid": "f919086b_2eeacd01",
      "revId": "624cd22049d49dd56684b1f2df6d5f84eea7e857",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0be1ed15_f869b41c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-18T20:54:55Z",
      "side": 1,
      "message": "Thanks for doing this test.\n\nEd, you think this is still not good enough?",
      "parentUuid": "e75d1616_f3d4d881",
      "revId": "624cd22049d49dd56684b1f2df6d5f84eea7e857",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}