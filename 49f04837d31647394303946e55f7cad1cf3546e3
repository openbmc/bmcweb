{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3932f01f_1ad9e635",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-04-06T18:26:28Z",
      "side": 1,
      "message": "From https://gerrit.openbmc.org/c/openbmc/bmcweb/+/57925 \n\n```\nEd Tanous\nWe need to get this feature more fleshed out, and get this turned on by default.\n\nCarson\nOff the top of my head these are the remaining features:\n\n1.    Aggregate all top level resource collections\n2.    Add links to satellite only collections in responses from service root and other appropriate locations\n3.    Generate aggregation prefix from uuid\n4.    Contains/ContainedBy relationship between local and aggregated Chassis resource\n5.    Aggregate more than one satellite\n6.    Add Authentication (login with satellites)\n7.    Support HTTPS connection to satellite.\n\nThere are already various levels of WIP patches for a number of those features. How many are needed to turn it on by default? My guess is the first 3, maybe #5 as well.\n\n Gunnar Mills \nI think 7 as well because otherwise you have to have a bmcweb with insecure options (we don\u0027t recommend insecure options for production) as the Satellite. Without that, it still feels like a non-production / wip option\n```\n\nI still think some of those are needed before this becomes enabled by default",
      "revId": "49f04837d31647394303946e55f7cad1cf3546e3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58e4ac88_81674bef",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-04-06T18:56:15Z",
      "side": 1,
      "message": "Why?  Aggregation is already optional at an entity-manager level;  Why do we need to maintain both avenues of optionality for people?\n\nAll of the above are great features to have, and I would like to see people add them, but I don\u0027t really think we need to gatekeep any longer now that the basics are in, and have been for several months.",
      "parentUuid": "3932f01f_1ad9e635",
      "revId": "49f04837d31647394303946e55f7cad1cf3546e3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6cf6698d_94cdda42",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-04-06T19:01:23Z",
      "side": 1,
      "message": "\u003e I think 7 as well because otherwise you have to have a bmcweb with insecure options (we don\u0027t recommend insecure options for production) as the Satellite. Without that, it still feels like a non-production / wip option\n\nThere are many use cases where the satellite connection is used within the box, where https is not required to provide security.  It should be noted, this is perfectly secure until people add an EM config that\u0027s insecure, which we should use the individual EM configs as the checkpoint, not bmcweb itself.\n\nAlso..... this is only defaults.",
      "parentUuid": "58e4ac88_81674bef",
      "revId": "49f04837d31647394303946e55f7cad1cf3546e3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12ff6854_244eea31",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-04-20T20:42:13Z",
      "side": 1,
      "message": "\u003e There are many use cases where the satellite connection is used within the box, where https is not required to provide security. It should be noted, this is perfectly secure until people add an EM config that\u0027s insecure, which we should use the individual EM configs as the checkpoint, not bmcweb itself.\n\nThat is fair. \n\n\n\u003e Also..... this is only defaults.\n\nTrue and other opinions I hold about OpenBMC, I definitely feel stronger about. I agree this doesn\u0027t matter that much. One day this should be enabled by default and if today is the day, oh well. \n\nI still feel it isn\u0027t ready based on my thinking of to be enabled by default in bmcweb the meson option should be a production-ready, flushed-out feature and this isn\u0027t quite yet there. \n\nThe new powersubsystem/thermalsubsystem  https://github.com/openbmc/bmcweb/blob/master/meson_options.txt#L201 isn\u0027t production-ready, flushed-out (the powersubsystem/thermalsubsystem is missing critical pieces like powersupply and fans). \n\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/59940 is a new option for multi host, I wouldn\u0027t expect it to be enabled by default (or probably just go way in its case) until it supports multiple hosts across all existing endpoints (what I would consider production-ready, flushed-out)\n\nI feel this is still missing some important pieces like\n1.    Aggregate all top level resource collections\n2.    Add links to satellite only collections in responses from service root and other appropriate locations\n3.    Generate aggregation prefix from uuid\n\n\n5.    Aggregate more than one satellite\n\nYou convinced me that we don\u0027t need \"7. Support HTTPS connection to satellite.\" but I still feel getting some of the others in is needed for what I consider a production-ready, flushed-out feature. Maybe I\u0027m too strict on what should be enabled by default?\n\nCommits like https://gerrit.openbmc.org/c/openbmc/bmcweb/+/60905/ and above help get us there.\n\nAnd yeah, this is \"Also..... this is only defaults.\" so i\u0027m not upset if this goes today but would prefer another month and get a few more of those resolved like was discussed on https://gerrit.openbmc.org/c/openbmc/bmcweb/+/57925",
      "parentUuid": "6cf6698d_94cdda42",
      "revId": "49f04837d31647394303946e55f7cad1cf3546e3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "685f1678_bda35153",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-04-25T16:20:17Z",
      "side": 1,
      "message": "\u003e I still feel it isn\u0027t ready based on my thinking of to be enabled by default in bmcweb the meson option should be a production-ready, flushed-out feature and this isn\u0027t quite yet there.\n\nBut it\u0027s still controlled by entity-manager configurations.  If you don\u0027t feel like its production ready, just don\u0027t enable it on your system?  Having two options that do the same thing makes features harder to maintain.\n\n\u003e The new powersubsystem/thermalsubsystem\n\nMy opinion differs here a little.  the new powersubsystem/thermalsubsystem isn\u0027t enabled by default because it arguably needs to be enabled while the power/thermal schemas are disabled, and so enabling it has user-facing impact of duplicating information in the Redfish tree.  It has nothing to do with whether it\u0027s fleshed out as a feature, and everything to do with it conflicting with other features.  If it didn\u0027t conflict, I would enable it by default as well.\n\n\u003e I feel this is still missing some important pieces like\n\nMy previous point still stands, if this is missing features, don\u0027t enable it in the systems EM config.\n\n\u003e  but would prefer another month\n\nWith all the above said, a month seems totally reasonable in terms of a timeframe.  One month it is.",
      "parentUuid": "12ff6854_244eea31",
      "revId": "49f04837d31647394303946e55f7cad1cf3546e3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcdf69a6_78834582",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-04-28T20:26:09Z",
      "side": 1,
      "message": "\u003e  If you don\u0027t feel like its production ready, just don\u0027t enable it on your system?\n\nThis is the default that most people will use (I am getting this data by going to https://github.com/openbmc/openbmc?search\u003d1 and looking for bmcweb_bbappend, just not that many options that are changed from the default)\n\n\u003e Having two options that do the same thing makes features harder to maintain\n\nSure, solid point. \n\n\u003e  the new powersubsystem/thermalsubsystem isn\u0027t enabled by default because it arguably needs to be enabled while the power/thermal schemas are disabled, and so enabling it has user-facing impact of duplicating information in the Redfish tree. It has nothing to do with whether it\u0027s fleshed out as a feature, and everything to do with it conflicting with other features. If it didn\u0027t conflict, I would enable it by default as well.\n\nBut that is how Redfish advised moving to the new powersubsystem/thermalsubsystem, they advised having both for some period. I still think the new powersubsystem/thermalsubsystem https://github.com/openbmc/bmcweb/blob/master/meson_options.txt#L201 isn\u0027t production-ready, flushed-out so that is why shouldn\u0027t be enabled by it, not because we need a hard switch.\n\n\u003e With all the above said, a month seems totally reasonable in terms of a timeframe. One month it is.\n\nHaha. I came here to +1 this (and did). We are arguing about whether something should be the default now or in 1 or 2 months with some more development. If you wait 1 month, I am more happy but I am fine with this going today too. Note: I think this was all good discussion, we might in the future need more of a concrete what should be enabled by default ( I think we have slightly different views)",
      "parentUuid": "685f1678_bda35153",
      "revId": "49f04837d31647394303946e55f7cad1cf3546e3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df97da8c_ecd5e0d5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-04-28T23:33:57Z",
      "side": 1,
      "message": "\u003e \u003e  If you don\u0027t feel like its production ready, just don\u0027t enable it on your system?\n\u003e \n\u003e This is the default that most people will use (I am getting this data by going to https://github.com/openbmc/openbmc?search\u003d1 and looking for bmcweb_bbappend, just not that many options that are changed from the default)\n\nJust to make sure we\u0027re on the same page with the fundamentals here (because I fear we\u0027re not, or I might be wrong):\n\nEnabling the aggregation has no functional effect on systems without an EM config\nEnabling aggregation is separate enough in code that it\u0027s unlikely to cause validator problems on systems that don\u0027t have an EM config.\n\n\u003e \n\u003e \u003e Having two options that do the same thing makes features harder to maintain\n\u003e \n\u003e Sure, solid point. \n\u003e \n\u003e \u003e  the new powersubsystem/thermalsubsystem isn\u0027t enabled by default because it arguably needs to be enabled while the power/thermal schemas are disabled, and so enabling it has user-facing impact of duplicating information in the Redfish tree. It has nothing to do with whether it\u0027s fleshed out as a feature, and everything to do with it conflicting with other features. If it didn\u0027t conflict, I would enable it by default as well.\n\u003e \n\u003e But that is how Redfish advised moving to the new powersubsystem/thermalsubsystem, they advised having both for some period. I still think the new powersubsystem/thermalsubsystem https://github.com/openbmc/bmcweb/blob/master/meson_options.txt#L201 isn\u0027t production-ready, flushed-out so that is why shouldn\u0027t be enabled by it, not because we need a hard switch.\n\nThat\u0027s a fair argument.........  I would be ok with enabling thermal subsystem by default;  I think a number of forks have enabled it already.  Let me put that patch together.\n\n\u003e \n\u003e \u003e With all the above said, a month seems totally reasonable in terms of a timeframe. One month it is.\n\u003e \n\u003e Haha. I came here to +1 this (and did). We are arguing about whether something should be the default now or in 1 or 2 months with some more development.\n\u003e If you wait 1 month, I am more happy but I am fine with this going today too. Note: I think this was all good discussion, we might in the future need more of a concrete what should be enabled by default ( I think we have slightly different views)\n\nACK",
      "parentUuid": "fcdf69a6_78834582",
      "revId": "49f04837d31647394303946e55f7cad1cf3546e3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ddc337a3_7841ef96",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-05-11T20:24:34Z",
      "side": 1,
      "message": "\u003e Enabling the aggregation has no functional effect on systems without an EM config\nEnabling aggregation is separate enough in code that it\u0027s unlikely to cause validator problems on systems that don\u0027t have an EM config.\n\nAgreed and ack. But I think \"no functional effect on systems without an EM config\" would be the case for most bmcweb Redfish feature options \n\nFor example, \nEven if you enable /redfish/v1/Managers/bmc/LogServices/Dump, need a backend, otherwise just an empty collection.\nOr if you don\u0027t have a multi-host backend that flag shouldn\u0027t impact you.\nOr if don\u0027t have fans/powersupplies, new-powersubsystem-thermalsubsystem shound\u0027t impact you. I am over simpling a bit, my examples would be a bit more messy than aggregation if enabled without a backend (e.g. Posts to create a dump without a dump backend probably return internal error..?).",
      "parentUuid": "df97da8c_ecd5e0d5",
      "revId": "49f04837d31647394303946e55f7cad1cf3546e3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92f35bb1_b29a7713",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-05-19T18:20:04Z",
      "side": 1,
      "message": "\u003e \u003e Enabling the aggregation has no functional effect on systems without an EM config\n\u003e Enabling aggregation is separate enough in code that it\u0027s unlikely to cause validator problems on systems that don\u0027t have an EM config.\n\u003e \n\u003e Agreed and ack. But I think \"no functional effect on systems without an EM config\" would be the case for most bmcweb Redfish feature options \n\u003e \n\u003e For example, \n\u003e Even if you enable /redfish/v1/Managers/bmc/LogServices/Dump, need a backend, otherwise just an empty collection.\n\nhttps://github.com/openbmc/bmcweb/blob/81c4e3305281b2cfece8822f7c7114200ce4e12c/redfish-core/lib/log_services.hpp#L1107\n\nChanges the behavior, regardless of whether or not the backend is present.  The LogServiceCollection isn\u0027t empty if that option is enabled.  If that code instead were looking to the mapper (like I wish ALL of the log service stuff had done) then I\u0027d agree with you, we couldn\u0027t need the option at all.\n\n\n\u003e Or if you don\u0027t have a multi-host backend that flag shouldn\u0027t impact you.\n\nThe multi-host backend flag EXISTS because folks couldn\u0027t figure out how to build it out without impacting the single-host systems.  FWIW, I still think it could be figured out, but the build option just lets folks get stuff done.\n\n\u003e Or if don\u0027t have fans/powersupplies, new-powersubsystem-thermalsubsystem shound\u0027t impact you.\n\nThermalSubsystem would now exist on systems where it didn\u0027t, because of the code here:\n\nhttps://github.com/openbmc/bmcweb/blob/81c4e3305281b2cfece8822f7c7114200ce4e12c/redfish-core/lib/chassis.hpp#LL433C21-L433C21\n\n\u003e I am over simpling a bit, my examples would be a bit more messy than aggregation if enabled without a backend (e.g. Posts to create a dump without a dump backend probably return internal error..?).",
      "parentUuid": "ddc337a3_7841ef96",
      "revId": "49f04837d31647394303946e55f7cad1cf3546e3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}