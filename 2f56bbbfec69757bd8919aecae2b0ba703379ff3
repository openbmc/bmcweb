{
  "comments": [
    {
      "key": {
        "uuid": "1779f8f3_73b92e90",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 1
      },
      "lineNbr": 564,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2020-07-30T14:38:19Z",
      "side": 1,
      "message": "Why can\u0027t we use the Node class for these?\nI beleive Node has this already \n\n      Node(app, \"/redfish/v1/Managers/bmc/EthernetInterfaces/\")",
      "revId": "2f56bbbfec69757bd8919aecae2b0ba703379ff3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08dbc77d_f00d1e71",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 1
      },
      "lineNbr": 564,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2020-07-30T14:45:41Z",
      "side": 1,
      "message": "All these urls are REST based design. We use the requestRoutes-\u003eBMCWEB_ROUTE to register all these urls. So the Node from the Redfish framework will not be helpful here.",
      "parentUuid": "1779f8f3_73b92e90",
      "revId": "2f56bbbfec69757bd8919aecae2b0ba703379ff3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac035df6_b36dd155",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 1
      },
      "lineNbr": 564,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-05T07:01:57Z",
      "side": 1,
      "message": "Because these aren\u0027t redfish Nodes?\n\nAlso, because I want the Node class to go away in the near future.",
      "parentUuid": "08dbc77d_f00d1e71",
      "revId": "2f56bbbfec69757bd8919aecae2b0ba703379ff3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ba5cc43_b8765c81",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 1
      },
      "lineNbr": 571,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2020-07-30T15:09:58Z",
      "side": 1,
      "message": "Should this be: Validate the path to reject paths that contain a path element of \"..\"?",
      "revId": "2f56bbbfec69757bd8919aecae2b0ba703379ff3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e218ff4_9beb7bdc",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 1
      },
      "lineNbr": 574,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2020-07-30T15:09:58Z",
      "side": 1,
      "message": "Is the idea to match any pathRegex that contains \"..\"?  I think that matches too much: for example, it would reject a filename like \"something..conf\".\nPer https://en.cppreference.com/w/cpp/regex/ecmascript, does \".\" match any character?  Do we need to remove its special meaning like \"\\.\\.\" or \"[.][.]\"?",
      "revId": "2f56bbbfec69757bd8919aecae2b0ba703379ff3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ab37dd3_f08325a2",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 1
      },
      "lineNbr": 574,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2020-08-04T07:34:27Z",
      "side": 1,
      "message": "The intention is to match \"..\" only. The example path is mentioned in the commented block here. This /../.. will traverse the directories backwards - leading to unintended files modifications. \nThe filename with double dots are also not entertained.",
      "parentUuid": "9e218ff4_9beb7bdc",
      "revId": "2f56bbbfec69757bd8919aecae2b0ba703379ff3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cde38728_2fafbe62",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 1
      },
      "lineNbr": 574,
      "author": {
        "id": 1000401
      },
      "writtenOn": "2020-08-05T04:55:44Z",
      "side": 1,
      "message": "Just a thought.\nCan we not have something like:\n`std::regex validFileName(\"^[\\\\w\\\\- ]+(\\\\.?[\\\\w\\\\- ]*)$\")`\nSo that we could eliminate all the above invalid path use cases?",
      "parentUuid": "8ab37dd3_f08325a2",
      "revId": "2f56bbbfec69757bd8919aecae2b0ba703379ff3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34d0853d_d12d46f6",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 1
      },
      "lineNbr": 574,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-05T07:01:57Z",
      "side": 1,
      "message": "Please don\u0027t use regex for this.  It\u0027s inglorious overkill for a simple check that can be done by comparing std::filesystem::path to the std::filesystem::cannonical version of the path.  It would be greatly appreciated if you could turn this into a utils function for others to use.\n\nAlso, the author needs to understand what a \".\" character in a regex is.  I know that it claims to have been tested, but looking at it, I have no idea how it could\u0027ve ever worked.\n\nAlso, the author needs to understand how filesystem injection attacks work, and block against ALL attacks, not just the one that was reported to you.  This is pretty well documented online, please do some reading and try this patch again.\n\nAlong other lines, this API is wrong by design.  It needs to be operating on a whitelist, or a list of fixed routes.  Accepting arbitrary strings from the user, then writing the to the filesystem is one of the larger root causes of injection attacks, as you\u0027ve found here, and something bmcweb was designed to combat against.",
      "parentUuid": "cde38728_2fafbe62",
      "revId": "2f56bbbfec69757bd8919aecae2b0ba703379ff3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92ba75b4_0e92a7e9",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 1
      },
      "lineNbr": 576,
      "author": {
        "id": 1000235
      },
      "writtenOn": "2020-07-30T15:09:58Z",
      "side": 1,
      "message": "Per https://en.cppreference.com/w/cpp/regex/regex_match, regex_match returns true is a match exists.  Is the test condition backward, and should it be: if (std::regex_match(path.c_str(), match, pathRegex))",
      "revId": "2f56bbbfec69757bd8919aecae2b0ba703379ff3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7522ef3_a8918612",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 1
      },
      "lineNbr": 576,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2020-08-04T07:34:27Z",
      "side": 1,
      "message": "I had tested this with debug prints and it works as expected.\n\nThe result of std::regex_match(path.c_str(), match, pathRegex) is 0 when the path contains \"..\" . The result is 1 for the good paths.",
      "parentUuid": "92ba75b4_0e92a7e9",
      "revId": "2f56bbbfec69757bd8919aecae2b0ba703379ff3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fab5814b_ae18e5d6",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 1
      },
      "lineNbr": 576,
      "author": {
        "id": 1000401
      },
      "writtenOn": "2020-08-05T04:55:44Z",
      "side": 1,
      "message": "\u003e I had tested this with debug prints and it works as expected.\n\n+1",
      "parentUuid": "f7522ef3_a8918612",
      "revId": "2f56bbbfec69757bd8919aecae2b0ba703379ff3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90477c96_e945a607",
        "filename": "include/ibm/management_console_rest.hpp",
        "patchSetId": 1
      },
      "lineNbr": 576,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2020-08-05T07:01:57Z",
      "side": 1,
      "message": "Given that \"..\" will match any character, I have no idea how the statement that you tested this with prints could be true.  Can you expand on EXACTLY what testing you did?",
      "parentUuid": "fab5814b_ae18e5d6",
      "revId": "2f56bbbfec69757bd8919aecae2b0ba703379ff3",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}