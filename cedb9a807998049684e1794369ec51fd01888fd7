{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "60442ce1_88864f53",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 15,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-05T17:12:56Z",
      "side": 1,
      "message": "Overall I agree with this statement, but this API, and the major lifting needs to be done in the mapper to avoid sending large DBus payloads, then throwing most of it away.  As a general rule, we should not be pulling more data than we need, then filtering or sorting it to turn it into what we need.  Just add the appropriate mapper APIs to get the data we need directly.\n\nWhile there are places where we do this in inefficient ways, they\u0027re not generic, so there is still some level of fixups that we could do, but this generic one implies that it\u0027s the expected way to do this, and by the openbmc design, this kind of thing needs done in the mapper.",
      "revId": "cedb9a807998049684e1794369ec51fd01888fd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "042cdae4_3f9a4567",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 15,
      "author": {
        "id": 1001369
      },
      "writtenOn": "2023-01-31T17:10:49Z",
      "side": 1,
      "message": "Makes total sense. I think Willy has already proposed a CL to add such mapper APIs, which fits exactly into our requirement.\n\nhttps://gerrit.openbmc.org/c/openbmc/phosphor-objmgr/+/57822\n\nSince it is still under review, I guess my change should wait until it merges.\n\nKeeping this comment open, so I can update the current CL once those mapper are available.",
      "parentUuid": "60442ce1_88864f53",
      "revId": "cedb9a807998049684e1794369ec51fd01888fd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5ded3ef_46fa8287",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1001369
      },
      "writtenOn": "2022-12-15T17:34:30Z",
      "side": 1,
      "message": "Friendly ping for review ðŸ˜Š",
      "revId": "cedb9a807998049684e1794369ec51fd01888fd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efec67fa_c57c334a",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 8
      },
      "lineNbr": 103,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-05T17:12:56Z",
      "side": 1,
      "message": "url_view please.",
      "range": {
        "startLine": 103,
        "startChar": 10,
        "endLine": 103,
        "endChar": 27
      },
      "revId": "cedb9a807998049684e1794369ec51fd01888fd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f12ae56_2888d058",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 8
      },
      "lineNbr": 103,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-05T17:12:56Z",
      "side": 1,
      "message": "error_code\u0026 please.",
      "range": {
        "startLine": 103,
        "startChar": 50,
        "endLine": 103,
        "endChar": 76
      },
      "revId": "cedb9a807998049684e1794369ec51fd01888fd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6606967d_b6a8be1a",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 8
      },
      "lineNbr": 103,
      "author": {
        "id": 1001369
      },
      "writtenOn": "2023-01-31T17:10:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6f12ae56_2888d058",
      "range": {
        "startLine": 103,
        "startChar": 50,
        "endLine": 103,
        "endChar": 76
      },
      "revId": "cedb9a807998049684e1794369ec51fd01888fd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cf76fc4_67b87878",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 8
      },
      "lineNbr": 103,
      "author": {
        "id": 1001369
      },
      "writtenOn": "2023-01-31T17:10:49Z",
      "side": 1,
      "message": "I am seeing bmcweb crash when converting the boost::urls::url_view to boost::urls::url. The conversion is needed to pass it to crow::utility::appendUrlPieces method below in line 146. I also tried extracting the string using collectionPath.buffer() and std::string(collectionPath.buffer()) both and then converting to boost::urls::url , but it still crashes.",
      "parentUuid": "efec67fa_c57c334a",
      "range": {
        "startLine": 103,
        "startChar": 10,
        "endLine": 103,
        "endChar": 27
      },
      "revId": "cedb9a807998049684e1794369ec51fd01888fd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdcfba5e_89dc184b",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 8
      },
      "lineNbr": 124,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-05T17:12:56Z",
      "side": 1,
      "message": "This kind of conversion needs done in the mapper.  If we need new mapper APIs, so be it, but we shouldn\u0027t be filtering at this level.",
      "range": {
        "startLine": 122,
        "startChar": 0,
        "endLine": 124,
        "endChar": 24
      },
      "revId": "cedb9a807998049684e1794369ec51fd01888fd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31038608_bf8ea2b6",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 8
      },
      "lineNbr": 124,
      "author": {
        "id": 1001369
      },
      "writtenOn": "2023-01-31T17:10:49Z",
      "side": 1,
      "message": "Ack.. Replied on previous comment, that a change to add the mappers is under review and the current one will probably need to wait until the mapper change is merged",
      "parentUuid": "fdcfba5e_89dc184b",
      "range": {
        "startLine": 122,
        "startChar": 0,
        "endLine": 124,
        "endChar": 24
      },
      "revId": "cedb9a807998049684e1794369ec51fd01888fd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07530544_7720995a",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 8
      },
      "lineNbr": 148,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-05T17:12:56Z",
      "side": 1,
      "message": "I don\u0027t think std::move does anything here.",
      "range": {
        "startLine": 148,
        "startChar": 30,
        "endLine": 148,
        "endChar": 39
      },
      "revId": "cedb9a807998049684e1794369ec51fd01888fd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24db7314_2c27ea4f",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 8
      },
      "lineNbr": 148,
      "author": {
        "id": 1001369
      },
      "writtenOn": "2023-01-31T17:10:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "07530544_7720995a",
      "range": {
        "startLine": 148,
        "startChar": 30,
        "endLine": 148,
        "endChar": 39
      },
      "revId": "cedb9a807998049684e1794369ec51fd01888fd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7777751_b4c9fdfe",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 8
      },
      "lineNbr": 149,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-05T17:12:56Z",
      "side": 1,
      "message": "emplace_back.",
      "range": {
        "startLine": 149,
        "startChar": 16,
        "endLine": 149,
        "endChar": 25
      },
      "revId": "cedb9a807998049684e1794369ec51fd01888fd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "808168e6_216eca97",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 8
      },
      "lineNbr": 149,
      "author": {
        "id": 1001369
      },
      "writtenOn": "2023-01-31T17:10:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b7777751_b4c9fdfe",
      "range": {
        "startLine": 149,
        "startChar": 16,
        "endLine": 149,
        "endChar": 25
      },
      "revId": "cedb9a807998049684e1794369ec51fd01888fd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc50d3be_6768dcef",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 8
      },
      "lineNbr": 182,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2022-12-19T07:15:33Z",
      "side": 1,
      "message": "Nit: why need mutable?",
      "range": {
        "startLine": 182,
        "startChar": 29,
        "endLine": 182,
        "endChar": 36
      },
      "revId": "cedb9a807998049684e1794369ec51fd01888fd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3119efa_97e7b13f",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 8
      },
      "lineNbr": 182,
      "author": {
        "id": 1001369
      },
      "writtenOn": "2023-01-03T16:12:45Z",
      "side": 1,
      "message": "Variables in the capture list by default are converted to const. If \u0027interfaces\u0027 becomes const, it cannot be passed down as std::span to \u0027getSubTreePaths\u0027. mutable avoids the const conversion.",
      "parentUuid": "cc50d3be_6768dcef",
      "range": {
        "startLine": 182,
        "startChar": 29,
        "endLine": 182,
        "endChar": 36
      },
      "revId": "cedb9a807998049684e1794369ec51fd01888fd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c88c1893_64db26bd",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 8
      },
      "lineNbr": 182,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-01-05T17:12:56Z",
      "side": 1,
      "message": "Why does interfaces need to be non const?",
      "parentUuid": "e3119efa_97e7b13f",
      "range": {
        "startLine": 182,
        "startChar": 29,
        "endLine": 182,
        "endChar": 36
      },
      "revId": "cedb9a807998049684e1794369ec51fd01888fd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "437dcf87_6e0875f0",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 8
      },
      "lineNbr": 183,
      "author": {
        "id": 1001369
      },
      "writtenOn": "2023-01-31T17:10:49Z",
      "side": 1,
      "message": "If a particular system does not have the associations setup, then the collection response would result in a Get error. To avoid that, simply return in case of any error in getProperty call",
      "revId": "cedb9a807998049684e1794369ec51fd01888fd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35ee05df_dcd93f94",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 8
      },
      "lineNbr": 183,
      "author": {
        "id": 1001369
      },
      "writtenOn": "2023-01-31T17:11:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "437dcf87_6e0875f0",
      "revId": "cedb9a807998049684e1794369ec51fd01888fd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5863dc52_b758a447",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 8
      },
      "lineNbr": 198,
      "author": {
        "id": 1001582
      },
      "writtenOn": "2023-01-20T20:47:56Z",
      "side": 1,
      "message": "Does this not require the second parameter to be the `depth`?\n\n```\ngetSubTreePaths(\"/xyz/openbmc_project/inventory\", /**depth\u003d*/0, interfaces...)\n```\n\nhttps://github.com/openbmc/bmcweb/blob/master/include/dbus_utility.hpp#L161",
      "revId": "cedb9a807998049684e1794369ec51fd01888fd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4a0674f_0e83157f",
        "filename": "redfish-core/include/utils/collection.hpp",
        "patchSetId": 8
      },
      "lineNbr": 198,
      "author": {
        "id": 1001369
      },
      "writtenOn": "2023-01-31T17:10:49Z",
      "side": 1,
      "message": "yes.. My HEAD of local bmcweb repo was old. I have updated it now.",
      "parentUuid": "5863dc52_b758a447",
      "revId": "cedb9a807998049684e1794369ec51fd01888fd7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}