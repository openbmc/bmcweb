{
  "comments": [
    {
      "key": {
        "uuid": "77e92cc0_47c92e57",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 11
      },
      "lineNbr": 1790,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-19T20:26:50Z",
      "side": 1,
      "message": "https://www.boost.org/doc/libs/1_70_0/libs/beast/doc/html/beast/ref/boost__beast__http__param_list.html\n\nIs the boost code I was referring to.  It parses this the way the RFC expects.",
      "range": {
        "startLine": 1789,
        "startChar": 0,
        "endLine": 1790,
        "endChar": 47
      },
      "revId": "6ed6ca518381cc6dd21e02d61ddd7cac51a8f537",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3089739d_af8283da",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 11
      },
      "lineNbr": 1790,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2021-03-22T06:05:08Z",
      "side": 1,
      "message": "Sorry, @Ed, I do not think we should use boost code here, because it will parsed to `*` when it meets `*/*`, \n\nI tested and show my results:\n\n```\nfor (auto const\u0026 param : boost::beast::http::ext_list{\"aaa,*/*\"})\n{\n}\n\nparam.first \u003d aaa\nparam.first \u003d *\n\nfor (auto const\u0026 param : boost::beast::http::ext_list{\"aaa,bbb\"})\n{\n}\n\nparam.first \u003d aaa\nparam.first \u003d bbb\n```\n\nPlease correct me if I am wrong, thanks",
      "parentUuid": "77e92cc0_47c92e57",
      "range": {
        "startLine": 1789,
        "startChar": 0,
        "endLine": 1790,
        "endChar": 47
      },
      "revId": "6ed6ca518381cc6dd21e02d61ddd7cac51a8f537",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "753bafef_07e03824",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 11
      },
      "lineNbr": 1790,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-03-22T19:04:01Z",
      "side": 1,
      "message": "Done. As a workaround, we can still use the http iterators if we replace the \u0027/\u0027 with some other character. Looking at the http/detail/rfc7230.ipp boost file, seems we can use |, ^, `, etc, so choosing | since the iterators offer the advantage that they split out the \u0027;q\u003dX\u0027 string for us so we can do an exact compare of the type. Using ext_list since that\u0027s a comma-separated string which is the format of the Accept header.",
      "parentUuid": "3089739d_af8283da",
      "range": {
        "startLine": 1789,
        "startChar": 0,
        "endLine": 1790,
        "endChar": 47
      },
      "revId": "6ed6ca518381cc6dd21e02d61ddd7cac51a8f537",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22a04d6c_15c9e854",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 11
      },
      "lineNbr": 1790,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-23T18:55:12Z",
      "side": 1,
      "message": "There\u0027s 4 different variants of the RFC7230 parser, ext_list, opt_token_list, param_list, and token_list.  I would expect one of them to have the correct behavior here, considering they\u0027re implemented for this use case.\n\nI have not looked at the differences between them, but I\u0027d be really surprised if they didn\u0027t have a way to parse out */*, assuming it\u0027s valid in the spec.",
      "parentUuid": "753bafef_07e03824",
      "range": {
        "startLine": 1789,
        "startChar": 0,
        "endLine": 1790,
        "endChar": 47
      },
      "revId": "6ed6ca518381cc6dd21e02d61ddd7cac51a8f537",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0ae61c6_c51dd8f4",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 11
      },
      "lineNbr": 1790,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-03-23T20:46:44Z",
      "side": 1,
      "message": "Yeah, weird that they don\u0027t handle the \u0027/\u0027, seems their parsing is common. Didn\u0027t see anything in the issues page either, just a couple complains about param_list requiring the list to start with a semicolon since most fields don\u0027t start with that (https://github.com/boostorg/beast/issues/2096).",
      "parentUuid": "22a04d6c_15c9e854",
      "range": {
        "startLine": 1789,
        "startChar": 0,
        "endLine": 1790,
        "endChar": 47
      },
      "revId": "6ed6ca518381cc6dd21e02d61ddd7cac51a8f537",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5acbb2db_e3881760",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 11
      },
      "lineNbr": 1790,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-03-24T16:36:46Z",
      "side": 1,
      "message": "Seems the \u0027/\u0027 would need to be added to the \u0027is_token_char\u0027 here: https://github.com/boostorg/beast/blob/50512cb5cd55e4e7dd51c13e5ff37a605a379e54/include/boost/beast/http/detail/rfc7230.ipp#L80\n\nOtherwise, the parsers stop when they encounter a \u0027/\u0027 because it\u0027s not a char, nor a delimiter like a comma or semicolon.",
      "parentUuid": "c0ae61c6_c51dd8f4",
      "range": {
        "startLine": 1789,
        "startChar": 0,
        "endLine": 1790,
        "endChar": 47
      },
      "revId": "6ed6ca518381cc6dd21e02d61ddd7cac51a8f537",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "929bdf93_0eb5881c",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 11
      },
      "lineNbr": 1794,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-19T20:26:50Z",
      "side": 1,
      "message": "both case insensitive, and contains seem wrong here.  I would expect exact matches on a properly parsed element.",
      "range": {
        "startLine": 1794,
        "startChar": 24,
        "endLine": 1794,
        "endChar": 33
      },
      "revId": "6ed6ca518381cc6dd21e02d61ddd7cac51a8f537",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "210d8541_3f4661b6",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 11
      },
      "lineNbr": 1794,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-03-22T19:04:01Z",
      "side": 1,
      "message": "Done. Yeah, using the boost iterators allows us to compare for an exact match now.",
      "parentUuid": "929bdf93_0eb5881c",
      "range": {
        "startLine": 1794,
        "startChar": 24,
        "endLine": 1794,
        "endChar": 33
      },
      "revId": "6ed6ca518381cc6dd21e02d61ddd7cac51a8f537",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19f86e29_e8ef771d",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 11
      },
      "lineNbr": 1795,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-19T20:26:50Z",
      "side": 1,
      "message": "See below, I\u0027m pretty sure this isn\u0027t human readable text.",
      "range": {
        "startLine": 1795,
        "startChar": 41,
        "endLine": 1795,
        "endChar": 51
      },
      "revId": "6ed6ca518381cc6dd21e02d61ddd7cac51a8f537",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a8605ed_4db5e7e6",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 11
      },
      "lineNbr": 1795,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-03-22T19:04:01Z",
      "side": 1,
      "message": "Done. Yeah, changed to octet-stream since that\u0027s the original source format.",
      "parentUuid": "19f86e29_e8ef771d",
      "range": {
        "startLine": 1795,
        "startChar": 41,
        "endLine": 1795,
        "endChar": 51
      },
      "revId": "6ed6ca518381cc6dd21e02d61ddd7cac51a8f537",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8240aeff_a3fbd99e",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 11
      },
      "lineNbr": 1859,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-19T20:26:50Z",
      "side": 1,
      "message": "Also need to verify that size elements were read in.",
      "revId": "6ed6ca518381cc6dd21e02d61ddd7cac51a8f537",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ddef757_ad60c5fd",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 11
      },
      "lineNbr": 1859,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-03-22T19:04:01Z",
      "side": 1,
      "message": "Done. Agree.",
      "parentUuid": "8240aeff_a3fbd99e",
      "revId": "6ed6ca518381cc6dd21e02d61ddd7cac51a8f537",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92578b2f_0b955465",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 11
      },
      "lineNbr": 1869,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-19T20:26:50Z",
      "side": 1,
      "message": "At this level, this isn\u0027t text.  I would\u0027ve expected octet-stream, and also to look for octet stream.\n\nin your use case is this human readable text?",
      "range": {
        "startLine": 1869,
        "startChar": 58,
        "endLine": 1869,
        "endChar": 68
      },
      "revId": "6ed6ca518381cc6dd21e02d61ddd7cac51a8f537",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc295e9b_c78de710",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 11
      },
      "lineNbr": 1869,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-03-22T19:04:01Z",
      "side": 1,
      "message": "Done. It\u0027s not text, changed to octet-stream, eoncded as base64.",
      "parentUuid": "92578b2f_0b955465",
      "range": {
        "startLine": 1869,
        "startChar": 58,
        "endLine": 1869,
        "endChar": 68
      },
      "revId": "6ed6ca518381cc6dd21e02d61ddd7cac51a8f537",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca4f3a46_214e1bf9",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 11
      },
      "lineNbr": 1871,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-19T20:26:50Z",
      "side": 1,
      "message": "nit.  std::move() here to avoid the copy.",
      "range": {
        "startLine": 1871,
        "startChar": 40,
        "endLine": 1871,
        "endChar": 46
      },
      "revId": "6ed6ca518381cc6dd21e02d61ddd7cac51a8f537",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a06c420a_9bd13fbe",
        "filename": "redfish-core/lib/log_services.hpp",
        "patchSetId": 11
      },
      "lineNbr": 1871,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2021-03-22T19:04:01Z",
      "side": 1,
      "message": "Done. Good point.",
      "parentUuid": "ca4f3a46_214e1bf9",
      "range": {
        "startLine": 1871,
        "startChar": 40,
        "endLine": 1871,
        "endChar": 46
      },
      "revId": "6ed6ca518381cc6dd21e02d61ddd7cac51a8f537",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}