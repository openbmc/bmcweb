{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5f16cd5e_d43d3c49",
        "filename": "http/logging.hpp",
        "patchSetId": 46
      },
      "lineNbr": 89,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-05-06T18:34:58Z",
      "side": 1,
      "message": "The static analysis tools flag std::format as throwing?\nWhy are they unhappy with this std::format and not others? E.g. line 82, or any other places we use it https://github.com/search?q\u003drepo%3Aopenbmc%2Fbmcweb%20std%3A%3Aformat\u0026type\u003dcode",
      "revId": "86d8bc28009b1714b4109c884bc86329131b11d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24280de4_b8a2e5ef",
        "filename": "http/logging.hpp",
        "patchSetId": 46
      },
      "lineNbr": 89,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-06T18:39:15Z",
      "side": 1,
      "message": "Those are all excellent questions;  I spent a lot of time trying to find answers to that, and couldn\u0027t.  You can see me pushing many different variations of patch on this review to try to play with what flags and what doesn\u0027t.  I\u0027d normally think of it as a false positive, but multiple static analysis tools including clang-tidy are now flagging it when we simplify the code in a change that didn\u0027t change anything.  (one static analysis tool was flagging before we simplified).\n\nMy guesses here are:\n1. We\u0027re moving an object that the moved object has the potential to throw.\n2. The libstdc++ implementation doesn\u0027t correctly mark this variant as noexcept.\n3. We\u0027re accidentally throwing in a std::formatted.",
      "parentUuid": "5f16cd5e_d43d3c49",
      "revId": "86d8bc28009b1714b4109c884bc86329131b11d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83b13294_84966ff7",
        "filename": "http/logging.hpp",
        "patchSetId": 46
      },
      "lineNbr": 89,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-05-06T19:47:39Z",
      "side": 1,
      "message": "There are several advantages to this patch, and I want to see it get in. \nThis stinks we have to have this but to keep the static analysis tools I am okay with it. You have a comment explaining the try/catch.",
      "parentUuid": "24280de4_b8a2e5ef",
      "revId": "86d8bc28009b1714b4109c884bc86329131b11d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "005bca07_6f3f4367",
        "filename": "http/logging.hpp",
        "patchSetId": 46
      },
      "lineNbr": 89,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-06T20:08:28Z",
      "side": 1,
      "message": "The thing I\u0027d also say is that I\u0027m still looking into this, so with any luck, I might be able to fix it in the future.",
      "parentUuid": "83b13294_84966ff7",
      "revId": "86d8bc28009b1714b4109c884bc86329131b11d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c72def30_52a43f52",
        "filename": "http/logging.hpp",
        "patchSetId": 46
      },
      "lineNbr": 89,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-05-06T21:11:53Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "005bca07_6f3f4367",
      "revId": "86d8bc28009b1714b4109c884bc86329131b11d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}