{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d5d19c79_4396e2a8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-08T19:57:17Z",
      "side": 1,
      "message": "This is looking way closer;  Just want to see if there\u0027s a minor code reduction we can do, but otherwise, looks good to me.",
      "revId": "525d18988750767aaa3211592dced9a8a2c8a75a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc58231f_d0d24e13",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-08T22:17:53Z",
      "side": 1,
      "message": "Leaving some time for community input, but LGTM",
      "revId": "525d18988750767aaa3211592dced9a8a2c8a75a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbbd87ab_50dad9fc",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 12
      },
      "lineNbr": 73,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-08T19:57:17Z",
      "side": 1,
      "message": "Thinking about it, do we need the branch at all?  Doesn\u0027t the:\nquery.expandLevel -\u003d queryCapabilities.canDelegateExpandLevel;\n\nLine work in both cases (ie if canDeleteExpandLevel \u003d 0, that line is noop).\n\n\nso we\u0027d end up with something like:\nquery.expandLevel -\u003d queryCapabilities.canDelegateExpandLevel;\ndelegated.expandLevel \u003d queryCapabilities.canDelegateExpandLevel;\ndelegated.expandType \u003d query.expandType;\n\n\nI think that covers all the cases, and is less code, right?  It does change the value of query.expandType in the former case, but ExpandType \u003d\u003d All, with depth of 0 is no-op still, so I think it still generalizes.",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 73,
        "endChar": 5
      },
      "revId": "525d18988750767aaa3211592dced9a8a2c8a75a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db586ecb_53f8a0bb",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 12
      },
      "lineNbr": 73,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-04-08T20:28:59Z",
      "side": 1,
      "message": "The only reason I use a branch here is to prevent underflow, both query.expandLevel and queryCapabilities.canDelegateExpandLevel are unsigned integers.\n\nThere might be other tricks we can play, e.g., std::max(0, (int)expandLevel - (int)canDelegateExpandLevel), but it\u0027s less readable IMO.\n\nAlso, I felt setting query.expandType explicitly and not relying on query.expandLevel\u003d0 is safer.\n\nAny more thoughts?",
      "parentUuid": "dbbd87ab_50dad9fc",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 73,
        "endChar": 5
      },
      "revId": "525d18988750767aaa3211592dced9a8a2c8a75a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ae716a5_16b114f6",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 12
      },
      "lineNbr": 73,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-04-08T22:17:53Z",
      "side": 1,
      "message": "\u003e The only reason I use a branch here is to prevent underflow, both query.expandLevel and queryCapabilities.canDelegateExpandLevel are unsigned integers.\n\u003e \n\u003e There might be other tricks we can play, e.g., std::max(0, (int)expandLevel - (int)canDelegateExpandLevel), but it\u0027s less readable IMO.\n\nThat\u0027s a good point that I didn\u0027t think about.  From a readability standpoint, I guess the std::swaps confused me a little, because they rely on defaults in the query type to function;  Would it be more readable with\n\ndelegated.expandLevel \u003d query.expandLevel;\nquery.expandLevel \u003d 0;\ndelegated.expandType \u003d query.expandType;\n\n\u003e \n\u003e Also, I felt setting query.expandType explicitly and not relying on query.expandLevel\u003d0 is safer.\n\nWhy\u0027s that?  They should be equivalent, in fact, I think expandLevel \u003d 0 calls less code.\n\n\u003e \n\u003e Any more thoughts?\n\nI\u0027m not super worried about the above.  If you want to make changes, I think they\u0027d be more readable, but I understand the code, and it looks correct, so anything beyond this is just cleanups.",
      "parentUuid": "db586ecb_53f8a0bb",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 73,
        "endChar": 5
      },
      "revId": "525d18988750767aaa3211592dced9a8a2c8a75a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69706832_06b8599e",
        "filename": "redfish-core/include/utils/query_param.hpp",
        "patchSetId": 12
      },
      "lineNbr": 73,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-04-08T22:50:53Z",
      "side": 1,
      "message": "I removed swap and set both type and level explicitly.\n\n\n\u003e Why\u0027s that?  They should be equivalent, in fact, I think expandLevel \u003d 0 calls less code.\n\nhttps://github.com/openbmc/bmcweb/blob/master/redfish-core/include/utils/query_param.hpp#L375\n\n\"query.expandType \u003d ExpandType::None\" runs less codes, right? It won\u0027t touch MultiAsyncResp.",
      "parentUuid": "1ae716a5_16b114f6",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 73,
        "endChar": 5
      },
      "revId": "525d18988750767aaa3211592dced9a8a2c8a75a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}