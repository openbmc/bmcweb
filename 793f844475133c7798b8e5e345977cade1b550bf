{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "64cbf2af_c30e8df1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-06T00:13:57Z",
      "side": 1,
      "message": "To those reviewing, this is the code that openssl is running:\n\nhttps://github.com/openssl/openssl/blob/de8e0851a1c0d22533801f081781a9f0be56c2c2/crypto/x509/v3_purp.c#L712\n\nThe only differences in flow are that it checked extended key usage first, takes the OR of KU_DIGITAL_SIGNATURE/KU_KEY_AGREEMENT instead of the AND (Which is the bug we actually hit)\n\nand checks that the NS_SSL_CLIENT is set, which I think we should\u0027ve been doing anyway.",
      "revId": "793f844475133c7798b8e5e345977cade1b550bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b3bb815_289fec23",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001910
      },
      "writtenOn": "2023-12-06T07:54:01Z",
      "side": 1,
      "message": "I\u0027m getting a 401 while testing this change with `scripts/generate_auth_certificates.py` as compared to the parent revision (ec5198af219b97eb4272fea28ee8ae7c72cedcd6):\n\n```\npython3 scripts/generate_auth_certificates.py --host localhost:8443 \n...\nEnsuring TLS authentication is enabled.\nSuccessfully enabled TLS authentication.\nTesting redfish TLS authentication with generated certs.\nTraceback (most recent call last):\n  File \"/repos/bmcweb/scripts/generate_auth_certificates.py\", line 289, in \u003cmodule\u003e\n    main()\n  File \"/repos/bmcweb/scripts/generate_auth_certificates.py\", line 261, in main\n    response.raise_for_status()\n  File \"/usr/local/lib/python3.11/dist-packages/requests/models.py\", line 1021, in raise_for_status\n    raise HTTPError(http_error_msg, response\u003dself)\nrequests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://localhost:8443/redfish/v1/SessionService/Sessions\n```\n\nComparing `journalctl -f` output, there\u0027s an `Authentication failed` message when running a romulus qemu image with the change:\n```\nromulus bmcweb[209]: [INFO http_connection.hpp:249] Request:  0x1072740 HTTP/1.1 GET /redfish/v1/SessionService/Sessions ::1\nromulus bmcweb[209]: [WARNING http_connection.hpp:272] Authentication failed\n```\n\nReference ec5198af219b97eb4272fea28ee8ae7c72cedcd6 (OK):\n```\nromulus bmcweb[209]: [INFO http_connection.hpp:249] Request:  0x1fcb740 HTTP/1.1 GET /redfish/v1/SessionService/Sessions ::1\nromulus bmcweb[209]: [INFO complete_response_fields.hpp:23] Response:  /redfish/v1/SessionService/Sessions 200\n```",
      "revId": "793f844475133c7798b8e5e345977cade1b550bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68353396_78db6190",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-12-06T16:50:36Z",
      "side": 1,
      "message": "I don\u0027t think this is meant to be resolved",
      "parentUuid": "9b3bb815_289fec23",
      "revId": "793f844475133c7798b8e5e345977cade1b550bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3a1f3e2_9737ba2c",
        "filename": "http/mutual_tls.hpp",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1001910
      },
      "writtenOn": "2023-12-06T09:15:40Z",
      "side": 1,
      "message": "I think the check here needs to be `X509_check_purpose(...) !\u003d 1` instead:\n\nhttps://github.com/openssl/openssl/blob/master/crypto/x509/v3_purp.c#L84",
      "revId": "793f844475133c7798b8e5e345977cade1b550bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56f31773_77e5deaf",
        "filename": "http/mutual_tls.hpp",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1001910
      },
      "writtenOn": "2023-12-06T16:02:42Z",
      "side": 1,
      "message": "`scripts/generate_auth_certificates.py` works with the `!\u003d 1` check, let me try with a prod Meta certificate",
      "parentUuid": "d3a1f3e2_9737ba2c",
      "revId": "793f844475133c7798b8e5e345977cade1b550bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "71f01a8f_f89c7cab",
        "filename": "http/mutual_tls.hpp",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-06T17:14:38Z",
      "side": 1,
      "message": "Weird..... I wonder why the unit tests passed....\n\nFixed.",
      "parentUuid": "56f31773_77e5deaf",
      "revId": "793f844475133c7798b8e5e345977cade1b550bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a30863ca_fe091c76",
        "filename": "http/mutual_tls.hpp",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1001910
      },
      "writtenOn": "2023-12-06T17:30:32Z",
      "side": 1,
      "message": "I was stepping through the unit test failure with `gdb`, seems `X509_check_purpose()` is returning -1 due to `x-\u003eex_flags \u0026 EXFLAG_NO_FINGERPRINT` in this line, not sure if it helps:\n\nhttps://github.com/openssl/openssl/blob/openssl-3.0.10/crypto/x509/v3_purp.c#L630\n\n```\n(gdb) p x-\u003eex_flags \u0026 0x100000\n$3 \u003d 1048576\n\n(gdb) bt\n#0  ossl_x509v3_cache_extensions (x\u003dx@entry\u003d0x55fba9b4d2b0) at ../crypto/x509/v3_purp.c:630\n#1  0x00007f8560783db5 in X509_check_purpose (x\u003d0x55fba9b4d2b0, id\u003d1, require_ca\u003d0) at ../crypto/x509/v3_purp.c:86\n#2  0x000055fba9b26f42 in verifyMtlsUser (clientIp\u003d..., ctx\u003d...) at ../http/mutual_tls.hpp:63\n...\n```",
      "parentUuid": "71f01a8f_f89c7cab",
      "revId": "793f844475133c7798b8e5e345977cade1b550bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1df09aa_c71583fd",
        "filename": "http/mutual_tls.hpp",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-06T19:48:42Z",
      "side": 1,
      "message": "Yeah, this patchset doesn\u0027t really work with the unit tests I wrote.  We could try it, but there\u0027s something in the x509 cert store that I\u0027m not initing properly, and I don\u0027t have time to debug it.  oh well.",
      "parentUuid": "a30863ca_fe091c76",
      "revId": "793f844475133c7798b8e5e345977cade1b550bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55590ebe_a4ec6bbc",
        "filename": "http/mutual_tls.hpp",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1001910
      },
      "writtenOn": "2023-12-06T19:52:42Z",
      "side": 1,
      "message": "Yeah, seems `X509_check_purpose()` is checking for some fields we\u0027re setting in `generate_auth_certificates.py` but not in the unit tests.\n\nLet me try tweaking the unit tests a bit, will let you know how it goes",
      "parentUuid": "c1df09aa_c71583fd",
      "revId": "793f844475133c7798b8e5e345977cade1b550bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97264f39_9fd786dc",
        "filename": "http/mutual_tls.hpp",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-12-06T20:08:29Z",
      "side": 1,
      "message": "I chased the call stack as far as these two functions failing:\nhttps://github.com/openssl/openssl/blob/f529a2eb75374946b60ed686ca6f90fdf244e787/crypto/x509/x_all.c#L589\nhttps://github.com/openssl/openssl/blob/f529a2eb75374946b60ed686ca6f90fdf244e787/crypto/asn1/a_digest.c#L54",
      "parentUuid": "55590ebe_a4ec6bbc",
      "revId": "793f844475133c7798b8e5e345977cade1b550bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91142bfd_f9b365d2",
        "filename": "http/mutual_tls.hpp",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1001910
      },
      "writtenOn": "2023-12-06T23:22:01Z",
      "side": 1,
      "message": "OK, was able to make the test error go away by signing the cert (this might be relevant to the other tests, not sure if worth integrating with the `OSSLX509` class):\n\n```\ndiff --git a/test/http/mutual_tls.cpp b/test/http/mutual_tls.cpp\nindex a08c81d2..a9bf4c6d 100644\n--- a/test/http/mutual_tls.cpp\n+++ b/test/http/mutual_tls.cpp\n@@ -56,6 +56,18 @@ TEST(MutualTLS, GoodCert)\n {\n     OSSLX509 x509;\n \n+    // Generate test key\n+    EVP_PKEY *pkey \u003d NULL;\n+    EVP_PKEY_CTX *pctx \u003d EVP_PKEY_CTX_new_id(EVP_PKEY_EC, NULL);\n+    ASSERT_EQ(EVP_PKEY_keygen_init(pctx), 1);\n+    ASSERT_EQ(EVP_PKEY_CTX_set_ec_paramgen_curve_nid(pctx, NID_X9_62_prime256v1), 1);\n+    ASSERT_EQ(EVP_PKEY_keygen(pctx, \u0026pkey), 1);\n+    EVP_PKEY_CTX_free(pctx);\n+\n+    // Sign cert with key\n+    ASSERT_EQ(X509_set_pubkey(x509.get(), pkey), 1);\n+    ASSERT_GT(X509_sign(x509.get(), pkey, EVP_sha256()), 0);\n+\n     X509_NAME* name \u003d X509_get_subject_name(x509.get());\n     std::array\u003cunsigned char, 5\u003e user \u003d {\u0027u\u0027, \u0027s\u0027, \u0027e\u0027, \u0027r\u0027, \u0027\\0\u0027};\n     X509_NAME_add_entry_by_txt(name, \"CN\", MBSTRING_ASC, user.data(), -1, -1,\n```",
      "parentUuid": "97264f39_9fd786dc",
      "revId": "793f844475133c7798b8e5e345977cade1b550bf",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}