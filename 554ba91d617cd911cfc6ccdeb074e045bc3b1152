{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "747d1084_69744cb6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-20T19:43:03Z",
      "side": 1,
      "message": "Work... in .... limbo?  ðŸ˜„",
      "range": {
        "startLine": 9,
        "startChar": 16,
        "endLine": 9,
        "endChar": 19
      },
      "revId": "554ba91d617cd911cfc6ccdeb074e045bc3b1152",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbfc9dd5_5c1a8918",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-20T19:43:03Z",
      "side": 1,
      "message": "Scenario I\u0027m imagining here given this design, and something we need to consider:\n\n1. User boots up bmc, works great, it returns urls without main_.\n2. User plugs in a device that has aggregation supported, and BAM\nsuddenly all the URIs for things that didn\u0027t change now change.\n\nThis doesn\u0027t really match up with the redfish \"should\" statements around stability of URI in this regard, so I don\u0027t think as stated, this is going to work.\n\nNow, we could add \"main_\" to all local resources in all cases, but then we make people made by changing URIs, which is technically legal to do, but we have enough docs and examples that did it wrong, I don\u0027t really want to hold up your patch for doing all that work, nor do I want to push you in charge of cleaning up a mess you didn\u0027t cause.\n\n\nMy thinking in this regard is:\n1. Leave the existing resources alone.  this has the least impact to users.\n2. Come up with a unique prefix that we can reasonably assume a user wouldn\u0027t put in their device name (some magic garbage characters might be good here).\n3. if an ID starts with \"magic string\" we know that it\u0027s coming from the aggregated resource, otherwise we forward to the existing handlers.",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 13,
        "endChar": 19
      },
      "revId": "554ba91d617cd911cfc6ccdeb074e045bc3b1152",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d14d9281_c2048e0e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-07-20T20:37:21Z",
      "side": 1,
      "message": "What if we just include \"main_\" if the aggregation compilation option is enabled?  The existence (or lack thereof) of satellite configs would have no bearing on if we include the prefix.\n\nIn this way the URIs on the aggregating BMC don\u0027t change when a new device is plugged in.  Plus, the prefix addition is hidden behind a compiler option so you\u0027d have to purposefully opt into changing the URIs.",
      "parentUuid": "cbfc9dd5_5c1a8918",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 13,
        "endChar": 19
      },
      "revId": "554ba91d617cd911cfc6ccdeb074e045bc3b1152",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25fd4085_dbcf7bdb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-07-20T20:45:30Z",
      "side": 1,
      "message": "\u003e What if we just include \"main_\" if the aggregation compilation option is enabled? \n\u003e The existence (or lack thereof) of satellite configs would have no bearing on if we include the prefix.\n\n\nI like your thought process, and I did think about that, but it has the same problem.  User flashes their BMC with a newer openbmc that supports aggregation, and BAM, suddenly all the IDs change.\n\n\n\u003e \n\u003e In this way the URIs on the aggregating BMC don\u0027t change when a new device is plugged in.  Plus, the prefix addition is hidden behind a compiler option so you\u0027d have to purposefully opt into changing the URIs.\n\nOur general rule is that all options are enabled by default, and should have no impact in the cases where they\u0027re not configured or you don\u0027t have the hardware.  This is to help development having to update 6000 systems and forks every time we add a new option.  Aggregation is disabled by default right now because it\u0027s arguably not stable, but that will change at some point as you keep working it.",
      "parentUuid": "d14d9281_c2048e0e",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 13,
        "endChar": 19
      },
      "revId": "554ba91d617cd911cfc6ccdeb074e045bc3b1152",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}