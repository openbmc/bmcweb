{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "428fb4bd_be9720bb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-02T19:41:14Z",
      "side": 1,
      "message": "Overall this looks fine, just needs some testing to make sure we\u0027re not breaking things worse.",
      "revId": "92c9b87e6d98ea3511a16b0d87940505b7ae3c73",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f77cdf07_9bce0a63",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 13
      },
      "lineNbr": 1601,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-02T19:41:14Z",
      "side": 1,
      "message": "Can you please test if this causes bugs with a username like:\n\n\"my-user\" or \"my_user\" or \"my\u003cunicode character\u003euser\".\n\nCurrently this is a place where the end user is in control of the URI, so we need to make sure that escaping things isn\u0027t going to break anything.",
      "range": {
        "startLine": 1601,
        "startChar": 0,
        "endLine": 1601,
        "endChar": 73
      },
      "revId": "92c9b87e6d98ea3511a16b0d87940505b7ae3c73",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e2aac20_aac6cfa0",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 13
      },
      "lineNbr": 1601,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-11-02T22:38:04Z",
      "side": 1,
      "message": "I have added more to the unit tests.\n\n```\n    // The following characters will be converted to ASCII number\n    // `[{]}\\|\"\u003c\u003e/?#%^\n    url \u003d\n        urlFromPieces(\"~1234567890-_\u003d+qwertyuiopasdfghjklzxcvbnm;:\u0027,.!@$\u0026*()\");\n    EXPECT_EQ(std::string_view(url.data(), url.size()),\n              \"/~1234567890-_\u003d+qwertyuiopasdfghjklzxcvbnm;:\u0027,.!@$\u0026*()\");\n```\n\nand just found the characters that is invalid. Is that enough? OR should we just revert this for the user ids.",
      "parentUuid": "f77cdf07_9bce0a63",
      "range": {
        "startLine": 1601,
        "startChar": 0,
        "endLine": 1601,
        "endChar": 73
      },
      "revId": "92c9b87e6d98ea3511a16b0d87940505b7ae3c73",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a332a303_e9ab16bb",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 13
      },
      "lineNbr": 1601,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-02T22:41:57Z",
      "side": 1,
      "message": "It\u0027s not really about unit tests.  This would require an integration test, of which I think there are some in test-automation repo that you could use.  You looked up the characters that get encoded in a URI.  What characters get encoded in a dbus path and pam user?  I\u0027m not sure I know the answer to that without testing.  The example I gave you above are the common ones that folks expect to work, and that should be on the golden path.  I can live with less-than-ideal behavior in the error paths when sending in bad characters, but we need to test the common cases.\n\n\n\u003e should we just revert this for the user ids.\n\nUp to you.  If you don\u0027t want to test it, yes, you could avoid changing those.",
      "parentUuid": "8e2aac20_aac6cfa0",
      "range": {
        "startLine": 1601,
        "startChar": 0,
        "endLine": 1601,
        "endChar": 73
      },
      "revId": "92c9b87e6d98ea3511a16b0d87940505b7ae3c73",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91b8c9ad_b3159135",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 13
      },
      "lineNbr": 1601,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-11-02T22:48:15Z",
      "side": 1,
      "message": "I am just not confident that I can have test coverage that make sure that it won\u0027t break on the possible inputs.\n\nI\u0027ll see how to properly test it and see how it goes.",
      "parentUuid": "a332a303_e9ab16bb",
      "range": {
        "startLine": 1601,
        "startChar": 0,
        "endLine": 1601,
        "endChar": 73
      },
      "revId": "92c9b87e6d98ea3511a16b0d87940505b7ae3c73",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35e4ff15_76580a7b",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 13
      },
      "lineNbr": 1601,
      "author": {
        "id": 1000885
      },
      "writtenOn": "2022-11-02T22:50:04Z",
      "side": 1,
      "message": "I will try it with https://github.com/openbmc/openbmc-test-automation/blob/master/redfish/account_service/test_user_account.robot\n\n(assuming that I know how to setup rebot tests). oops.",
      "parentUuid": "91b8c9ad_b3159135",
      "range": {
        "startLine": 1601,
        "startChar": 0,
        "endLine": 1601,
        "endChar": 73
      },
      "revId": "92c9b87e6d98ea3511a16b0d87940505b7ae3c73",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0a8452e_813fba8a",
        "filename": "redfish-core/lib/event_service.hpp",
        "patchSetId": 13
      },
      "lineNbr": 214,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-02T19:41:14Z",
      "side": 1,
      "message": "Same thing here.  This ID is in control of the user.  We need to test that the escaping isn\u0027t going to break the collection.",
      "range": {
        "startLine": 214,
        "startChar": 68,
        "endLine": 214,
        "endChar": 69
      },
      "revId": "92c9b87e6d98ea3511a16b0d87940505b7ae3c73",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}