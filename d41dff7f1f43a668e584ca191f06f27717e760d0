{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "df734553_4c1cb322",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-06-09T15:31:56Z",
      "side": 1,
      "message": "Needs more details here.  When we\u0027re interpreting as bytes, what\u0027s the potential problem?",
      "range": {
        "startLine": 10,
        "startChar": 0,
        "endLine": 10,
        "endChar": 16
      },
      "revId": "d41dff7f1f43a668e584ca191f06f27717e760d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fca9f430_a33ea921",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-06-09T15:31:56Z",
      "side": 1,
      "message": "I\u0027m not sure how you came to this conclusion.  From the specification:\n\n\"A client POST to this URI shall contain the Content-Type HTTP header with the value multipart/\nform-data , with the body formatted as defined by this specification. For more information about\nmultipart/form-data HTTP requests, see RFC7578.\"",
      "range": {
        "startLine": 10,
        "startChar": 18,
        "endLine": 11,
        "endChar": 24
      },
      "revId": "d41dff7f1f43a668e584ca191f06f27717e760d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db0124a5_be4ee531",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-06-09T18:56:40Z",
      "side": 1,
      "message": "There are all content types bmcweb supports. There is no multipart in the list so you are saying we should add multipart in the list and support it?\n\nconstexpr std::array\u003cContentTypePair, 5\u003e contentTypes{{\n    {\"application/cbor\", ContentType::CBOR},\n    {\"application/json\", ContentType::JSON},\n    {\"application/octet-stream\", ContentType::OctetStream},\n    {\"text/html\", ContentType::HTML},\n    {\"text/event-stream\", ContentType::EventStream},\n}};\n\n\nI just checked what IBM GUI requests for and it is octet-stream.\n\n[DEBUG \"update_service.hpp\":627] handleUpdateServicePost: content: application/octet-stream",
      "parentUuid": "fca9f430_a33ea921",
      "range": {
        "startLine": 10,
        "startChar": 18,
        "endLine": 11,
        "endChar": 24
      },
      "revId": "d41dff7f1f43a668e584ca191f06f27717e760d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23959e4c_a8217da4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-06-09T20:00:33Z",
      "side": 1,
      "message": "\u003e There are all content types bmcweb supports. There is no multipart in the list so you are saying we should add multipart in the list and support it?\n\u003e \n\u003e constexpr std::array\u003cContentTypePair, 5\u003e contentTypes{{\n\u003e     {\"application/cbor\", ContentType::CBOR},\n\u003e     {\"application/json\", ContentType::JSON},\n\u003e     {\"application/octet-stream\", ContentType::OctetStream},\n\u003e     {\"text/html\", ContentType::HTML},\n\u003e     {\"text/event-stream\", ContentType::EventStream},\n\u003e }};\n\u003e \n\nhttps://github.com/openbmc/bmcweb/blob/994fd86a3f6649a820f66313765e85e762ad105a/include/login_routes.hpp#L121\n\nMatches against multipart, but you\u0027re right, it doesn\u0027t use the new generic functions, which we could fix.\n\n\u003e \n\u003e I just checked what IBM GUI requests for and it is octet-stream.\n\u003e \n\u003e [DEBUG \"update_service.hpp\":627] handleUpdateServicePost: content: application/octet-stream\n\nThis is not an appropriate way to match the specification.  Now, the background you\u0027re missing is that we actually support BOTH http multipart and OctetStream.  Multipart is defined by the standard, the other is only used by the gui.  Your patch breaks the multipart one.",
      "parentUuid": "db0124a5_be4ee531",
      "range": {
        "startLine": 10,
        "startChar": 18,
        "endLine": 11,
        "endChar": 24
      },
      "revId": "d41dff7f1f43a668e584ca191f06f27717e760d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d7aee16_7494cd79",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-06-09T20:11:29Z",
      "side": 1,
      "message": "ok, I will add it. Thanks!",
      "parentUuid": "23959e4c_a8217da4",
      "range": {
        "startLine": 10,
        "startChar": 18,
        "endLine": 11,
        "endChar": 24
      },
      "revId": "d41dff7f1f43a668e584ca191f06f27717e760d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89f01b5f_f7a46dcd",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 689,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2023-06-09T20:17:56Z",
      "side": 1,
      "message": "The \"isContentTypeAllowed\" is generally read against the accepts header, not the content-type header.  The fact that this code works is somewhat of an accident, because a single content-type header is the same as a single accepts header, but this code will allow multiple accepts headers, which is incorrect.",
      "range": {
        "startLine": 689,
        "startChar": 29,
        "endLine": 689,
        "endChar": 46
      },
      "revId": "d41dff7f1f43a668e584ca191f06f27717e760d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42dcbb59_7b0dbf85",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 692,
      "author": {
        "id": 1001633
      },
      "writtenOn": "2023-06-09T15:15:26Z",
      "side": 1,
      "message": "Shouldn\u0027t this be an ERROR instead of DEBUG?",
      "range": {
        "startLine": 692,
        "startChar": 0,
        "endLine": 692,
        "endChar": 57
      },
      "revId": "d41dff7f1f43a668e584ca191f06f27717e760d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fcbc498_5cc1bbc7",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 692,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2023-06-09T15:38:16Z",
      "side": 1,
      "message": "No not error, it is a bad result",
      "parentUuid": "42dcbb59_7b0dbf85",
      "range": {
        "startLine": 692,
        "startChar": 0,
        "endLine": 692,
        "endChar": 57
      },
      "revId": "d41dff7f1f43a668e584ca191f06f27717e760d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "460b1529_887d7250",
        "filename": "redfish-core/lib/update_service.hpp",
        "patchSetId": 1
      },
      "lineNbr": 692,
      "author": {
        "id": 1001634
      },
      "writtenOn": "2023-06-09T16:06:41Z",
      "side": 1,
      "message": "We don\u0027t want to spit error for user mistake. someone can exploit it.",
      "parentUuid": "6fcbc498_5cc1bbc7",
      "range": {
        "startLine": 692,
        "startChar": 0,
        "endLine": 692,
        "endChar": 57
      },
      "revId": "d41dff7f1f43a668e584ca191f06f27717e760d0",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}