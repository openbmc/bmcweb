{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7ae18d6f_84e3e687",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 19,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-10-11T19:28:45Z",
      "side": 1,
      "message": "50/72 please",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 19,
        "endChar": 0
      },
      "revId": "d7a2660f200c38e74bfcbfe55b8da1b8bed08833",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fdf1249d_c04f8022",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 19,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-07-17T03:00:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ae18d6f_84e3e687",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 19,
        "endChar": 0
      },
      "revId": "d7a2660f200c38e74bfcbfe55b8da1b8bed08833",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76fc5aca_8381be80",
        "filename": "http/http_connection.hpp",
        "patchSetId": 9
      },
      "lineNbr": 385,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-25T19:31:33Z",
      "side": 1,
      "message": "Continues to not be fixed.",
      "range": {
        "startLine": 385,
        "startChar": 12,
        "endLine": 385,
        "endChar": 32
      },
      "revId": "d7a2660f200c38e74bfcbfe55b8da1b8bed08833",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "deff07c1_dc1c1792",
        "filename": "http/http_connection.hpp",
        "patchSetId": 9
      },
      "lineNbr": 385,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-08-26T15:46:34Z",
      "side": 1,
      "message": "Ed, I did checked the SSE documentation (W3C) and also googled, i don\u0027t see differentiating factor in request with Normal GET request vs SSE GET request? So other than URL itself, I don\u0027t see any request header(or some other) which can differentiate between Normal Vs SSE GET request. \n\nWebsocket connections will have authorization header for identify and upgrade connection. But SSE, I can see only URL itself for identification. So used it. Did you come across any other way? Can you please suggest, if any?",
      "parentUuid": "76fc5aca_8381be80",
      "range": {
        "startLine": 385,
        "startChar": 12,
        "endLine": 385,
        "endChar": 32
      },
      "revId": "d7a2660f200c38e74bfcbfe55b8da1b8bed08833",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4c7a5c2_cf332375",
        "filename": "http/http_connection.hpp",
        "patchSetId": 9
      },
      "lineNbr": 385,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-28T17:19:03Z",
      "side": 1,
      "message": "\u003e Ed, I did checked the SSE documentation (W3C) and also googled, i don\u0027t see differentiating factor in request with Normal GET request vs SSE GET request?\n\nWhich documents did you look at?  Please link them.\n\n\u003e So other than URL itself, I don\u0027t see any request header(or some other) which can differentiate between Normal Vs SSE GET request. \n\u003e \n\u003e Websocket connections will have authorization header for identify and upgrade connection. But SSE, I can see only URL itself for identification. So used it. Did you come across any other way? Can you please suggest, if any?\n\nThe problem isn\u0027t that you used the URL, it\u0027s that you hardcoded ONE SPECIFIC url outside of the router.  The whole point of the router abstraction is to find a handler for a url, and there\u0027s where I\u0027d like the routes kept for abstraction purposes, otherwise, this causes a hard dependency on the http layer for all possible protocols (redfish, rest-dbus, ect) which doesn\u0027t scale.",
      "parentUuid": "deff07c1_dc1c1792",
      "range": {
        "startLine": 385,
        "startChar": 12,
        "endLine": 385,
        "endChar": 32
      },
      "revId": "d7a2660f200c38e74bfcbfe55b8da1b8bed08833",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c436f0fe_6bf2c9f2",
        "filename": "http/http_connection.hpp",
        "patchSetId": 9
      },
      "lineNbr": 385,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-08-28T17:33:04Z",
      "side": 1,
      "message": "Imagine if we had done the same for redfish, and in this file put:\n\nif (req-\u003eurl \u003d\u003d \"/redfish/v1\" || \nreq-\u003eurl \u003d\u003d \"/redfish/v1/Systems\" ||\n.....\n\n\nThat would fall apart in a hurry, and it\u0027s the reason why the router exists.",
      "parentUuid": "a4c7a5c2_cf332375",
      "range": {
        "startLine": 385,
        "startChar": 12,
        "endLine": 385,
        "endChar": 32
      },
      "revId": "d7a2660f200c38e74bfcbfe55b8da1b8bed08833",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49385cfd_639040a3",
        "filename": "http/http_connection.hpp",
        "patchSetId": 9
      },
      "lineNbr": 385,
      "author": {
        "id": 1001438
      },
      "writtenOn": "2023-04-13T19:43:43Z",
      "side": 1,
      "message": "With the latest code change, the URL is no more hard coded.\n\nsseRoutes are defined under sse_socket namespace, and called using Router",
      "parentUuid": "c436f0fe_6bf2c9f2",
      "range": {
        "startLine": 385,
        "startChar": 12,
        "endLine": 385,
        "endChar": 32
      },
      "revId": "d7a2660f200c38e74bfcbfe55b8da1b8bed08833",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}