{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d017a336_8b528a4b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-22T16:36:23Z",
      "side": 1,
      "message": "More details needed here on why this needs to be compile time configurable.  I would\u0027ve expected this to use the mapper.",
      "range": {
        "startLine": 9,
        "startChar": 32,
        "endLine": 9,
        "endChar": 44
      },
      "revId": "ade3f16bd76b5bd5fa8c3395300ee031b2dd2b16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd5bab50_709713d9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-22T16:36:23Z",
      "side": 1,
      "message": "This is nowhere near enough detail, and as written, could apply to just about any patch within bmcweb.  What did you test?  Please include enough detail that someone could verify the function of the same.",
      "range": {
        "startLine": 11,
        "startChar": 8,
        "endLine": 11,
        "endChar": 28
      },
      "revId": "ade3f16bd76b5bd5fa8c3395300ee031b2dd2b16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9e8ed0a_1eb8b5fd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-22T16:36:23Z",
      "side": 1,
      "message": "Missing unit tests?",
      "revId": "ade3f16bd76b5bd5fa8c3395300ee031b2dd2b16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdc46883_a7594085",
        "filename": "include/google/google_service_root.hpp",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-22T16:36:23Z",
      "side": 1,
      "message": "Please just construct this in place\n\nnlohmann::json\u0026 members \u003d rots[\"Members\"];\nmembers \u003d nlohmann::json::array();\n\nmembers.push_back....",
      "range": {
        "startLine": 21,
        "startChar": 4,
        "endLine": 21,
        "endChar": 53
      },
      "revId": "ade3f16bd76b5bd5fa8c3395300ee031b2dd2b16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb5e03d2_d43650d5",
        "filename": "include/google/google_service_root.hpp",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-22T16:36:23Z",
      "side": 1,
      "message": "You want all users (including read only users) to have access to the ROT collections?  That seems different than I would expect, please take a look.",
      "range": {
        "startLine": 54,
        "startChar": 20,
        "endLine": 54,
        "endChar": 31
      },
      "revId": "ade3f16bd76b5bd5fa8c3395300ee031b2dd2b16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08ca1ae2_c241a940",
        "filename": "include/google/google_service_root.hpp",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-22T16:36:23Z",
      "side": 1,
      "message": "For new code, please write these as non-lambda so they\u0027re unit testable, and reduce function scope.  I realize the above is a lambda, but we\u0027re going through a transition trying to move to more normal looking callbacks.",
      "range": {
        "startLine": 56,
        "startChar": 12,
        "endLine": 61,
        "endChar": 13
      },
      "revId": "ade3f16bd76b5bd5fa8c3395300ee031b2dd2b16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12a2ae86_5b26259a",
        "filename": "include/google/google_service_root.hpp",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-22T16:36:23Z",
      "side": 1,
      "message": "This is generally not how we build collections in redfish/bmcweb;  Most of the time we use the mapper to determine what ROTs exist in the system (take a look at the utility classes for building collections).",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 42
      },
      "revId": "ade3f16bd76b5bd5fa8c3395300ee031b2dd2b16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c545cdbc_7fa09937",
        "filename": "include/google/google_service_root.hpp",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-22T16:36:23Z",
      "side": 1,
      "message": "Status is generally not an array, but you\u0027re treating it like one here.",
      "range": {
        "startLine": 84,
        "startChar": 55,
        "endLine": 84,
        "endChar": 67
      },
      "revId": "ade3f16bd76b5bd5fa8c3395300ee031b2dd2b16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac89c12d_1a56fac2",
        "filename": "include/google/google_service_root.hpp",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-22T16:36:23Z",
      "side": 1,
      "message": "Description field?",
      "range": {
        "startLine": 88,
        "startChar": 42,
        "endLine": 88,
        "endChar": 46
      },
      "revId": "ade3f16bd76b5bd5fa8c3395300ee031b2dd2b16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b08ad3f_7570591d",
        "filename": "include/google/google_service_root.hpp",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-22T16:36:23Z",
      "side": 1,
      "message": "Please don\u0027t combine initializer list initialization and operator[] initialization.  It makes the code hard to read.  YOu probably want\n\njsonValue[\"Actions\"][\"#RootOfTrust.SendCommand\"][\"target\"] \u003d ...",
      "range": {
        "startLine": 90,
        "startChar": 72,
        "endLine": 92,
        "endChar": 71
      },
      "revId": "ade3f16bd76b5bd5fa8c3395300ee031b2dd2b16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "222bdc9a_bb50bc73",
        "filename": "include/google/google_service_root.hpp",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-22T16:36:23Z",
      "side": 1,
      "message": "You should be using the rotId as some piece of the dbus path, so that if the object doesn\u0027t exist, dbus can return an error.",
      "range": {
        "startLine": 103,
        "startChar": 21,
        "endLine": 103,
        "endChar": 34
      },
      "revId": "ade3f16bd76b5bd5fa8c3395300ee031b2dd2b16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47052a79_2ae7df42",
        "filename": "include/google/google_service_root.hpp",
        "patchSetId": 1
      },
      "lineNbr": 112,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-22T16:36:23Z",
      "side": 1,
      "message": "Shouldn\u0027t we be accepting this comment by std::vector\u003cuint8_t\u003e?  Inside these APIs, using hex strings are fairly rare (I can\u0027t think of any).",
      "range": {
        "startLine": 112,
        "startChar": 16,
        "endLine": 112,
        "endChar": 27
      },
      "revId": "ade3f16bd76b5bd5fa8c3395300ee031b2dd2b16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30d72aa6_1e576d96",
        "filename": "static/google/v1/schema/RootOfTrust_v1.xml",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-03-22T16:36:23Z",
      "side": 1,
      "message": "Whitespace error.",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 66,
        "endChar": 4
      },
      "revId": "ade3f16bd76b5bd5fa8c3395300ee031b2dd2b16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}