{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3cb99566_f01c93e8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-10-13T17:05:31Z",
      "side": 1,
      "message": "nit: you might need to delete this colon. The URL is not converted to a hyperlink",
      "range": {
        "startLine": 14,
        "startChar": 3,
        "endLine": 14,
        "endChar": 4
      },
      "revId": "7c68743c5d0db2e5c80794fd59fa1e11bdcd9b83",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf28b384_4ed48f1e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2022-10-14T04:44:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3cb99566_f01c93e8",
      "range": {
        "startLine": 14,
        "startChar": 3,
        "endLine": 14,
        "endChar": 4
      },
      "revId": "7c68743c5d0db2e5c80794fd59fa1e11bdcd9b83",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad00de31_ace7aa77",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-10-13T14:57:06Z",
      "side": 1,
      "message": "Should probably go first?",
      "revId": "7c68743c5d0db2e5c80794fd59fa1e11bdcd9b83",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b22665d_d6b9b52c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-10-13T17:05:31Z",
      "side": 1,
      "message": "Are there any other implementations?",
      "parentUuid": "ad00de31_ace7aa77",
      "revId": "7c68743c5d0db2e5c80794fd59fa1e11bdcd9b83",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "840772a2_242d9a5d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2022-10-14T04:44:32Z",
      "side": 1,
      "message": "\u003e Are there any other implementations?\n\nNow this property is only implemented in the phosphor-hwmon repo, and the implementation will be synchronized to dbus-sensors in the future, but this does not affect the implementation of the upper-level redfish interface",
      "parentUuid": "7b22665d_d6b9b52c",
      "revId": "7c68743c5d0db2e5c80794fd59fa1e11bdcd9b83",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46aabe49_7f46c66c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-11T21:56:17Z",
      "side": 1,
      "message": "So, have we tested that for dbus-sensors systems this behavior fails gracefully?",
      "parentUuid": "840772a2_242d9a5d",
      "revId": "7c68743c5d0db2e5c80794fd59fa1e11bdcd9b83",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7acabb81_884f6ed3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2022-11-12T02:21:26Z",
      "side": 1,
      "message": "\u003e So, have we tested that for dbus-sensors systems this behavior fails gracefully?\n\nWe tested it for dbus-sensors systems and this behavior won\u0027t fail.\n1. Since dbus-sensors has not implemented the xyz.openbmc_project.Sensor.Accuracy interface, the Accuracy attribute will not be displayed on Redfish.\n2. I manually added the xyz.openbmc_project.Sensor.Accuracy interface to dbus-sensors, and the display effect is the same as now.",
      "parentUuid": "46aabe49_7f46c66c",
      "revId": "7c68743c5d0db2e5c80794fd59fa1e11bdcd9b83",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3c8a69d_2351776d",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 2
      },
      "lineNbr": 967,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-10-13T14:57:06Z",
      "side": 1,
      "message": "What happens if it is the default NaN ?",
      "revId": "7c68743c5d0db2e5c80794fd59fa1e11bdcd9b83",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e1447b7_7f98d1d4",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 2
      },
      "lineNbr": 967,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-10-13T17:05:31Z",
      "side": 1,
      "message": "Yes, I remember there is a patch to handle double value NaN. We should follow what we have done there.\n\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/56856",
      "parentUuid": "a3c8a69d_2351776d",
      "revId": "7c68743c5d0db2e5c80794fd59fa1e11bdcd9b83",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6f5f49a_2e1b17eb",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 2
      },
      "lineNbr": 967,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2022-10-14T04:44:32Z",
      "side": 1,
      "message": "\u003e Yes, I remember there is a patch to handle double value NaN. We should follow what we have done there.\n\u003e \n\u003e https://gerrit.openbmc.org/c/openbmc/bmcweb/+/56856\n\nIf it is the default NAN, Redfish will show it like this\n\n```\n\"Accuracy\": null,\n```",
      "parentUuid": "3e1447b7_7f98d1d4",
      "revId": "7c68743c5d0db2e5c80794fd59fa1e11bdcd9b83",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0c4c693_0d7bbc29",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 2
      },
      "lineNbr": 967,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-11-10T18:35:45Z",
      "side": 1,
      "message": "Right above, CriticalHigh/CriticalLow\u0027s default to NAN.. so this is the same. \nWe could leave off if NAN.. \n\nRedfish says null is okay though so I guess I am okay here\n\n                \"Accuracy\": {\n                    \"description\": \"The estimated percent error of measured versus actual values.\",\n                    \"longDescription\": \"This property shall contain the percent error +/- of the measured versus actual values of the Reading property.\",\n                    \"readonly\": true,\n                    \"type\": [\n                        \"number\",\n                        \"null\"\n                    ],\n                    \"units\": \"%\"\n                },\n\nhttps://github.com/openbmc/phosphor-dbus-interfaces/blob/388b58f9a878f45b8ec243152cac5eb44ec90ced/yaml/xyz/openbmc_project/Sensor/Threshold/Critical.interface.yaml#L23",
      "parentUuid": "f6f5f49a_2e1b17eb",
      "revId": "7c68743c5d0db2e5c80794fd59fa1e11bdcd9b83",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9fd9b92d_b8d2f13f",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 2
      },
      "lineNbr": 967,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-11-11T20:09:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d0c4c693_0d7bbc29",
      "revId": "7c68743c5d0db2e5c80794fd59fa1e11bdcd9b83",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d6949d2_6841fd80",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 2
      },
      "lineNbr": 967,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-11-11T21:56:17Z",
      "side": 1,
      "message": "\u003e If it is the default NAN, Redfish will show it like this\n\n\nI\u0027m not sure we want Accuracy: null if accuracy is not supported.  null is supposed to be \"supported but unavailable at this time\".  Omiting the property is supposed to be unsupported (at least this was the discussion the last time I brought this up at DMTF level).\n\n\nAs a practical matter, considering 90+% of systems don\u0027t implement this, adding:\nAccuracy: null\nto all of their sensors for all existing systems doesn\u0027t seem like great behavior, and certainly not behavior that I want to explain to everyone about why their sensor values changed.\n\n\u003e We should follow what we have done there.\n\nThat is changing the behavior for Reading, which is different.  In OpenBMC, there is no such thing as a sensor that doesn\u0027t support Reading/Value, so pushing null there makes sense.  I\u0027m not sure it does for the accuracy case.",
      "parentUuid": "9fd9b92d_b8d2f13f",
      "revId": "7c68743c5d0db2e5c80794fd59fa1e11bdcd9b83",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cecfd92c_bec34106",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 2
      },
      "lineNbr": 967,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2022-11-12T02:21:26Z",
      "side": 1,
      "message": "\u003e \u003e If it is the default NAN, Redfish will show it like this\n\u003e \n\u003e \n\u003e I\u0027m not sure we want Accuracy: null if accuracy is not supported.  null is supposed to be \"supported but unavailable at this time\".  Omiting the property is supposed to be unsupported (at least this was the discussion the last time I brought this up at DMTF level).\n\n@Matt, What do you think?\n\n\u003e \n\u003e \n\u003e As a practical matter, considering 90+% of systems don\u0027t implement this, adding:\n\u003e Accuracy: null\n\u003e to all of their sensors for all existing systems doesn\u0027t seem like great behavior, and certainly not behavior that I want to explain to everyone about why their sensor values changed.\n\u003e \n\u003e \u003e We should follow what we have done there.\n\u003e \n\u003e That is changing the behavior for Reading, which is different.  In OpenBMC, there is no such thing as a sensor that doesn\u0027t support Reading/Value, so pushing null there makes sense.  I\u0027m not sure it does for the accuracy case.",
      "parentUuid": "1d6949d2_6841fd80",
      "revId": "7c68743c5d0db2e5c80794fd59fa1e11bdcd9b83",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65d41fdb_98c8bd28",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 2
      },
      "lineNbr": 967,
      "author": {
        "id": 1000008
      },
      "writtenOn": "2022-11-14T16:28:32Z",
      "side": 1,
      "message": "What do you think Derek? I think I would agree with Ed though.",
      "parentUuid": "cecfd92c_bec34106",
      "revId": "7c68743c5d0db2e5c80794fd59fa1e11bdcd9b83",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "876c053d_2559a274",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 2
      },
      "lineNbr": 967,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2022-11-14T17:11:07Z",
      "side": 1,
      "message": "I vote let\u0027s just leave off if NAN then.",
      "parentUuid": "65d41fdb_98c8bd28",
      "revId": "7c68743c5d0db2e5c80794fd59fa1e11bdcd9b83",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "937d581e_69650e87",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 2
      },
      "lineNbr": 967,
      "author": {
        "id": 1000397
      },
      "writtenOn": "2022-11-15T02:03:37Z",
      "side": 1,
      "message": "If the DBus does not implement the `xyz.openbmc_project.Sensor.Accuracy` interface, the `\"Accuracy\": null` will not be displayed in Redfish. I mean, if the DBus has the `xyz.openbmc_project.Sensor.Accuracy` interface and the Accuracy value is equal to NAN, then the `\"Accuracy\": null` will be displayed in redfish, is this expected?",
      "parentUuid": "876c053d_2559a274",
      "revId": "7c68743c5d0db2e5c80794fd59fa1e11bdcd9b83",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "246b2235_df47ad45",
        "filename": "redfish-core/lib/sensors.hpp",
        "patchSetId": 2
      },
      "lineNbr": 967,
      "author": {
        "id": 1000318
      },
      "writtenOn": "2022-11-15T15:11:09Z",
      "side": 1,
      "message": "\u003e What do you think Derek? I think I would agree with Ed though.\n\nYeah doesn\u0027t matter to me too much either way, but what Ed is saying seems optimal to me.",
      "parentUuid": "937d581e_69650e87",
      "revId": "7c68743c5d0db2e5c80794fd59fa1e11bdcd9b83",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}