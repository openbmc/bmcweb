{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "703e3eaa_858b6a6c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 16,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-11-18T16:32:45Z",
      "side": 1,
      "message": "Can you please post the XZ compressed numbers?\n\n\nThe command I use for this is below.\n\nxz -c $BBPATH/tmp/work/s7106-openbmc-linux-gnueabi/obmc-phosphor-image/1.0/rootfs/usr/libexec/bmcwebd | wc -c\n\n\nThose are the ones that matter.",
      "revId": "7cec91760cd6860bb9783dafa291f065b42841dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf44d500_dc2f602b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 16,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-11-18T18:34:38Z",
      "side": 1,
      "message": "I use p10bmc build and I run `\nxz -c $BBPATH/tmp/work/p10bmc-openbmc-linux-gnueabi/obmc-phosphor-image/1.0/rootfs/usr/libexec/bmcwebd | wc -c`\n\n- 874664 (before this)\n- 868032 (with this - 6632 smaller)",
      "parentUuid": "703e3eaa_858b6a6c",
      "revId": "7cec91760cd6860bb9783dafa291f065b42841dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab11ae09_69240fb9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 16,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-11-22T14:38:37Z",
      "side": 1,
      "message": "that\u0027s fairly different than what\u0027s in the commit message.",
      "parentUuid": "cf44d500_dc2f602b",
      "revId": "7cec91760cd6860bb9783dafa291f065b42841dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "645d56d0_a2e2861d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 16,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-11-22T15:57:00Z",
      "side": 1,
      "message": "The commit message shows the before compress.\nI\u0027ll update the commit message.",
      "parentUuid": "ab11ae09_69240fb9",
      "revId": "7cec91760cd6860bb9783dafa291f065b42841dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a120ba32_362d5eb7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-11-18T16:32:45Z",
      "side": 1,
      "message": "Please also measure clean compile times and incremental compile times.  The last time we did this experiment (see HEADERS.md) it made compile times significantly worse.",
      "revId": "7cec91760cd6860bb9783dafa291f065b42841dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67319dea_2cb4af8d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-11-18T18:34:38Z",
      "side": 1,
      "message": "I would agree that the unity build may take longer, for incremental builds.\n\n---- \n\nI measure this like -  date; time  MACHINE\u003dp10bmc bitbake  bmcweb; date`\n\n1) clean compile:\n\nnormal (before):\n```\ndo_compile 1m38s \u003c-- by eyes\nreal    2m3.016s\nuser    0m1.637s\nsys     0m0.476s\n```\nunity (with this):\n```\ndo_compile 1m40s\nreal    2m10.312s\nuser    0m1.426s\nsys     0m0.445s\n```\n\n2) Incremental.  (after touch a file `subscription.cpp`)\n\nnormal incremental build: 40s\nunity incremental build : 1m40s      \u003c\u003d\u003d This is longer as expected",
      "parentUuid": "a120ba32_362d5eb7",
      "revId": "7cec91760cd6860bb9783dafa291f065b42841dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38ae2645_a3ac846e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-11-22T14:38:37Z",
      "side": 1,
      "message": "\u003e unity incremental build : 1m40s \u003c\u003d\u003d This is longer as expected\n\nYep.  Everything is about tradeoffs,\na 0.7% decrease in binary size doesn\u0027t seem worth it to me for a 3X longer incremental build.\n\nFor a lot less same time \"cost\" we could probably save about the same or more by just optimizing existing code.",
      "parentUuid": "67319dea_2cb4af8d",
      "revId": "7cec91760cd6860bb9783dafa291f065b42841dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "284e4817_6ba76d80",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-11-22T15:57:00Z",
      "side": 1,
      "message": "Agreed.\nI\u0027ll mark this submission as WIP for now and then later I may abandon it (if determined not needed).",
      "parentUuid": "38ae2645_a3ac846e",
      "revId": "7cec91760cd6860bb9783dafa291f065b42841dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5941be5_8da50e63",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2024-11-18T16:21:36Z",
      "side": 1,
      "message": "looks like a 1.8% improvement size has been achieved.\n\nWhen optimizing for size, do you have any target?\n\nThe change is meaningless if other people are going to add features over time\nand they will exceed your change again.\n\nIf do you have a size target, can you achieve it with meson options and conditional compilation?\n\nMaybe disabling individual features and guarding them with meson options if you are not using them on your target bmc.\n\nI would assume that may give much greater savings.",
      "revId": "7cec91760cd6860bb9783dafa291f065b42841dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49829399_0038fb26",
        "filename": "src/webserver_run_unity.cpp",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-11-18T16:32:45Z",
      "side": 1,
      "message": "???? The whole point of meson enabling unity builds is so you don\u0027t have to do this.",
      "revId": "7cec91760cd6860bb9783dafa291f065b42841dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "697cb7e1_41cdb23a",
        "filename": "src/webserver_run_unity.cpp",
        "patchSetId": 5
      },
      "lineNbr": 19,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2024-11-18T18:34:38Z",
      "side": 1,
      "message": "This commit is just an experiment to show the unity build.\nI think - to utilize the unity build, a source file would need to contain a jumbo compile unit file to include all sources - https://mesonbuild.com/Unity-builds.html",
      "parentUuid": "49829399_0038fb26",
      "revId": "7cec91760cd6860bb9783dafa291f065b42841dc",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}