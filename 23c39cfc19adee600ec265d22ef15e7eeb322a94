{
  "comments": [
    {
      "key": {
        "uuid": "70c2c9bf_3e193662",
        "filename": "http/http_client.hpp",
        "patchSetId": 5
      },
      "lineNbr": 59,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-24T17:51:19Z",
      "side": 1,
      "message": "unresolved comment.",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 59,
        "endChar": 44
      },
      "revId": "23c39cfc19adee600ec265d22ef15e7eeb322a94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a140f159_2950d409",
        "filename": "http/http_client.hpp",
        "patchSetId": 5
      },
      "lineNbr": 59,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-02-26T07:49:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70c2c9bf_3e193662",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 59,
        "endChar": 44
      },
      "revId": "23c39cfc19adee600ec265d22ef15e7eeb322a94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d279d439_b3d0e010",
        "filename": "http/http_client.hpp",
        "patchSetId": 5
      },
      "lineNbr": 105,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-24T17:51:19Z",
      "side": 1,
      "message": "Initialize your variable to 0 here please.  It doesn\u0027t get set in all paths.",
      "range": {
        "startLine": 105,
        "startChar": 24,
        "endLine": 105,
        "endChar": 31
      },
      "revId": "23c39cfc19adee600ec265d22ef15e7eeb322a94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ca766f1_4f501757",
        "filename": "http/http_client.hpp",
        "patchSetId": 5
      },
      "lineNbr": 105,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-02-26T07:49:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d279d439_b3d0e010",
      "range": {
        "startLine": 105,
        "startChar": 24,
        "endLine": 105,
        "endChar": 31
      },
      "revId": "23c39cfc19adee600ec265d22ef15e7eeb322a94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c927b71d_89f0c65b",
        "filename": "http/http_client.hpp",
        "patchSetId": 5
      },
      "lineNbr": 107,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-24T17:51:19Z",
      "side": 1,
      "message": "Common error #5\n\nAlso, you need to incrementally loop over ALL addresses, not just the first one, otherwise load balancing and fail over won\u0027t work properly.",
      "range": {
        "startLine": 107,
        "startChar": 66,
        "endLine": 107,
        "endChar": 68
      },
      "revId": "23c39cfc19adee600ec265d22ef15e7eeb322a94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f5824c8_ad74b252",
        "filename": "http/http_client.hpp",
        "patchSetId": 5
      },
      "lineNbr": 107,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-02-26T07:49:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c927b71d_89f0c65b",
      "range": {
        "startLine": 107,
        "startChar": 66,
        "endLine": 107,
        "endChar": 68
      },
      "revId": "23c39cfc19adee600ec265d22ef15e7eeb322a94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73b8444d_030f4595",
        "filename": "http/http_client.hpp",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-24T17:51:19Z",
      "side": 1,
      "message": "Why not just declare address as uint32_t on line 105, rather than declaring it as the wrong type then casting it later.",
      "range": {
        "startLine": 114,
        "startChar": 24,
        "endLine": 114,
        "endChar": 53
      },
      "revId": "23c39cfc19adee600ec265d22ef15e7eeb322a94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35728dbb_b943c678",
        "filename": "http/http_client.hpp",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-02-26T07:49:00Z",
      "side": 1,
      "message": "The operator \u003c\u003c gives error it its uint32_t",
      "parentUuid": "73b8444d_030f4595",
      "range": {
        "startLine": 114,
        "startChar": 24,
        "endLine": 114,
        "endChar": 53
      },
      "revId": "23c39cfc19adee600ec265d22ef15e7eeb322a94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7bf3821_62012595",
        "filename": "http/http_client.hpp",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-01T07:41:10Z",
      "side": 1,
      "message": "what error?  Did you declare your shifts as unsigned?\n\nsomething like:\nipAddress[0] \u003c\u003c 16U\n\nIt also might need to be casted to uint32, but either way, don\u0027t use lexical cast here, it\u0027s unnecessary.",
      "parentUuid": "35728dbb_b943c678",
      "range": {
        "startLine": 114,
        "startChar": 24,
        "endLine": 114,
        "endChar": 53
      },
      "revId": "23c39cfc19adee600ec265d22ef15e7eeb322a94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b66638f0_2ffbbc65",
        "filename": "http/http_client.hpp",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-03-01T16:19:24Z",
      "side": 1,
      "message": "\u003e Did you declare your shifts as unsigned?\nNo. \n\nI get the below error - for which i used int32_t and then casted that to uint32_t which was needed by boost::asio::ip::address_v4 constructor\n\n../http/http_client.hpp:112:53: error: conversion to ‘uint32_t’ {aka ‘unsigned int’} from ‘int’ may change the sign of the result [-Werror\u003dsign-conversion]\n  112 |                                   ipAddress[2] \u003c\u003c 8 | ipAddress[3];",
      "parentUuid": "b7bf3821_62012595",
      "range": {
        "startLine": 114,
        "startChar": 24,
        "endLine": 114,
        "endChar": 53
      },
      "revId": "23c39cfc19adee600ec265d22ef15e7eeb322a94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d89472b9_851654ec",
        "filename": "http/http_client.hpp",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-01T16:22:20Z",
      "side": 1,
      "message": "Please find a way to do this without lexical cast.  I suspect\n\nipAddress[2] \u003c\u003c 8U\n\nMight get you there.",
      "parentUuid": "b66638f0_2ffbbc65",
      "range": {
        "startLine": 114,
        "startChar": 24,
        "endLine": 114,
        "endChar": 53
      },
      "revId": "23c39cfc19adee600ec265d22ef15e7eeb322a94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c6eedb8_d74d94b4",
        "filename": "http/http_client.hpp",
        "patchSetId": 5
      },
      "lineNbr": 114,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-03-02T08:17:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d89472b9_851654ec",
      "range": {
        "startLine": 114,
        "startChar": 24,
        "endLine": 114,
        "endChar": 53
      },
      "revId": "23c39cfc19adee600ec265d22ef15e7eeb322a94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ddc40c4_88738109",
        "filename": "http/http_client.hpp",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-24T17:51:19Z",
      "side": 1,
      "message": "See other comment, please implement this TODO (should be only 3 lines of code) and I will test it for you.",
      "range": {
        "startLine": 122,
        "startChar": 23,
        "endLine": 122,
        "endChar": 27
      },
      "revId": "23c39cfc19adee600ec265d22ef15e7eeb322a94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2131381_f2a960ae",
        "filename": "http/http_client.hpp",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-02-26T07:49:00Z",
      "side": 1,
      "message": "Ack. This can be a separate commit on top of these, so that the tested code in this commit can go ahead.",
      "parentUuid": "5ddc40c4_88738109",
      "range": {
        "startLine": 122,
        "startChar": 23,
        "endLine": 122,
        "endChar": 27
      },
      "revId": "23c39cfc19adee600ec265d22ef15e7eeb322a94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8b47720_1dba4dbb",
        "filename": "http/http_client.hpp",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-03-01T07:41:10Z",
      "side": 1,
      "message": "Please do it here.  It\u0027s 3 extra lines of code, I\u0027d rather have it done now, as we also have to define error handling for this anyway, so it\u0027s better to just do it in this patchset.",
      "parentUuid": "d2131381_f2a960ae",
      "range": {
        "startLine": 122,
        "startChar": 23,
        "endLine": 122,
        "endChar": 27
      },
      "revId": "23c39cfc19adee600ec265d22ef15e7eeb322a94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20ea51ae_c5fa3ebd",
        "filename": "http/http_client.hpp",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-03-01T16:19:24Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d8b47720_1dba4dbb",
      "range": {
        "startLine": 122,
        "startChar": 23,
        "endLine": 122,
        "endChar": 27
      },
      "revId": "23c39cfc19adee600ec265d22ef15e7eeb322a94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9acc3790_6f82c68e",
        "filename": "http/http_client.hpp",
        "patchSetId": 5
      },
      "lineNbr": 124,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-24T17:51:19Z",
      "side": 1,
      "message": "Need to handle error if it\u0027s not ipv4 or ipv6?",
      "revId": "23c39cfc19adee600ec265d22ef15e7eeb322a94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b553826_2e10e767",
        "filename": "http/http_client.hpp",
        "patchSetId": 5
      },
      "lineNbr": 124,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-02-26T07:49:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9acc3790_6f82c68e",
      "revId": "23c39cfc19adee600ec265d22ef15e7eeb322a94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "948a3d43_ff1e8816",
        "filename": "http/http_client.hpp",
        "patchSetId": 5
      },
      "lineNbr": 126,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-24T17:51:19Z",
      "side": 1,
      "message": "Rather than running through connStateCheck again here, can we just call doConnect directly?  That way, we can just pass endpoint in as an argument, and we won\u0027t have to store it in the object for the whole life of the connection.",
      "range": {
        "startLine": 126,
        "startChar": 16,
        "endLine": 126,
        "endChar": 39
      },
      "revId": "23c39cfc19adee600ec265d22ef15e7eeb322a94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd6e9c36_b96d8e84",
        "filename": "http/http_client.hpp",
        "patchSetId": 5
      },
      "lineNbr": 126,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-02-26T07:49:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "948a3d43_ff1e8816",
      "range": {
        "startLine": 126,
        "startChar": 16,
        "endLine": 126,
        "endChar": 39
      },
      "revId": "23c39cfc19adee600ec265d22ef15e7eeb322a94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ce47d9e_47f6141f",
        "filename": "http/http_client.hpp",
        "patchSetId": 5
      },
      "lineNbr": 145,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-02-24T17:51:19Z",
      "side": 1,
      "message": "Nit, callbacks should use boost::beast::error_codes by value.",
      "range": {
        "startLine": 145,
        "startChar": 47,
        "endLine": 145,
        "endChar": 72
      },
      "revId": "23c39cfc19adee600ec265d22ef15e7eeb322a94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b067f51_1e2663d1",
        "filename": "http/http_client.hpp",
        "patchSetId": 5
      },
      "lineNbr": 145,
      "author": {
        "id": 1000382
      },
      "writtenOn": "2021-03-01T16:19:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7ce47d9e_47f6141f",
      "range": {
        "startLine": 145,
        "startChar": 47,
        "endLine": 145,
        "endChar": 72
      },
      "revId": "23c39cfc19adee600ec265d22ef15e7eeb322a94",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}