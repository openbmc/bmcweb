{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "95950aed_c2b89d89",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-28T04:05:29Z",
      "side": 1,
      "message": "More details needed:  How are certificates loaded?  What cipher suites are used?  Are ECC keys allowed?\n\nPlease provide more detail in your commit message.",
      "revId": "e054a8688a17e2ec3895a3ce1c63b72a8e8e431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8df4d10_17fd03bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000269
      },
      "writtenOn": "2022-06-30T17:10:29Z",
      "side": 1,
      "message": "Thank you Ed and Carson for comments. I will look into the comments and implementation associated changes by early next week. ",
      "revId": "e054a8688a17e2ec3895a3ce1c63b72a8e8e431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5d89cf8_9f91336d",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 212,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-28T04:07:23Z",
      "side": 1,
      "message": "This patchset has the same problem the last one did, it doesn\u0027t load root certificates, so there is no way to verify a client.\n\nIn the beast examples, there\u0027s a function called load_root_certificates that does this that you can look at.",
      "range": {
        "startLine": 212,
        "startChar": 0,
        "endLine": 212,
        "endChar": 47
      },
      "revId": "e054a8688a17e2ec3895a3ce1c63b72a8e8e431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39ac317f_f484c84e",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 212,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-28T04:18:57Z",
      "side": 1,
      "message": "also set_verify_mode",
      "parentUuid": "b5d89cf8_9f91336d",
      "range": {
        "startLine": 212,
        "startChar": 0,
        "endLine": 212,
        "endChar": 47
      },
      "revId": "e054a8688a17e2ec3895a3ce1c63b72a8e8e431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee9d9d37_053476da",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 278,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-06-28T20:11:17Z",
      "side": 1,
      "message": "Why do we need to ignore this error in general? Why does it not matter when SSL is not enabled?",
      "range": {
        "startLine": 278,
        "startChar": 22,
        "endLine": 278,
        "endChar": 69
      },
      "revId": "e054a8688a17e2ec3895a3ce1c63b72a8e8e431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d759492_b1466f4c",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 278,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-28T20:24:03Z",
      "side": 1,
      "message": "It\u0027s pretty common among https servers to just sever the connection when a request is complete, and not do the proper TLS shutdown.  Generally the error is benign, and can be ignored.  In theory we could log it, but so many servers do it that it\u0027s not really worth thinking about unless it caused a real error in the http request (which would have a different code).",
      "parentUuid": "ee9d9d37_053476da",
      "range": {
        "startLine": 278,
        "startChar": 22,
        "endLine": 278,
        "endChar": 69
      },
      "revId": "e054a8688a17e2ec3895a3ce1c63b72a8e8e431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6df4d050_24112630",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 405,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-06-28T20:11:17Z",
      "side": 1,
      "message": "Do we need the timer since we\u0027re not doing a read or write operation?",
      "range": {
        "startLine": 404,
        "startChar": 8,
        "endLine": 405,
        "endChar": 53
      },
      "revId": "e054a8688a17e2ec3895a3ce1c63b72a8e8e431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5b3789d_d94e5872",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 405,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-06-28T20:24:03Z",
      "side": 1,
      "message": "+1.  Ideally we should be just using the timer here in all cases.  Also, not relying on tcp_stream makes it faster and saves a ton of binary space:\n\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/51943",
      "parentUuid": "6df4d050_24112630",
      "range": {
        "startLine": 404,
        "startChar": 8,
        "endLine": 405,
        "endChar": 53
      },
      "revId": "e054a8688a17e2ec3895a3ce1c63b72a8e8e431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "715bb5e5_490352ed",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 416,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-06-28T20:11:17Z",
      "side": 1,
      "message": "Why do we not need to return when there\u0027s an error like we do below without SSL enabled?",
      "range": {
        "startLine": 410,
        "startChar": 16,
        "endLine": 416,
        "endChar": 17
      },
      "revId": "e054a8688a17e2ec3895a3ce1c63b72a8e8e431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4feda30_88dca32f",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 474,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-06-28T20:11:17Z",
      "side": 1,
      "message": "Why do we not need to return when there\u0027s an error like we do below without SSL enabled?",
      "range": {
        "startLine": 468,
        "startChar": 16,
        "endLine": 474,
        "endChar": 17
      },
      "revId": "e054a8688a17e2ec3895a3ce1c63b72a8e8e431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86728782_d7ebf1bb",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 826,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-06-28T20:11:17Z",
      "side": 1,
      "message": "You\u0027re not accounting for the use of SSL when sending the message.  Connections stay in the pool after they are created and the same pool can be used by multiple entities.  It could be the case that a connection was previously created without SSL and now you are attempting to use it to send a message with SSL or vice-versa.\n\nWhen a connection is grabbed you need to make sure that it and the message match in terms of if SSL is enabled.  If they don\u0027t match then the connection needs to be reconfigured before the message is sent.",
      "range": {
        "startLine": 825,
        "startChar": 8,
        "endLine": 826,
        "endChar": 73
      },
      "revId": "e054a8688a17e2ec3895a3ce1c63b72a8e8e431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aebfce2a_d6d65dde",
        "filename": "http/http_client.hpp",
        "patchSetId": 2
      },
      "lineNbr": 826,
      "author": {
        "id": 1001303
      },
      "writtenOn": "2022-06-28T20:11:17Z",
      "side": 1,
      "message": "Connections remain in the pool once they\u0027ve been created.  An existing connection could have been previously created without SSL enabled and now you\u0027re trying to send a message using SSL or vice-versa.\n\nYou need to make sure that the message to be sent and the connection grabbed agree in terms of using SSL.  If they don\u0027t then the connection needs to be reconfigured to match as part of the process.",
      "range": {
        "startLine": 823,
        "startChar": 8,
        "endLine": 826,
        "endChar": 73
      },
      "revId": "e054a8688a17e2ec3895a3ce1c63b72a8e8e431c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}