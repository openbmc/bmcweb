{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d848f0c6_0ec3a784",
        "filename": "redfish-core/lib/power.hpp",
        "patchSetId": 14
      },
      "lineNbr": 250,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-18T16:57:54Z",
      "side": 1,
      "message": "please read and understand DBUS_USAGE.md.  Power cap services should be optional, treating a missing power cap as a 500 error doesn\u0027t meet that intent.",
      "range": {
        "startLine": 250,
        "startChar": 0,
        "endLine": 250,
        "endChar": 66
      },
      "revId": "19055be9540d9ddf61b899680d4cf88c00eed7e1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0574de31_42d29f00",
        "filename": "redfish-core/lib/power.hpp",
        "patchSetId": 14
      },
      "lineNbr": 250,
      "author": {
        "id": 1000985
      },
      "writtenOn": "2024-03-18T18:18:49Z",
      "side": 1,
      "message": "In the original implementation, it was assumed that Settings service will be supporting power cap interface and in case it fails it reported internal error. In this change I am doing the similar check earlier.\n\n```\n            crow::connections::systemBus-\u003easync_method_call(\n                [sensorsAsyncResp](const boost::system::error_code\u0026 ec2) {\n                if (ec2)\n                {\n                    BMCWEB_LOG_DEBUG \u003c\u003c \"Power Limit Set: Dbus error: \" \u003c\u003c ec2;\n                    messages::internalError(sensorsAsyncResp-\u003easyncResp-\u003eres);\n                    return;\n                }\n                sensorsAsyncResp-\u003easyncResp-\u003eres.result(\n                    boost::beast::http::status::no_content);\n                },\n                \"xyz.openbmc_project.Settings\",\n                \"/xyz/openbmc_project/control/host0/power_cap\",\n                \"org.freedesktop.DBus.Properties\", \"Set\",\n                \"xyz.openbmc_project.Control.Power.Cap\", \"PowerCap\",\n                std::variant\u003cuint32_t\u003e(*value));\n            });\n```\n\nDo you suggest using a different type of error or just return a warning message?",
      "parentUuid": "d848f0c6_0ec3a784",
      "range": {
        "startLine": 250,
        "startChar": 0,
        "endLine": 250,
        "endChar": 66
      },
      "revId": "19055be9540d9ddf61b899680d4cf88c00eed7e1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "079ca165_dce0a00d",
        "filename": "redfish-core/lib/power.hpp",
        "patchSetId": 14
      },
      "lineNbr": 250,
      "author": {
        "id": 1000985
      },
      "writtenOn": "2024-03-19T23:58:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0574de31_42d29f00",
      "range": {
        "startLine": 250,
        "startChar": 0,
        "endLine": 250,
        "endChar": 66
      },
      "revId": "19055be9540d9ddf61b899680d4cf88c00eed7e1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "224e3710_e542a2b0",
        "filename": "redfish-core/lib/power.hpp",
        "patchSetId": 14
      },
      "lineNbr": 257,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-18T16:57:54Z",
      "side": 1,
      "message": "same here.",
      "range": {
        "startLine": 257,
        "startChar": 0,
        "endLine": 257,
        "endChar": 66
      },
      "revId": "19055be9540d9ddf61b899680d4cf88c00eed7e1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ef3b4ff_6344af65",
        "filename": "redfish-core/lib/power.hpp",
        "patchSetId": 14
      },
      "lineNbr": 257,
      "author": {
        "id": 1000985
      },
      "writtenOn": "2024-03-19T23:58:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "224e3710_e542a2b0",
      "range": {
        "startLine": 257,
        "startChar": 0,
        "endLine": 257,
        "endChar": 66
      },
      "revId": "19055be9540d9ddf61b899680d4cf88c00eed7e1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62a16014_88a08315",
        "filename": "redfish-core/lib/power.hpp",
        "patchSetId": 14
      },
      "lineNbr": 328,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-03-18T18:14:13Z",
      "side": 1,
      "message": "How do we know we\u0027re getting the power cap for THIS chassis?  Previously we got the global object, so it didn\u0027t really matter (all chassis would set the same power cap) but now that we\u0027re looking up services, there needs to be a provision for looking up a power cap for a single chassis.",
      "range": {
        "startLine": 326,
        "startChar": 0,
        "endLine": 328,
        "endChar": 62
      },
      "revId": "19055be9540d9ddf61b899680d4cf88c00eed7e1",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}