{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b70bb18c_0a257eef",
        "filename": "/COMMIT_MSG",
        "patchSetId": 76
      },
      "lineNbr": 36,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-09T19:02:22Z",
      "side": 1,
      "message": "2 GET requests is definitely not enough to test that multi-factor authentication has been implemented to the Redfish specification.  Is there a set of scripts/tests somewhere where you\u0027ve verified this functions as intended?\n\nThis is changing a security boundary.  The testing should be much much more extensive when making those kinds of changes, including verifying each of the 5 login types works as designed when MFA is enabled.  For example, I see no changes to mTLS auth or Basic auth that would imply that MFA is now being enforced on those.  It\u0027s very likely that those two auth types need to be disabled if MFA is enabled, but I don\u0027t see that implemented.",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 36,
        "endChar": 7
      },
      "revId": "2fcbb85653210a802003bb08bd43e1ef876c5eff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2548a0d_f1d532cb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 76
      },
      "lineNbr": 36,
      "author": {
        "id": 1000401
      },
      "writtenOn": "2025-06-11T17:09:42Z",
      "side": 1,
      "message": "When MFA is enabled, Basic auth also requires secret key to be setup\nfor the user account.\n\nAnd, when mTLS auth is enabled, it continues to work irrespective of MFA. MFA is not enforced on mTLS auth.\n\nI have updated the commit message, but for the test cases, I will update each of the commits\u0027 (in this commit chain\u0027s) tested by section. Hope that works.",
      "parentUuid": "b70bb18c_0a257eef",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 36,
        "endChar": 7
      },
      "revId": "2fcbb85653210a802003bb08bd43e1ef876c5eff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d5d8954_7ca847b6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 76
      },
      "lineNbr": 36,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-07-11T16:21:28Z",
      "side": 1,
      "message": "\u003e When MFA is enabled, Basic auth also requires secret key to be setup\n\u003e for the user account.\n\nBut there\u0027s no way to provide a MFA key when using basic auth..\n\n\u003e \n\u003e And, when mTLS auth is enabled, it continues to work irrespective of MFA. MFA is not enforced on mTLS auth.\n\nThat seems.... Incorrect and a possible bypass.  Should we enforce that you get one or the other?\n\n\u003e \n\u003e I have updated the commit message, but for the test cases, I will update each of the commits\u0027 (in this commit chain\u0027s) tested by section. Hope that works.\n\nI would like to see where the tests being written are checked in so they can be reproduced by others.",
      "parentUuid": "f2548a0d_f1d532cb",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 36,
        "endChar": 7
      },
      "revId": "2fcbb85653210a802003bb08bd43e1ef876c5eff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f55393e3_96227394",
        "filename": "/COMMIT_MSG",
        "patchSetId": 76
      },
      "lineNbr": 36,
      "author": {
        "id": 1000401
      },
      "writtenOn": "2025-07-15T01:12:46Z",
      "side": 1,
      "message": "\u003e But there\u0027s no way to provide a MFA key when using basic auth..\n\nI stand corrected here. MFA is not enforced on both mTLS and basic auth as of today.\n\n\u003e Should we enforce that you get one or the other?\n\nProbably yes (for basic auth) - when MFA is enabled, then any basic auth logins can be rejected with a 401.\n\nI believe, mTLS-based logins do not require MFA (mutually exclusive) — because the cert is a stronger identity factor. And in this case, should ensure not to allow fallback to Basic Auth without MFA (send back 401 to the user?)\n\nYour thoughts, Ed?",
      "parentUuid": "7d5d8954_7ca847b6",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 36,
        "endChar": 7
      },
      "revId": "2fcbb85653210a802003bb08bd43e1ef876c5eff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b82c4438_b06e6984",
        "filename": "/COMMIT_MSG",
        "patchSetId": 76
      },
      "lineNbr": 36,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-07-15T02:30:07Z",
      "side": 1,
      "message": "\u003e \u003e But there\u0027s no way to provide a MFA key when using basic auth..\n\u003e \n\u003e I stand corrected here. MFA is not enforced on both mTLS and basic auth as of today.\n\u003e \n\u003e \u003e Should we enforce that you get one or the other?\n\u003e \n\u003e Probably yes (for basic auth) - when MFA is enabled, then any basic auth logins can be rejected with a 401.\n\u003e \n\u003e I believe, mTLS-based logins do not require MFA (mutually exclusive) — because the cert is a stronger identity factor.\n\nThat might be correct, but that\u0027s not what I see defined in Redfish.  There\u0027s nothing that states \"mutual TLS is except from MFA\", and it might be reasonable to use both.\n\n\u003e And in this case, should ensure not to allow fallback to Basic Auth without MFA (send back 401 to the user?)\n\u003e \n\u003e Your thoughts, Ed?\n\nI ideally should not be catching these kinds of things at code review time.  They would be caught in testing.",
      "parentUuid": "f55393e3_96227394",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 36,
        "endChar": 7
      },
      "revId": "2fcbb85653210a802003bb08bd43e1ef876c5eff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f77a757b_31e488a6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 76
      },
      "lineNbr": 0,
      "author": {
        "id": 1000401
      },
      "writtenOn": "2025-06-02T16:06:56Z",
      "side": 1,
      "message": "Hi Ed/Gunnar, can this commit be merged?",
      "revId": "2fcbb85653210a802003bb08bd43e1ef876c5eff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5d5a449_4fb13333",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 76
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-09T19:09:28Z",
      "side": 1,
      "message": "Asmitha\n\nCan you please clean up this MFA patch series to be a series again.  Many patches no longer apply, and it isn\u0027t clear to me if patches like:\nhttps://gerrit.openbmc.org/c/openbmc/bmcweb/+/74938\n\nAre related and expected in this series or not.  I would ideally like to see some cross review as the relevant people are building this feature.",
      "revId": "2fcbb85653210a802003bb08bd43e1ef876c5eff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c736c08_3c107e5a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 76
      },
      "lineNbr": 0,
      "author": {
        "id": 1000401
      },
      "writtenOn": "2025-06-11T17:09:42Z",
      "side": 1,
      "message": "Sure, I am working on getting it all rebased to this base commit with updated commit messages.",
      "parentUuid": "c5d5a449_4fb13333",
      "revId": "2fcbb85653210a802003bb08bd43e1ef876c5eff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53f5dc4f_e5f03d39",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 76
      },
      "lineNbr": 0,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2025-06-24T18:34:43Z",
      "side": 1,
      "message": "Been a few weeks....",
      "parentUuid": "3c736c08_3c107e5a",
      "revId": "2fcbb85653210a802003bb08bd43e1ef876c5eff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a04af96_a5107698",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 76
      },
      "lineNbr": 0,
      "author": {
        "id": 1000401
      },
      "writtenOn": "2025-06-27T08:51:25Z",
      "side": 1,
      "message": "Hi Ed, I have rearranged all the commits back then, post which there were some review comments in a few commits in this chain. I was making those changes.\n\nIts done now.",
      "parentUuid": "53f5dc4f_e5f03d39",
      "revId": "2fcbb85653210a802003bb08bd43e1ef876c5eff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74f48730_4070d05e",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 76
      },
      "lineNbr": 1443,
      "author": {
        "id": 1001604
      },
      "writtenOn": "2025-06-09T18:51:40Z",
      "side": 1,
      "message": "I think this may be better to be written like\n\n```\nbool googleAuthEnabled \u003d false;\nif( multiFactorAuthEnabled \u003d\u003d mfaGoogleAuthDbusVal )\n{\n    googleAuthEnabled \u003d true;\n}\n```",
      "revId": "2fcbb85653210a802003bb08bd43e1ef876c5eff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ddaef94e_e9378365",
        "filename": "redfish-core/lib/account_service.hpp",
        "patchSetId": 76
      },
      "lineNbr": 1443,
      "author": {
        "id": 1000401
      },
      "writtenOn": "2025-06-11T17:09:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "74f48730_4070d05e",
      "revId": "2fcbb85653210a802003bb08bd43e1ef876c5eff",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}