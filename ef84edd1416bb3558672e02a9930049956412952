{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ee7f017a_341cd2df",
        "filename": "http/ut/utility_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-01-11T18:52:55Z",
      "side": 1,
      "message": "@Nan, can you please take a look at this condition.  I believe it\u0027s related to your change.  If you comment the next line in, it throws an exception.",
      "range": {
        "startLine": 92,
        "startChar": 4,
        "endLine": 92,
        "endChar": 46
      },
      "revId": "ef84edd1416bb3558672e02a9930049956412952",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74295965_2b375f95",
        "filename": "http/ut/utility_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-01-11T21:16:03Z",
      "side": 1,
      "message": "Boost throws this exception. the maximum date time that YYYY-MM-DDTHH:MM:SS can represent is a little larger than 253402300799. std::numeric_limits\u003cuint64_t\u003e::max() is not representable.",
      "parentUuid": "ee7f017a_341cd2df",
      "range": {
        "startLine": 92,
        "startChar": 4,
        "endLine": 92,
        "endChar": 46
      },
      "revId": "ef84edd1416bb3558672e02a9930049956412952",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23fc4d51_a97c4ffb",
        "filename": "http/ut/utility_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-01-12T10:47:29Z",
      "side": 1,
      "message": "How about using std::min(253402300799, value) in code. Instead of overflow exception we end up with 9999-12-31T23:59:59+00:00 which should be obvious information that something is wrong. Same thing can be done for getDateTimeUintMs.",
      "parentUuid": "74295965_2b375f95",
      "range": {
        "startLine": 92,
        "startChar": 4,
        "endLine": 92,
        "endChar": 46
      },
      "revId": "ef84edd1416bb3558672e02a9930049956412952",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6aee256_5678b773",
        "filename": "http/ut/utility_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2022-01-12T18:13:38Z",
      "side": 1,
      "message": "That might work assuming there\u0027s nothing better.  Whats the significance of 253402300799?  How do we avoid hardcoding a magic number there?",
      "parentUuid": "23fc4d51_a97c4ffb",
      "range": {
        "startLine": 92,
        "startChar": 4,
        "endLine": 92,
        "endChar": 46
      },
      "revId": "ef84edd1416bb3558672e02a9930049956412952",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26aec303_0def034d",
        "filename": "http/ut/utility_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-01-17T15:28:00Z",
      "side": 1,
      "message": "253402300799 is max_supported_time_from_epoch_in_seconds\n253402300799000 will be max_supported_time_from_epoch_in_milliseconds for getDateTimeUIntMs\n\nIt will be a bit long variable name, but at least no comment will be needed in code.",
      "parentUuid": "b6aee256_5678b773",
      "range": {
        "startLine": 92,
        "startChar": 4,
        "endLine": 92,
        "endChar": 46
      },
      "revId": "ef84edd1416bb3558672e02a9930049956412952",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e6ad626_7f62e71a",
        "filename": "http/ut/utility_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1000678
      },
      "writtenOn": "2022-01-17T15:29:32Z",
      "side": 1,
      "message": "EDIT:\n253402300799999 will be max_supported_time_from_epoch_in_milliseconds for getDateTimeUIntMs",
      "parentUuid": "26aec303_0def034d",
      "range": {
        "startLine": 92,
        "startChar": 4,
        "endLine": 92,
        "endChar": 46
      },
      "revId": "ef84edd1416bb3558672e02a9930049956412952",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f525cc0a_c18c6059",
        "filename": "http/ut/utility_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1000682
      },
      "writtenOn": "2022-01-25T00:30:17Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9e6ad626_7f62e71a",
      "range": {
        "startLine": 92,
        "startChar": 4,
        "endLine": 92,
        "endChar": 46
      },
      "revId": "ef84edd1416bb3558672e02a9930049956412952",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}